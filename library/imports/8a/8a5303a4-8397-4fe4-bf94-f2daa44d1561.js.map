{"version":3,"sources":["assets\\common-plugin\\Scripts\\YZ_Tool_Kwai.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PlatUtils from \"./PlatUtils\";\r\nimport { utils } from \"./Utils\";\r\nimport YZ_Constant, { LevelStatus } from \"./YZ_Constant\";\r\nimport YZ_LocalStorage from \"./YZ_LocalStorage\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst ST_ServerUrl: string = \"http://apps.youlesp.com/gss?\";\r\nconst POST_ServerUrl: string = \"http://report.youlesp.com/gss?\";\r\n// 默认配置\r\nlet ST_DefaultServerConfig: string = \"\";\r\n@ccclass\r\nexport default class YZ_Tool_Kwai {\r\n    _recorder: any = null;\r\n    _videoPath: string = null;\r\n\r\n    _shareCallback: Function = null;\r\n\r\n\r\n    recorderStarTime: number = 0; //开始录屏时间\r\n    isAutoShare: boolean = true;  //是否自动分享\r\n    isClickEnd: boolean = false;\r\n\r\n    _serverConfig: any = null;\r\n\r\n    public get ServerConfig() {\r\n        return this._serverConfig;\r\n    }\r\n\r\n    _sysInfo: any = {};\r\n    public get SysInfo() {\r\n        return this._sysInfo;\r\n    }\r\n\r\n\r\n    /**\r\n     * 当前版本号\r\n     */\r\n    public gameVersion(): string {\r\n        return utils.config.kwaiConfig.version;\r\n    }\r\n\r\n\r\n    //设备UID\r\n    _uid: string = \"0\";\r\n\r\n    public get uid() {\r\n        // if (this._service_uid != \"0\") return this._uid;\r\n        // this._login();\r\n        return \"0\";\r\n    }\r\n\r\n    //服务器返回UID\r\n    _service_uid: string = \"0\";\r\n\r\n    /**\r\n     * 服务器返回UID\r\n     */\r\n    public get serviceId() {\r\n        if (this._service_uid != \"0\") return this._service_uid;\r\n        this.reportLogin();\r\n        return \"0\";\r\n    }\r\n\r\n\r\n    _loginTime: number = 0;\r\n    _loginInterval: number = 30;\r\n    async _login() {\r\n\r\n        let curTime: number = new Date().getTime();\r\n        let interval: number = (curTime - this._loginTime) / 1000;\r\n        if (interval > 0 && interval < 30) {\r\n            utils.showLog(`登录请求间隔小于：${this._loginInterval}秒`);\r\n            return;\r\n        }\r\n        this._loginTime = curTime;\r\n        let self = this;\r\n        utils.showLog(\"baidu暂时不获取uid，uid全部为0\");\r\n        this._uid = \"0\";\r\n        // this.reportLogin();\r\n\r\n    }\r\n\r\n    _reportLoginTime: number = 0;\r\n    _reportLoginInterval: number = 30;\r\n    isReport: boolean = false;\r\n    //@ts-ignore\r\n    kwaigame: any = kwaigame;\r\n\r\n\r\n    /**\r\n     * 上报登录接口获取UID\r\n     */\r\n    reportLogin() {\r\n        if (this.isReport) return;\r\n        this.isReport = true;\r\n        let self = this;\r\n        let curTime: number = new Date().getTime();\r\n        let interval: number = (curTime - self._reportLoginTime) / 1000;\r\n        if (interval > 0 && interval < 30) {\r\n            utils.showLog(`上报登录获取UID小于：${self._reportLoginInterval}秒`);\r\n            return;\r\n        }\r\n        self._reportLoginTime = curTime;\r\n        let method = \"m=login\";\r\n        let url: string = ST_ServerUrl + method + `&device_data=0`;\r\n\r\n        utils.commomHttpRequest(url, (ret, data) => {\r\n            if (ret) {\r\n                if (data) {\r\n                    let result = JSON.parse(data);\r\n                    utils.showLog(\"data=\" + data);\r\n                    utils.showLog(\"result=\" + result);\r\n                    utils.showLog(\"result.uid=\" + result.uid);\r\n                    if (result.uid) {\r\n                        self._service_uid = \"\" + result.uid;\r\n                        utils.showLog(\"服务器请求登录成功! _service_uid=\" + self._service_uid);\r\n                        YZ_LocalStorage.setItem(YZ_Constant.ST_SERVICE_UID, self._service_uid);\r\n                    }\r\n                }\r\n            } else {\r\n                utils.showLog(\"获取数据失败1\");\r\n            }\r\n            this.isReport = false;\r\n        })\r\n    }\r\n    /**\r\n     * \r\n     * @param data 配置数据\r\n     */\r\n    public init(data: string) {\r\n        if (PlatUtils.IsKwai) {\r\n\r\n\r\n            if (data) {\r\n                let configObj: any = JSON.parse(data);\r\n                if (configObj && configObj.kwai) {\r\n                    utils.showLog(\"本地配置数据:\" + JSON.stringify(configObj.kwai));\r\n                    ST_DefaultServerConfig = JSON.stringify(configObj.kwai);\r\n                }\r\n            }\r\n            this._service_uid = YZ_LocalStorage.getItem(YZ_Constant.ST_SERVICE_UID);\r\n            this._service_uid = this._service_uid ? this._service_uid : \"0\";\r\n\r\n            // // 获取系统信息\r\n            // this._sysInfo = this.swan.getSystemInfoSync();\r\n            // if (this._sysInfo) {\r\n            //     utils.showLog(\"百度小游戏平台信息: \", JSON.stringify(this._sysInfo));\r\n            // } else {\r\n            //     utils.showLog(\"系统信息获取失败!\");\r\n            // }\r\n\r\n            this._loadConfig();\r\n            this.initRecord();\r\n\r\n            // utils.emitServerInitEvent();\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    readyGo() {\r\n        this.kwaigame.readyGo();\r\n    }\r\n\r\n    _loadConfig() {\r\n        if (PlatUtils.IsKwai) {\r\n            let method: string = \"m=g\";\r\n            utils.commomHttpRequest(ST_ServerUrl + method, (ret, data) => {\r\n                if (ret) {\r\n                    utils.showLog(\"快手服务器配置数据获取成功: data = \", data);\r\n                    if (data) {\r\n                        let result = JSON.parse(data);\r\n                        if (result) {\r\n                            if (!utils.DebugLoacalConfig) {\r\n                                this._serverConfig = result;\r\n                            } else {\r\n                                cc.warn(\"开启了本地数据测试，使用本地配置!\");\r\n                            }\r\n                        } else {\r\n                            utils.showLog(\"快手服务器配置数据不是合法的JSON数据, 使用本地配置!\");\r\n                        }\r\n                    }\r\n                } else {\r\n                    utils.showLog(\"快手服务器配置数据获取失败, 使用本地配置!\");\r\n                }\r\n\r\n                if (!this._serverConfig) {\r\n                    this._serverConfig = JSON.parse(ST_DefaultServerConfig);\r\n                } else {\r\n\r\n                    if (this._serverConfig.shares && this._serverConfig.shares.sy_title) {\r\n                        utils.config.otherconfig.shareTitle = this._serverConfig.shares.sy_title;\r\n                    }\r\n                    if (this._serverConfig.shares && this._serverConfig.shares.sy_img) {\r\n                        utils.config.otherconfig.shareImgUrl = this._serverConfig.shares.sy_img;\r\n                    }\r\n\r\n                    if (this._serverConfig.is_local_pos_id\r\n                        && this._serverConfig.is_local_pos_id == \"false\") {\r\n                        // 使用服务器下发的广告id\r\n                        utils.showLog(\"使用服务器下发的广告id\");\r\n                        utils.config.kwaiConfig.videoId = this._serverConfig.video_pos_id;\r\n                        utils.config.kwaiConfig.insertId = this._serverConfig.intersititia_pos_id || utils.config.kwaiConfig.insertId;\r\n                    } else {\r\n                        utils.showLog(\"使用本地配置的广告ID\");\r\n                    }\r\n                }\r\n                utils.emitServerInitEvent();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initRecord() {\r\n        if (!this.checkCanShowRecored()) {\r\n            utils.showLog(\"当前平台不支持录屏组件！\");\r\n            return;\r\n        }\r\n        this._recorder = this.kwaigame.createMediaRecorder();\r\n        if (this._recorder) {\r\n            this._recorder.init({\r\n                callback: (error) => {\r\n                    if (error) {\r\n                        utils.showLog(\"录屏初始化失败: \" + JSON.stringify(error));\r\n                        this._recorder = null;\r\n                        return;\r\n                    }\r\n                    utils.showLog(\"录屏初始化成功\");\r\n                }\r\n            });\r\n\r\n            this._recorder.onError({\r\n                listener: (error) => {\r\n                    utils.isRecording = false;\r\n                    cc.game.emit(\"YZ_CommonMessage\", { type: \"YZ_RecordEnd\" });\r\n                    utils.showLog(\"录屏终止: \" + JSON.stringify(error));\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        // if (this._recorder) {\r\n        //     this._recorder.onStart((res) => {\r\n        //         self._videoPath = \"\";\r\n        //         this.isClickEnd = false;\r\n        //         this.is_auto_share_video = false;\r\n        //         utils.isRecording = true;\r\n        //         console.log(\"录屏开始>>>\");\r\n        //         utils.showLog('录屏开始');\r\n        //         this.recorderStarTime = new Date().getTime();\r\n        //         cc.game.emit(\"YZ_CommonMessage\", { type: \"YZ_RecordStart\" });\r\n        //     });\r\n\r\n        //     this._recorder.onStop((res) => {\r\n        //         utils.showLog(\"录屏结束 :\" + res.videoPath);\r\n        //         utils.isRecording = false;\r\n        //         cc.game.emit(\"YZ_CommonMessage\", { type: \"YZ_RecordEnd\" });\r\n\r\n\r\n        //         let curTime: number = new Date().getTime();\r\n        //         let interval: number = (curTime - this.recorderStarTime) / 1000;\r\n\r\n        //         if (interval > 3) {\r\n        //             self._videoPath = res.videoPath;\r\n        //             utils.showLog(\"录屏时间大于3秒\", interval);\r\n        //             if (this.isAutoShare) {\r\n        //                 if (this.isClickEnd) {\r\n        //                     this.shareVideo();\r\n        //                     this._shareCallback = null;\r\n        //                     this.is_auto_share_video = true;\r\n        //                 } else if (utils.checkResultShow(1)) {\r\n        //                     utils.showLog(\"满足自动分享条件，弹出分享窗口！\");\r\n        //                     if (utils.rewardCloseFunc == null) {\r\n        //                         utils.rewardValue = 0;\r\n        //                         utils.showShareRecordPanel();\r\n        //                     }\r\n        //                 } else if (interval > 100) {\r\n        //                     if (utils.rewardCloseFunc == null) {\r\n        //                         utils.rewardValue = 0;\r\n        //                         utils.showShareRecordPanel();\r\n        //                     }\r\n        //                 }\r\n        //             } else {\r\n        //                 this.isAutoShare = true;\r\n        //             }\r\n        //         } else {\r\n        //             //@ts-ignore\r\n        //             if (this.isClickEnd) {\r\n        //                 this.tt.showToast({\r\n        //                     title: \"录屏时间小于3秒!\",\r\n        //                     icon: \"fail\",\r\n        //                     duration: 2000,\r\n        //                     success(res) {\r\n        //                         console.log(`${res}`);\r\n        //                     },\r\n        //                     fail(res) {\r\n        //                         console.log(`showToast调用失败`);\r\n        //                     }\r\n        //                 });\r\n        //             }\r\n\r\n        //             self._videoPath = \"\";\r\n\r\n        //             utils.showLog(\"录屏时间小于3秒，录录屏地址置空！\");\r\n        //         }\r\n\r\n\r\n        //     });\r\n        // }\r\n    }\r\n    /**\r\n     * 分享，有录屏就分享录屏，没有录屏就分享图片\r\n     */\r\n    public share(callback: Function) {\r\n        if (PlatUtils.IsKwai) {\r\n            this._shareCallback = callback;\r\n            if (this.recorderStarTime > 0) {\r\n                this.shareVideo();\r\n            } else {\r\n                this.shareImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 验证是否支持录屏\r\n     */\r\n    checkCanShowRecored() {\r\n        return this.kwaigame.isSupport(this.kwaigame.Support.features.Recorder);\r\n    }\r\n\r\n\r\n    /**\r\n     * 分享录屏\r\n     */\r\n    shareVideo() {\r\n        if (this._recorder) {\r\n            if (!this._canShowRecord) {\r\n                this._shareCallback && this._shareCallback(false, \"录屏时间不足!\")\r\n                return;\r\n            }\r\n            this._recorder.publishVideo({\r\n                callback: (error) => {\r\n                    if (error) {\r\n                        utils.showLog(\"分享录屏失败: \" + JSON.stringify(error));\r\n                        this._shareCallback && this._shareCallback(false, \"分享录屏失败!\")\r\n                        return;\r\n                    }\r\n                    this._canShowRecord = false;\r\n                    utils.showLog(\"分享录屏成功\");\r\n                    this._shareCallback && this._shareCallback(true, \"分享录屏成功!\")\r\n                }\r\n            });\r\n        } else {\r\n            if (this.checkCanShowRecored()) {\r\n                utils.showLog(\"当前平台不支持录屏组件！\");\r\n            } else {\r\n                utils.showLog(\"录屏初始化失败！\");\r\n            }\r\n\r\n            this._shareCallback && this._shareCallback(false, \"分享录屏失败!\")\r\n        }\r\n    }\r\n    /**\r\n     * 开始录屏\r\n     */\r\n    public recordStart() {\r\n        if (this._recorder) {\r\n            this._recorder.start({\r\n                callback: (error) => {\r\n                    if (error) {\r\n                        utils.isRecording = false;\r\n                        utils.showLog(\"开始录屏失败: \" + JSON.stringify(error));\r\n                        return;\r\n                    }\r\n                    this._canShowRecord = false;\r\n                    utils.isRecording = true;\r\n                    this.recorderStarTime = new Date().getTime();\r\n                    cc.game.emit(\"YZ_CommonMessage\", { type: \"YZ_RecordStart\" });\r\n                    utils.showLog(\"开始录屏成功\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    _canShowRecord: boolean = false;\r\n    /**\r\n     * 结束录屏\r\n     */\r\n    public recordEnd() {\r\n        if (this._recorder) {\r\n            this._recorder.stop({\r\n                callback: (error) => {\r\n                    utils.isRecording = false;\r\n                    cc.game.emit(\"YZ_CommonMessage\", { type: \"YZ_RecordEnd\" });\r\n                    this._canShowRecord = false;\r\n                    if (error) {\r\n                        utils.showLog(\"停止录屏失败: \" + JSON.stringify(error));\r\n                        return;\r\n                    }\r\n\r\n                    utils.showLog(\"停止录屏成功\");\r\n\r\n\r\n                    let curTime: number = new Date().getTime();\r\n                    let interval: number = (curTime - this.recorderStarTime) / 1000;\r\n\r\n                    if (interval > 3) {\r\n                        this._canShowRecord = true;\r\n                        utils.showLog(\"录屏时间大于3秒\", interval, \" isClickEnd=\", this.isClickEnd);\r\n                        if (this.isAutoShare) {\r\n                            if (this.isClickEnd) {\r\n                                this.shareVideo();\r\n                                this._shareCallback = null;\r\n                            } else if (utils.checkResultShow(1)) {\r\n                                utils.showLog(\"满足自动分享条件，弹出分享窗口！\");\r\n                                if (utils.rewardCloseFunc == null) {\r\n                                    utils.rewardValue = 0;\r\n                                    utils.showShareRecordPanel();\r\n                                }\r\n                            } else if (interval > 100) {\r\n                                if (utils.rewardCloseFunc == null) {\r\n                                    utils.rewardValue = 0;\r\n                                    utils.showShareRecordPanel();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.isAutoShare = true;\r\n                        }\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.isClickEnd) {\r\n                            //     this.tt.showToast({\r\n                            //         title: \"录屏时间小于3秒!\",\r\n                            //         icon: \"fail\",\r\n                            //         duration: 2000,\r\n                            //         success(res) {\r\n                            //             console.log(`${res}`);\r\n                            //         },\r\n                            //         fail(res) {\r\n                            //             console.log(`showToast调用失败`);\r\n                            //         }\r\n                            //     });\r\n                        }\r\n\r\n                        // self._videoPath = \"\";\r\n\r\n                        utils.showLog(\"录屏时间小于3秒，录录屏地址置空！\");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    shareImage() {\r\n        this.kwaigame.shareToMsg(this._getShareInfo());\r\n    }\r\n\r\n    _getShareInfo() {\r\n\r\n        let params: any = {};\r\n        params.title = utils.config.otherconfig.shareTitle;\r\n        params.desc = utils.config.otherconfig.shareDesc ? utils.config.otherconfig.shareDesc : utils.config.otherconfig.shareTitle;\r\n        params.iconUrl = utils.config.otherconfig.shareIcon ? utils.config.otherconfig.shareIcon : utils.config.otherconfig.shareImgUrl;\r\n        params.imageUrl = utils.config.otherconfig.shareImgUrl;\r\n        params.extension = {\r\n            isShare: \"share\"\r\n        };\r\n        params.response = (result) => {\r\n            utils.showLog(\"分享完成: \" + JSON.stringify(result));\r\n            this._shareCallback && this._shareCallback(true, \"分享成功!\");\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    /**\r\n    * 上报关卡数据\r\n    * @param level 当前关卡ID\r\n    * @param levelName 关卡名称\r\n    * @param status 状态\r\n    */\r\n    public postLevel(level: string, status: LevelStatus, levelName?: string) {\r\n        if (PlatUtils.IsKwai) {\r\n            let method = \"m=rlevel\";\r\n            let url: string = POST_ServerUrl + method + `&level_id=${level}&level_name=${encodeURI(levelName)}&status=${status}`;\r\n            utils.commomHttpRequest(url, function (ret, data) {\r\n                if (ret) {\r\n                    utils.showLog(\"关卡数据上报成功！\");\r\n                } else {\r\n                    utils.showLog(\"关卡数据上报失败！\");\r\n                }\r\n            }.bind(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n   * 上报自定义事件\r\n   * @param level 当前关卡ID\r\n   * @param levelName 关卡名称\r\n   * @param status 状态\r\n   */\r\n    public sendEvent(eventName: string) {\r\n        if (PlatUtils.IsKwai) {\r\n            let method = \"m=revent\";\r\n            let url: string = POST_ServerUrl + method + `&event=${encodeURI(eventName)}`;\r\n            utils.commomHttpRequest(url, function (ret, data) {\r\n                if (ret) {\r\n                    utils.showLog(\"上报自定义事件成功！\");\r\n                } else {\r\n                    utils.showLog(\"上报自定义事件失败！\");\r\n                }\r\n            }.bind(this));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _compareVersion(first: string, second: string) {\r\n        return parseInt(first.split(\".\").join(\"\")) >= parseInt(second.split(\".\").join(\"\"));\r\n    }\r\n\r\n}\r\n"]}