{"version":3,"sources":["assets\\common-plugin\\Scripts\\RecommendGamesNode.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA,iCAAgC;AAChC,6CAA4C;AAC5C,yCAAoC;AAE9B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAgD,sCAAY;IAA5D;QAAA,qEAqHC;QAlHG,YAAM,GAAc,IAAI,CAAC;QAEzB,aAAO,GAAc,IAAI,CAAC;QAE1B,oBAAc,GAAmB,IAAI,CAAC;QAEtC,eAAS,GAAgB,IAAI,CAAC;QAC9B,cAAQ,GAAY,IAAI,CAAC;QACzB,mBAAa,GAAY,IAAI,CAAC;QAE9B,gBAAU,GAAY,KAAK,CAAC;QAC5B,sBAAgB,GAAY,KAAK,CAAC;QAElC,qBAAe,GAAW,CAAC,CAAC;QAC5B,cAAQ,GAAW,CAAC,CAAC;QAErB,eAAS,GAAQ,IAAI,CAAC;QACtB,cAAQ,GAAY,IAAI,CAAC;;IAiG7B,CAAC;IA/FG,mCAAM,GAAN;QACI,IAAI,YAAY,GAAY,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QAEvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACtC,CAAC;IAEM,iCAAI,GAAX,UAAY,IAAS;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAC5B;IACL,CAAC;IAED,qCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,KAAK;YAClD,IAAI,mBAAS,CAAC,QAAQ,EAAE;gBACpB,aAAK,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;aAC1C;iBAAM,IAAI,CAAC,mBAAS,CAAC,MAAM,IAAI,CAAC,aAAK,CAAC,YAAY,CAAC,yBAAyB,IAAI,aAAK,CAAC,YAAY,CAAC,yBAAyB,IAAI,MAAM,CAAC,EAAE;gBACtI,IAAI,KAAK,SAAA,CAAC;gBACV,IAAI,aAAK,CAAC,YAAY,CAAC,cAAc,IAAI,CAAC,EAAE;oBACxC,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACrC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;oBACnB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;iBAC/D;qBAAM;oBACH,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACpC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;oBACnB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;iBAC9D;gBAED,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACvC,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,yBAAW,CAAC,WAAW,CAAC;gBACxD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;aAC9B;iBAAM;gBACH,aAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;aACpC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAS,GAAT;QACI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,mCAAM,GAAN,UAAO,EAAU;QACb,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAED,2CAAc,GAAd;QAEI,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,aAAK,CAAC,qBAAqB,CAAC,yBAAW,CAAC,WAAW,CAAC,CAAC;YAErD,IAAI,MAAM,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC3D,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7B,IAAI,YAAY,GAAG,EAAE,CAAC;gBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBACxB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;oBACzC,KAAK,EAAE,CAAC;iBACX;gBACD,IAAI,YAAY,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtD,IAAI,QAAQ,GAAa,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gBAC/D,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC5B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC7B;IACL,CAAC;IAED,+CAAkB,GAAlB;QAAA,iBAaC;QAZG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,QAAQ,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC;YACV,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;YAC7C,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC;YACjD,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACzC;iBAAM;gBACH,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aAC3C;QACL,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO;IACzB,CAAC;IAjHD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;sDACK;IAEzB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;uDACM;IALT,kBAAkB;QADtC,OAAO;OACa,kBAAkB,CAqHtC;IAAD,yBAAC;CArHD,AAqHC,CArH+C,EAAE,CAAC,SAAS,GAqH3D;kBArHoB,kBAAkB","file":"","sourceRoot":"/","sourcesContent":["import GamePage from \"./GamePage\";\r\nimport MoreGamesPanel from \"./MoreGamesPanel\";\r\nimport { utils } from \"./Utils\";\r\nimport { SubLocation } from \"./YZ_Constant\";\r\nimport PlatUtils from \"./PlatUtils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RecommendGamesNode extends cc.Component {\r\n\r\n    @property(cc.Prefab)\r\n    prefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    prefab1: cc.Prefab = null;\r\n\r\n    moreGamesPanel: MoreGamesPanel = null;\r\n\r\n    _pageView: cc.PageView = null;\r\n    _content: cc.Node = null;\r\n    _gamePageNode: cc.Node = null;\r\n\r\n    _dataDirty: boolean = false;\r\n    _isContentFilled: boolean = false;\r\n\r\n    _scrollInterval: number = 3;\r\n    _timeTmp: number = 0;\r\n\r\n    _gameList: any = null;\r\n    moreGame: cc.Node = null;\r\n\r\n    onLoad() {\r\n        let pageViewNode: cc.Node = this.node.getChildByName(\"PageView\");\r\n        this.moreGame = cc.find(\"bg/BtnMore\", this.node);\r\n        this._pageView = pageViewNode.getComponent(cc.PageView);\r\n        this._content = this._pageView.content;\r\n\r\n        this._gamePageNode = this._content.getChildByName(\"GamePage\");\r\n        this._content.removeAllChildren();\r\n    }\r\n\r\n    public init(data: any) {\r\n        this._gameList = data;\r\n        if (this._gameList && this._gameList.length > 0) {\r\n            this._dataDirty = true;\r\n        } else {\r\n            this.node.active = false;\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        let self = this;\r\n        this.moreGame.on(cc.Node.EventType.TOUCH_START, (event) => {\r\n            if (PlatUtils.IsDouyin) {\r\n                utils.Tool_Douyin.showMoreGamesModal();\r\n            } else if (!PlatUtils.IsOPPO || (utils.ServerConfig.recommend_bar_show_pannel && utils.ServerConfig.recommend_bar_show_pannel == \"true\")) {\r\n                let panel;\r\n                if (utils.ServerConfig.more_game_skin == 2) {\r\n                    panel = cc.instantiate(self.prefab1);\r\n                    panel.zIndex = 999;\r\n                    self.moreGamesPanel = panel.getComponent(\"MoreGamesPanel1\");\r\n                } else {\r\n                    panel = cc.instantiate(self.prefab);\r\n                    panel.zIndex = 999;\r\n                    self.moreGamesPanel = panel.getComponent(\"MoreGamesPanel\");\r\n                }\r\n\r\n                cc.director.getScene().addChild(panel);\r\n                self.moreGamesPanel._location = SubLocation.isScrollbar;\r\n                self.moreGamesPanel.init(self._gameList);\r\n                self.moreGamesPanel.show();\r\n            } else {\r\n                utils.showLog(\"服务器未配置显示更多游戏面板！\");\r\n            }\r\n        });\r\n    }\r\n\r\n    onDisable() {\r\n        this.moreGame.targetOff(this);\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this._dataDirty) {\r\n            this._dataDirty = false;\r\n            this._updateContent();\r\n        }\r\n    }\r\n\r\n    _updateContent() {\r\n\r\n        if (this._gameList) {\r\n            utils.postRecommentShowData(SubLocation.isScrollbar);\r\n\r\n            let length: number = Math.floor(this._gameList.length / 4);\r\n            let index = 0;\r\n            for (let i = 0; i < length; i++) {\r\n                let gamePageList = [];\r\n                for (let j = 0; j < 4; j++) {\r\n                    gamePageList.push(this._gameList[index]);\r\n                    index++;\r\n                }\r\n                let gamePageNode = cc.instantiate(this._gamePageNode);\r\n                let gamePage: GamePage = gamePageNode.getComponent(\"GamePage\");\r\n                gamePage.init(gamePageList);\r\n                this._pageView.addPage(gamePageNode);\r\n            }\r\n            this._gamePageNode.destroy();\r\n            this._isContentFilled = true;\r\n            this.autoRefrshPageView();\r\n        }\r\n    }\r\n\r\n    autoRefrshPageView() {\r\n        this.unscheduleAllCallbacks();\r\n        let interval = 3.5;\r\n        this.schedule(() => {\r\n            let count = this._pageView.getPages().length;\r\n            let index = this._pageView.getCurrentPageIndex();\r\n            index = ((index < count) && (index + 1 !== count)) ? (index + 1) : 0;\r\n            if (index == 0) {\r\n                this._pageView.scrollToPage(index, 0);\r\n            } else {\r\n                this._pageView.scrollToPage(index, 2.5);\r\n            }\r\n        }, interval); //10秒一换\r\n    }\r\n}\r\n"]}