{"version":3,"sources":["assets\\scripts\\Framework\\Msg.ts"],"names":[],"mappings":";;;;;;AAAA,mCAAkC;AAElC;IAAA;IA2CA,CAAC;IAnCiB,QAAI,GAAlB,UAAmB,GAAW,EAAE,KAAc;QAC1C,IAAI,GAAG,GAAG,eAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,GAAG,EAAE;YACL,IAAI,MAAI,GAAY,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxC,iCAAiC;YACjC,MAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,MAAI,EAAE;gBACN,MAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;gBACzE,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,MAAI,EAAE,KAAK,CAAC,CAAC;gBAC7C,IAAI,KAAK,GAAa,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,MAAI,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBACpE,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;gBAEnB,MAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,MAAI,CAAC,CAAC;gBAC3B,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;gBACpD,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;gBACd,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACnD,KAAK,CAAC,IAAI,CAAC,cAAQ,MAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,CAAC,KAAK,EAAE,CAAC;gBAEd,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC9C,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;wBACxB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;qBAC3B;yBACI;wBACD,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBAC5B;iBACJ;gBACD,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC;aAC1B;SACJ;aAAM;YACH,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SACvB;IACL,CAAC;IAvCc,UAAM,GAAY,KAAK,CAAC;IAExB,WAAO,GAAY,KAAK,CAAC;IAE1B,WAAO,GAAmB,EAAE,CAAC;IAqC/C,UAAC;CA3CD,AA2CC,IAAA;kBA3CoB,GAAG","file":"","sourceRoot":"/","sourcesContent":["import { cocosz } from \"./CocosZ\";\r\n\r\nexport default class Msg {\r\n\r\n    private static isShow: boolean = false;\r\n\r\n    private static isTouch: boolean = false;\r\n\r\n    public static tipList: Array<cc.Node> = [];\r\n\r\n    public static Show(msg: string, group?: string) {\r\n        let pre = cocosz.resMgr.getRes(\"TipsPanel\", cc.Prefab);\r\n        if (pre) {\r\n            let node: cc.Node = cc.instantiate(pre);\r\n            // if (group) node.group = group;\r\n            node.group = 'ui';\r\n            if (node) {\r\n                node.position = cc.v3(cc.winSize.width / 2, cc.winSize.height / 2 + 300);\r\n                cc.director.getScene().addChild(node, 10000);\r\n                let label: cc.Label = cc.find(\"label\", node).getComponent(cc.Label);\r\n                label.string = msg;\r\n\r\n                node.scale = 0;\r\n                let tween = cc.tween(node);\r\n                tween.to(0.25, { scale: 1 }, { easing: \"backOut\" });\r\n                tween.delay(2)\r\n                tween.to(0.25, { scale: 0 }, { easing: \"backIn\" });\r\n                tween.call(() => { node.destroy(); });\r\n                tween.start();\r\n\r\n                for (let i = Msg.tipList.length - 1; i >= 0; i--) {\r\n                    if (Msg.tipList[i].isValid) {\r\n                        Msg.tipList[i].y += 120;\r\n                    }\r\n                    else {\r\n                        Msg.tipList.splice(i, 1);\r\n                    }\r\n                }\r\n                Msg.tipList.push(node);\r\n            }\r\n        } else {\r\n            cc.log(\"提示面板显示失败!\");\r\n        }\r\n    }\r\n\r\n}"]}