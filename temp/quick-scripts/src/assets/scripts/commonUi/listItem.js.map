{"version":3,"sources":["assets\\scripts\\commonUi\\listItem.js"],"names":["SelectedType","cc","Enum","NONE","TOGGLE","SWITCH","Class","editor","disallowMultiple","menu","executionOrder","Component","properties","icon","type","Sprite","title","Node","selectedMode","tooltip","CC_DEV","selectedFlag","visible","bool","selectedSpriteFrame","SpriteFrame","adaptiveSize","_selected","selected","get","set","val","active","spriteFrame","_unselectedSpriteFrame","_btnCom","btnCom","node","getComponent","Button","onLoad","com","Label","RichText","onDestroy","off","EventType","SIZE_CHANGED","_onSizeChange","_registerEvent","eventReg","_list","clickEvents","unshift","createEvt","on","_onItemAdaptive","component","handlerName","isValid","comName","name","match","pop","replace","evt","EventHandler","target","handler","showAni","aniType","callFunc","del","t","tween","to","scale","by","y","height","x","width","call","_delSingleItem","n","displayData","length","listId","_listId","splice","start","onClickThis","selectedId"],"mappings":"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","sourceRoot":"/","sourcesContent":["/******************************************\r\n * @author kL <klk0@qq.com>\r\n * @date 2019/5/15\r\n * @doc 列表Item组件.\r\n * 说明：\r\n *      1、此组件须配合list组件使用。（配套的配套的..）\r\n * @end\r\n ******************************************/\r\nconst SelectedType = cc.Enum({\r\n    NONE: 0,\r\n    TOGGLE: 1, //单一（单个Node显示/隐藏）\r\n    SWITCH: 2, //切换(单个Sprite切换SpriteFrame)\r\n});\r\n\r\ncc.Class({\r\n    editor: {\r\n        disallowMultiple: false,\r\n        menu: '自定义组件/list Item',\r\n        executionOrder: -5001,          //先于list\r\n    },\r\n\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        icon: {\r\n            default: null,\r\n            type: cc.Sprite,\r\n        },\r\n        title: cc.Node,\r\n        selectedMode: {\r\n            default: SelectedType.NONE,\r\n            type: SelectedType,\r\n            tooltip: CC_DEV && '选择模式',\r\n            // get: function () {\r\n            //     return this._slideType;\r\n            // },\r\n            // set: function (val) {\r\n            //     if (val != null)\r\n            //         this._slideType = val;\r\n            // }\r\n        },\r\n        selectedFlag: {\r\n            default: null,\r\n            type: cc.Node,\r\n            visible: function () {\r\n                let bool = this.selectedMode > 0;\r\n                if (!bool)\r\n                    this.selectedFlag = null;\r\n                return bool;\r\n            },\r\n        },\r\n        selectedSpriteFrame: {\r\n            default: null,\r\n            type: cc.SpriteFrame,\r\n            visible: function () {\r\n                let bool = this.selectedMode == SelectedType.SWITCH;\r\n                if (!bool)\r\n                    this.selectedSpriteFrame = null;\r\n                return bool;\r\n            },\r\n        },\r\n        adaptiveSize: {\r\n            default: false,\r\n            tooltip: CC_DEV && '自适应尺寸（宽或高）',\r\n        },\r\n        _selected: false,\r\n        selected: {\r\n            visible: false,\r\n            get() {\r\n                return this._selected;\r\n            },\r\n            set(val) {\r\n                this._selected = val;\r\n                if (!this.selectedFlag)\r\n                    return;\r\n                switch (this.selectedMode) {\r\n                    case SelectedType.TOGGLE:\r\n                        this.selectedFlag.active = val;\r\n                        break;\r\n                    case SelectedType.SWITCH:\r\n                        this.selectedFlag.spriteFrame = val ? this.selectedSpriteFrame : this._unselectedSpriteFrame;\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        _btnCom: null,\r\n        btnCom: {\r\n            visible: false,\r\n            get: function () {\r\n                if (!this._btnCom)\r\n                    this._btnCom = this.node.getComponent(cc.Button);\r\n                return this._btnCom;\r\n            }\r\n        },\r\n    },\r\n\r\n    onLoad() {\r\n        //强行把文字组件转换给title...方便使用\r\n        if (this.title) {\r\n            let com = this.title.getComponent(cc.Label);\r\n            if (!com)\r\n                com = this.title.getComponent(cc.RichText);\r\n            this.title = com;\r\n        }\r\n        // //没有按钮组件的话，selectedFlag无效\r\n        // if (!this.btnCom)\r\n        //     this.selectedMode == SelectedType.NONE;\r\n        //有选择模式时，保存相应的东西\r\n        if (this.selectedMode == SelectedType.SWITCH) {\r\n            let com = this.selectedFlag.getComponent(cc.Sprite);\r\n            this.selectedFlag = com;\r\n            this._unselectedSpriteFrame = com.spriteFrame;\r\n        }\r\n    },\r\n\r\n    onDestroy() {\r\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\r\n    },\r\n\r\n    _registerEvent() {\r\n        if (!this.eventReg) {\r\n            if (this.btnCom && this._list.selectedMode > 0) {\r\n                this.btnCom.clickEvents.unshift(this.createEvt(this, 'onClickThis'));\r\n            }\r\n            if (this.adaptiveSize) {\r\n                this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\r\n            }\r\n            this.eventReg = true;\r\n        }\r\n    },\r\n\r\n    _onSizeChange() {\r\n        this._list._onItemAdaptive(this.node);\r\n    },\r\n    /**\r\n     * 创建事件\r\n     * @param {cc.Component} component 组件脚本\r\n     * @param {string} handlerName 触发函数名称\r\n     * @param {cc.Node} node 组件所在node（不传的情况下取component.node）\r\n     * @returns cc.Component.EventHandler\r\n     */\r\n    createEvt(component, handlerName, node) {\r\n        if (!component.isValid)\r\n            return;//有些异步加载的，节点以及销毁了。\r\n        component.comName = component.comName || component.name.match(/\\<(.*?)\\>/g).pop().replace(/\\<|>/g, '');\r\n        let evt = new cc.Component.EventHandler();\r\n        evt.target = node || component.node;\r\n        evt.component = component.comName;\r\n        evt.handler = handlerName;\r\n        return evt;\r\n    },\r\n\r\n    showAni(aniType, callFunc, del) {\r\n        let t = this;\r\n        let tween;\r\n        switch (aniType) {\r\n            case 0: //向上消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.2, { scale: .7 })\r\n                    .by(.3, { y: t.node.height * 2 });\r\n                break;\r\n            case 1: //向右消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.2, { scale: .7 })\r\n                    .by(.3, { x: t.node.width * 2 });\r\n                break;\r\n            case 2: //向下消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.2, { scale: .7 })\r\n                    .by(.3, { y: t.node.height * -2 });\r\n                break;\r\n            case 3: //向左消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.2, { scale: .7 })\r\n                    .by(.3, { x: t.node.width * -2 });\r\n                break;\r\n            default: //默认：缩小消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.3, { scale: .1 });\r\n                break;\r\n        }\r\n        if (callFunc || del) {\r\n            tween.call(() => {\r\n                if (del) {\r\n                    t._list._delSingleItem(t.node);\r\n                    for (let n = t._list.displayData.length - 1; n >= 0; n--) {\r\n                        if (t._list.displayData[n].listId == t.node._listId) {\r\n                            t._list.displayData.splice(n, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                callFunc();\r\n            });\r\n        }\r\n        tween.start();\r\n    },\r\n\r\n    onClickThis() {\r\n        this._list.selectedId = this.node._listId;\r\n    },\r\n\r\n});"]}