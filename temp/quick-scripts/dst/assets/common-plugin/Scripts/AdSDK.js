
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/common-plugin/Scripts/AdSDK.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '38700bTBL9M2a/u4fH6cviO', 'AdSDK');
// common-plugin/Scripts/AdSDK.js

"use strict";

(function () {
  var AdSDK = window.AdSDK = {
    bannerAds: {},
    interstitialAds: {},
    videoAds: {},
    init: function init() {
      var self = this;
      GameSDK.registerCallback("ad_banner_onLoad", function (param) {
        var banner = self.bannerAds[param.adId];

        if (banner && banner.onLoad) {
          banner.onLoad(param);
        }
      });
      GameSDK.registerCallback("ad_banner_onError", function (param) {
        var banner = self.bannerAds[param.adId];

        if (banner && banner.onError) {
          banner.onError(param);
        }
      });
      GameSDK.registerCallback("ad_banner_onResize", function (param) {
        var banner = self.bannerAds[param.adId];

        if (banner && banner.onResize) {
          banner.onResize(param);
        }
      });
      GameSDK.registerCallback("ad_interstitial_onLoad", function (param) {
        var interstitialAd = self.interstitialAds[param.adId];

        if (interstitialAd && interstitialAd.onLoad) {
          interstitialAd.onLoad(param);
        }
      });
      GameSDK.registerCallback("ad_interstitial_onError", function (param) {
        var interstitialAd = self.interstitialAds[param.adId];

        if (interstitialAd && interstitialAd.onError) {
          interstitialAd.onError(param);
        }
      });
      GameSDK.registerCallback("ad_interstitial_onResize", function (param) {
        var interstitialAd = self.interstitialAds[param.adId];

        if (interstitialAd && interstitialAd.onResize) {
          interstitialAd.onResize(param);
        }
      });
      GameSDK.registerCallback("ad_rewardedVideo_onLoad", function (param) {
        var videoAd = self.videoAds[param.adId];

        if (videoAd && videoAd.onLoad) {
          videoAd.onLoad(param);
        }
      });
      GameSDK.registerCallback("ad_rewardedVideo_onError", function (param) {
        var videoAd = self.videoAds[param.adId];

        if (videoAd && videoAd.onError) {
          videoAd.onError(param);
        }
      });
      GameSDK.registerCallback("ad_rewardedVideo_onClose", function (param) {
        var videoAd = self.videoAds[param.adId];

        if (videoAd && videoAd.onClose) {
          videoAd.onClose(param);
        }
      });
      GameSDK.registerCallback("ad_onShow", function (param) {
        if (param.type == 1) {
          var banner = self.bannerAds[param.adId];

          if (banner && banner.mHandler) {
            banner.mHandler(param.success);
          }
        } else if (param.type == 2) {
          var interstitialAd = self.interstitialAds[param.adId];

          if (interstitialAd && interstitialAd.mHandler) {
            interstitialAd.mHandler(param.success);
          }
        } else if (param.type == 3) {
          var videoAd = self.videoAds[param.adId];

          if (videoAd && videoAd.mHandler) {
            videoAd.mHandler(param.success);
          }
        }
      });
    },
    // 创建Banner广告
    // 参数
    //   adId: string 广告序号ID
    //   bannerAdId: string Banner广告ID
    //   position: int 广告位置 1 屏幕顶部 2 屏幕底部 3屏幕中间
    createBannerAd: function createBannerAd(adId, bannerAdId, position) {
      var self = this;
      var bannerAd = {
        "adId": adId
      };
      var param = {
        "adId": adId,
        "bannerAdId": bannerAdId,
        "position": position
      };
      GameSDK.callNative("ad_banner_create", param); //显示 banner 广告

      bannerAd.show = function () {
        var param = {
          "adId": adId
        };
        GameSDK.callNative("ad_banner_show", param);
        var promise = new Promise(function (resolve, reject) {
          var handler = function handler(params) {
            if (params == 0) {
              resolve();
            } else {
              reject();
            }
          };

          self.bannerAds[adId].mHandler = handler;
        });
        return promise;
      }; //隐藏 banner 广告


      bannerAd.hide = function () {
        var param = {
          "adId": adId
        };
        GameSDK.callNative("ad_banner_hide", param);
      }; // 销毁 banner 广告


      bannerAd.destroy = function () {
        var param = {
          "adId": adId
        };
        self.bannerAds[adId] = null;
        GameSDK.callNative("ad_banner_destroy", param);
      }; //监听 banner 广告加载事件


      bannerAd.onLoad = function (cb) {
        this.onLoad = cb;
      }; //监听 banner 广告错误事件


      bannerAd.onError = function (cb) {
        this.onError = cb;
      }; //监听 banner 广告尺寸变化事件  未实现


      bannerAd.onResize = function (cb) {
        this.onResize = cb;
      }; //取消监听 banner 广告加载事件


      bannerAd.offLoad = function (cb) {
        if (this.onLoad == cb) {
          this.onLoad = null;
        }
      }; //取消监听 banner 广告错误事件


      bannerAd.offError = function (cb) {
        if (this.onError == cb) {
          this.onError = null;
        }
      }; //取消监听 banner 广告尺寸变化事件


      bannerAd.offResize = function (cb) {
        if (this.onResize == cb) {
          this.onResize = null;
        }
      };

      self.bannerAds[adId] = bannerAd;
      return bannerAd;
    },
    // 创建插屏广告
    // 参数
    //   adId: string 广告序号ID
    //   interstitialAdId: string 插屏广告ID
    //   style: int 广告类型 1 全屏 2 半屏
    createInterstitialAd: function createInterstitialAd(adId, interstitialAdId, style) {
      var self = this;
      var interstitialAd = {
        "adId": adId
      };
      var param = {
        "adId": adId,
        "interstitialAdId": interstitialAdId,
        "style": style
      };
      GameSDK.callNative("ad_interstitial_create", param); //显示 插屏 广告

      interstitialAd.show = function () {
        var param = {
          "adId": adId
        };
        GameSDK.callNative("ad_interstitial_show", param);
        var promise = new Promise(function (resolve, reject) {
          var handler = function handler(params) {
            if (params == 0) {
              resolve();
            } else {
              reject();
            }
          };

          self.interstitialAds[adId].mHandler = handler;
        });
        return promise;
      }; // 隐藏 插屏 广告


      interstitialAd.hide = function () {
        var param = {
          "adId": adId
        };
        GameSDK.callNative("ad_interstitial_hide", param);
      }; // 销毁 插屏 广告


      interstitialAd.destroy = function () {
        var param = {
          "adId": adId
        };
        self.interstitialAds[adId] = null;
        GameSDK.callNative("ad_interstitial_destroy", param);
      }; // 监听 插屏 广告加载事件


      interstitialAd.onLoad = function (cb) {
        this.onLoad = cb;
      }; // 监听 插屏 广告错误事件


      interstitialAd.onError = function (cb) {
        this.onError = cb;
      }; // 监听 插屏 广告尺寸变化事件


      interstitialAd.onResize = function (cb) {
        this.onResize = cb;
      }; //取消监听 插屏 广告加载事件


      interstitialAd.offLoad = function (cb) {
        if (this.onLoad == cb) {
          this.onLoad = null;
        }
      }; //取消监听 插屏 广告错误事件


      interstitialAd.offError = function (cb) {
        if (this.onError == cb) {
          this.onError = null;
        }
      }; //取消监听 插屏 广告尺寸变化事件


      interstitialAd.offResize = function (cb) {
        if (this.onResize == cb) {
          this.onResize = null;
        }
      };

      self.interstitialAds[adId] = interstitialAd;
      return interstitialAd;
    },
    // 创建激励视频广告
    // 参数
    //   videoAdId: string 视频广告ID
    //   screenOrientation: int 广告类型 1 横屏 2 竖屏
    createRewardedVideoAd: function createRewardedVideoAd(adId, videoAdId, screenOrientation) {
      var self = this;
      var rewardedVideoAd = {
        "adId": adId
      };
      var param = {
        "adId": adId,
        "videoAdId": videoAdId,
        "screenOrientation": screenOrientation
      };
      GameSDK.callNative("ad_rewardedVideo_create", param); //显示激励视频广告

      rewardedVideoAd.show = function () {
        var param = {
          "adId": adId
        };
        GameSDK.callNative("ad_rewardedVideo_show", param);
        var promise = new Promise(function (resolve, reject) {
          var handler = function handler(params) {
            if (params == 0) {
              resolve();
            } else {
              reject();
            }
          };

          self.videoAds[adId].mHandler = handler;
        });
        return promise;
      }; // 隐藏激励视频广告


      rewardedVideoAd.hide = function () {
        var param = {
          "adId": adId
        };
        GameSDK.callNative("ad_rewardedVideo_hide", param);
      }; // 销毁激励视频广告


      rewardedVideoAd.destroy = function () {
        var param = {
          "adId": adId
        };
        self.videoAds[adId] = null;
        GameSDK.callNative("ad_rewardedVideo_destroy", param);
      }; //监听激励视频广告加载事件


      rewardedVideoAd.onLoad = function (cb) {
        this.onLoad = cb;
      }; //监听激励视频错误事件


      rewardedVideoAd.onError = function (cb) {
        this.onError = cb;
      }; //监听用户点击 关闭广告 按钮的事件


      rewardedVideoAd.onClose = function (cb) {
        this.onClose = cb;
      }; //监听激励视频广告加载事件


      rewardedVideoAd.offLoad = function (cb) {
        if (this.onLoad == cb) {
          this.onLoad = null;
        }
      }; //监听激励视频错误事件


      rewardedVideoAd.offError = function (cb) {
        if (this.onError == cb) {
          this.onError = null;
        }
      }; //监听用户点击 关闭广告 按钮的事件


      rewardedVideoAd.offClose = function (cb) {
        if (this.onClose == cb) {
          this.onClose = null;
        }
      };

      self.videoAds[adId] = rewardedVideoAd;
      return rewardedVideoAd;
    }
  };
})();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcY29tbW9uLXBsdWdpblxcU2NyaXB0c1xcQWRTREsuanMiXSwibmFtZXMiOlsiQWRTREsiLCJ3aW5kb3ciLCJiYW5uZXJBZHMiLCJpbnRlcnN0aXRpYWxBZHMiLCJ2aWRlb0FkcyIsImluaXQiLCJzZWxmIiwiR2FtZVNESyIsInJlZ2lzdGVyQ2FsbGJhY2siLCJwYXJhbSIsImJhbm5lciIsImFkSWQiLCJvbkxvYWQiLCJvbkVycm9yIiwib25SZXNpemUiLCJpbnRlcnN0aXRpYWxBZCIsInZpZGVvQWQiLCJvbkNsb3NlIiwidHlwZSIsIm1IYW5kbGVyIiwic3VjY2VzcyIsImNyZWF0ZUJhbm5lckFkIiwiYmFubmVyQWRJZCIsInBvc2l0aW9uIiwiYmFubmVyQWQiLCJjYWxsTmF0aXZlIiwic2hvdyIsInByb21pc2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImhhbmRsZXIiLCJwYXJhbXMiLCJoaWRlIiwiZGVzdHJveSIsImNiIiwib2ZmTG9hZCIsIm9mZkVycm9yIiwib2ZmUmVzaXplIiwiY3JlYXRlSW50ZXJzdGl0aWFsQWQiLCJpbnRlcnN0aXRpYWxBZElkIiwic3R5bGUiLCJjcmVhdGVSZXdhcmRlZFZpZGVvQWQiLCJ2aWRlb0FkSWQiLCJzY3JlZW5PcmllbnRhdGlvbiIsInJld2FyZGVkVmlkZW9BZCIsIm9mZkNsb3NlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQSxDQUFDLFlBQVc7QUFDUixNQUFJQSxLQUFLLEdBQUdDLE1BQU0sQ0FBQ0QsS0FBUCxHQUFlO0FBQ3ZCRSxJQUFBQSxTQUFTLEVBQUUsRUFEWTtBQUV2QkMsSUFBQUEsZUFBZSxFQUFFLEVBRk07QUFHdkJDLElBQUFBLFFBQVEsRUFBRSxFQUhhO0FBSXZCQyxJQUFBQSxJQUFJLEVBQUUsZ0JBQVc7QUFDYixVQUFJQyxJQUFJLEdBQUcsSUFBWDtBQUNBQyxNQUFBQSxPQUFPLENBQUNDLGdCQUFSLENBQXlCLGtCQUF6QixFQUE2QyxVQUFT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bihmdW5jdGlvbigpIHtcclxuICAgIHZhciBBZFNESyA9IHdpbmRvdy5BZFNESyA9IHtcclxuICAgICAgICBiYW5uZXJBZHM6IHt9LFxyXG4gICAgICAgIGludGVyc3RpdGlhbEFkczoge30sXHJcbiAgICAgICAgdmlkZW9BZHM6IHt9LFxyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgICAgIEdhbWVTREsucmVnaXN0ZXJDYWxsYmFjayhcImFkX2Jhbm5lcl9vbkxvYWRcIiwgZnVuY3Rpb24ocGFyYW0pIHtcclxuICAgICAgICAgICAgICAgIHZhciBiYW5uZXIgPSBzZWxmLmJhbm5lckFkc1twYXJhbS5hZElkXTtcclxuICAgICAgICAgICAgICAgIGlmIChiYW5uZXIgJiYgYmFubmVyLm9uTG9hZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJhbm5lci5vbkxvYWQocGFyYW0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgR2FtZVNESy5yZWdpc3RlckNhbGxiYWNrKFwiYWRfYmFubmVyX29uRXJyb3JcIiwgZnVuY3Rpb24ocGFyYW0pIHtcclxuICAgICAgICAgICAgICAgIHZhciBiYW5uZXIgPSBzZWxmLmJhbm5lckFkc1twYXJhbS5hZElkXTtcclxuICAgICAgICAgICAgICAgIGlmIChiYW5uZXIgJiYgYmFubmVyLm9uRXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICBiYW5uZXIub25FcnJvcihwYXJhbSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBHYW1lU0RLLnJlZ2lzdGVyQ2FsbGJhY2soXCJhZF9iYW5uZXJfb25SZXNpemVcIiwgZnVuY3Rpb24ocGFyYW0pIHtcclxuICAgICAgICAgICAgICAgIHZhciBiYW5uZXIgPSBzZWxmLmJhbm5lckFkc1twYXJhbS5hZElkXTtcclxuICAgICAgICAgICAgICAgIGlmIChiYW5uZXIgJiYgYmFubmVyLm9uUmVzaXplKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFubmVyLm9uUmVzaXplKHBhcmFtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIEdhbWVTREsucmVnaXN0ZXJDYWxsYmFjayhcImFkX2ludGVyc3RpdGlhbF9vbkxvYWRcIiwgZnVuY3Rpb24ocGFyYW0pIHtcclxuICAgICAgICAgICAgICAgIHZhciBpbnRlcnN0aXRpYWxBZCA9IHNlbGYuaW50ZXJzdGl0aWFsQWRzW3BhcmFtLmFkSWRdO1xyXG4gICAgICAgICAgICAgICAgaWYgKGludGVyc3RpdGlhbEFkICYmIGludGVyc3RpdGlhbEFkLm9uTG9hZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uTG9hZChwYXJhbSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBHYW1lU0RLLnJlZ2lzdGVyQ2FsbGJhY2soXCJhZF9pbnRlcnN0aXRpYWxfb25FcnJvclwiLCBmdW5jdGlvbihwYXJhbSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGludGVyc3RpdGlhbEFkID0gc2VsZi5pbnRlcnN0aXRpYWxBZHNbcGFyYW0uYWRJZF07XHJcbiAgICAgICAgICAgICAgICBpZiAoaW50ZXJzdGl0aWFsQWQgJiYgaW50ZXJzdGl0aWFsQWQub25FcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uRXJyb3IocGFyYW0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgR2FtZVNESy5yZWdpc3RlckNhbGxiYWNrKFwiYWRfaW50ZXJzdGl0aWFsX29uUmVzaXplXCIsIGZ1bmN0aW9uKHBhcmFtKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaW50ZXJzdGl0aWFsQWQgPSBzZWxmLmludGVyc3RpdGlhbEFkc1twYXJhbS5hZElkXTtcclxuICAgICAgICAgICAgICAgIGlmIChpbnRlcnN0aXRpYWxBZCAmJiBpbnRlcnN0aXRpYWxBZC5vblJlc2l6ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uUmVzaXplKHBhcmFtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIEdhbWVTREsucmVnaXN0ZXJDYWxsYmFjayhcImFkX3Jld2FyZGVkVmlkZW9fb25Mb2FkXCIsIGZ1bmN0aW9uKHBhcmFtKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdmlkZW9BZCA9IHNlbGYudmlkZW9BZHNbcGFyYW0uYWRJZF07XHJcbiAgICAgICAgICAgICAgICBpZiAodmlkZW9BZCAmJiB2aWRlb0FkLm9uTG9hZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZpZGVvQWQub25Mb2FkKHBhcmFtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIEdhbWVTREsucmVnaXN0ZXJDYWxsYmFjayhcImFkX3Jld2FyZGVkVmlkZW9fb25FcnJvclwiLCBmdW5jdGlvbihwYXJhbSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHZpZGVvQWQgPSBzZWxmLnZpZGVvQWRzW3BhcmFtLmFkSWRdO1xyXG4gICAgICAgICAgICAgICAgaWYgKHZpZGVvQWQgJiYgdmlkZW9BZC5vbkVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmlkZW9BZC5vbkVycm9yKHBhcmFtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIEdhbWVTREsucmVnaXN0ZXJDYWxsYmFjayhcImFkX3Jld2FyZGVkVmlkZW9fb25DbG9zZVwiLCBmdW5jdGlvbihwYXJhbSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHZpZGVvQWQgPSBzZWxmLnZpZGVvQWRzW3BhcmFtLmFkSWRdO1xyXG4gICAgICAgICAgICAgICAgaWYgKHZpZGVvQWQgJiYgdmlkZW9BZC5vbkNsb3NlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmlkZW9BZC5vbkNsb3NlKHBhcmFtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIEdhbWVTREsucmVnaXN0ZXJDYWxsYmFjayhcImFkX29uU2hvd1wiLCBmdW5jdGlvbihwYXJhbSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHBhcmFtLnR5cGUgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBiYW5uZXIgPSBzZWxmLmJhbm5lckFkc1twYXJhbS5hZElkXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYmFubmVyICYmIGJhbm5lci5tSGFuZGxlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYW5uZXIubUhhbmRsZXIocGFyYW0uc3VjY2Vzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJhbS50eXBlID09IDIpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaW50ZXJzdGl0aWFsQWQgPSBzZWxmLmludGVyc3RpdGlhbEFkc1twYXJhbS5hZElkXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW50ZXJzdGl0aWFsQWQgJiYgaW50ZXJzdGl0aWFsQWQubUhhbmRsZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQubUhhbmRsZXIocGFyYW0uc3VjY2Vzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJhbS50eXBlID09IDMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdmlkZW9BZCA9IHNlbGYudmlkZW9BZHNbcGFyYW0uYWRJZF07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZpZGVvQWQgJiYgdmlkZW9BZC5tSGFuZGxlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0FkLm1IYW5kbGVyKHBhcmFtLnN1Y2Nlc3MpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvLyDliJvlu7pCYW5uZXLlub/lkYpcclxuICAgICAgICAvLyDlj4LmlbBcclxuICAgICAgICAvLyAgIGFkSWQ6IHN0cmluZyDlub/lkYrluo/lj7dJRFxyXG4gICAgICAgIC8vICAgYmFubmVyQWRJZDogc3RyaW5nIEJhbm5lcuW5v+WRiklEXHJcbiAgICAgICAgLy8gICBwb3NpdGlvbjogaW50IOW5v+WRiuS9jee9riAxIOWxj+W5lemhtumDqCAyIOWxj+W5leW6lemDqCAz5bGP5bmV5Lit6Ze0XHJcbiAgICAgICAgY3JlYXRlQmFubmVyQWQ6IGZ1bmN0aW9uKGFkSWQsIGJhbm5lckFkSWQsIHBvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICAgICAgdmFyIGJhbm5lckFkID0ge1xyXG4gICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdmFyIHBhcmFtID0ge1xyXG4gICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWQsXHJcbiAgICAgICAgICAgICAgICBcImJhbm5lckFkSWRcIjogYmFubmVyQWRJZCxcclxuICAgICAgICAgICAgICAgIFwicG9zaXRpb25cIjogcG9zaXRpb24sXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIEdhbWVTREsuY2FsbE5hdGl2ZShcImFkX2Jhbm5lcl9jcmVhdGVcIiwgcGFyYW0pO1xyXG5cclxuICAgICAgICAgICAgLy/mmL7npLogYmFubmVyIOW5v+WRilxyXG4gICAgICAgICAgICBiYW5uZXJBZC5zaG93ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBHYW1lU0RLLmNhbGxOYXRpdmUoXCJhZF9iYW5uZXJfc2hvd1wiLCBwYXJhbSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBoYW5kbGVyID0gZnVuY3Rpb24ocGFyYW1zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJhbXMgPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuYmFubmVyQWRzW2FkSWRdLm1IYW5kbGVyID0gaGFuZGxlcjtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb21pc2U7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIC8v6ZqQ6JePIGJhbm5lciDlub/lkYpcclxuICAgICAgICAgICAgYmFubmVyQWQuaGlkZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBhcmFtID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiYWRJZFwiOiBhZElkXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgR2FtZVNESy5jYWxsTmF0aXZlKFwiYWRfYmFubmVyX2hpZGVcIiwgcGFyYW0pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy8g6ZSA5q+BIGJhbm5lciDlub/lkYpcclxuICAgICAgICAgICAgYmFubmVyQWQuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBhcmFtID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiYWRJZFwiOiBhZElkXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgc2VsZi5iYW5uZXJBZHNbYWRJZF0gPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgR2FtZVNESy5jYWxsTmF0aXZlKFwiYWRfYmFubmVyX2Rlc3Ryb3lcIiwgcGFyYW0pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy/nm5HlkKwgYmFubmVyIOW5v+WRiuWKoOi9veS6i+S7tlxyXG4gICAgICAgICAgICBiYW5uZXJBZC5vbkxvYWQgPSBmdW5jdGlvbihjYikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkxvYWQgPSBjYjtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIC8v55uR5ZCsIGJhbm5lciDlub/lkYrplJnor6/kuovku7ZcclxuICAgICAgICAgICAgYmFubmVyQWQub25FcnJvciA9IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRXJyb3IgPSBjYjtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIC8v55uR5ZCsIGJhbm5lciDlub/lkYrlsLrlr7jlj5jljJbkuovku7YgIOacquWunueOsFxyXG4gICAgICAgICAgICBiYW5uZXJBZC5vblJlc2l6ZSA9IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uUmVzaXplID0gY2I7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvL+WPlua2iOebkeWQrCBiYW5uZXIg5bm/5ZGK5Yqg6L295LqL5Lu2XHJcbiAgICAgICAgICAgIGJhbm5lckFkLm9mZkxvYWQgPSBmdW5jdGlvbihjYikge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25Mb2FkID09IGNiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkxvYWQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy/lj5bmtojnm5HlkKwgYmFubmVyIOW5v+WRiumUmeivr+S6i+S7tlxyXG4gICAgICAgICAgICBiYW5uZXJBZC5vZmZFcnJvciA9IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vbkVycm9yID09IGNiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkVycm9yID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIC8v5Y+W5raI55uR5ZCsIGJhbm5lciDlub/lkYrlsLrlr7jlj5jljJbkuovku7ZcclxuICAgICAgICAgICAgYmFubmVyQWQub2ZmUmVzaXplID0gZnVuY3Rpb24oY2IpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9uUmVzaXplID09IGNiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vblJlc2l6ZSA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHNlbGYuYmFubmVyQWRzW2FkSWRdID0gYmFubmVyQWQ7XHJcbiAgICAgICAgICAgIHJldHVybiBiYW5uZXJBZDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIOWIm+W7uuaPkuWxj+W5v+WRilxyXG4gICAgICAgIC8vIOWPguaVsFxyXG4gICAgICAgIC8vICAgYWRJZDogc3RyaW5nIOW5v+WRiuW6j+WPt0lEXHJcbiAgICAgICAgLy8gICBpbnRlcnN0aXRpYWxBZElkOiBzdHJpbmcg5o+S5bGP5bm/5ZGKSURcclxuICAgICAgICAvLyAgIHN0eWxlOiBpbnQg5bm/5ZGK57G75Z6LIDEg5YWo5bGPIDIg5Y2K5bGPXHJcbiAgICAgICAgY3JlYXRlSW50ZXJzdGl0aWFsQWQ6IGZ1bmN0aW9uKGFkSWQsIGludGVyc3RpdGlhbEFkSWQsIHN0eWxlKSB7XHJcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICAgICAgdmFyIGludGVyc3RpdGlhbEFkID0ge1xyXG4gICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdmFyIHBhcmFtID0ge1xyXG4gICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWQsXHJcbiAgICAgICAgICAgICAgICBcImludGVyc3RpdGlhbEFkSWRcIjogaW50ZXJzdGl0aWFsQWRJZCxcclxuICAgICAgICAgICAgICAgIFwic3R5bGVcIjogc3R5bGUsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIEdhbWVTREsuY2FsbE5hdGl2ZShcImFkX2ludGVyc3RpdGlhbF9jcmVhdGVcIiwgcGFyYW0pO1xyXG5cclxuICAgICAgICAgICAgLy/mmL7npLog5o+S5bGPIOW5v+WRilxyXG4gICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5zaG93ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBHYW1lU0RLLmNhbGxOYXRpdmUoXCJhZF9pbnRlcnN0aXRpYWxfc2hvd1wiLCBwYXJhbSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBoYW5kbGVyID0gZnVuY3Rpb24ocGFyYW1zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJhbXMgPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaW50ZXJzdGl0aWFsQWRzW2FkSWRdLm1IYW5kbGVyID0gaGFuZGxlcjtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb21pc2U7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvLyDpmpDol48g5o+S5bGPIOW5v+WRilxyXG4gICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5oaWRlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBHYW1lU0RLLmNhbGxOYXRpdmUoXCJhZF9pbnRlcnN0aXRpYWxfaGlkZVwiLCBwYXJhbSk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvLyDplIDmr4Eg5o+S5bGPIOW5v+WRilxyXG4gICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBzZWxmLmludGVyc3RpdGlhbEFkc1thZElkXSA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICBHYW1lU0RLLmNhbGxOYXRpdmUoXCJhZF9pbnRlcnN0aXRpYWxfZGVzdHJveVwiLCBwYXJhbSk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvLyDnm5HlkKwg5o+S5bGPIOW5v+WRiuWKoOi9veS6i+S7tlxyXG4gICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5vbkxvYWQgPSBmdW5jdGlvbihjYikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkxvYWQgPSBjYjtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIC8vIOebkeWQrCDmj5LlsY8g5bm/5ZGK6ZSZ6K+v5LqL5Lu2XHJcbiAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uRXJyb3IgPSBmdW5jdGlvbihjYikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkVycm9yID0gY2I7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIC8vIOebkeWQrCDmj5LlsY8g5bm/5ZGK5bC65a+45Y+Y5YyW5LqL5Lu2XHJcbiAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uUmVzaXplID0gZnVuY3Rpb24oY2IpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25SZXNpemUgPSBjYjtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIC8v5Y+W5raI55uR5ZCsIOaPkuWxjyDlub/lkYrliqDovb3kuovku7ZcclxuICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQub2ZmTG9hZCA9IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vbkxvYWQgPT0gY2IpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uTG9hZCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvL+WPlua2iOebkeWQrCDmj5LlsY8g5bm/5ZGK6ZSZ6K+v5LqL5Lu2XHJcbiAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9mZkVycm9yID0gZnVuY3Rpb24oY2IpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9uRXJyb3IgPT0gY2IpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRXJyb3IgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy/lj5bmtojnm5HlkKwg5o+S5bGPIOW5v+WRiuWwuuWvuOWPmOWMluS6i+S7tlxyXG4gICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5vZmZSZXNpemUgPSBmdW5jdGlvbihjYikge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25SZXNpemUgPT0gY2IpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uUmVzaXplID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgc2VsZi5pbnRlcnN0aXRpYWxBZHNbYWRJZF0gPSBpbnRlcnN0aXRpYWxBZDtcclxuICAgICAgICAgICAgcmV0dXJuIGludGVyc3RpdGlhbEFkO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLy8g5Yib5bu65r+A5Yqx6KeG6aKR5bm/5ZGKXHJcbiAgICAgICAgLy8g5Y+C5pWwXHJcbiAgICAgICAgLy8gICB2aWRlb0FkSWQ6IHN0cmluZyDop4bpopHlub/lkYpJRFxyXG4gICAgICAgIC8vICAgc2NyZWVuT3JpZW50YXRpb246IGludCDlub/lkYrnsbvlnosgMSDmqKrlsY8gMiDnq5blsY9cclxuICAgICAgICBjcmVhdGVSZXdhcmRlZFZpZGVvQWQ6IGZ1bmN0aW9uKGFkSWQsIHZpZGVvQWRJZCwgc2NyZWVuT3JpZW50YXRpb24pIHtcclxuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgICAgICB2YXIgcmV3YXJkZWRWaWRlb0FkID0ge1xyXG4gICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdmFyIHBhcmFtID0ge1xyXG4gICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWQsXHJcbiAgICAgICAgICAgICAgICBcInZpZGVvQWRJZFwiOiB2aWRlb0FkSWQsXHJcbiAgICAgICAgICAgICAgICBcInNjcmVlbk9yaWVudGF0aW9uXCI6IHNjcmVlbk9yaWVudGF0aW9uLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBHYW1lU0RLLmNhbGxOYXRpdmUoXCJhZF9yZXdhcmRlZFZpZGVvX2NyZWF0ZVwiLCBwYXJhbSk7XHJcblxyXG4gICAgICAgICAgICAvL+aYvuekuua/gOWKseinhumikeW5v+WRilxyXG4gICAgICAgICAgICByZXdhcmRlZFZpZGVvQWQuc2hvdyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBhcmFtID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiYWRJZFwiOiBhZElkXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgR2FtZVNESy5jYWxsTmF0aXZlKFwiYWRfcmV3YXJkZWRWaWRlb19zaG93XCIsIHBhcmFtKTtcclxuICAgICAgICAgICAgICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGhhbmRsZXIgPSBmdW5jdGlvbihwYXJhbXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmFtcyA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi52aWRlb0Fkc1thZElkXS5tSGFuZGxlciA9IGhhbmRsZXI7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwcm9taXNlO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy8g6ZqQ6JeP5r+A5Yqx6KeG6aKR5bm/5ZGKXHJcbiAgICAgICAgICAgIHJld2FyZGVkVmlkZW9BZC5oaWRlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBHYW1lU0RLLmNhbGxOYXRpdmUoXCJhZF9yZXdhcmRlZFZpZGVvX2hpZGVcIiwgcGFyYW0pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy8g6ZSA5q+B5r+A5Yqx6KeG6aKR5bm/5ZGKXHJcbiAgICAgICAgICAgIHJld2FyZGVkVmlkZW9BZC5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJhZElkXCI6IGFkSWRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBzZWxmLnZpZGVvQWRzW2FkSWRdID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIEdhbWVTREsuY2FsbE5hdGl2ZShcImFkX3Jld2FyZGVkVmlkZW9fZGVzdHJveVwiLCBwYXJhbSk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvL+ebkeWQrOa/gOWKseinhumikeW5v+WRiuWKoOi9veS6i+S7tlxyXG4gICAgICAgICAgICByZXdhcmRlZFZpZGVvQWQub25Mb2FkID0gZnVuY3Rpb24oY2IpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25Mb2FkID0gY2I7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvL+ebkeWQrOa/gOWKseinhumikemUmeivr+S6i+S7tlxyXG4gICAgICAgICAgICByZXdhcmRlZFZpZGVvQWQub25FcnJvciA9IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRXJyb3IgPSBjYjtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIC8v55uR5ZCs55So5oi354K55Ye7IOWFs+mXreW5v+WRiiDmjInpkq7nmoTkuovku7ZcclxuICAgICAgICAgICAgcmV3YXJkZWRWaWRlb0FkLm9uQ2xvc2UgPSBmdW5jdGlvbihjYikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkNsb3NlID0gY2I7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvL+ebkeWQrOa/gOWKseinhumikeW5v+WRiuWKoOi9veS6i+S7tlxyXG4gICAgICAgICAgICByZXdhcmRlZFZpZGVvQWQub2ZmTG9hZCA9IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vbkxvYWQgPT0gY2IpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uTG9hZCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvL+ebkeWQrOa/gOWKseinhumikemUmeivr+S6i+S7tlxyXG4gICAgICAgICAgICByZXdhcmRlZFZpZGVvQWQub2ZmRXJyb3IgPSBmdW5jdGlvbihjYikge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25FcnJvciA9PSBjYikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub25FcnJvciA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvL+ebkeWQrOeUqOaIt+eCueWHuyDlhbPpl63lub/lkYog5oyJ6ZKu55qE5LqL5Lu2XHJcbiAgICAgICAgICAgIHJld2FyZGVkVmlkZW9BZC5vZmZDbG9zZSA9IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vbkNsb3NlID09IGNiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkNsb3NlID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgc2VsZi52aWRlb0Fkc1thZElkXSA9IHJld2FyZGVkVmlkZW9BZDtcclxuICAgICAgICAgICAgcmV0dXJuIHJld2FyZGVkVmlkZW9BZDtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59KSgpIl19