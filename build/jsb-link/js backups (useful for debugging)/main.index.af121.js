window.__require = function e(t, i, o) {
function n(a, r) {
if (!i[a]) {
if (!t[a]) {
var l = a.split("/");
l = l[l.length - 1];
if (!t[l]) {
var c = "function" == typeof __require && __require;
if (!r && c) return c(l, !0);
if (s) return s(l, !0);
throw new Error("Cannot find module '" + a + "'");
}
a = l;
}
var u = i[a] = {
exports: {}
};
t[a][0].call(u.exports, function(e) {
return n(t[a][1][e] || e);
}, u, u.exports, e, t, i, o);
}
return i[a].exports;
}
for (var s = "function" == typeof __require && __require, a = 0; a < o.length; a++) n(o[a]);
return n;
}({
AdAgent4399: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "50d79CJWalF0YaAKvtP+yLq", "AdAgent4399");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./PlatUtils"), r = e("./Utils"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._videoAd = null;
t._4399 = window.h5api;
t._canPlayAd = !0;
t._remain = 0;
return t;
}
t.prototype.Init = function() {
this.checkPlayAd();
};
t.prototype.checkPlayAd = function() {
this._canPlayAd = !0;
};
t.prototype.ShowBanner = function() {
r.utils.showLog("4399平台暂无banner广告");
};
t.prototype.ShowInterstitial = function() {
r.utils.showLog("4399平台暂时无插屏广告");
};
t.prototype.ShowVideo = function(e) {
var t = this;
if (a.default.Is4399) {
this._videoCallback = e;
if (this._canPlayAd) this._4399.playAd(function(e) {
r.utils.showLog("代码:" + e.code + ",消息:" + e.message);
if (1e4 === e.code) r.utils.showLog("视频开始播放"); else if (10001 === e.code) {
r.utils.showLog("视频播放结束");
if (t._videoCallback) {
t._videoCallback(!0, "");
t._videoCallback = null;
}
t.checkPlayAd();
} else {
if (t._videoCallback) {
t._videoCallback(!1, "激励视频异常!");
t._videoCallback = null;
}
t.checkPlayAd();
r.utils.showLog("视频广告异常");
}
}); else {
r.utils.showLog("4399获取到不能播放广告! #this._canPlayAd=", this._canPlayAd, "剩余次数", this._remain);
if (this._videoCallback) {
this._videoCallback(!1, "今日次数用完，明天再来!");
this._videoCallback = null;
}
this.checkPlayAd();
}
}
};
return t = n([ c ], t);
}(s.default));
i.default = u;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
AdAgentBaidu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4db21W0NW9ALaQL6EjOywaw", "AdAgentBaidu");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._sysData = null;
t._baiduVersion = "";
t._recorder = null;
t._bannerAd = null;
t._videoAd = null;
t._videoCallback = null;
t._isVideoShow = !1;
t._isVideoLoaded = !1;
t.swan = window.swan;
t._bannerSizePercent = .1;
t._bannerBottom = 0;
return t;
}
t.prototype.Init = function() {
var e = this;
if (r.default.IsBaidu) {
this._sysData = this.swan.getSystemInfoSync();
l.utils.registerServerInitEvent(function() {
e._initVideoAd();
}, this);
}
};
t.prototype.ShowBanner = function(e, t) {
var i = this;
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
if (r.default.IsBaidu) {
if (l.utils.isShowRecommondGamesBanner() && l.utils.isSupportnavigateToMiniGame()) {
l.utils.showRecommendGamesBanner();
l.utils.showLog("服务器配置展示自定义banner");
return;
}
l.utils.showLog("显示banner广告...");
var o = t;
if (o && o.width) {
cc.winSize.height / cc.winSize.width < 1 ? this._bannerSizePercent = o.width : this._bannerSizePercent = o.width <= .8 ? .8 : o.width;
this._bannerSizePercent = o.width > 1 ? 1 : this._bannerSizePercent;
}
if (o && o.bottom) {
this._bannerBottom = o.bottom / this._sysData.pixelRatio;
this._bannerBottom = this._bannerBottom < 0 ? 0 : this._bannerBottom;
this._bannerBottom = this._bannerBottom > this._sysData.screenHeight ? this._sysData.screenHeight : this._bannerBottom;
}
if (l.utils.config.baiduconfig && l.utils.config.baiduconfig.bannerId && l.utils.config.baiduconfig.appSID) {
var n = (this._sysData.screenWidth - this._sysData.screenWidth * this._bannerSizePercent) / 2, s = this._sysData.screenWidth * this._bannerSizePercent, c = {
adUnitId: l.utils.config.baiduconfig.bannerId,
appSid: l.utils.config.baiduconfig.appSID,
style: {
top: 0,
left: n,
width: s
}
}, u = null, h = this._bannerAd, d = function() {
u && u.show().then(function() {
i._bannerAd = u;
if (h) {
h.destroy();
h.offLoad(d);
h.offError(f);
}
l.utils.showLog("Banner显示成功！");
}).catch(function() {
l.utils.showLog("Banner显示出错!");
});
}, f = function(e) {
e && l.utils.showLog("Banner 广告出错 : ", e.errCode, e.errMsg);
};
if (u = this.swan.createBannerAd(c)) {
u.onLoad(d);
u.onError(f);
u.onResize(function(e) {
u.style.width = s;
u.style.top = i._sysData.screenHeight - e.height - i._bannerBottom;
});
u.style.width = s + 1;
r.default.IsIOS && (u.style.top = this._sysData.screenHeight);
}
} else cc.warn("百度广告配置文件出错!");
}
};
t.prototype.showStatementAds = function() {
var e, t = {
type: 0,
node: null
};
l.utils.showLog("结算广告 >> 显示插屏广告+6个互推");
this.ShowInterstitial();
e = l.utils.showCrossWidget6();
1;
t.type = 1;
t.node = e;
return t;
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
r.default.IsBaidu && this._bannerAd && this._bannerAd.hide();
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
console.warn("百度没有插屏");
};
t.prototype.ShowVideo = function(e) {
var t = this;
if (r.default.IsBaidu) {
if (this._videoCallback) return;
this._videoCallback = e;
this._isVideoShow = !0;
this._videoAd ? this._isVideoLoaded ? this._videoAd.show().then(function() {
l.utils.showLog("视频显示成功!");
t._isVideoLoaded = !1;
}).catch(function(e) {}) : this._videoAd.load().catch(function(e) {}) : this._initVideoAd();
}
};
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) {
if (!(l.utils.config.baiduconfig && l.utils.config.baiduconfig.appSID && l.utils.config.baiduconfig.videoId)) {
l.utils.showLog("视频ID配置不正确！");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
var t = {
adUnitId: l.utils.config.baiduconfig.videoId,
appSid: l.utils.config.baiduconfig.appSID
};
l.utils.showLog("视频广告参数:", JSON.stringify(t));
this._videoAd = this.swan.createRewardedVideoAd(t);
if (this._videoAd) {
this._videoAd.onLoad(function() {
l.utils.showLog("视频加载成功");
e._isVideoLoaded = !0;
e._isVideoShow && e._videoAd.show().then(function() {
e._isVideoLoaded = !1;
}).catch(function() {
l.utils.showLog("视频播放失败！");
});
});
this._videoAd.onClose(function(t) {
e._isVideoShow = !1;
if (t && t.isEnded) {
l.utils.showLog("正常播放结束，可以下发游戏奖励");
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else {
l.utils.showLog("播放中途退出，不下发游戏奖励");
if (e._videoCallback) {
e._videoCallback(!1, "观看完视频才能获得奖励!");
e._videoCallback = null;
}
}
});
this._videoAd.onError(function(t) {
l.utils.showLog("激励视频异常!", t.errCode);
e._isVideoLoaded = !1;
if (e._videoCallback) {
e._videoCallback(!1, "暂无视频广告!");
e._videoCallback = null;
}
});
}
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentBili: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ecaa7MzB4FNUoaCpwLpxt+Y", "AdAgentBili");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._videoAd = null;
t._bannerAd = null;
t.bl = window.bl;
t._curBannerAd = null;
t._bannerSizePercent = .1;
t._bannerBottom = 0;
return t;
}
t.prototype.Init = function() {};
t.prototype.ShowBanner = function(e, t) {
void 0 === t && (t = null);
var i = t;
if (i && i.width) {
this._bannerSizePercent = i.width < 0 ? 0 : i.width;
this._bannerSizePercent = i.width > 1 ? 1 : i.width;
}
if (i && i.bottom) {
this._bannerBottom = i.bottom < 0 ? 0 : i.bottom;
this._bannerBottom = i.bottom > cc.winSize.height ? cc.winSize.height : i.bottom;
}
console.log("显示Banner广告");
var o = bl.createBannerAd({
left: 0,
width: 300,
top: 0
});
if (o) {
o.onError(function(e) {
l.utils.showLog("广告条加载失败! ", JSON.stringify(e));
o && o.destroy();
});
var n = this;
o.onLoad(function() {
o.show().then(function() {
n._curBannerAd && n._curBannerAd.destroy();
n._curBannerAd = o;
l.utils.showLog("Banner广告显示成功!");
}).catch(function(e) {
l.utils.showLog("Banner广告出错", JSON.stringify(e));
o && o.destroy();
});
});
o.onResize(function(e) {
o.style.width = l.utils.Tool_Bili.SysInfo.screenWidth * n._bannerSizePercent;
o.style.left = .5 * (l.utils.Tool_Bili.SysInfo.screenWidth - e.width);
n._bannerBottom == cc.winSize.height ? o.style.top = 0 : o.style.top = l.utils.Tool_Bili.SysInfo.screenHeight - e.height - n._bannerBottom;
});
} else l.utils.showLog("广告条创建失败!");
};
t.prototype.ShowInterstitial = function() {
l.utils.showLog("哔哩平台暂时无插屏广告");
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
r.default.IsBili && this._bannerAd && this._bannerAd.hide();
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsBili) {
this._videoCallback = e;
var t = this;
this.showRewardedVideoAd({
onSuccess: function(e) {
l.utils.showLog("bili视频展示成功！");
},
onFail: function(e) {
l.utils.showLog("bili视频广告展示失败！");
l.utils.Tool_Bili.share(function(e, i) {
if (e) {
t._videoCallback && t._videoCallback(!0, "");
t._videoCallback = null;
} else {
t._videoCallback && t._videoCallback(!1, "分享成功才可以获取奖励哦!");
t._videoCallback = null;
}
});
},
onClose: function(e) {
if (e.isEnded) {
l.utils.showLog("bili视频广告观看完毕，发送奖励");
t._videoCallback && t._videoCallback(!0, "");
} else {
t._videoCallback && t._videoCallback(!1, "观看完视频才能获得奖励!");
t._videoCallback = null;
}
}
});
}
};
t.prototype.showRewardedVideoAd = function(e) {
var t = e.onSuccess, i = e.onFail, o = e.onClose, n = this.bl.createRewardedVideoAd();
function s(e) {
n.offLoad(s);
n.show().catch(function(e) {
"function" == typeof i && i(e);
return Promise.reject(e);
}).then(function(e) {
"function" == typeof t && t(e);
});
}
function a(e) {
"function" == typeof i && i(e);
n.offLoad(s);
n.offClose(r);
n.offError(a);
n.destroy();
}
function r(e) {
"function" == typeof o && o(e);
n.offLoad(s);
n.offClose(r);
n.offError(a);
n.destroy();
}
n.offLoad(s);
n.onLoad(s);
n.offError(a);
n.onError(a);
n.offClose(r);
n.onClose(r);
n.load();
return n;
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentBroser: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4909rppFFL/JkiPVVbCFkk", "AdAgentBroser");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}();
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./AdAgent"), s = e("./YZ_NativeBanner"), a = e("./YZ_NativeInsert"), r = e("./YZ_Constant"), l = e("./CommonConfig"), c = e("./Utils"), u = e("./YZ_NativeAdObject"), h = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._nativeBannerInfo = null;
t._curLocation = r.BannerLocation.None;
t.signleNativeAd = null;
t._curNativeItem = null;
return t;
}
t.prototype.getNativeBannerInfo = function() {
return new l.NativeBannerInfo();
};
t.prototype.ShowBanner = function(e) {
void 0 === e && (e = null);
this._curLocation != e && this.HideBanner(e);
this._curLocation = e;
if (-1 != this.getNativeBannerInfo().is_show_banner) {
if (!this._nativeBannerNode) {
this._nativeBannerNode = cc.instantiate(c.utils.config.otherconfig.nativeBanner);
cc.director.getScene().addChild(this._nativeBannerNode, 1e3);
}
this._nativeBannerNode.active = !0;
var t = this._nativeBannerNode.getComponent(s.default);
if (t) {
var i = {
title: "今日头条",
desc: "看新闻用今日头条",
imgUrlList: [ c.utils.cur_tool.img_url ],
icon: c.utils.cur_tool.img_url
};
t.init(null, i, this.getNativeBannerInfo());
}
} else {
c.utils.showLog("当前位置配置为不展示banner!");
this.HideBanner(e);
}
};
t.prototype.ShowInterstitial = function() {
if (!this._nativeInsertNode) {
this._nativeInsertNode = cc.instantiate(c.utils.config.otherconfig.nativeInsert);
cc.director.getScene().addChild(this._nativeInsertNode, 9999);
}
this._nativeInsertNode.active = !0;
var e = this._nativeInsertNode.getComponent(a.default);
if (e) {
var t = {
title: "今日头条",
desc: "看新闻用今日头条",
imgUrlList: [ c.utils.cur_tool.img_url ],
icon: c.utils.cur_tool.img_url
};
e.init(null, t);
}
};
t.prototype.showStatementAds = function(e) {
c.utils.adManager.ShowInterstitial();
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = null);
this._nativeBannerNode && (this._nativeBannerNode.active = !1);
c.utils.hideRecommendGamesBanner();
};
t.prototype.ShowVideo = function(e) {
e(!0, "视频播放成功!");
};
t.prototype.showBeforGameOverAd = function(e, t, i, o, n) {
cc.log("显示结算前广告：  #Level= ", e, " #LevelStatys=", t, " #rewardValue = ", i);
c.utils.currentLevel = e;
c.utils.isSuccess = t == r.LevelStatus.GameWin;
c.utils.rewardCallFunc = n;
c.utils.rewardCloseFunc = o;
c.utils.rewardValue = i;
switch (c.utils.adManager.checkShowBeforGameOverAd(e, t == r.LevelStatus.GameWin)) {
case r.BeForGameOverAdId.SharePanel:
c.utils.recordEnd();
c.utils.showShareRecordPanel();
break;

case r.BeForGameOverAdId.GoldBox:
c.utils.adManager.showRewardBoxPanel();
break;

case r.BeForGameOverAdId.Turntable:
c.utils.adManager.showrewardTurnTablePanel();
break;

default:
o && o();
}
};
t.prototype.ShowSingleNativeAd = function(e) {
if (c.utils.config.otherconfig.singleNativeAd) {
this.signleNativeAd && cc.isValid(this.signleNativeAd) && this.signleNativeAd.destroy();
this.signleNativeAd = cc.instantiate(c.utils.config.otherconfig.singleNativeAd);
var t = this.signleNativeAd.getComponent("YZ_NativeItem");
t.showType = 2;
t.params = e;
this._curNativeItem = t;
e && e.parent && e.parent.addChild(this.signleNativeAd, cc.macro.MAX_ZINDEX);
var i = new u.default(), o = {
imgUrlList: [ c.utils.cur_tool.img_url ],
icon: c.utils.cur_tool.img_url,
title: "爱奇艺视频",
desc: "下载爱奇艺，即送VIP！"
};
i.data = o;
t._nativeAd = i;
this._curNativeItem.init(i);
c.utils.showLog("单个原生广告创建成功！");
return this.signleNativeAd;
}
c.utils.showLog("未找到预制体 singleNativeAd, 请查看CommonUtils组件上是否赋值！");
return null;
};
return t;
}(n.default);
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./CommonConfig": "CommonConfig",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_NativeAdObject": "YZ_NativeAdObject",
"./YZ_NativeBanner": "YZ_NativeBanner",
"./YZ_NativeInsert": "YZ_NativeInsert"
} ],
AdAgentCocosplay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8d81d8tTk9JCplPi0EAy2/+", "AdAgentCocosplay");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./Utils"), r = cc._decorator, l = r.ccclass, c = (r.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.banner = null;
t.interstitialAd = {};
t.videoAd = {};
t.bannerLoaded = !1;
t.interstitialAdLoaded = !1;
t.videoAdLoaded = !1;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._videoAd = null;
t._bannerAd = null;
t.uc = window.uc;
t._insertShowCount = 0;
t._insertLastShowTime = 0;
return t;
}
t.prototype.Init = function() {
var e = this;
a.utils.registerServerInitEvent(function() {
e.initBanner();
e.createInsertAd();
e.createVideoAd();
}, this);
};
t.prototype.initBanner = function() {
var e = this;
e.bannerLoaded = !1;
e.banner = AdSDK.createBannerAd("1", a.utils.config.cocosConfig.bannerId, 2);
e.banner.onLoad(function() {
e.bannerLoaded = !0;
console.log("banner 创建banner成功，可以调用展示");
});
e.banner.onError(function(t) {
e.destroyBannerAd();
console.log("banner 创建banner失败，错误码 = ", t.errorCode);
});
console.log("banner 游戏创建banner广告");
};
t.prototype.ShowBanner = function() {
if (this.bannerLoaded) {
this.banner.show().then(function() {
console.log("banner 广告显示成功");
}, function(e) {
console.log("banner 广告显示失败");
});
console.log("banner 展示banner广告");
} else console.log("banner 未加载成功");
};
t.prototype.HideBanner = function() {
this.banner.hide();
console.log("banner 隐藏banner广告");
};
t.prototype.destroyBannerAd = function() {
this.bannerLoaded = !1;
this.banner.destroy();
this.banner = null;
console.log("banner 销毁banner广告");
};
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return a.utils._tool_Cocosplay.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype.checkInsertAdShow = function() {
this.ServerConfig.intersititial_max_show_count;
0;
var e = this.ServerConfig.intersititial_interval_time, t = (new Date().getTime() - this._insertLastShowTime) / 1e3;
a.utils.showLog("cocos服务器插屏最大显示次数为：0,间隔显示时间为：" + e + "秒！");
a.utils.showLog("cocos插屏当前广告显示次数：" + this._insertShowCount + "次，间隔时间：" + t + "秒！");
0;
if (e > 0 && t < e) {
a.utils.showLog("cocos插屏广告显示的间隔少于" + e + "秒。插屏不显示");
return !1;
}
return !0;
};
t.prototype.ShowInterstitial = function() {
var e = this;
if (e.checkInsertAdShow() && e.interstitialAdLoaded) {
e.interstitialAd.show().then(function() {
e._insertLastShowTime = new Date().getTime();
e.destroyInterstitialAd();
e.createInsertAd();
}, function(e) {
console.log("interstitialAd 广告显示失败");
});
console.log("interstitialAd 游戏展示插屏广告");
}
};
t.prototype.createInsertAd = function() {
var e = this;
a.utils.showLog("插屏id为：" + a.utils.config.cocosConfig.insertId);
this.interstitialAd = AdSDK.createInterstitialAd("1", a.utils.config.cocosConfig.insertId, 2);
this.interstitialAd.onLoad(function() {
e.interstitialAdLoaded = !0;
console.log("interstitialAd 创建插屏成功，可以调用展示");
});
e.interstitialAd.onError(function(t) {
console.log("interstitialAd 创建插屏失败，错误码 = ", t.errorCode);
e.destroyInterstitialAd();
});
};
t.prototype.hideInterstitialAd = function() {
this.interstitialAd.hide();
console.log("interstitialAd 游戏隐藏插屏广告");
};
t.prototype.destroyInterstitialAd = function() {
this.interstitialAdLoaded = !1;
this.interstitialAd.destroy();
console.log("interstitialAd 游戏销毁插屏广告");
};
t.prototype.ShowVideo = function(e) {
var t = this;
t._videoCallback = e;
if (t.videoAdLoaded) t.videoAd.show().then(function() {
if (t._videoCallback) {
t._videoCallback(!0, "视频播放成功");
t._videoCallback = null;
}
}, function(e) {
if (t._videoCallback) {
t._videoCallback(!1, "暂无视频广告");
t._videoCallback = null;
}
}); else {
if (t._videoCallback) {
t._videoCallback(!1, "暂无视频广告");
t._videoCallback = null;
}
t.createVideoAd();
}
};
t.prototype.createVideoAd = function() {
var e = this;
console.log("视频id为：" + a.utils.config.cocosConfig.videoId);
e.videoAd = AdSDK.createRewardedVideoAd("1", a.utils.config.cocosConfig.videoId, 2);
e.videoAd.onLoad(function() {
e.videoAdLoaded = !0;
console.log("rewardedvideoAd 创建视频广告成功，可以调用展示");
});
e.videoAd.onError(function(t) {
console.log("rewardedvideoAd 创建视频广告失败，错误码 = ", t.errorCode);
e.destroyRewardedVideoAd();
if (e._videoCallback) {
e._videoCallback(!1, "暂无视频广告");
e._videoCallback = null;
}
});
e.videoAd.onClose(function() {
if (e._videoCallback) {
e._videoCallback(!1, "观看完视频才能获得奖励!");
e._videoCallback = null;
}
e.destroyRewardedVideoAd();
e.createVideoAd();
});
};
t.prototype.destroyRewardedVideoAd = function() {
this.videoAdLoaded = !1;
this.videoAd.destroy();
console.log("rewardedvideoAd 游戏销毁视频广告");
};
return t = n([ l ], t);
}(s.default));
i.default = c;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./Utils": "Utils"
} ],
AdAgentDouyin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f7a85nWSd5Kc429BwYsMfw+", "AdAgentDouyin");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._bannerAd = null;
t._videoAd = null;
t._sysData = null;
t._bannerAds = [];
t._isBannerShow = !1;
t.tt = window.tt;
t._bannerBottom = 0;
t._lastShowInterstitialTime = 0;
t.interstitialAd = null;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._isVideoShow = !1;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.Tool_Douyin.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype.Init = function() {
r.default.IsDouyin && (this._sysData = l.utils.Tool_Douyin._sysInfo);
};
t.prototype.ShowBanner = function(e, t) {
var i = this;
void 0 === t && (t = null);
if (r.default.IsDouyin) {
if (l.utils.isShowRecommondGamesBanner() && l.utils.Tool_Douyin.isShowMoreGamesModal()) {
l.utils.showRecommendGamesBanner();
l.utils.showLog("服务器配置展示自定义banner");
return;
}
if (l.utils.Tool_Douyin.isNewsArticleLite) {
l.utils.showLog("头条极速版不显示Banner广告");
return;
}
if (this._isConfigValid()) {
var o = t, n = 1;
if (o && o.width) {
n = o.width < 0 ? .1 : o.width;
n = o.width > 1 ? 1 : n;
}
if (o && o.bottom) {
this._bannerBottom = o.bottom / this._sysData.pixelRatio;
this._bannerBottom = this._bannerBottom < 0 ? 0 : this._bannerBottom;
this._bannerBottom = this._bannerBottom > this._sysData.screenHeight ? this._sysData.screenHeight : this._bannerBottom;
}
var s = .5 * (this._sysData.screenWidth - 60), a = this._sysData.screenHeight - (33.75 - this._bannerBottom), c = l.utils.config.douyinconfig.bannerId;
l.utils.showLog("显示Banner广告: bannerId=" + c + " #targetBannerAdWidth=", 60);
try {
var u = this.tt.createBannerAd({
adUnitId: c,
style: {
width: 60,
left: s,
top: a
}
});
if (u) {
var h = this;
u.onLoad(function() {
u.show().then(function() {
l.utils.showLog("广告显示成功");
for (var e = 0; e < h._bannerAds.length; e++) h._bannerAds[e] != u && null != h._bannerAds[e] && h._bannerAds[e].destroy();
h._bannerAds.length = 0;
h._bannerAds.push(u);
}).catch(function(e) {
l.utils.showLog("广告组件出现问题  " + (e.errCode, e.errMsg));
});
});
u.onError(function(e) {
e && l.utils.showLog("Banner 广告出错: errCode:  " + e.errCode + " errMsg:" + e.errMsg);
});
u.onResize(function(e) {
u.style.top = i._sysData.screenHeight - e.height - i._bannerBottom;
e.width > 0 ? u.style.left = .5 * (i._sysData.screenWidth - e.width) : u.style.left = (i._sysData.screenWidth - 60) / 2;
});
this._bannerAds.push(u);
}
} catch (e) {}
} else l.utils.showLog("抖音小游戏配置文件出错!");
}
};
t.prototype.HideBanner = function(e) {
if (r.default.IsDouyin) {
for (var t = 0; t < this._bannerAds.length; t++) null != this._bannerAds[t] && this._bannerAds[t].destroy();
this._bannerAds.length = 0;
}
};
t.prototype.checkCanShowInterstitial = function() {
return !!this.tt.createInterstitialAd;
};
t.prototype.ShowInterstitial = function(e) {
if (r.default.IsDouyin) if (this.checkCanShowInterstitial()) {
var t = new Date().getTime();
if ((t - this._lastShowInterstitialTime) / 1e3 < 30) {
l.utils.showLog("距离插屏广告或者激励视频广告上次播放时间间隔不足30秒");
return;
}
this._lastShowInterstitialTime = t;
l.utils.delayCall(this._createMiniGameInsertAd.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
} else l.utils.showLog("当前客户端版本不支持插屏！");
};
t.prototype._createMiniGameInsertAd = function() {
var e = this;
try {
if (!l.utils.config.douyinconfig.insertId) {
l.utils.showLog("插屏ID配置有误");
return;
}
if (this.interstitialAd) {
this.interstitialAd.destroy();
this.interstitialAd = null;
}
this.interstitialAd = this.tt.createInterstitialAd({
adUnitId: l.utils.config.douyinconfig.insertId
});
this.interstitialAd.load().then(function() {
e.interstitialAd.show();
}).catch(function(e) {
l.utils.showLog(e);
l.utils.showLog("err.errCode:" + e.errCode);
switch (e.errCode) {
case 2001:
l.utils.showLog("小程序启动一定时间内不允许展示插屏广告");
break;

case 2002:
l.utils.showLog("距离小程序插屏广告或者激励视频广告上次播放时间间隔不足，不允许展示插屏广告");
break;

case 2003:
l.utils.showLog("当前正在播放激励视频广告或者插屏广告，不允许再次展示插屏广告");
break;

case 2004:
l.utils.showLog("该项错误不是开发者的异常情况，或因小程序页面切换导致广告渲染失败");
break;

case 2005:
l.utils.showLog("插屏广告实例不允许跨页面调用");
break;

default:
l.utils.showLog("插屏广告展示失败");
}
});
} catch (e) {
l.utils.showLog(e);
}
};
t.prototype.ShowVideo = function(e) {
var t = this;
if (r.default.IsDouyin) {
this._videoCallback = e;
this._isVideoShow = !0;
if (l.utils.Tool_Douyin.ServerConfig) {
var i = l.utils.config.douyinconfig.videoId.trim();
l.utils.showLog("video广告ID:" + i);
if (!this._videoAd) {
this._videoAd = tt.createRewardedVideoAd({
adUnitId: i
});
if (this._videoAd) {
l.utils.showLog("初始化注册视频回调!");
this._videoAd.onError(function(e) {
l.utils.showLog("激励视频出错: " + (e.code, e.msg));
t._isVideoLoaded = !1;
if (t._videoCallback) {
t._videoCallback(!1, "暂无视频广告!");
t._videoCallback = null;
}
});
this._videoAd.onClose(function(e) {
t._isVideoShow = !1;
t._isVideoLoaded = !1;
if (e.isEnded) {
l.utils.showLog("激励视频广告完成，发放奖励");
if (t._videoCallback) {
t._videoCallback(!0, "");
t._videoCallback = null;
}
} else {
l.utils.showLog("激励视频广告取消关闭，不发放奖励");
if (t._videoCallback) {
t._videoCallback(!1, "观看完视频才能获得奖励!");
t._videoCallback = null;
}
}
});
} else {
l.utils.showLog("videoAd 对象创建失败，播放失败!");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
}
}
this._videoAd.load().then(function() {
l.utils.showLog("激励视频加载成功");
t._videoAd.show().then(function() {
l.utils.showLog("激励视频播放成功!");
t._lastShowInterstitialTime = new Date().getTime();
}).catch(function() {
l.utils.showLog("激励视频播放失败!");
if (t._videoCallback) {
t._videoCallback(!1, "视频播放失败,请稍后再试!");
t._videoCallback = null;
}
});
}).catch(function() {
l.utils.showLog("再次播放视频资源加载失败!");
if (t._videoCallback) {
t._videoCallback(!1, "视频播放失败,请稍后再试!");
t._videoCallback = null;
}
});
}
} else {
l.utils.showLog("获取配置失败，视频无法播放!");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
}
};
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) if (l.utils.Tool_Douyin.ServerConfig) {
var t = l.utils.config.douyinconfig.videoId.trim();
l.utils.showLog("video广告ID:" + t);
this._videoAd = tt.createRewardedVideoAd({
adUnitId: t
});
if (this._videoAd) {
l.utils.showLog("初始化注册视频回调!");
this._videoAd.onLoad(function() {
l.utils.showLog("激励视频加载成功", e._isVideoShow);
e._isVideoLoaded = !0;
if (e._isVideoShow) {
e._videoAd.show().then(function() {
l.utils.showLog("激励视频播放成功!");
}).catch(function() {
l.utils.showLog("激励视频播放失败!");
if (e._videoCallback) {
e._videoCallback(!1, "视频播放失败,请稍后再试!");
e._videoCallback = null;
}
});
e._isVideoShow = !1;
}
});
this._videoAd.onError(function(t) {
l.utils.showLog("激励视频出错: " + (t.code, t.msg), t);
e._isVideoLoaded = !1;
if (e._videoCallback) {
e._videoCallback(!1, "暂无视频广告!");
e._videoCallback = null;
}
});
this._videoAd.onClose(function(t) {
e._isVideoShow = !1;
e._isVideoLoaded = !1;
if (t.isEnded) {
l.utils.showLog("激励视频广告完成，发放奖励");
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else {
l.utils.showLog("激励视频广告取消关闭，不发放奖励");
if (e._videoCallback) {
e._videoCallback(!1, "观看完视频才能获得奖励!");
e._videoCallback = null;
}
}
e._videoAd.load().then(function() {
l.utils.showLog("关闭视频后重新加载视频资源成功！");
e._isVideoShow = !1;
e._isVideoLoaded = !0;
});
});
} else {
l.utils.showLog("暂无视频广告!");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
}
} else {
l.utils.showLog("暂无视频广告!");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
}
};
t.prototype._isConfigValid = function() {
return !!r.default.IsDouyin && (l.utils.config.douyinconfig && l.utils.config.douyinconfig.appID && l.utils.config.douyinconfig.bannerId && l.utils.config.douyinconfig.videoId);
};
t.prototype.ShowCloseBtnBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Home);
l.utils.showLog("ShowCloseBtnBanner >>>>>>>>>.");
var i = 0, o = t.closeBtn;
cc.winSize.height;
o.opacity = 0;
if (this.ServerConfig) {
this.ServerConfig.show_close_btn_delay && (i = this.ServerConfig.show_close_btn_delay);
setTimeout(function() {
o.runAction(cc.fadeIn(.3));
}, 1e3 * i);
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentFaceBook: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a545elsu55MprEh4ZOD19/a", "AdAgentFaceBook");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = e("./FaceBookSdk/FBAdManager"), u = cc._decorator, h = u.ccclass, d = (u.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._sysData = null;
t._curBannerAd = null;
t._videoAd = null;
t._insertAd = null;
t._oldAd = null;
t._appBox = null;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._isVideoShow = !1;
t.qq = window.qq;
t._bannerShow = !1;
t._bannerSizePercent = .5;
t._bannerBottom = 0;
t._oldBannerLocation = a.BannerLocation.None;
t._curBannerHeight = 240;
t._moveBtn = null;
t._cur_level = null;
t._showBannerTimerId = 0;
t._isShow = !1;
return t;
}
t.prototype.Init = function() {
var e = this;
r.default.IsFaceBook && l.utils.registerServerInitEvent(function() {
e._initAd();
}, this);
};
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.Tool_Facebook.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype._initAd = function() {
l.utils.showLog("facebook init ad>>>>>>>>");
c.default.addInterstitial(l.utils.config.faceBookConfig.insertId, 3);
c.default.addRewardedVideo(l.utils.config.faceBookConfig.videoId, 3);
c.default.addBanner(l.utils.config.faceBookConfig.bannerId);
setTimeout(function() {
c.default.loadAll();
}, 3e3);
};
t.prototype._createBanner = function(e, t) {
void 0 === t && (t = null);
r.default.IsFaceBook && c.default.showBannerAsync().then(function() {
l.utils.showLog("显示Banner广告: 成功");
}).catch(function(e) {
l.utils.showLog("显示Banner广告: 失败，原因: " + e.message);
});
};
t.prototype._showBannerTimer = function(e, t) {
var i = e, o = t;
l.utils.showLog("显示Banner广告xxx！location:" + i + "; 间隔时间:" + l.utils.Tool_Facebook.ServerConfig.refresh_ad_time + ":优先级：" + this.ServerConfig.banner_first_ad);
this._createBanner(i, o);
};
t.prototype.ShowBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
if (r.default.IsFaceBook) if (l.utils.ServerConfig) {
var i = e, o = t;
this._moveBtn = t ? t.moveBtn : null;
this._cur_level = t ? t.cur_level : null;
this._showBannerTimer(i, o);
} else l.utils.showLog("服务器配置数据未初始化!");
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
if (r.default.IsFaceBook) {
l.utils.showLog("隐藏广告条");
this._bannerShow = !1;
clearInterval(this._showBannerTimerId);
c.default.hideBannerAsync().then(function() {
l.utils.showLog("隐藏Banner广告: 成功");
}).catch(function(e) {
l.utils.showLog("隐藏Banner广告: 失败，原因: " + e.message);
});
}
};
t.prototype.ShowVideo = function(e) {
var t = this;
if (r.default.IsFaceBook) {
this._videoCallback = e;
if (c.default.isRewardedVideoReady()) c.default.showRewardedVideo().then(function() {
l.utils.showLog("播放激励视频广告: 成功");
if (t._videoCallback) {
t._videoCallback(!0, "");
t._videoCallback = null;
}
}).catch(function(e) {
l.utils.showLog("视频播放失败：" + e.message);
if (t._videoCallback) {
t._videoCallback(!1, "Ad playback failed!");
t._videoCallback = null;
}
}); else {
l.utils.showLog("激励视频广告未加载！");
if (this._videoCallback) {
this._videoCallback(!1, "Video ad not loaded successfully！");
this._videoCallback = null;
}
}
}
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = null);
r.default.IsFaceBook && (this.ServerConfig ? l.utils.delayCall(this._createInsterstitial.bind(this), this.ServerConfig.intersititia_delay_show_time || 0) : this._createInsterstitial.bind(this));
};
t.prototype._createInsterstitial = function() {
c.default.isInterstitialAdReady() ? c.default.showInterstitialAd().then(function() {
l.utils.showLog("播放插屏广告: 成功");
}).catch(function(e) {
l.utils.showLog("播放插屏广告: 失败，原因: " + e.message);
}) : l.utils.showLog("插屏广告没有加载成功！");
};
return t = n([ h ], t);
}(s.default));
i.default = d;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./FaceBookSdk/FBAdManager": "FBAdManager",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentGoogleWeb: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "01821QDZ8NO/JWvZyloYKY9", "AdAgentGoogleWeb");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}();
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.googleAd = null;
t._videoIsPlay = !1;
return t;
}
t.prototype.Init = function() {
console.log("[init googleWebAd]");
this.googleAd = window.googleApi;
};
t.prototype.ShowBanner = function(e) {
void 0 === e && (e = null);
console.log("[YouzhiAd ShowBanner] :" + e);
this.googleAd && this.googleAd.showBanner();
};
t.prototype.ShowInterstitial = function() {
console.log("[YouzhiAd ShowInterstitial]");
this.googleAd && this.googleAd.ShowInterstitial();
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = null);
console.log("[YouzhiAd HideBanner]");
this.googleAd && this.googleAd.hideBanner();
};
t.prototype.ShowVideo = function(e) {
var t = this;
console.log("[YouzhiAd ShowVideo]");
if (this._videoIsPlay) console.warn("[YouzhiAd Video Ad is Loading]"); else {
this._videoIsPlay = !0;
this.googleAd && this.googleAd.showVideo(function() {
t._videoIsPlay = !1;
e(!0, "视频播放成功!");
}, function(i) {
t._videoIsPlay = !1;
e(!1, i || "视频播放失败!");
});
}
};
return t;
}(e("./AdAgent").default);
i.default = n;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent"
} ],
AdAgentHago: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "737dcSdaTZIJYemPKqAzajR", "AdAgentHago");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._sysData = null;
t._bannerAd = null;
t._videoAd = null;
t._videoCallback = null;
t._isVideoShow = !1;
t._isVideoLoaded = !1;
t.hg = window.hg;
t.canShowVideo = !1;
return t;
}
t.prototype.Init = function() {
if (r.default.IsHago) {
this.initVideoAd();
l.utils.showLog("hago 平台广告初始化成功！");
}
};
t.prototype.ShowBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
l.utils.showLog("Hago平台没有banner广告！");
};
t.prototype.showStatementAds = function() {
var e, t = {
type: 0,
node: null
};
l.utils.showLog("结算广告 >> 显示插屏广告+6个互推");
this.ShowInterstitial();
e = l.utils.showCrossWidget6();
1;
t.type = 1;
t.node = e;
return t;
};
t.prototype.initVideoAd = function() {
var e = this;
this._videoAd = this.hg.createRewardedVideoAd({
adUnitId: parseInt(l.utils.config.hagoConfig.videoId)
});
this._videoAd.onClose = function(t) {
if (t.isEnded) {
e._videoCallback(!0);
e._videoCallback = null;
} else if (e._videoCallback) {
e._videoCallback(!1, i18n.t("ad.video_not_played_complete"));
e._videoCallback = null;
}
};
this._videoAd.onError = function() {
if (e._videoCallback) {
e._videoCallback(!1, i18n.t("ad.video_load_fail"));
e._videoCallback = null;
}
};
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
console.warn("Hago没有插屏");
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsHago) {
if (this._videoCallback) return;
this._videoCallback = e;
this._videoAd || this.initVideoAd();
this._videoAd.show().then(function() {
l.utils.showLog("video show success");
});
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentHuaWei: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "290c4sJ+4FFVqbdVokQ98+D", "AdAgentHuaWei");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = e("./YZ_NativeAdObject"), u = e("./NativeTryGamesWidget"), h = e("./CompatibleTool"), d = cc._decorator, f = d.ccclass, _ = (d.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.huawei = window.qg;
t._bannerAd = null;
t._insertAd = null;
t._videoAd = null;
t._nativeBannerAd = [];
t._nativeInsertAd = [];
t._nativeSingleAd = [];
t._nativeAd = null;
t._isAdInit = !1;
t._isBannerShow = !1;
t._isInsertShow = !1;
t._curPosIdIndexNativeBanner = 0;
t._curPosIdIndexNativeInser = 0;
t._curPosIdIndexSingleNative = 0;
t._nativeData = null;
t._nativeInsertData = null;
t._nativeBannerNode = null;
t._nativeInsertNode = null;
t._videoCallback = null;
t._videoLoaded = null;
t._miniBannerHeight = 0;
t._showBannerCallBack = null;
t._nativeAdObject = null;
t._insertShowCount = 0;
t._insertLastShowTime = 0;
t._curNativeItem = null;
t._isNativeBannerShow = !1;
t.lastLastShowVideoTime = 0;
t._bannerHideCount = 0;
t.canShowNativeBanner = !0;
t._nativeBannerInfo = null;
t.bannerType = 1;
t.banner_style_mod = [ 1, 2 ];
t.intersititialType = 1;
t.intersititial_style_mod = [ 1, 2, 3 ];
t.bannerTimes = 0;
t.intersititialTimes = 0;
t._nativeIsClose = !1;
t._showBannerTimerId = 0;
t._delayShowBannerId = 0;
t._curLocation = a.BannerLocation.None;
t._startBannerTimerTask = 0;
t.tryGameAdArr = [];
t._nativeTryGameNode = null;
t._isDataInit = !1;
t._nativeSplashNode = null;
t.insertTimeID = 0;
t._nativeInsertAdShowCount = 0;
t.miniInserAdIsCreate = !1;
t._isInsertLoad = !1;
t._canInsertShow = !1;
t._curNativeBannerInfo = {};
t._rewardInsertNode = null;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.Tool_Huawei && l.utils.Tool_Huawei.ServerConfig ? l.utils.Tool_Huawei.ServerConfig : {};
},
enumerable: !1,
configurable: !0
});
t.prototype.getNativeBannerInfo = function() {
return this._nativeBannerInfo && this._nativeBannerInfo.location == this._curLocation ? this._nativeBannerInfo : l.utils.config.huaweiConfig.getNativeBannerInfo(this._curLocation);
};
t.prototype.Init = function() {
var e = this;
if (r.default.IsHuaWei) {
cc.director.on("IsDataInit", function() {
e._isDataInit = !0;
cc.director.off("IsDataInit");
}, this);
l.utils.registerServerInitEvent(function() {
l.utils.showLog("HuaWei 广告代理组件初始化!");
e._initVideoAd();
}, this);
}
};
t.prototype._initLocalDate = function() {
this.ServerConfig.banner_style_mod || (this.ServerConfig.banner_style_mod = [ 1, 2 ]);
this.ServerConfig.intersititial_style_mod || (this.ServerConfig.intersititial_style_mod = [ 1, 2, 3 ]);
this.ServerConfig.icon_jump_native || (this.ServerConfig.icon_jump_native = 1);
this.ServerConfig.banner_style_level || (this.ServerConfig.banner_style_level = 2);
this.ServerConfig.intersititial_style_level || (this.ServerConfig.intersititial_style_level = 2);
this.ServerConfig.intersititia_delay_show_time = 0;
console.log("插屏延时展示，延时时间：" + this.ServerConfig.intersititia_delay_show_time);
console.log("banner && inter", this.ServerConfig.banner_style_mod, this.ServerConfig.intersititial_style_mod);
};
t.prototype.ShowBanner = function(e, t, i) {
var o = this;
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === i && (i = !1);
if (r.default.IsHuaWei) {
if (!this.ServerConfig) {
l.utils.showLog("未请求到配置文件！");
return;
}
var n = this._curLocation;
this._curLocation = e;
n != e && this.HideBanner(e);
var s = (new Date().getTime() - this._startBannerTimerTask) / 1e3, a = this.ServerConfig.refresh_ad_time;
t && t.isRefresh ? i = !0 : a && a > 0 && s > a && (i = !0);
if (-1 == this.getNativeBannerInfo().is_show_banner) {
l.utils.showLog("当前位置配置为不展示banner!");
this.HideBanner(e);
return;
}
if (!i && this.ServerConfig.nbclr && "true" == this.ServerConfig.nbclr && this._curNativeBannerInfo.nativeBannerAd) {
l.utils.showLog("服务器配置定时器刷新数据 ");
this._showNativeBanner(this._curNativeBannerInfo.nativeBannerAd, this._curNativeBannerInfo.data);
l.utils.showLog("开启定时刷新 >>>>>>>>>" + (a - s));
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
this._showBannerTimerId = setTimeout(function() {
l.utils.showLog("定时" + a + "秒调用showbanner");
o.ShowBanner(o._curLocation, {}, !0);
}, 1e3 * (a - s));
return;
}
this.canShowNativeBanner = !0;
this._nativeIsClose = !1;
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
l.utils.showLog("清理定时器");
if (this.ServerConfig) {
l.utils.showLog("banner 优先展示 >>>>" + this.ServerConfig.banner_first_ad);
if (a && a > 0) {
l.utils.showLog("开启定时刷新 >>>>>>>>>" + a);
this._showBannerTimerId = setTimeout(function() {
l.utils.showLog("定时" + a + "秒调用showbanner");
o.ShowBanner(o._curLocation, {}, !0);
}, 1e3 * a);
}
if (this.ServerConfig.banner_style_level) {
if (this.ServerConfig.banner_style_mod) if (1 == this.ServerConfig.banner_style_mod[this.bannerType - 1]) {
l.utils.showLog("banner_style_mod 为 1，展示原生banner");
this._createNativeBannerAd(this._showNativeBanner);
} else if (2 == this.ServerConfig.banner_style_mod[this.bannerType - 1]) {
l.utils.showLog("banner_style_mod 为 2，展示默认banner");
this._createMiniGameBannerAd(e);
} else l.utils.showLog("banner_style_mod 配置出错！"); else {
l.utils.showLog("服务器没有配置 banner_style_mod 字段！！");
this.ServerConfig.banner_style_level = 0;
this.ShowBanner(e);
}
this.bannerTimes++;
if (this.bannerTimes % this.ServerConfig.banner_style_level == 0) {
this.bannerType++;
this.bannerType = this.bannerType > 2 ? 1 : this.bannerType;
}
} else if (this.ServerConfig.banner_first_ad) if (this.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("优先展示原生Banner广告!");
if ("native" == this.ServerConfig.intersititial_first_ad) {
var c = 0;
this.ServerConfig.native_banner_delay_time && (c = this.ServerConfig.native_banner_delay_time);
l.utils.showLog("因为插屏也是优先展示原生，所以banner延迟显示" + c + "秒");
this._delayShowBannerId = setTimeout(function() {
o._createNativeBannerAd(o._showNativeBanner);
}, 1e3 * c);
} else this._createNativeBannerAd(this._showNativeBanner);
} else {
l.utils.showLog("优先展示小游戏Banner广告!");
this._createMiniGameBannerAd(e);
} else this._createNativeBannerAd(this._showNativeBanner);
} else l.utils.showLog("服务器配置数据未初始化!");
}
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = null);
if (r.default.IsHuaWei) {
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
if (this._bannerAd) {
l.utils.showLog("隐藏小游戏Banner");
this._bannerAd.hide();
}
if (this._nativeBannerNode) {
l.utils.showLog("隐藏原生Banner");
this._nativeBannerNode.active = !1;
}
}
};
t.prototype.showNativeTryGameWidget = function() {
var e = this;
if (r.default.IsHuaWei) {
l.utils.showLog("显示原生icon nativeNeedChange=", l.utils.nativeNeedChange, "  utils.tryGameDate", l.utils.tryGameDate, "utils.config.huaweiConfig.nativeTryGameIds", l.utils.config.huaweiConfig.nativeTryGameIds);
if ((l.utils.nativeNeedChange || !l.utils.tryGameDate) && l.utils.config.huaweiConfig.nativeTryGameIds) {
var t = l.utils.config.huaweiConfig.nativeTryGameIds.length;
l.utils.showLog("len:" + t);
for (var i = function(t) {
if (o.tryGameAdArr[t]) o.tryGameAdArr[t].load(); else {
var i = l.utils.config.huaweiConfig.nativeTryGameIds[t];
l.utils.showLog("创建原生icon。 posId:" + i);
var n = qg.createNativeAd({
adUnitId: i,
success: function(e) {
console.log("loadNativeAd loadNativeAd : success");
},
fail: function(e, t) {
console.log("loadNativeAd loadNativeAd fail: " + e + "," + t);
},
complete: function() {
console.log("loadNativeAd loadNativeAd : complete");
}
});
if (n) {
n.onLoad(function(t) {
l.utils.nativeNeedChange = !1;
console.log("原生icon加载成功");
if (t && t.adList && t.adList.length > 0) {
var i = (t = JSON.parse(JSON.stringify(t))).adList[0].adId;
l.utils.showLog("adId:" + i);
var o = !0;
l.utils.tryGameDate.forEach(function(e) {
i == e.date[0].adId && (o = !1);
});
if (o) {
l.utils.tryGameDate.push({
tryGameAd: n,
date: t.adList
});
l.utils._nativeTryGameNode ? l.utils._nativeTryGameNode.getComponent(u.default).init() : e.createNativeTryGameWidget();
}
l.utils.showLog("原生icon广告资源拉取成功，是否可以添加广告" + o);
l.utils.showLog(JSON.stringify(t));
}
});
n.onError(function(t) {
l.utils.showLog("原生icon广告资源拉取失败！" + JSON.stringify(t));
l.utils.nativeNeedChange = !0;
if (e.ServerConfig.intersititial_style_level && 3 == e.ServerConfig.intersititial_style_mod[e.intersititialType - 1]) {
l.utils.showLog("开始展示原生插屏！");
l.utils.delayCall(e.nativeInserAdDelayCall.bind(e), e.ServerConfig.intersititia_delay_show_time || 0);
}
n.destroy();
});
n.load();
o.tryGameAdArr[t] = n;
}
}
}, o = this, n = 0; n < t; n++) i(n);
}
this.createNativeTryGameWidget();
}
};
t.prototype.createNativeTryGameWidget = function(e) {
void 0 === e && (e = null);
this._nativeTryGameNode && cc.isValid(this._nativeTryGameNode) && this._nativeTryGameNode.destroy();
var t = cc.instantiate(l.utils.config.otherconfig.nativeTryGameWidget);
if (t) {
this._nativeTryGameNode = t;
this._nativeTryGameNode.zIndex = 9999;
}
var i = (t = this._nativeTryGameNode).getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
i.isAlignTop = !0;
i.isAlignBottom = !1;
i.top = e.top;
} else if (null != e.bottom) {
i.isAlignTop = !1;
i.isAlignBottom = !0;
i.bottom = e.bottom;
}
if (null != e.left) {
i.isAlignLeft = !0;
i.isAlignRight = !1;
i.left = e.left;
} else if (null != e.right) {
i.isAlignLeft = !1;
i.isAlignRight = !0;
i.right = e.right;
}
null != e.parent && (t.parent = e.parent);
i.updateAlignment();
} else {
t.parent = cc.director.getScene();
l.utils.otherConfig && l.utils.otherConfig.group && (t.group = l.utils.otherConfig.group);
i.enabled = !1;
t.setPosition(cc.v2(cc.winSize.width / 2, cc.winSize.height / 2));
}
t.active = !0;
this._nativeTryGameNode && this._nativeTryGameNode.getComponent(u.default).init();
};
t.prototype.hideNativeTryGameWidget = function() {
this._nativeTryGameNode && cc.isValid(this._nativeTryGameNode) && this._nativeTryGameNode.destroy();
};
t.prototype._canShowNativeSplashView = function(e) {
var t = this;
if (!this._isDataInit) {
l.utils.showLog("广告数据未初始化完成，设置回调>>>>>");
cc.director.off("IsDataInit");
var i = e;
cc.director.on("IsDataInit", function() {
l.utils.showLog("回调成功,展示开屏广告>>>>>");
t._isDataInit = !0;
t.showNativeSplashView(i);
cc.director.off("IsDataInit");
}, this);
return !1;
}
return !0;
};
t.prototype.showNativeSplashView = function(e) {
var t = this;
void 0 === e && (e = null);
if (this._canShowNativeSplashView(e) && r.default.IsHuaWei) {
l.utils.showLog("显示开屏广告,广告ID ", l.utils.config.huaweiConfig.nativeSplashId);
if (l.utils.config.huaweiConfig.nativeSplashId) {
var i = l.utils.config.huaweiConfig.nativeSplashId;
l.utils.showLog("创建原生开屏广告。 posId:" + i);
var o = qg.createNativeAd({
adUnitId: i,
success: function(e) {
console.log("loadNativeAd loadNativeAd : success");
},
fail: function(e, t) {
console.log("loadNativeAd loadNativeAd fail: " + e + "," + t);
},
complete: function() {
console.log("loadNativeAd loadNativeAd : complete");
}
});
if (o) {
o.onLoad(function(i) {
if (i && i.adList && i.adList.length > 0) {
var n = (i = JSON.parse(JSON.stringify(i))).adList[0].adId;
l.utils.showLog("adId:" + n);
l.utils.showLog("原生开屏广告资源拉取成功:" + JSON.stringify(i));
var s = i.adList[0];
t._creatNativeSplashView(o, s);
e && cc.director.on("SplashViewOff", function() {
e();
cc.director.off("SplashViewOff");
}, t);
}
});
o.onError(function(t) {
e && e();
l.utils.showLog("原生开屏广告资源拉取失败！" + JSON.stringify(t));
o.destroy();
});
o.load();
} else {
e && e();
l.utils.showLog("原生开屏广告创建失败!");
}
} else {
e && e();
l.utils.showLog("原生开屏广告ID配置有误！！");
}
}
};
t.prototype._creatNativeSplashView = function(e, t) {
if (r.default.IsHuaWei && t) {
if (!cc.isValid(this._nativeSplashNode) && l.utils.config.otherconfig.nativeSplashView) {
l.utils.showLog("创建原生插屏广告位");
this._nativeSplashNode = cc.instantiate(l.utils.config.otherconfig.nativeSplashView);
this._nativeSplashNode.position = h.default.position(cc.winSize.width / 2, cc.winSize.height / 2);
cc.director.getScene().addChild(this._nativeSplashNode, 999999);
}
if (this._nativeSplashNode) {
var i = this._nativeSplashNode.getComponent("YZ_NativeSplashView");
if (i) i.init(e, t); else {
cc.director.emit("SplashViewOff");
l.utils.showLog("NativeSplashView组件不存在!");
}
} else {
cc.director.emit("SplashViewOff");
l.utils.showLog("原生开屏广告没有创建成功！");
}
}
};
t.prototype.ShowInterstitial = function(e) {
var t = this;
void 0 === e && (e = null);
if (r.default.IsHuaWei) if (this.ServerConfig) {
if (!this.checkInsertAdShow()) return;
if (e && e == a.BannerLocation.Pause) if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("暂停界面不延时展示！");
l.utils.showLog("优先展示原生插屏广告!");
this.nativeInserAdDelayCall();
} else {
l.utils.showLog("优先展示小游戏插屏广告!");
this._createMiniGameInsertAd();
} else if (this.ServerConfig.intersititial_style_level) {
if (this.ServerConfig.intersititial_style_mod) if (1 == this.ServerConfig.intersititial_style_mod[this.intersititialType - 1]) {
l.utils.showLog("intersititial_style_mod 为 1，展示原生插屏");
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
} else if (2 == this.ServerConfig.intersititial_style_mod[this.intersititialType - 1]) {
l.utils.showLog("intersititial_style_mod 为 2，展示默认插屏");
this._createMiniGameInsertAd();
} else if (3 == this.ServerConfig.intersititial_style_mod[this.intersititialType - 1]) {
l.utils.showLog("intersititial_style_mod 为 2，展示原生icon");
this.showNativeTryGameWidget();
} else l.utils.showLog("banner_style_mod 配置出错！"); else {
l.utils.showLog("服务器没有配置 banner_style_mod 字段！！");
this.ServerConfig.intersititial_style_level = 0;
this.ShowInterstitial(e);
}
setTimeout(function() {
t.intersititialTimes++;
if (t.intersititialTimes % t.ServerConfig.intersititial_style_level == 0) {
t.intersititialType++;
t.intersititialType = t.intersititialType > 3 ? 1 : t.intersititialType;
}
}, 3e3);
} else if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("优先展示原生插屏广告!");
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
} else {
l.utils.showLog("优先展示小游戏插屏广告!");
this._createMiniGameInsertAd();
}
} else l.utils.showLog("服务器配置数据未初始化!");
};
t.prototype.nativeInserAdDelayCall = function() {
this._createNativeInsertAd(this._showNativeInsert);
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsHuaWei) {
this._videoCallback = e;
if ((new Date().getTime() - this.lastLastShowVideoTime) / 1e3 < 4) {
l.utils.showLog("视频广告请求间隔小于4秒,直接返回false");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
if (this.ServerConfig) {
this._videoAd || this._initVideoAd();
if (this._videoAd && this._videoLoaded) {
this._videoAd.show();
return;
}
}
l.utils.showLog("暂无视频广告!");
this._videoAd.load();
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
}
};
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) if (l.utils.config.huaweiConfig.videoId) {
l.utils.showLog("视频广告初始化：ID=" + l.utils.config.huaweiConfig.videoId);
this._videoAd = this.huawei.createRewardedVideoAd({
adUnitId: l.utils.config.huaweiConfig.videoId,
success: function(e) {
console.log("ad demo : loadAndShowVideoAd createRewardedVideoAd: success");
},
fail: function(e, t) {
console.log("ad demo : loadAndShowVideoAd createRewardedVideoAd fail: " + e + "," + t);
},
complete: function() {
console.log("ad demo : loadAndShowVideoAd createRewardedVideoAd complete");
}
});
var t = this;
if (this._videoAd) {
l.utils.showLog("初始化注册视频回调!");
this._videoAd.onLoad(function() {
l.utils.showLog("激励视频加载成功");
t._videoLoaded = !0;
});
this._videoAd.onError(function(e) {
l.utils.showLog("激励视频出错: " + e.code + e.msg);
t._videoLoaded = !1;
if (t._videoCallback) {
t._videoCallback(!1, "暂无视频广告!");
t._videoCallback = null;
}
});
this._videoAd.onClose(function(i) {
setTimeout(function() {
t._videoAd.load();
l.utils.showLog("延迟3秒重新加载视频广告");
}, 3e3);
if (i.isEnded) {
e.lastLastShowVideoTime = new Date().getTime();
l.utils.showLog("激励视频广告完成，发放奖励");
if (t._videoCallback) {
t._videoCallback(!0, "");
t._videoCallback = null;
}
} else {
l.utils.showLog("激励视频广告取消关闭，不发放奖励");
if (t._videoCallback) {
t._videoCallback(!1, "观看完视频才能获得奖励!");
t._videoCallback = null;
}
}
});
this._videoAd.load();
}
} else l.utils.showLog("视频广告Id配置错误!");
};
t.prototype.checkInsertAdShow = function() {
var e = this.ServerConfig.intersititial_max_show_count, t = this.ServerConfig.intersititial_interval_time, i = (new Date().getTime() - this._insertLastShowTime) / 1e3;
l.utils.showLog("Huawei服务器插屏最大显示次数为：" + e + ",间隔显示时间为：" + t + "秒！");
if (t > 0 && i < t) {
l.utils.showLog("Huawei插屏广告显示的间隔少于" + t + "秒。插屏不显示");
return !1;
}
return !0;
};
t.prototype._initInsertAd = function() {
var e = this;
if (!this._insertAd) if (l.utils.config.huaweiConfig && l.utils.config.huaweiConfig.insertId) {
this._insertAd = qg.createInterstitialAd({
adUnitId: l.utils.config.huaweiConfig.insertId
});
l.utils.showLog("小游戏插屏ID：", l.utils.config.huaweiConfig.insertId);
if (this._insertAd) {
l.utils.showLog("注册小游戏插屏广告回调！");
this._insertAd.onError(function(t) {
l.utils.showLog("华为 小游戏插屏广告出错:" + JSON.stringify(t));
if (e._canInsertShow) {
if (e.ServerConfig.intersititial_style_level) {
if (2 == e.ServerConfig.intersititial_style_mod[e.intersititialType - 1]) {
l.utils.showLog("开始展示原生插屏！");
l.utils.delayCall(e.nativeInserAdDelayCall.bind(e), e.ServerConfig.intersititia_delay_show_time || 0);
} else if (1 == e.ServerConfig.intersititial_style_mod[e.intersititialType - 1]) {
l.utils.showLog("开始展示原生icon！");
e.showNativeTryGameWidget();
}
} else if ("default" == e.ServerConfig.intersititial_first_ad) {
e._isInsertShow = !1;
l.utils.showLog("开始显示原生插屏广告!");
e._curPosIdIndexNativeInser = 0;
l.utils.delayCall(e.nativeInserAdDelayCall.bind(e), e.ServerConfig.intersititia_delay_show_time || 0);
} else {
l.utils.showLog("开始展示原生icon！");
e.showNativeTryGameWidget();
}
e._canInsertShow = !1;
}
e._insertAd.destroy();
e._insertAd = null;
}.bind(this));
this._insertAd.onLoad(function() {
l.utils.showLog("Huawei 小程序插屏广告加载成功! #_canInsertShow=" + e._canInsertShow);
e._isInsertLoad = !0;
if (e._canInsertShow) {
e._insertLastShowTime = new Date().getTime();
var t = e.ServerConfig.intersititial_open_close_banner;
if (t && t > 0) {
l.utils.showLog("Huawei 配置当前插屏显示成功后" + (1 == t ? "销毁" : "隐藏") + "banner!");
e.HideBanner();
}
e._insertAd.show();
}
}.bind(this));
this._insertAd.onClose(function() {
l.utils.showLog("huawei 小程序插屏广告关闭");
e._isInsertLoad = !1;
e._canInsertShow = !1;
e.ShowBanner();
}.bind(this));
}
if (!this._insertAd) {
l.utils.showLog("Huawei小游戏插屏广告创建失败！");
if (this._canInsertShow) {
if (this.ServerConfig.intersititial_style_level) {
if (2 == this.ServerConfig.intersititial_style_mod[this.intersititialType - 1]) {
l.utils.showLog("开始展示原生插屏！");
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
} else if (1 == this.ServerConfig.intersititial_style_mod[this.intersititialType - 1]) {
l.utils.showLog("开始展示原生icon！");
this.showNativeTryGameWidget();
}
} else if ("default" == this.ServerConfig.intersititial_first_ad) {
this._isInsertShow = !1;
l.utils.showLog("开始显示原生插屏广告!");
this._curPosIdIndexNativeInser = 0;
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
} else {
l.utils.showLog("开始展示原生icon！");
this.showNativeTryGameWidget();
}
this._canInsertShow = !1;
}
}
} else l.utils.showLog("Huawei 小游戏插屏广告配置信息错误!");
};
t.prototype._createMiniGameInsertAd = function() {
if (r.default.IsHuaWei) {
l.utils.showLog("[展示小游戏插屏广告]");
if (this.ServerConfig) {
this._canInsertShow = !0;
this._insertAd || this._initInsertAd();
if (this._insertAd) {
this._insertAd.load();
return;
}
}
}
};
t.prototype._createMiniGameBannerAd = function(e) {
var t = this;
void 0 === e && (e = null);
this._isBannerShow = !0;
if (l.utils.config.huaweiConfig.bannerId) {
if (!this._bannerAd) {
var i = l.utils.Tool_Huawei.SysInfo.safeArea.height - 57;
l.utils.showLog("banner  =====#top=" + l.utils.Tool_Huawei.SysInfo.safeArea.height + " #top=" + i);
this._bannerAd = this.huawei.createBannerAd({
adUnitId: l.utils.config.huaweiConfig.bannerId,
style: {
top: i,
left: 0,
height: 57,
width: 360
}
});
l.utils.showLog("注册小游戏banner回调!" + this._bannerAd + " id=" + l.utils.config.huaweiConfig.bannerId);
if (this._bannerAd) {
this._bannerAd.onError(function(e) {
l.utils.showLog("huawei小游戏Banner，显示异常：" + JSON.stringify(e));
if (t.ServerConfig.banner_style_level && 2 == t.ServerConfig.banner_style_mod[t.bannerType - 1]) {
l.utils.showLog("开始展示默认banner");
t._createNativeBannerAd(t._showNativeBanner);
}
});
this._bannerAd.onLoad(function() {
l.utils.showLog("huawei小游戏Banner，加载成功");
t._nativeBannerNode && (t._nativeBannerNode.active = !1);
});
}
}
if (this._bannerAd) this._bannerAd.show(); else {
l.utils.showLog("huawei 小游戏Banner广告创建失败!");
if (this.ServerConfig.banner_style_level && 2 == this.ServerConfig.banner_style_mod[this.bannerType - 1]) {
l.utils.showLog("开始展示默认banner");
this._createNativeBannerAd(this._showNativeBanner);
}
}
} else l.utils.showLog("BannerID 未正确配置！");
};
t.prototype._createNativeBannerAd = function(e) {
var t = this;
if (r.default.IsHuaWei) {
var i = e;
l.utils.showLog("curPosIdIndexNativeBanner:" + this._curPosIdIndexNativeBanner + " #id=" + l.utils.config.huaweiConfig.nativeBannerIds[this._curPosIdIndexNativeBanner]);
var o = this._nativeBannerAd[this._curPosIdIndexNativeBanner];
if (!o && l.utils.config.huaweiConfig.nativeBannerIds && l.utils.config.huaweiConfig.nativeBannerIds[this._curPosIdIndexNativeBanner]) {
l.utils.showLog("创建原生广告Banner。 posId:" + l.utils.config.huaweiConfig.nativeBannerIds[this._curPosIdIndexNativeBanner]);
if (o = this.huawei.createNativeAd({
adUnitId: l.utils.config.huaweiConfig.nativeBannerIds[this._curPosIdIndexNativeBanner],
success: function(e) {
console.log("loadNativeAd loadNativeAd : success");
},
fail: function(e, t) {
console.log("loadNativeAd loadNativeAd fail: " + e + "," + t);
},
complete: function() {
console.log("loadNativeAd loadNativeAd : complete");
}
})) {
this._nativeBannerAd.push(o);
o.onLoad(function(e) {
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
if (e && e.adList && e.adList.length > 0) {
t._startBannerTimerTask = new Date().getTime();
l.utils.showLog("原生Banner广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var n = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (t._checkNativeDataValid(n) || "true" == t.getNativeBannerInfo().show_st_banner) {
l.utils.showLog("当前原生Banner数据：" + n);
if (t.canShowNativeBanner) {
t._curPosIdIndexNativeBanner = 0;
t._showNativeBanner(o, n);
t._curNativeBannerInfo.nativeBannerAd = o;
t._curNativeBannerInfo.data = n;
} else cc.warn("已经隐藏banner不可重复展示");
return;
}
}
l.utils.showLog("原生Banner广告资源出错！");
t._curPosIdIndexNativeBanner++;
if (t._curPosIdIndexNativeBanner < l.utils.config.huaweiConfig.nativeBannerIds.length) t._createNativeBannerAd(i); else {
t._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == t.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (t.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
t._createMiniGameBannerAd();
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(t._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
});
o.onError(function(e) {
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
l.utils.showLog("原生Banner广告资源拉取失败！" + JSON.stringify(e));
t._curPosIdIndexNativeBanner++;
if (t._curPosIdIndexNativeBanner < l.utils.config.huaweiConfig.nativeBannerIds.length) t._createNativeBannerAd(i); else {
t._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == t.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (t.ServerConfig.banner_style_level) {
if (1 == t.ServerConfig.banner_style_mod[t.bannerType - 1]) {
l.utils.showLog("开始展示默认banner");
t._createMiniGameBannerAd();
}
} else if (t.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
t._createMiniGameBannerAd();
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(t._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
});
}
}
if (o) {
l.utils.showLog("nativeBannerAd reLoad>>");
o.load();
} else {
this._curPosIdIndexNativeBanner++;
if (l.utils.config.huaweiConfig.nativeBannerIds && this._curPosIdIndexNativeBanner < l.utils.config.huaweiConfig.nativeBannerIds.length) this._createNativeBannerAd(i); else {
this._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (this.ServerConfig.banner_style_level) {
if (1 == this.ServerConfig.banner_style_mod[this.bannerType - 1]) {
l.utils.showLog("开始展示默认banner");
this._createMiniGameBannerAd();
}
} else if (this.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
this._createMiniGameBannerAd();
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(this._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
}
};
t.prototype._createNativeInsertAd = function(e) {
var t = this;
if (r.default.IsHuaWei) {
var i = e;
l.utils.showLog("curPosIdIndexNativeInsert:" + this._curPosIdIndexNativeInser);
var o = this._nativeInsertAd[this._curPosIdIndexNativeInser];
if (!o && l.utils.config.huaweiConfig.nativeInsertIds && l.utils.config.huaweiConfig.nativeInsertIds[this._curPosIdIndexNativeInser]) {
l.utils.showLog("创建原生插屏广告。 posId:" + l.utils.config.huaweiConfig.nativeInsertIds[this._curPosIdIndexNativeInser]);
if (o = qg.createNativeAd({
adUnitId: l.utils.config.huaweiConfig.nativeInsertIds[this._curPosIdIndexNativeInser]
})) {
this._nativeInsertAd.push(o);
o.onLoad(function(e) {
if (e && e.adList && e.adList.length > 0) {
l.utils.showLog("原生插屏广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var n = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (t._checkNativeInsertDataValid(n)) {
t._curPosIdIndexNativeInser = 0;
t._showNativeInsert(o, n);
return;
}
l.utils.showLog("原生插屏广告资源不合法！");
}
l.utils.showLog("原生插屏广告资源出错！");
t._curPosIdIndexNativeInser++;
if (t._curPosIdIndexNativeInser < l.utils.config.huaweiConfig.nativeInsertIds.length) t._createNativeInsertAd(i); else {
t._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
t._createMiniGameInsertAd();
}
}
});
o.onError(function(e) {
l.utils.showLog("原生插屏广告资源拉取失败！" + e.code + e.msg);
t._curPosIdIndexNativeInser++;
if (t._curPosIdIndexNativeInser < l.utils.config.huaweiConfig.nativeInsertIds.length) t._createNativeInsertAd(i); else {
t._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if (t.ServerConfig.intersititial_style_level) if (2 != t.ServerConfig.intersititial_style_mod[t.intersititialType - 1]) {
l.utils.showLog("开始展示默认插屏！");
t._createMiniGameInsertAd();
} else t.showNativeTryGameWidget(); else if ("native" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
t._createMiniGameInsertAd();
} else t.showNativeTryGameWidget();
}
});
}
}
if (o) o.load(); else {
this._curPosIdIndexNativeInser++;
if (l.utils.config.huaweiConfig.nativeInsertIds && this._curPosIdIndexNativeInser < l.utils.config.huaweiConfig.nativeInsertIds.length) this._createNativeInsertAd(i); else {
this._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
this._createMiniGameInsertAd();
}
}
}
}
};
t.prototype.getNativeAdData = function() {
this._nativeAdObject || (this._nativeAdObject = new c.default());
this._nativeAdObject._nativeObj = this._nativeAd;
this._nativeAdObject.data = this._nativeData;
if (this._nativeData && this._nativeAd) {
this._nativeData = null;
return this._nativeAdObject;
}
return null;
};
t.prototype._showNativeBanner = function(e, t) {
if (r.default.IsHuaWei && t) {
l.utils.showLog("显示原生banner");
this._bannerAd && this._bannerAd.hide();
if (!cc.isValid(this._nativeBannerNode) || !this._nativeBannerNode && l.utils.config.otherconfig.nativeBanner) {
this._nativeBannerNode = cc.instantiate(l.utils.config.otherconfig.nativeBanner);
this._nativeBannerNode.position = h.default.position(cc.winSize.width / 2, this._nativeBannerNode.height * this._nativeBannerNode.scaleY / 2);
cc.director.getScene().addChild(this._nativeBannerNode, 1e3);
}
if (this._nativeBannerNode) {
this._nativeBannerNode.active = !0;
var i = this._nativeBannerNode.getComponent("YZ_NativeBanner");
i ? i.init(e, t, this.getNativeBannerInfo()) : l.utils.showLog("NativeBanner组件不存在!");
this._showBannerCallBack && this._showBannerCallBack();
this._showBannerCallBack = null;
} else l.utils.showLog("原生广告banner位没有创建！");
}
};
t.prototype._showNativeInsert = function(e, t) {
if (r.default.IsHuaWei && t) {
if (!cc.isValid(this._nativeInsertNode) || !this._nativeInsertNode && l.utils.config.otherconfig.nativeInsert) {
l.utils.showLog("创建原生插屏广告位");
this._nativeInsertNode = cc.instantiate(l.utils.config.otherconfig.nativeInsert);
this._nativeInsertNode.position = h.default.position(cc.winSize.width / 2, cc.winSize.height / 2);
cc.director.getScene().addChild(this._nativeInsertNode, 999999);
}
if (this._nativeInsertNode) {
var i = this._nativeInsertNode.getComponent("YZ_NativeInsert");
if (i) {
this._nativeInsertAdShowCount = 0;
i.init(e, t);
this._insertLastShowTime = new Date().getTime();
var o = this.ServerConfig.intersititial_open_close_banner;
if (o && o > 0) {
l.utils.showLog("Huawei 配置当前插屏显示成功后" + (1 == o ? "销毁" : "隐藏") + "banner!");
this.HideBanner();
}
} else l.utils.showLog("NativeInsert组件不存在!");
} else l.utils.showLog("原生广告插屏位没有创建！");
}
};
t.prototype.ShowCloseBtnBanner = function(e, t) {
var i = this;
void 0 === e && (e = a.BannerLocation.Home);
l.utils.showLog("ShowCloseBtnBanner >>>>>>>>>.");
var o = 0, n = 0, s = t.closeBtn, r = cc.winSize.height;
s.opacity = 0;
if (this.ServerConfig) {
this.ServerConfig.is_move_btn && (o = this.ServerConfig.is_move_btn);
this.ServerConfig.close_btn_fade_in_time && (n = this.ServerConfig.close_btn_fade_in_time);
l.utils.showLog(0 == o ? "显示banner,且按钮在上面" : "显示Banner,按钮居底部且" + o + "毫秒后移动");
setTimeout(function() {
l.utils.showLog("延迟调用关闭按钮的Banner >>>>");
i.ShowBanner(e, t);
l.utils.showLog("utils - adY:240");
if (s) {
s.y = -(r / 2 - 240) + s.height;
l.utils.showLog("btnClose.y" + s.y);
}
}, o);
setTimeout(function() {
s.runAction(cc.fadeIn(.3));
}, 1e3 * n);
}
};
t.prototype._checkNativeInsertDataValid = function(e) {
return !!e && (e.title && (e.iconUrlList && e.iconUrlList.length > 0 || e.imgUrlList && e.imgUrlList.length > 0));
};
t.prototype._checkNativeDataValid = function(e) {
l.utils.showLog("checkNativeDataValid");
return !!e && (!!(e.imgUrlList && e.imgUrlList.length > 0) || !!(e.title && e.desc && e.clickBtnTxt && e.iconUrlList && e.iconUrlList.length > 0));
};
t.prototype.checkRewardInsertIsShow = function() {};
t.prototype.showRewardInsert = function() {
l.utils.showLog("show reward");
};
t.prototype.hideRewardInsert = function() {
if (this._rewardInsertNode) {
var e = this._rewardInsertNode.getComponent("RewardInsert");
if (e) {
e.hide();
l.utils.showLog("隐藏激励插屏组件！");
} else l.utils.showLog("RewardInsert组件不存在!");
} else l.utils.showLog("激励插屏没有创建！");
};
t.prototype.checkIsShowStatementAd = function() {
if (l.utils.isSupportnavigateToMiniGame() && this.ServerConfig) return !0;
l.utils.showLog("当前平台不支持游戏内跳转，6元素交叉推广组件不显示！");
return !1;
};
t.prototype.ShowStatementRecomment = function(e) {
void 0 === e && (e = !0);
if (this.checkIsShowStatementAd()) {
if (e) {
if (l.utils.config.otherconfig.statementRecomment) {
(t = cc.instantiate(l.utils.config.otherconfig.statementRecomment)).getComponent("YZ_StatementRecommentAd").showNativeAd = e;
l.utils.showLog("显示结算互推和原生广告");
return t;
}
l.utils.showLog("未找到预制体 StatementRecomment, 请查看CommonUtils组件上是否赋值！");
return null;
}
if (l.utils.config.otherconfig.crossWidget6) {
var t = cc.instantiate(l.utils.config.otherconfig.crossWidget6);
l.utils.showLog("只显示结算互推广告");
return t;
}
l.utils.showLog("未找到预制体 crossWidget6, 请查看CommonUtils组件上是否赋值！");
return null;
}
return null;
};
t.prototype._showNativeAd = function() {
this._curNativeItem && this._curNativeItem.init(this.getNativeAdData());
};
t.prototype.ShowSingleNativeAd = function() {
if (l.utils.config.otherconfig.singleNativeAd) {
var e = cc.instantiate(l.utils.config.otherconfig.singleNativeAd), t = e.getComponent("YZ_NativeItem");
t.showType = 2;
this._curNativeItem = t;
this.createNativeAd();
l.utils.showLog("单个原生广告创建成功！");
return e;
}
l.utils.showLog("未找到预制体 singleNativeAd, 请查看CommonUtils组件上是否赋值！");
return null;
};
t.prototype.showStatementAds = function(e) {};
t.prototype.showFullScreenVideo = function() {};
t.prototype.GameExit = function() {};
t.prototype.Share = function() {};
return t = n([ f ], t);
}(s.default));
i.default = _;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./CompatibleTool": "CompatibleTool",
"./NativeTryGamesWidget": "NativeTryGamesWidget",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_NativeAdObject": "YZ_NativeAdObject"
} ],
AdAgentIOS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a8ee4bE81ZIGIvCtS1+v2nz", "AdAgentIOS");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.NativeIosCallBack = void 0;
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._className = "JNIHelper";
t._videoCallback = null;
t._showBannerTimerId = 0;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.Tool_IOS.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype.Init = function() {
var e = this;
r.default.IsNativeIOS && cc.game.on("JNIMessage", function(t) {
"VideoCallback" == t.type && e._videoCallback && (t.ret ? e._videoCallback(t.ret) : e._videoCallback(t.ret, t.message ? t.message : "视频播放失败！"));
});
};
t.prototype.ShowBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
if (r.default.IsNativeIOS) {
l.utils.showLog("AdAgentNative ShowBanner");
jsb.reflection.callStaticMethod(this._className, "showBanner:", a.BannerLocationToString(e));
}
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
clearInterval(this._showBannerTimerId);
jsb.reflection.callStaticMethod(this._className, "hideBanner:", a.BannerLocationToString(e));
};
t.prototype.ShowInterstitial = function() {
var e = this;
if (r.default.IsNativeIOS) try {
var t = 1;
this.ServerConfig && this.ServerConfig.intersititia_delay_show_time && (t = this.ServerConfig.intersititia_delay_show_time);
l.utils.showLog("AdAgentNative ShowInterstitial 延迟", t, "秒调用！");
l.utils.delayCall(function() {
jsb.reflection.callStaticMethod(e._className, "showInterstitial");
}, t);
} catch (e) {
l.utils.showLog(e);
}
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsNativeIOS) {
l.utils.showLog("AdAgentNative ShowVideo");
this._videoCallback = e;
try {
jsb.reflection.callStaticMethod(this._className, "showVideo");
} catch (t) {
l.utils.showLog(t);
e && e(!1);
}
}
};
t.prototype.showFullScreenVideo = function(e) {
if (r.default.IsNativeIOS) {
l.utils.showLog("AdAgentNative ShowVideo");
this._videoCallback = e;
try {
jsb.reflection.callStaticMethod(this._className, "showFullScreenVideo");
} catch (t) {
l.utils.showLog(t);
e && e(!1);
}
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
var d = function() {
function e() {}
e.videoCallBack = function(e, t) {
l.utils.showLog("视频广告回调函数 ------\x3e#result=" + e + " #msg=" + t ? t : "");
"1" == e ? cc.game.emit("JNIMessage", {
type: "VideoCallback",
ret: !0
}) : cc.game.emit("JNIMessage", {
type: "VideoCallback",
ret: !1,
message: t
});
};
return e;
}();
i.NativeIosCallBack = d;
window.NativeIosCallBack = d;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentKwai: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "767edHy/iZCu5cXzuKSiUzS", "AdAgentKwai");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._sysData = null;
t._bannerAd = null;
t._videoAd = null;
t._videoCallback = null;
t._isVideoShow = !1;
t._isVideoLoaded = !1;
t.kwaigame = window.kwaigame;
t.canShowVideo = !1;
t._interstitialAd = null;
return t;
}
t.prototype.Init = function() {
var e = this;
r.default.IsKwai && l.utils.registerServerInitEvent(function() {
e._initVideoAd();
}, this);
};
t.prototype.ShowBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
l.utils.showLog("快手平台没有banner广告！");
};
t.prototype.showStatementAds = function() {
var e, t = {
type: 0,
node: null
};
l.utils.showLog("结算广告 >> 显示插屏广告+6个互推");
this.ShowInterstitial();
e = l.utils.showCrossWidget6();
1;
t.type = 1;
t.node = e;
return t;
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
l.utils.showLog("显示快手插屏");
if (l.utils.config.kwaiConfig.insertId) {
if (!this._interstitialAd) {
this._interstitialAd = this.kwaigame.createInterstitialAd({
adUnitId: l.utils.config.kwaiConfig.insertId
});
this._interstitialAd.onError(function(e) {
l.utils.showLog("插屏广告显示异常：" + JSON.stringify(e));
});
this._interstitialAd.onClose(function(e) {
l.utils.showLog("用户点击了【关闭广告】按钮");
});
}
this._interstitialAd && this._interstitialAd.show().then(function() {
return l.utils.showLog("插屏 广告显示成功！");
}).catch(function(e) {
l.utils.showLog("插屏 广告显示失败 >>" + JSON.stringify(e));
});
} else l.utils.showLog("未配置插屏广告ID");
};
t.prototype.ShowVideo = function(e) {
var t = this;
if (r.default.IsKwai) {
if (this._videoCallback) return;
this._videoCallback = e;
this._isVideoShow = !0;
if (this._videoAd) this._videoAd.show({
success: function() {
l.utils.showLog("激励视频播放成功");
},
fail: function(e) {
l.utils.showLog("激励视频播放失败: " + JSON.stringify(e));
if (t._videoCallback) {
t._videoCallback(!1, "激励视频加载失败!");
t._videoCallback = null;
}
}
}); else {
this._initVideoAd();
if (this._videoCallback) {
this._videoCallback(!1, "激励视频加载失败!");
this._videoCallback = null;
}
}
}
};
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) {
var t = {};
t.adUnitId = l.utils.config.kwaiConfig.videoId;
this._videoAd = this.kwaigame.createRewardedVideoAd(t);
if (this._videoAd) {
l.utils.showLog("激励广告组件获取成功!");
this._videoAd.onClose(function(t) {
l.utils.showLog("激励视频关闭回调: " + JSON.stringify(t));
if (e._videoCallback) {
e._videoCallback(!1, "视频播放完毕才能够获取奖励!");
e._videoCallback = null;
}
});
this._videoAd.onReward(function(t) {
l.utils.showLog("激励视频奖励回调: " + JSON.stringify(t));
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
});
} else l.utils.showLog("激励广告组件获取失败");
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentNative: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "85bc0uVF6ZG2rnWXIVvQWwZ", "AdAgentNative");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.NativeCallBack = void 0;
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._videoCallback = null;
t._showBannerTimerId = 0;
t._showNativeIconTimerId = 0;
return t;
}
Object.defineProperty(t.prototype, "_className", {
get: function() {
return l.utils.Tool_Native.jniClassName;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.Tool_Native.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype.Init = function() {
var e = this;
r.default.IsNativeAndroid && cc.game.on("JNIMessage", function(t) {
if ("VideoCallback" == t.type && e._videoCallback) {
1 == t.ret ? e._videoCallback && e._videoCallback(!0) : e._videoCallback && e._videoCallback(!1, t.msg);
e._videoCallback = null;
}
});
};
t.prototype.ShowBanner = function(e, t, i) {
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
void 0 === i && (i = !1);
if (r.default.IsNativeAndroid) {
l.utils.showLog("AdAgentNative ShowBanner");
var o = 60;
this.ServerConfig && this.ServerConfig.refresh_ad_time && (o = this.ServerConfig.refresh_ad_time);
var n = {};
n.location = e;
n.isTimeRefresh = i ? "true" : "false";
try {
l.utils.showLog("调用banner Json >>>" + JSON.stringify(n));
jsb.reflection.callStaticMethod(this._className, "showBanner", "(Ljava/lang/String;)V", JSON.stringify(n));
} catch (e) {
l.utils.showLog(e);
}
clearInterval(this._showBannerTimerId);
this._showBannerTimerId = setInterval(function() {
l.utils.showLog("定时刷新显示Banner广告！location:" + e + "; args:" + JSON.stringify(t) + "; 间隔时间:" + o);
this.ShowBanner(e, t, !0);
}.bind(this), 1e3 * o);
}
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
l.utils.showLog("AdAgentNative HideBanner");
clearInterval(this._showBannerTimerId);
jsb.reflection.callStaticMethod(this._className, "hideBanner", "(Ljava/lang/String;)V", e);
};
t.prototype.ShowInterstitial = function() {
var e = this;
if (r.default.IsNativeAndroid) try {
var t = .5;
this.ServerConfig && this.ServerConfig.intersititia_delay_show_time && (t = this.ServerConfig.intersititia_delay_show_time);
l.utils.showLog("AdAgentNative ShowInterstitial 延迟", t, "秒调用！");
l.utils.delayCall(function() {
jsb.reflection.callStaticMethod(e._className, "showInterstitial", "()V");
}, t);
} catch (e) {
l.utils.showLog(e);
}
};
t.prototype.showNativeTryGameWidget = function(e) {
void 0 === e && (e = null);
if (r.default.IsNativeAndroid) {
l.utils.showLog("AdAgentNative showNativeTryGameWidget=" + this.ServerConfig.show_native_icon_method);
try {
var t = 15;
if (this.ServerConfig && this.ServerConfig.icon_jump_native) {
var i = parseInt(this.ServerConfig.icon_jump_native);
i > 3 ? t = i : l.utils.showLog("悬浮ICON必须大于3秒，当前默认为15秒刷新");
}
if (this.ServerConfig.show_native_icon_method) {
var o = {};
"left" in e && (o.left = e.left);
"right" in e && (o.right = e.right);
"top" in e && (o.top = e.top);
"bottom" in e && (o.bottom = e.bottom);
"location" in e && (o.location = e.location);
o.winSizeWidth = cc.winSize.width;
o.winSizeHeight = cc.winSize.height;
jsb.reflection.callStaticMethod(l.utils.Tool_Native.jniClassName, this.ServerConfig.show_native_icon_method, "(Ljava/lang/String;)V", JSON.stringify(o));
} else {
var n = 10, s = 250;
if (e) {
null != e.top ? s = e.top : null != e.bottom && (s = cc.winSize.height - e.bottom);
null != e.left ? n = e.left : null != e.right && (n = cc.winSize.width - e.right);
}
jsb.reflection.callStaticMethod(l.utils.Tool_Native.jniClassName, "showFloatIcon", "(II)V", n, s);
}
clearInterval(this._showNativeIconTimerId);
this._showNativeIconTimerId = setInterval(function() {
l.utils.showLog("定时刷新显示原生悬浮ICON广告！ args:" + e + "; 间隔时间:" + t);
this.showNativeTryGameWidget(e);
}.bind(this), 1e3 * t);
} catch (e) {
l.utils.showLog(e);
}
}
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsNativeAndroid) {
l.utils.showLog("AdAgentNative ShowVideo");
this._videoCallback = e;
try {
jsb.reflection.callStaticMethod(this._className, "showVideo", "()V");
} catch (t) {
l.utils.showLog(t);
e && e(!1);
}
}
};
t.prototype.showFullScreenVideo = function(e) {
if (r.default.IsNativeAndroid) {
l.utils.showLog("AdAgentNative showFullScreenVideo");
this._videoCallback = e;
try {
jsb.reflection.callStaticMethod(this._className, "showFullScreenVideo", "()V");
} catch (t) {
l.utils.showLog(t);
e && e(!1);
}
}
};
t.prototype.hideNativeTryGameWidget = function() {
if (r.default.IsNativeAndroid) {
clearInterval(this._showNativeIconTimerId);
jsb.reflection.callStaticMethod(this._className, "hideFloatIcon", "()V");
} else ;
};
return t = n([ u ], t);
}(s.default));
i.default = h;
var d = function() {
function e() {}
e.videoCallBack = function(e, t) {
console.log("视频广告回调函数 ------\x3eresult=", e, " msg=", t);
1 == e ? cc.game.emit("JNIMessage", {
type: "VideoCallback",
ret: !0
}) : cc.game.emit("JNIMessage", {
type: "VideoCallback",
ret: !1,
msg: t || "暂无视频！"
});
};
e.sendEvent = function(e) {
l.utils.showLog("事件上报：" + e);
l.utils.SendEvent(e);
};
e.sendEventNew = function(e, t, i) {
l.utils.showLog("事件上报：" + e);
l.utils.Tool_Native && l.utils.Tool_Native.sendEventNew(e, t, i);
};
e.reportInsertClick = function() {
l.utils.showLog("上报插屏点击时间：" + l.utils.overPageInsertAdIsTouch);
if (!l.utils.overPageInsertAdIsTouch) {
l.utils.overPageInsertAdIsTouch = !0;
var e = (new Date().getTime() - l.utils.overPageShowTime) / 1e3, t = {};
t.data = e;
l.utils.SendEventNew("结算页面-插屏点击时间", "overPageInsertAdTouch", JSON.stringify(t));
}
};
e.realNameAuth = function(e, t) {
l.utils.showLog("realNameAuth>>>> #idCard=" + e + " #realName=" + t);
l.utils.Tool_Native.realNameAuth(e, t, function(e, t) {
l.utils.showLog("realNameAuth>>>>  #res=" + e + " #result=" + t);
if (e) if (t) {
var i = JSON.parse(t);
switch (i.code) {
case 1:
l.utils.showMsg(i.msg);
l.utils.Tool_Native.realNameAuthResult(t);
break;

case 0:
"0" == i.nonage ? l.utils.setRealNameAuthLocalData("2") : l.utils.setRealNameAuthLocalData("1");
l.utils._isRealNameAuth = !0;
i.msg && l.utils.showMsg(i.msg);
l.utils.Tool_Native.realNameAuthResult(t);
l.utils.scheduleOnce(function() {
l.utils.emitRealNameAuthCloseEvent();
}, .5);
break;

case 2:
l.utils.setRealNameAuthLocalData("2");
l.utils.Tool_Native.realNameAuthResult(t);
}
} else {
var o = {
code: "-1",
msg: "请求失败，请重新提交验证！"
};
l.utils.Tool_Native.realNameAuthResult(JSON.stringify(o));
l.utils.showMsg("请求失败，请重新提交验证！");
} else {
l.utils.showMsg("请求失败，请重新提交验证！");
var n = {
code: "-1",
msg: "请求失败，请重新提交验证！"
};
l.utils.Tool_Native.realNameAuthResult(JSON.stringify(n));
}
});
};
return e;
}();
i.NativeCallBack = d;
cc.NativeCallBack = d;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentOPPO: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "61483n9NuBPRaedYYim5L7f", "AdAgentOPPO");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = e("./YZ_NativeAdObject"), u = e("./NativeTryGamesWidget"), h = e("./CompatibleTool"), d = e("./YouWanSDK/YouWanAnalytics"), f = e("./YouWanSDK/EventAdInfo"), _ = cc._decorator, p = _.ccclass, g = (_.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._bannerAd = null;
t._insertAd = null;
t._videoAd = null;
t._nativeBannerAd = [];
t._nativeInsertAd = [];
t._nativeSingleAd = [];
t._nativeAd = null;
t._isAdInit = !1;
t._isBannerShow = !1;
t._isInsertShow = !1;
t._curPosIdIndexNativeBanner = 0;
t._curPosIdIndexNativeInser = 0;
t._curPosIdIndexSingleNative = 0;
t._nativeData = null;
t._nativeInsertData = null;
t._nativeBannerNode = null;
t._nativeInsertNode = null;
t._videoCallback = null;
t._videoLoaded = null;
t._miniBannerHeight = 0;
t._showBannerCallBack = null;
t._nativeAdObject = null;
t._insertShowCount = 0;
t._insertLastShowTime = 0;
t._curNativeItem = null;
t._isNativeBannerShow = !1;
t.lastLastShowVideoTime = 0;
t._bannerHideCount = 0;
t.canShowNativeBanner = !0;
t._nativeBannerInfo = null;
t.show_ad_by_config = !0;
t._nativeIsClose = !1;
t._showBannerTimerId = 0;
t._delayShowBannerId = 0;
t._curLocation = a.BannerLocation.None;
t._isTimeRefresh = !1;
t._startBannerTimerTask = 0;
t._showBannerCount = 0;
t.tryGameAdArr = [];
t._nativeInsertAdShowCount = 0;
t.miniInserAdIsCreate = !1;
t._curNativeBannerInfo = {};
t._singleAdCreateTime = 0;
t._rewardInsertNode = null;
t.signleNativeAd = null;
t._nativeTryGameNode = null;
t.nativeTemplateBannerAd = null;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.oppoTool && l.utils.oppoTool.ServerConfig ? l.utils.oppoTool.ServerConfig : {};
},
enumerable: !1,
configurable: !0
});
t.prototype.getNativeBannerInfo = function() {
return this._nativeBannerInfo && this._nativeBannerInfo.location == this._curLocation ? this._nativeBannerInfo : l.utils.config.oppoconfig.getNativeBannerInfo(this._curLocation);
};
t.prototype.Init = function() {
var e = this;
r.default.IsOPPO && l.utils.oppoTool && l.utils.oppoTool.isOverMiniVersion("1031") && l.utils.registerServerInitEvent(function() {
l.utils.showLog("OPPO 广告代理组件初始化!");
var t = e;
qg.initAdService({
appId: l.utils.config.oppoconfig.appID,
isDebug: !0,
success: function(e) {
l.utils.showLog("OPPO 小游戏广告组件初始化成功!");
t._isAdInit = !0;
t._initVideoAd();
},
fail: function(e) {
l.utils.showLog("OPPO 小游戏广告组件初始化失败 :" + e.code + e.msg);
},
complete: function(e) {}
});
}, this);
};
t.prototype.ShowBanner = function(e, t, i) {
var o = this;
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === i && (i = !1);
if (r.default.IsOPPO) {
if (!this.ServerConfig) {
l.utils.showLog("未请求到配置文件！");
return;
}
this._showBannerCount++;
var n = this._curLocation;
this._curLocation = e;
this._isTimeRefresh = i;
n != e && this.HideBanner(e);
var s = (new Date().getTime() - this._startBannerTimerTask) / 1e3, a = this.ServerConfig.refresh_ad_time;
t && t.isRefresh ? i = !0 : a && a > 0 && s > a && (i = !0);
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST);
if (-1 == this.getNativeBannerInfo().is_show_banner) {
l.utils.showLog("当前位置配置为不展示banner!");
this.HideBanner(e);
return;
}
if (this.getNativeBannerInfo().is_show_rec > -1) {
this.HideBanner(e);
l.utils.showLog("当前位置显示互推banner");
if (l.utils.oppoTool.canShowRecommend()) {
l.utils.oppoTool.showOppoRecBanner();
return;
}
l.utils.showLog("当前平台不支持互推banner");
} else if (!i && !this.show_ad_by_config && this.ServerConfig.nbclr && "true" == this.ServerConfig.nbclr && this._curNativeBannerInfo.nativeBannerAd) {
l.utils.showLog("服务器配置定时器刷新数据 ");
l.utils.showLog("原生banner延迟显示" + this.getNativeBannerInfo().delay_show_time + "秒");
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
this._delayShowBannerId = setTimeout(function() {
o._showNativeBanner(o._curNativeBannerInfo.nativeBannerAd, o._curNativeBannerInfo.data);
}, 1e3 * this.getNativeBannerInfo().delay_show_time);
l.utils.showLog("开启定时刷新 >>>>>>>>>" + (a - s));
this._showBannerTimerId = setTimeout(function() {
l.utils.showLog("定时" + a + "秒调用showbanner");
o.ShowBanner(o._curLocation, {}, !0);
}, 1e3 * (a - s));
return;
}
this.canShowNativeBanner = !0;
this._nativeIsClose = !1;
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
l.utils.showLog("清理定时器");
if (this.ServerConfig) {
if (a && a > 0) {
l.utils.showLog("开启定时刷新 >>>>>>>>>" + a);
this._showBannerTimerId = setTimeout(function() {
l.utils.showLog("定时" + a + "秒调用showbanner");
o.ShowBanner(o._curLocation, {}, !0);
}, 1e3 * a);
}
if (this.show_ad_by_config) {
this.ShowBannerByConfigs(0);
return;
}
if (this.ServerConfig.banner_first_ad) if (this.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("优先展示原生Banner广告!" + i + " <<<<");
if (this._isTimeRefresh) this._createNativeBannerAd(this._showNativeBanner); else {
l.utils.showLog("原生banner延迟显示" + this.getNativeBannerInfo().delay_show_time + "秒");
this._delayShowBannerId = setTimeout(function() {
o._createNativeBannerAd(o._showNativeBanner);
}, 1e3 * this.getNativeBannerInfo().delay_show_time);
}
} else {
l.utils.showLog("优先展示小游戏Banner广告!");
this._createMiniGameBannerAd(e);
} else l.utils.showLog("配置数据中没有 banner_first_ad 字段， banner广告不显示!");
} else l.utils.showLog("服务器配置数据未初始化!");
}
};
t.prototype.hideMiniGameBanner = function() {
if (this._bannerAd) if (l.utils.oppoTool.isOverMiniVersion("1050")) {
l.utils.showLog("销毁小游戏Banner");
this._bannerAd.destroy();
this._bannerAd = null;
} else {
l.utils.showLog("当前小游戏平台小于1051，只能隐藏小游戏Banner");
this._bannerAd.hide();
}
};
t.prototype.hideNativeBanner = function() {
if (this._nativeBannerNode) {
l.utils.showLog("隐藏原生Banner");
this._nativeBannerNode.active = !1;
}
};
t.prototype.hideBanner = function(e) {
switch (e) {
case "default":
this.hideNativeBanner();
l.utils.hideRecommendGamesBanner();
this.hideNativeTemplateBannerAd();
l.utils.oppoTool && l.utils.oppoTool._rec_is_banner && l.utils.oppoTool.hideOppoRecBanner();
break;

case "native":
this.hideMiniGameBanner();
l.utils.hideRecommendGamesBanner();
this.hideNativeTemplateBannerAd();
l.utils.oppoTool && l.utils.oppoTool._rec_is_banner && l.utils.oppoTool.hideOppoRecBanner();
break;

case "template":
this.hideMiniGameBanner();
this.hideNativeBanner();
l.utils.hideRecommendGamesBanner();
l.utils.oppoTool && l.utils.oppoTool._rec_is_banner && l.utils.oppoTool.hideOppoRecBanner();
break;

case "rec":
this.hideMiniGameBanner();
this.hideNativeBanner();
l.utils.hideRecommendGamesBanner();
this.hideNativeTemplateBannerAd();
break;

default:
this.hideMiniGameBanner();
this.hideNativeBanner();
l.utils.hideRecommendGamesBanner();
this.hideNativeTemplateBannerAd();
l.utils.oppoTool && l.utils.oppoTool._rec_is_banner && l.utils.oppoTool.hideOppoRecBanner();
}
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = null);
if (r.default.IsOPPO) {
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
this._isBannerShow = !1;
this._nativeIsClose = !0;
this.canShowNativeBanner = !1;
this.hideBanner("");
}
};
t.prototype.hideKyxBanner = function() {
this.hideBanner("rec");
};
t.prototype.showNativeTryGameWidget = function(e) {
void 0 === e && (e = null);
if (r.default.IsOPPO) {
l.utils.showLog("显示原生抖动试玩 nativeNeedChange=", l.utils.nativeNeedChange, "  utils.tryGameDate", l.utils.tryGameDate, "utils.config.oppoconfig.nativeTryGameIds", l.utils.config.oppoconfig.nativeTryGameIds);
if ((l.utils.nativeNeedChange || !l.utils.tryGameDate) && l.utils.config.oppoconfig.nativeTryGameIds) {
var t = l.utils.config.oppoconfig.nativeTryGameIds.length;
l.utils.showLog("len:" + t);
for (var i = function(e) {
if (o.tryGameAdArr[e]) o.tryGameAdArr[e].load(); else {
var t = l.utils.config.oppoconfig.nativeTryGameIds[e];
l.utils.showLog("创建原生抖动试玩广告， posId:" + t);
var i = qg.createNativeAd({
posId: t
});
if (i) {
i.onLoad(function(e) {
l.utils.nativeNeedChange = !1;
if (e && e.adList && e.adList.length > 0) {
var t = (e = JSON.parse(JSON.stringify(e))).adList[0].adId;
l.utils.showLog("adId:" + t);
var o = !0;
l.utils.tryGameDate.forEach(function(e) {
t == e.date[0].adId && (o = !1);
});
if (o) {
l.utils.tryGameDate.push({
tryGameAd: i,
date: e.adList
});
l.utils._nativeTryGameNode && l.utils._nativeTryGameNode.getComponent(u.default).init();
}
l.utils.showLog("原生抖动试完广告资源拉取成功，是否可以添加广告" + o);
l.utils.showLog(JSON.stringify(e));
}
});
i.onError(function(e) {
l.utils.showLog("原生抖动广告资源拉取失败！" + e.code + e.msg);
l.utils.nativeNeedChange = !0;
});
i.load();
o.tryGameAdArr[e] = i;
}
}
}, o = this, n = 0; n < t; n++) i(n);
}
this.createNativeTryGameWidget(e);
}
};
t.prototype.ShowInterstitialByConfigs = function(e) {
l.utils.showLog("ShowInterstitialByConfigs  index=" + e + " #configsLength=" + l.utils.config.oppoconfig.intersitialAdConfigs.length);
if (e < l.utils.config.oppoconfig.intersitialAdConfigs.length) {
var t = l.utils.config.oppoconfig.intersitialAdConfigs[e];
l.utils.showLog("ShowInterstitialByConfigs adInfo:" + JSON.stringify(t));
switch (t.type) {
case "default":
this._createMiniGameInsertAdByConfig(e);
break;

case "native":
this._createNativeInsertAdByConfig(e);
break;

case "template":
this._createNativeTemplateIntersitialAd(e);
}
} else {
d.default.EventAd(f.YwAdType.INTERSITITIAL, f.YwAdStatus.AD_ID_REQUEST_FAIL);
l.utils.showLog("插屏展示失败，所有广告类型都未请求到广告！");
}
};
t.prototype.ShowBannerByConfigs = function(e) {
l.utils.showLog("ShowBannerByConfigs  index=" + e + " #configsLength=" + l.utils.config.oppoconfig.bannerAdConfigs.length);
if (e < l.utils.config.oppoconfig.bannerAdConfigs.length) {
var t = l.utils.config.oppoconfig.bannerAdConfigs[e];
l.utils.showLog("ShowBannerByConfigs adInfo:" + JSON.stringify(t));
switch (t.type) {
case "default":
this._createMiniGameBannerAdByConfigs(e);
break;

case "native":
this._createNativeBannerAdByConfigs(e);
break;

case "template":
this._createNativeTemplateBannerAd(e);
}
} else {
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
l.utils.showLog("Banner展示失败，所有广告类型都未请求到广告！");
}
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = null);
if (r.default.IsOPPO) if (this.ServerConfig) {
if (!this.checkInsertAdShow()) return;
d.default.EventAd(f.YwAdType.INTERSITITIAL, f.YwAdStatus.AD_ID_REQUEST);
if (this.show_ad_by_config) {
this.ShowInterstitialByConfigs(0);
return;
}
if (e && e == a.BannerLocation.Pause) if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("暂停界面不延时展示！");
l.utils.showLog("优先展示原生插屏广告!");
this.nativeInserAdDelayCall();
} else {
l.utils.showLog("优先展示小游戏插屏广告!");
this._createMiniGameInsertAd();
} else if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("优先展示原生插屏广告!");
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
} else {
l.utils.showLog("优先展示小游戏插屏广告!");
this._createMiniGameInsertAd();
}
} else l.utils.showLog("服务器配置数据未初始化!");
};
t.prototype.nativeInserAdDelayCall = function() {
l.utils.showLog("原生插屏广告: 当前点击次数=" + l.utils.oppoTool.NativeInsertAdClickTimes + "; 点击次数限制=" + this.ServerConfig.intersititia_click_count + "; 展示次数间隔=" + this.ServerConfig.intersititia_show_interval + "; 展示累计=" + this._nativeInsertAdShowCount);
l.utils.oppoTool.NativeInsertAdClickTimes >= (this.ServerConfig.intersititia_click_count || 0) ? this._nativeInsertAdShowCount >= (this.ServerConfig.intersititia_show_interval || 0) ? this._createNativeInsertAd(this._showNativeInsert) : this._nativeInsertAdShowCount++ : this._createNativeInsertAd(this._showNativeInsert);
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsOPPO) {
this._videoCallback = e;
if ((new Date().getTime() - this.lastLastShowVideoTime) / 1e3 < 4) {
l.utils.showLog("视频广告请求间隔小于4秒,直接返回false");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
if (this.ServerConfig) {
if (this.checkRewardInsertIsShow() && l.utils.oppoTool && l.utils.oppoTool.ServerConfig && l.utils.oppoTool.ServerConfig.reward_first_ad && "video" != l.utils.oppoTool.ServerConfig.reward_first_ad) {
l.utils.showLog("<<<服务器默认优先展示激励插屏>>>");
this.showRewardInsert();
return;
}
if (l.utils.oppoTool.isOverMiniVersion("1040")) {
this._videoAd || this._initVideoAd();
if (this._videoAd && this._videoLoaded) {
this._videoAd.show();
d.default.EventAdWithObj(f.YwAdType.REWARD_VIDEO, f.YwAdStatus.SHOW_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.videoId));
return;
}
}
}
l.utils.showLog("暂无视频广告!");
if (this._videoCallback) {
this._videoAd.load();
d.default.EventAdWithObj(f.YwAdType.REWARD_VIDEO, f.YwAdStatus.REQUEST, new f.AdEventParameter(l.utils.config.oppoconfig.videoId));
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
}
};
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) if (l.utils.config.oppoconfig.videoId) {
this._videoAd = qg.createRewardedVideoAd({
posId: l.utils.config.oppoconfig.videoId
});
var t = this;
if (this._videoAd) {
l.utils.showLog("初始化注册视频回调!");
this._videoAd.load();
d.default.EventAdWithObj(f.YwAdType.REWARD_VIDEO, f.YwAdStatus.REQUEST, new f.AdEventParameter(l.utils.config.oppoconfig.videoId));
this._videoAd.onLoad(function() {
d.default.EventAdWithObj(f.YwAdType.REWARD_VIDEO, f.YwAdStatus.REQUEST_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.videoId));
l.utils.showLog("激励视频加载成功");
t._videoLoaded = !0;
});
this._videoAd.onError(function(e) {
d.default.EventAdWithObj(f.YwAdType.REWARD_VIDEO, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.videoId));
l.utils.showLog("激励视频出错: " + e.code + e.msg);
t._videoLoaded = !1;
if (t._videoCallback) {
t._videoCallback(!1, "暂无视频广告!");
t._videoCallback = null;
}
});
this._videoAd.onClose(function(i) {
setTimeout(function() {
t._videoAd.load();
d.default.EventAdWithObj(f.YwAdType.REWARD_VIDEO, f.YwAdStatus.REQUEST, new f.AdEventParameter(l.utils.config.oppoconfig.videoId));
l.utils.showLog("延迟3秒重新加载视频广告");
}, 3e3);
if (i.isEnded) {
e.lastLastShowVideoTime = new Date().getTime();
l.utils.showLog("激励视频广告完成，发放奖励");
if (t._videoCallback) {
t._videoCallback(!0, "");
t._videoCallback = null;
}
d.default.EventAdWithObj(f.YwAdType.REWARD_VIDEO, f.YwAdStatus.REWARD_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.videoId));
} else {
l.utils.showLog("激励视频广告取消关闭，不发放奖励");
d.default.EventAdWithObj(f.YwAdType.REWARD_VIDEO, f.YwAdStatus.REWARD_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.videoId));
if (t._videoCallback) {
t._videoCallback(!1, "观看完视频才能获得奖励!");
t._videoCallback = null;
}
}
});
}
} else l.utils.showLog("视频广告Id配置错误!");
};
t.prototype.checkInsertAdShow = function() {
var e = this.ServerConfig.intersititial_max_show_count, t = this.ServerConfig.intersititial_interval_time, i = (new Date().getTime() - this._insertLastShowTime) / 1e3;
l.utils.showLog("OPPO服务器插屏最大显示次数为：" + e + ",间隔显示时间为：" + t + "秒！");
l.utils.showLog("OPPO插屏当前广告显示次数：" + l.utils.oppoTool.insertAdShowCounts + "次，间隔时间：" + i + "秒！");
if (e > 0 && l.utils.oppoTool.insertAdShowCounts >= e) {
l.utils.showLog("OPPO插屏广告显示的次数达到" + e + "次。插屏不显示");
return !1;
}
if (t > 0 && i < t) {
l.utils.showLog("OPPO插屏广告显示的间隔少于" + t + "秒。插屏不显示");
return !1;
}
return !0;
};
t.prototype._createMiniGameInsertAd = function(e) {
var t = this;
void 0 === e && (e = !1);
if (r.default.IsOPPO) {
this._isInsertShow = !0;
if (this._isAdInit && l.utils.config.oppoconfig && l.utils.config.oppoconfig.insertId) {
var i = qg.createInsertAd({
adUnitId: l.utils.config.oppoconfig.insertId
});
if (i) {
l.utils.showLog("注册小游戏插屏广告回调！");
var o = function() {
i.offShow();
i.offError();
i.offLoad();
};
i.onError(function(n) {
l.utils.showLog("OPPO 小游戏插屏广告出错:" + n.code + n.msg);
if (t._isInsertShow && !e && "default" == t.ServerConfig.intersititial_first_ad) {
t._isInsertShow = !1;
l.utils.showLog("开始显示原生插屏广告!");
t._curPosIdIndexNativeInser = 0;
l.utils.delayCall(t.nativeInserAdDelayCall.bind(t), t.ServerConfig.intersititia_delay_show_time || 0);
}
i.offError();
o();
}.bind(this));
i.onLoad(function() {
l.utils.showLog("OPPO 小程序插屏广告加载成功!");
if (t._isInsertShow) {
t._isInsertShow = !1;
i.show();
t._isInsertShow = !1;
l.utils.oppoTool.countInserShowCount();
t._insertLastShowTime = new Date().getTime();
var e = t.ServerConfig.intersititial_open_close_banner;
if (e && e > 0) {
l.utils.showLog("OPPO 配置当前插屏显示成功后" + (1 == e ? "销毁" : "隐藏") + "banner!");
t.HideBanner();
}
}
}.bind(this));
i.onShow(function() {
l.utils.showLog("OPPO 小游戏插屏广告显示成功！  ");
o();
}.bind(this));
this.miniInserAdIsCreate ? i.load() : this.miniInserAdIsCreate = !0;
}
if (!i) {
l.utils.showLog("OPPO小游戏插屏广告创建失败！");
if ("default" == this.ServerConfig.intersititial_first_ad && !e) {
l.utils.showLog("开始显示原生插屏广告!");
this._curPosIdIndexNativeInser = 0;
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
}
}
} else {
l.utils.showLog("OPPO 小游戏插屏广告配置信息错误!");
if ("default" == this.ServerConfig.intersititial_first_ad && !e) {
l.utils.showLog("开始显示原生插屏广告!");
this._curPosIdIndexNativeInser = 0;
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
}
}
}
};
t.prototype._createMiniGameInsertAdByConfig = function(e) {
var t = this;
if (r.default.IsOPPO) {
this._isInsertShow = !0;
l.utils.showLog("_createMiniGameInsertAdByIndex: index=" + e);
if (this._isAdInit && l.utils.config.oppoconfig && e < l.utils.config.oppoconfig.intersitialAdConfigs.length) {
var i = qg.createInsertAd({
adUnitId: l.utils.config.oppoconfig.intersitialAdConfigs[e].id
});
d.default.EventAdWithObj(f.YwAdType.INTERSITITIAL, f.YwAdStatus.REQUEST, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
if (i) {
l.utils.showLog("注册小游戏插屏广告回调！");
var o = function() {
i.offShow();
i.offError();
i.offLoad();
};
i.onError(function(n) {
l.utils.showLog("OPPO 小游戏插屏广告出错:" + n.code + n.msg);
t._isInsertShow && t.ShowInterstitialByConfigs(e + 1);
d.default.EventAdWithObj(f.YwAdType.INTERSITITIAL, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id, n.code, n.msg));
i.offError();
o();
}.bind(this));
i.onLoad(function() {
l.utils.showLog("OPPO 小程序插屏广告加载成功!");
d.default.EventAdWithObj(f.YwAdType.INTERSITITIAL, f.YwAdStatus.REQUEST_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
if (t._isInsertShow) {
t._isInsertShow = !1;
i.show();
t._isInsertShow = !1;
l.utils.oppoTool.countInserShowCount();
t._insertLastShowTime = new Date().getTime();
var o = t.ServerConfig.intersititial_open_close_banner;
if (o && o > 0) {
l.utils.showLog("OPPO 配置当前插屏显示成功后" + (1 == o ? "销毁" : "隐藏") + "banner!");
t.HideBanner();
}
}
}.bind(this));
i.onShow(function() {
l.utils.showLog("OPPO 小游戏插屏广告显示成功！  ");
d.default.EventAd(f.YwAdType.INTERSITITIAL, f.YwAdStatus.AD_ID_REQUEST_SUCCESS);
d.default.EventAdWithObj(f.YwAdType.INTERSITITIAL, f.YwAdStatus.SHOW_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
o();
}.bind(this));
this.miniInserAdIsCreate ? i.load() : this.miniInserAdIsCreate = !0;
}
if (!i) {
d.default.EventAdWithObj(f.YwAdType.INTERSITITIAL, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
l.utils.showLog("OPPO小游戏插屏广告创建失败！");
this.ShowInterstitialByConfigs(e + 1);
}
} else l.utils.showLog("OPPO 小游戏插屏广告配置信息错误!");
}
};
t.prototype._createMiniGameBannerAd = function(e) {
var t = this;
void 0 === e && (e = null);
if (r.default.IsOPPO) {
this._isBannerShow = !0;
if (this._isAdInit && l.utils.config.oppoconfig && l.utils.config.oppoconfig.bannerId) {
var i = {
top: 0
};
"top" === this.getNativeBannerInfo()._alignType ? i.top = 0 : i = null;
this._bannerAd;
this._bannerAd = qg.createBannerAd({
posId: l.utils.config.oppoconfig.bannerId,
style: i
});
if (this._bannerAd) {
l.utils.showLog("注册小游戏banner回调!");
this._bannerAd.onError(function(e) {
l.utils.showLog("OPPO 小游戏Banner广告出错: " + e.code + e.msg);
if (-1 != t.getNativeBannerInfo().st_banner_show_back_up) {
if (t._isBannerShow) {
t._isBannerShow = !1;
if (t.ServerConfig.banner_first_ad.indexOf("default") > -1) {
t._curPosIdIndexNativeBanner = 0;
t._createNativeBannerAd(t._showNativeBanner.bind(t));
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(t._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
} else l.utils.showLog("服务器配置不显示备用广告");
}.bind(this));
this._bannerAd.onShow(function() {
l.utils.showLog("OPPO 小游戏Banner显示成功！");
t._nativeBannerNode && (t._nativeBannerNode.active = !1);
l.utils.hideRecommendGamesBanner();
t._showBannerCallBack && t._showBannerCallBack();
t._showBannerCallBack = null;
}.bind(this));
this._bannerAd.onHide(function() {
if (this._isNativeBannerShow) {
this._isNativeBannerShow = !1;
l.utils.showLog("OPPO 小游戏Banner 广告隐藏,来自原生的显示，不增加隐藏次数，当前隐藏次数>" + l.utils.oppoTool.bannerAdCloseCounts);
} else {
l.utils.oppoTool.countBannerCloseCount();
l.utils.showLog("OPPO 小游戏Banner 广告隐藏,当前隐藏次数>" + l.utils.oppoTool.bannerAdCloseCounts);
}
});
} else if (this.ServerConfig.banner_first_ad.indexOf("default") > -1) {
this._curPosIdIndexNativeBanner = 0;
this._createNativeBannerAd(this._showNativeBanner.bind(this));
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(this._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
if (this._bannerAd) {
"top" !== this.getNativeBannerInfo()._alignType && (this._bannerAd.style.top = l.utils.oppoTool.SysInfo.screenHeight);
this._bannerAd.show();
} else {
l.utils.showLog("OPPO 小游戏Banner广告创建失败!");
if (this.ServerConfig.indexOf("default") > -1) {
this._curPosIdIndexNativeBanner = 0;
this._createNativeBannerAd(this._showNativeBanner.bind(this));
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(this._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
} else {
l.utils.showLog("OPPO 小游戏Banner广告配置信息错误!");
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog("服务器配置不显示备用广告");
return;
}
if (this.ServerConfig.banner_first_ad.indexOf("default") > -1) {
this._curPosIdIndexNativeBanner = 0;
this._createNativeBannerAd(this._showNativeBanner.bind(this));
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(this._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
};
t.prototype._createMiniGameBannerAdByConfigs = function(e) {
var t = this;
l.utils.showLog("_createMiniGameBannerAdByConfigs: #index=" + e);
if (r.default.IsOPPO) {
this._isBannerShow = !0;
d.default.EventAdWithObj(f.YwAdType.BANNER, f.YwAdStatus.REQUEST, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
if (this._isAdInit && l.utils.config.oppoconfig && e < l.utils.config.oppoconfig.bannerAdConfigs.length) {
var i = {
top: 0
};
"top" === this.getNativeBannerInfo()._alignType ? i.top = 0 : i = null;
this._bannerAd = qg.createBannerAd({
posId: l.utils.config.oppoconfig.bannerAdConfigs[e].id,
style: i
});
if (this._bannerAd) {
l.utils.showLog("注册小游戏banner回调!");
this._bannerAd.onError(function(i) {
t._bannerAd.offError();
d.default.EventAdWithObj(f.YwAdType.BANNER, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
l.utils.showLog("OPPO 小游戏 Configs Banner广告出错: " + i.code + i.msg);
if (-1 != t.getNativeBannerInfo().st_banner_show_back_up) {
if (t._isBannerShow) {
t._isBannerShow = !1;
t.ShowBannerByConfigs(e + 1);
}
} else {
l.utils.showLog("服务器配置不显示备用广告");
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
}
});
this._bannerAd.onHide(function() {
t._bannerAd.offHide();
if (t._isNativeBannerShow) {
t._isNativeBannerShow = !1;
l.utils.showLog("OPPO 小游戏Banner 广告隐藏,来自原生的显示，不增加隐藏次数，当前隐藏次数>" + l.utils.oppoTool.bannerAdCloseCounts);
} else {
l.utils.oppoTool.countBannerCloseCount();
l.utils.showLog("OPPO 小游戏Banner 广告隐藏,当前隐藏次数>" + l.utils.oppoTool.bannerAdCloseCounts);
}
});
"top" !== this.getNativeBannerInfo()._alignType && (this._bannerAd.style.top = l.utils.oppoTool.SysInfo.screenHeight);
this._bannerAd.show().then(function() {
t._bannerAd.offShow();
l.utils.showLog("OPPO 小游戏Banner显示成功！");
d.default.EventAdWithObj(f.YwAdType.BANNER, f.YwAdStatus.SHOW_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_SUCCESS);
t.hideBanner("default");
t._showBannerCallBack && t._showBannerCallBack();
t._showBannerCallBack = null;
});
} else {
this.ShowBannerByConfigs(e + 1);
d.default.EventAdWithObj(f.YwAdType.BANNER, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
}
} else {
l.utils.showLog("OPPO 小游戏Banner广告配置信息错误!");
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
l.utils.showLog("服务器配置不显示备用广告");
return;
}
this.ShowBannerByConfigs(e + 1);
}
}
};
t.prototype._createNativeBannerAdByConfigs = function(e) {
var t = this;
if (r.default.IsOPPO) {
d.default.EventAdWithObj(f.YwAdType.NATIVE_BANNER, f.YwAdStatus.REQUEST, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
l.utils.showLog("_createNativeBannerAdByConfigs: #index=" + e);
if (this._isAdInit && l.utils.config.oppoconfig && e < l.utils.config.oppoconfig.bannerAdConfigs.length) {
var i = l.utils.config.oppoconfig.bannerAdConfigs[e].nativeBannerAd;
if (!i) {
l.utils.showLog("创建原生广告Banner。 posId:" + l.utils.config.oppoconfig.bannerAdConfigs[e].id);
if (i = qg.createNativeAd({
posId: l.utils.config.oppoconfig.bannerAdConfigs[e].id
})) {
l.utils.config.oppoconfig.bannerAdConfigs[e].nativeBannerAd = i;
i.onLoad(function(o) {
d.default.EventAdWithObj(f.YwAdType.NATIVE_BANNER, f.YwAdStatus.REQUEST_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
if (o && o.adList && o.adList.length > 0) {
t._startBannerTimerTask = new Date().getTime();
l.utils.showLog("原生Banner广告资源拉取成功！");
l.utils.showLog(JSON.stringify(o));
var n = (o = JSON.parse(JSON.stringify(o))).adList[0];
if (t._checkNativeDataValid(n) || "true" == t.getNativeBannerInfo().show_st_banner) {
if (t.canShowNativeBanner) {
t._curPosIdIndexNativeBanner = 0;
t._showNativeBanner(i, n);
t._curNativeBannerInfo.nativeBannerAd = i;
t._curNativeBannerInfo.data = n;
t.hideBanner("native");
d.default.EventAdWithObj(f.YwAdType.NATIVE_BANNER, f.YwAdStatus.SHOW_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_SUCCESS);
} else l.utils.showLog("已经隐藏banner不可重复展示");
return;
}
}
l.utils.showLog("原生Banner广告资源出错！");
if (-1 != t.getNativeBannerInfo().st_banner_show_back_up) t.ShowBannerByConfigs(e + 1); else {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
d.default.EventAdWithObj(f.YwAdType.NATIVE_BANNER, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
}
}
});
i.onError(function(i) {
d.default.EventAdWithObj(f.YwAdType.NATIVE_BANNER, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
l.utils.showLog("原生Banner广告资源拉取失败！" + i.code + i.msg);
if (-1 != t.getNativeBannerInfo().st_banner_show_back_up) t.ShowBannerByConfigs(e + 1); else {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
}
}
});
}
}
if (i) {
l.utils.showLog("nativeBannerAd reLoad>>");
i.load();
} else {
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
d.default.EventAd(f.YwAdType.BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
return;
}
this.ShowBannerByConfigs(e + 1);
}
}
}
};
t.prototype._createNativeBannerAd = function(e) {
var t = this;
if (r.default.IsOPPO) {
var i = e;
l.utils.showLog("curPosIdIndexNativeBanner:" + this._curPosIdIndexNativeBanner);
var o = this._nativeBannerAd[this._curPosIdIndexNativeBanner];
if (!o && l.utils.config.oppoconfig.nativeBannerIds && l.utils.config.oppoconfig.nativeBannerIds[this._curPosIdIndexNativeBanner]) {
l.utils.showLog("创建原生广告Banner。 posId:" + l.utils.config.oppoconfig.nativeBannerIds[this._curPosIdIndexNativeBanner]);
if (o = qg.createNativeAd({
posId: l.utils.config.oppoconfig.nativeBannerIds[this._curPosIdIndexNativeBanner]
})) {
this._nativeBannerAd.push(o);
o.onLoad(function(e) {
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
if (e && e.adList && e.adList.length > 0) {
t._startBannerTimerTask = new Date().getTime();
l.utils.showLog("原生Banner广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var n = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (t._checkNativeDataValid(n) || "true" == t.getNativeBannerInfo().show_st_banner) {
if (t.canShowNativeBanner) {
t._curPosIdIndexNativeBanner = 0;
t._showNativeBanner(o, n);
t._curNativeBannerInfo.nativeBannerAd = o;
t._curNativeBannerInfo.data = n;
if (t._bannerAd) {
t._isNativeBannerShow = !0;
if (l.utils.oppoTool.isOverMiniVersion("1050")) {
l.utils.showLog("销毁小游戏Banner");
t._bannerAd.destroy();
t._bannerAd = null;
} else {
l.utils.showLog("当前小游戏平台小于1051，只能隐藏小游戏Banner");
t._bannerAd.hide();
}
}
l.utils.hideRecommendGamesBanner();
} else cc.warn("已经隐藏banner不可重复展示");
return;
}
}
l.utils.showLog("原生Banner广告资源出错！");
t._curPosIdIndexNativeBanner++;
if (t._curPosIdIndexNativeBanner < l.utils.config.oppoconfig.nativeBannerIds.length) t._createNativeBannerAd(i); else {
t._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == t.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (t.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
t._createMiniGameBannerAd();
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(t._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
});
o.onError(function(e) {
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
l.utils.showLog("原生Banner广告资源拉取失败！" + e.code + e.msg);
t._curPosIdIndexNativeBanner++;
if (t._curPosIdIndexNativeBanner < l.utils.config.oppoconfig.nativeBannerIds.length) t._createNativeBannerAd(i); else {
t._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == t.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (t.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
t._createMiniGameBannerAd();
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(t._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
});
}
}
if (o) {
l.utils.showLog("nativeBannerAd reLoad>>");
o.load();
} else {
this._curPosIdIndexNativeBanner++;
if (l.utils.config.oppoconfig.nativeBannerIds && this._curPosIdIndexNativeBanner < l.utils.config.oppoconfig.nativeBannerIds.length) this._createNativeBannerAd(i); else {
this._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (this.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
this._createMiniGameBannerAd();
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(this._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
}
};
t.prototype._createNativeInsertAd = function(e) {
var t = this;
if (r.default.IsOPPO) {
var i = e;
l.utils.showLog("curPosIdIndexNativeInsert:" + this._curPosIdIndexNativeInser);
var o = this._nativeInsertAd[this._curPosIdIndexNativeInser];
if (!o && l.utils.config.oppoconfig.nativeInsertIds && l.utils.config.oppoconfig.nativeInsertIds[this._curPosIdIndexNativeInser]) {
l.utils.showLog("创建原生插屏广告。 posId:" + l.utils.config.oppoconfig.nativeInsertIds[this._curPosIdIndexNativeInser]);
if (o = qg.createNativeAd({
posId: l.utils.config.oppoconfig.nativeInsertIds[this._curPosIdIndexNativeInser]
})) {
this._nativeInsertAd.push(o);
o.onLoad(function(e) {
if (e && e.adList && e.adList.length > 0) {
l.utils.showLog("原生插屏广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var n = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (t._checkNativeInsertDataValid(n)) {
t._curPosIdIndexNativeInser = 0;
t._showNativeInsert(o, n);
return;
}
l.utils.showLog("原生插屏广告资源不合法！");
}
l.utils.showLog("原生插屏广告资源出错！");
t._curPosIdIndexNativeInser++;
if (t._curPosIdIndexNativeInser < l.utils.config.oppoconfig.nativeInsertIds.length) t._createNativeInsertAd(i); else {
t._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
t._createMiniGameInsertAd();
}
}
});
o.onError(function(e) {
l.utils.showLog("原生插屏广告资源拉取失败！" + e.code + e.msg);
t._curPosIdIndexNativeInser++;
if (t._curPosIdIndexNativeInser < l.utils.config.oppoconfig.nativeInsertIds.length) t._createNativeInsertAd(i); else {
t._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
t._createMiniGameInsertAd();
}
}
});
}
}
if (o) o.load(); else {
this._curPosIdIndexNativeInser++;
if (l.utils.config.oppoconfig.nativeInsertIds && this._curPosIdIndexNativeInser < l.utils.config.oppoconfig.nativeInsertIds.length) this._createNativeInsertAd(i); else {
this._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
this._createMiniGameInsertAd();
}
}
}
}
};
t.prototype._createNativeInsertAdByConfig = function(e) {
var t = this;
if (r.default.IsOPPO) {
l.utils.showLog("_createNativeInsertAdByConfig: #index=" + e);
if (this._isAdInit && l.utils.config.oppoconfig && e < l.utils.config.oppoconfig.intersitialAdConfigs.length) {
var i = l.utils.config.oppoconfig.intersitialAdConfigs[e].nativeInsertAd;
d.default.EventAdWithObj(f.YwAdType.NATIVE_INTERSITITIAL, f.YwAdStatus.REQUEST, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
if (!i && l.utils.config.oppoconfig.intersitialAdConfigs[e].id) {
l.utils.showLog("创建原生插屏广告。 posId:" + l.utils.config.oppoconfig.intersitialAdConfigs[e].id);
if (i = qg.createNativeAd({
posId: l.utils.config.oppoconfig.intersitialAdConfigs[e].id
})) {
l.utils.config.oppoconfig.intersitialAdConfigs[e].nativeInsertAd = i;
i.onLoad(function(o) {
d.default.EventAdWithObj(f.YwAdType.NATIVE_INTERSITITIAL, f.YwAdStatus.REQUEST_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
if (o && o.adList && o.adList.length > 0) {
l.utils.showLog("原生插屏广告资源拉取成功！");
l.utils.showLog(JSON.stringify(o));
var n = (o = JSON.parse(JSON.stringify(o))).adList[0];
if (t._checkNativeInsertDataValid(n)) {
d.default.EventAd(f.YwAdType.INTERSITITIAL, f.YwAdStatus.AD_ID_REQUEST_SUCCESS);
d.default.EventAdWithObj(f.YwAdType.NATIVE_INTERSITITIAL, f.YwAdStatus.SHOW_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
t._showNativeInsert(i, n);
return;
}
l.utils.showLog("原生插屏广告资源不合法！");
d.default.EventAdWithObj(f.YwAdType.NATIVE_INTERSITITIAL, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
}
l.utils.showLog("原生插屏广告资源出错！");
t.ShowInterstitialByConfigs(e + 1);
});
i.onError(function(i) {
l.utils.showLog("原生插屏广告资源拉取失败！" + i.code + i.msg);
d.default.EventAdWithObj(f.YwAdType.NATIVE_INTERSITITIAL, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id, i.code, i.msg));
t.ShowInterstitialByConfigs(e + 1);
});
}
}
if (i) i.load(); else {
d.default.EventAdWithObj(f.YwAdType.NATIVE_INTERSITITIAL, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
l.utils.showLog("创建原生插屏失败：#index=" + e);
this.ShowInterstitialByConfigs(e + 1);
}
}
}
};
t.prototype.getNativeAdData = function() {
this._nativeAdObject || (this._nativeAdObject = new c.default());
this._nativeAdObject._nativeObj = this._nativeAd;
if (this._nativeAdObject.data && this._nativeAdObject.data.adId != this._nativeData.adId) {
this._nativeAdObject.is_reportClick = !1;
this._nativeAdObject.is_reportShow = !1;
}
this._nativeAdObject.data = this._nativeData;
if (this._nativeData && this._nativeAd) {
l.utils.showLog("获取原生数据 >>>", this._nativeData, "...", this._nativeAdObject);
return this._nativeAdObject;
}
return null;
};
t.prototype.createNativeAd = function(e, t) {
var i = this;
void 0 === e && (e = null);
l.utils.showLog("_createNativeAd >>>>>");
if (r.default.IsOPPO) {
t && (this._curNativeItem = t);
var o = this.ServerConfig.st_native_ad_refresh_time ? this.ServerConfig.st_native_ad_refresh_time : 0;
if (this._nativeAdObject && this._nativeAdObject.data && !this._nativeAdObject.is_reportClick && (new Date().getTime() - this._singleAdCreateTime) / 1e3 < o) {
l.utils.showLog("当前原生广告的展示时间" + (new Date().getTime() - this._singleAdCreateTime) / 1e3 + "秒，未达刷新时间" + o + "秒限制，直接使用上一次数据！");
this._showNativeAd();
return;
}
l.utils.showLog("_curPosIdIndexSingleNative:" + this._curPosIdIndexSingleNative + "  #this._nativeSingleAd.length" + this._nativeSingleAd.length);
var n = this._nativeSingleAd[this._curPosIdIndexSingleNative];
if (!n && l.utils.config.oppoconfig.nativeSingleAdIds && l.utils.config.oppoconfig.nativeSingleAdIds[this._curPosIdIndexSingleNative]) {
l.utils.showLog("创建原生广告。 posId:" + l.utils.config.oppoconfig.nativeSingleAdIds[this._curPosIdIndexSingleNative]);
if (n = qg.createNativeAd({
posId: l.utils.config.oppoconfig.nativeSingleAdIds[this._curPosIdIndexSingleNative]
})) {
this._nativeSingleAd.push(n);
n.onLoad(function(e) {
if (e && e.adList && e.adList.length > 0) {
l.utils.showLog("原生广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var t = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (i._checkNativeDataValid(t)) {
i._singleAdCreateTime = new Date().getTime();
i._curPosIdIndexSingleNative = 0;
i._nativeData = t;
i._nativeAd = n;
i._showNativeAd();
return;
}
l.utils.showLog("原生广告资源不合法！");
}
l.utils.showLog("原生广告资源出错！");
i._curPosIdIndexSingleNative++;
if (i._curPosIdIndexSingleNative < l.utils.config.oppoconfig.nativeSingleAdIds.length) i.createNativeAd(); else {
i._curPosIdIndexSingleNative = 0;
l.utils.showLog("单个原生广告ID遍历完毕，无法展示！");
}
});
n.onError(function(e) {
l.utils.showLog("原生单个广告资源拉取失败！" + e.code + e.msg);
i._curPosIdIndexSingleNative++;
if (i._curPosIdIndexSingleNative < l.utils.config.oppoconfig.nativeSingleAdIds.length) i.createNativeAd(); else {
i._curPosIdIndexSingleNative = 0;
l.utils.showLog("单个原生广告ID遍历完毕，无法展示！");
}
});
}
}
if (n) {
l.utils.showLog("nativeSingleAd reload");
n.load();
} else {
this._curPosIdIndexSingleNative++;
if (l.utils.config.oppoconfig.nativeSingleAdIds && this._curPosIdIndexSingleNative < l.utils.config.oppoconfig.nativeSingleAdIds.length) this.createNativeAd(); else {
this._curPosIdIndexSingleNative = 0;
l.utils.showLog("单个原生广告ID 遍历完毕，无法展示！");
}
}
}
};
t.prototype._showNativeBanner = function(e, t) {
if (r.default.IsOPPO && t) {
cc.isValid(this._nativeBannerNode) && this._nativeBannerNode && this._nativeBannerNode.destroy();
this._nativeBannerNode = cc.instantiate(l.utils.config.otherconfig.nativeBanner);
this._nativeBannerNode.position = h.default.position(cc.winSize.width / 2, this._nativeBannerNode.height * this._nativeBannerNode.scaleY / 2);
cc.director.getScene().addChild(this._nativeBannerNode, 1e3);
if (this._nativeBannerNode) {
this._nativeBannerNode.active = !0;
var i = this._nativeBannerNode.getComponent("YZ_NativeBanner");
i ? i.init(e, t, this.getNativeBannerInfo()) : l.utils.showLog("NativeBanner组件不存在!");
this._showBannerCallBack && this._showBannerCallBack();
this._showBannerCallBack = null;
} else l.utils.showLog("原生广告banner位没有创建！");
}
};
t.prototype._showNativeInsert = function(e, t) {
if (r.default.IsOPPO && t) {
if (!cc.isValid(this._nativeInsertNode) || !this._nativeInsertNode && l.utils.config.otherconfig.nativeInsert) {
l.utils.showLog("创建原生插屏广告位");
this._nativeInsertNode = cc.instantiate(l.utils.config.otherconfig.nativeInsert);
this._nativeInsertNode.position = h.default.position(cc.winSize.width / 2, cc.winSize.height / 2);
cc.director.getScene().addChild(this._nativeInsertNode, 999999);
}
if (this._nativeInsertNode) {
var i = this._nativeInsertNode.getComponent("YZ_NativeInsert");
if (i) {
this._nativeInsertAdShowCount = 0;
i.init(e, t);
this._insertLastShowTime = new Date().getTime();
l.utils.oppoTool.countInserShowCount();
l.utils.showLog("原生插屏显示成功，当前显示次数=" + l.utils.oppoTool.insertAdShowCounts);
var o = this.ServerConfig.intersititial_open_close_banner;
if (o && o > 0) {
l.utils.showLog("OPPO 配置当前插屏显示成功后" + (1 == o ? "销毁" : "隐藏") + "banner!");
this.HideBanner();
}
} else l.utils.showLog("NativeInsert组件不存在!");
} else l.utils.showLog("原生广告插屏位没有创建！");
}
};
t.prototype.HideSingleNativeAd = function(e) {
this.signleNativeAd && cc.isValid(this.signleNativeAd) && this.signleNativeAd.destroy();
};
t.prototype.ShowCloseBtnBanner = function(e, t) {
var i = this;
void 0 === e && (e = a.BannerLocation.Home);
l.utils.showLog("ShowCloseBtnBanner >>>>>>>>>.");
var o = 0, n = 0, s = t.closeBtn, r = cc.winSize.height;
s.opacity = 0;
if (this.ServerConfig) {
this.ServerConfig.is_move_btn && (o = this.ServerConfig.is_move_btn);
this.ServerConfig.close_btn_fade_in_time && (n = this.ServerConfig.close_btn_fade_in_time);
l.utils.showLog(0 == o ? "显示banner,且按钮在上面" : "显示Banner,按钮居底部且" + o + "毫秒后移动");
setTimeout(function() {
l.utils.showLog("延迟调用关闭按钮的Banner >>>>");
i.ShowBanner(e, t);
l.utils.showLog("utils - adY:240");
if (s) {
s.y = -(r / 2 - 240) + s.height;
l.utils.showLog("btnClose.y" + s.y);
}
}, o);
setTimeout(function() {
s.runAction(cc.fadeIn(.3));
}, 1e3 * n);
}
};
t.prototype._checkNativeInsertDataValid = function(e) {
return !!e && (e.title && (e.iconUrlList && e.iconUrlList.length > 0 || e.imgUrlList && e.imgUrlList.length > 0));
};
t.prototype._checkNativeDataValid = function(e) {
return !!e && (e.imgUrlList && e.imgUrlList.length);
};
t.prototype.checkRewardInsertIsShow = function() {
var e = l.utils.getRecommondGameList();
if (l.utils.isSupportnavigateToMiniGame()) {
if (l.utils.oppoTool && l.utils.oppoTool.ServerConfig && l.utils.oppoTool.ServerConfig.is_reward_intersititia) {
if ("true" == l.utils.oppoTool.ServerConfig.is_reward_intersititia && e && e.length > 0) {
l.utils.showLog("激励插屏显示环境验证通过！");
return !0;
}
l.utils.showLog("is_reward_intersititia 参数为false，激励插屏组件不显示！");
return !1;
}
l.utils.showLog("配置中没有is_reward_intersititia参数，激励插屏组件组件不显示！");
return !1;
}
l.utils.showLog("当前平台不支持小程序跳转！");
return !1;
};
t.prototype.showRewardInsert = function() {
l.utils.showLog("show reward");
if (this.checkRewardInsertIsShow()) {
if ((!cc.isValid(this._rewardInsertNode) || !this._rewardInsertNode) && l.utils.config.otherconfig.rewardInsert) {
l.utils.showLog("创建激励插屏广告");
this._rewardInsertNode = cc.instantiate(l.utils.config.otherconfig.rewardInsert);
this._rewardInsertNode.position = h.default.position(cc.winSize.width / 2, cc.winSize.height / 2);
cc.director.getScene().addChild(this._rewardInsertNode, 9999);
}
if (this._rewardInsertNode) {
var e = this._rewardInsertNode.getComponent("RewardInsert");
if (e) {
e.isShow = !1;
l.utils.showLog("显示激励插屏组件！");
} else l.utils.showLog("RewardInsert组件不存在!");
} else l.utils.showLog("激励插屏没有创建！");
} else {
this._videoCallback && this._videoCallback(!1, "暂无视频广告！");
l.utils.adManager.videoCallBack = null;
}
};
t.prototype.hideRewardInsert = function() {
if (this._rewardInsertNode) {
var e = this._rewardInsertNode.getComponent("RewardInsert");
if (e) {
e.hide();
l.utils.showLog("隐藏激励插屏组件！");
} else l.utils.showLog("RewardInsert组件不存在!");
} else l.utils.showLog("激励插屏没有创建！");
};
t.prototype.checkIsShowStatementAd = function() {
if (l.utils.isSupportnavigateToMiniGame() && this.ServerConfig) return !0;
l.utils.showLog("当前平台不支持游戏内跳转，6元素交叉推广组件不显示！");
return !1;
};
t.prototype.ShowStatementRecomment = function(e) {
void 0 === e && (e = !0);
if (this.checkIsShowStatementAd()) {
if (e) {
if (l.utils.config.otherconfig.statementRecomment) {
(t = cc.instantiate(l.utils.config.otherconfig.statementRecomment)).getComponent("YZ_StatementRecommentAd").showNativeAd = e;
l.utils.showLog("显示结算互推和原生广告");
return t;
}
l.utils.showLog("未找到预制体 StatementRecomment, 请查看CommonUtils组件上是否赋值！");
return null;
}
if (l.utils.config.otherconfig.crossWidget6) {
var t = cc.instantiate(l.utils.config.otherconfig.crossWidget6);
l.utils.showLog("只显示结算互推广告");
return t;
}
l.utils.showLog("未找到预制体 crossWidget6, 请查看CommonUtils组件上是否赋值！");
return null;
}
return null;
};
t.prototype._showNativeAd = function() {
this._curNativeItem && cc.isValid(this._curNativeItem.node) && this._curNativeItem.init(this.getNativeAdData());
};
t.prototype.ShowSingleNativeAd = function(e) {
if (l.utils.config.otherconfig.singleNativeAd) {
this.signleNativeAd && cc.isValid(this.signleNativeAd) && this.signleNativeAd.destroy();
this.signleNativeAd = cc.instantiate(l.utils.config.otherconfig.singleNativeAd);
var t = this.signleNativeAd.getComponent("YZ_NativeItem");
t.showType = 2;
t.params = e;
this._curNativeItem = t;
e && e.parent && e.parent.addChild(this.signleNativeAd, cc.macro.MAX_ZINDEX);
this.createNativeAd();
l.utils.showLog("单个原生广告创建成功！");
return this.signleNativeAd;
}
l.utils.showLog("未找到预制体 singleNativeAd, 请查看CommonUtils组件上是否赋值！");
return null;
};
t.prototype.showStatementAds = function(e) {
var t = {
type: 0,
node: null
};
if (this.ServerConfig && this.ServerConfig.statement_type) {
if (4 === this.ServerConfig.statement_type) {
t.type = 2;
t.node = this.ShowSingleNativeAd();
l.utils.showLog("结算广告 >> 单个原生广告>>" + t.node.name);
} else this.ShowInterstitial();
return t;
}
l.utils.showLog("没有配置结算广告！");
return t;
};
t.prototype.createNativeTryGameWidget = function(e) {
void 0 === e && (e = null);
this._nativeTryGameNode && cc.isValid(this._nativeTryGameNode) && this._nativeTryGameNode.destroy();
var t = cc.instantiate(l.utils.config.otherconfig.nativeTryGameWidget);
if (t) {
this._nativeTryGameNode = t;
this._nativeTryGameNode.zIndex = 9999;
}
var i = (t = this._nativeTryGameNode).getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
i.isAlignTop = !0;
i.isAlignBottom = !1;
i.top = e.top;
} else if (null != e.bottom) {
i.isAlignTop = !1;
i.isAlignBottom = !0;
i.bottom = e.bottom;
}
if (null != e.left) {
i.isAlignLeft = !0;
i.isAlignRight = !1;
i.left = e.left;
} else if (null != e.right) {
i.isAlignLeft = !1;
i.isAlignRight = !0;
i.right = e.right;
}
null != e.parent && (t.parent = e.parent);
}
i.updateAlignment();
t.active = !0;
this._nativeTryGameNode && this._nativeTryGameNode.getComponent(u.default).init();
};
t.prototype.hideNativeTryGameWidget = function() {
this._nativeTryGameNode && cc.isValid(this._nativeTryGameNode) && this._nativeTryGameNode.destroy();
};
t.prototype.canShowNativeTemplateAd = function() {
return qg.createCustomAd;
};
t.prototype.getNativeTemplateAdStyle = function(e) {
var t = {}, i = l.utils.oppoTool.SysInfo;
switch (e) {
case 1:
t.width = "";
t.top = "";
t.left = "";
break;

case 2:
t.width = "";
t.top = (i.screenHeight - 400) / 2;
t.left = "";
}
return t;
};
t.prototype._createNativeTemplateBannerAd = function(e) {
var t = this;
l.utils.showLog("_createNativeTemplateBannerAd : #index=" + e);
d.default.EventAdWithObj(f.YwAdType.NATIVE_TEMPLATE_BANNER, f.YwAdStatus.REQUEST, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
if (this.canShowNativeTemplateAd()) {
if (e < l.utils.config.oppoconfig.bannerAdConfigs.length) {
this.nativeTemplateBannerAd = qg.createCustomAd({
adUnitId: l.utils.config.oppoconfig.bannerAdConfigs[e].id,
style: this.getNativeTemplateAdStyle(1)
});
this.nativeTemplateBannerAd.onLoad(function() {
t.nativeTemplateBannerAd.offLoad();
l.utils.showLog("NativeTemplateBannerAd 广告加载成功");
d.default.EventAdWithObj(f.YwAdType.NATIVE_TEMPLATE_BANNER, f.YwAdStatus.REQUEST_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
});
this.nativeTemplateBannerAd.onError(function(i) {
t.nativeTemplateBannerAd.offError();
d.default.EventAdWithObj(f.YwAdType.NATIVE_TEMPLATE_BANNER, f.YwAdStatus.REQUEST_FAIL, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
l.utils.showLog("NativeTemplateBannerAd 广告异常：#erro=" + JSON.stringify(i));
if (t._nativeIsClose) {
l.utils.showLog("隐藏了BANNER，不做任何处理！");
d.default.EventAd(f.YwAdType.NATIVE_TEMPLATE_BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
} else {
if (-1 != t.getNativeBannerInfo().st_banner_show_back_up) t.ShowBannerByConfigs(e + 1); else {
d.default.EventAd(f.YwAdType.NATIVE_TEMPLATE_BANNER, f.YwAdStatus.AD_ID_REQUEST_FAIL);
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
}
}
});
this.nativeTemplateBannerAd.show().then(function() {
d.default.EventAdWithObj(f.YwAdType.NATIVE_TEMPLATE_BANNER, f.YwAdStatus.SHOW_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.bannerAdConfigs[e].id));
d.default.EventAd(f.YwAdType.NATIVE_TEMPLATE_BANNER, f.YwAdStatus.AD_ID_REQUEST_SUCCESS);
t.nativeTemplateBannerAd.offShow();
l.utils.showLog("NativeTemplateBannerAd show success");
t.hideBanner("template");
}).catch(function(e) {
l.utils.showLog("NativeTemplateBannerAd show fail with:" + e.errCode + "," + e.errMsg);
});
}
} else l.utils.showLog("当前快应用版本不支持原生模版广告！");
};
t.prototype.hideNativeTemplateBannerAd = function() {
l.utils.showLog("hideNativeTemplateBannerAd ");
this.nativeTemplateBannerAd && this.nativeTemplateBannerAd.destroy();
this.nativeTemplateBannerAd = null;
};
t.prototype._createNativeTemplateIntersitialAd = function(e) {
var t = this;
l.utils.showLog("_createNativeTemplateIntersitialAd : #index=" + e);
if (this.canShowNativeTemplateAd()) {
if (e < l.utils.config.oppoconfig.intersitialAdConfigs.length) {
l.utils.showLog("nativetemplate style=" + this.getNativeTemplateAdStyle(2));
var i = qg.createCustomAd({
adUnitId: l.utils.config.oppoconfig.intersitialAdConfigs[e].id,
style: this.getNativeTemplateAdStyle(2)
});
i.onLoad(function() {
d.default.EventAdWithObj(f.YwAdType.INTERSITITIAL, f.YwAdStatus.REQUEST_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
l.utils.showLog("NativeTemplateIntersitialAd 广告加载成功");
});
i.onError(function(i) {
l.utils.showLog("NativeTemplateIntersitialAd 广告异常：" + +JSON.stringify(i));
t.ShowInterstitialByConfigs(e + 1);
});
i.show().then(function() {
l.utils.showLog("NativeTemplateIntersitialAd show success");
t._insertLastShowTime = new Date().getTime();
var i = t.ServerConfig.intersititial_open_close_banner;
if (i && i > 0) {
l.utils.showLog("OPPO 配置当前插屏显示成功后" + (1 == i ? "销毁" : "隐藏") + "banner!");
t.HideBanner();
}
d.default.EventAd(f.YwAdType.INTERSITITIAL, f.YwAdStatus.AD_ID_REQUEST_SUCCESS);
d.default.EventAdWithObj(f.YwAdType.INTERSITITIAL, f.YwAdStatus.SHOW_SUCCESS, new f.AdEventParameter(l.utils.config.oppoconfig.intersitialAdConfigs[e].id));
}).catch(function(e) {
l.utils.showLog("NativeTemplateIntersitialAd show fail with:" + e.errCode + "," + e.errMsg);
});
}
} else l.utils.showLog("当前快应用版本不支持原生模版广告！");
};
t.prototype.GameExit = function() {};
t.prototype.Share = function() {};
return t = n([ p ], t);
}(s.default));
i.default = g;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./CompatibleTool": "CompatibleTool",
"./NativeTryGamesWidget": "NativeTryGamesWidget",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_NativeAdObject": "YZ_NativeAdObject",
"./YouWanSDK/EventAdInfo": "EventAdInfo",
"./YouWanSDK/YouWanAnalytics": "YouWanAnalytics"
} ],
AdAgentQQ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6cb5aEWJx5EW7q8x7AowbbW", "AdAgentQQ");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._sysData = null;
t._curBannerAd = null;
t._videoAd = null;
t._insertAd = null;
t._oldAd = null;
t._appBox = null;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._isVideoShow = !1;
t.qq = window.qq;
t._bannerShow = !1;
t._bannerSizePercent = .5;
t._bannerBottom = 0;
t._oldBannerLocation = a.BannerLocation.None;
t._curBannerHeight = 240;
t._moveBtn = null;
t._cur_level = null;
t._showBannerTimerId = 0;
t._isShow = !1;
t._blockAd = null;
return t;
}
t.prototype.Init = function() {
var e = this;
r.default.IsQQ && l.utils.registerServerInitEvent(function() {
e._sysData = l.utils.Tool_QQ.getSystemInfo();
e._initVideoAd();
}, this);
};
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.Tool_QQ.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) {
l.utils.showLog("初始化视频!");
if (!l.utils.config.qqconfig.videoId) {
l.utils.showLog("视频ID配置错误!");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
l.utils.showLog("视频广告ID:", l.utils.config.qqconfig.videoId.trim());
this._videoAd = this.qq.createRewardedVideoAd({
adUnitId: l.utils.config.qqconfig.videoId
});
if (this._videoAd) {
l.utils.showLog("初始化注册视频回调!");
this._videoAd.onLoad(function() {
l.utils.showLog("激励视频加载成功");
e._isVideoLoaded = !0;
e._isVideoShow && e._videoAd.show().then(function() {}).catch(function() {
l.utils.showLog("视频播放失败！");
if (e._videoCallback) {
e._videoCallback("暂无视频广告!");
e._videoCallback = null;
}
});
});
this._videoAd.onError(function(t) {
l.utils.showLog("激励视频加载失败!", t.code, t.msg);
e._isVideoLoaded = !1;
if (e._videoCallback) {
e._videoCallback(!1, "暂无视频广告!");
e._videoCallback = null;
}
});
this._videoAd.onClose(function(t) {
e._isVideoShow = !1;
if (t && t.isEnded || void 0 === t) {
l.utils.showLog("激励视频广告完成，发放奖励");
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else {
l.utils.showLog("激励视频广告取消关闭，不发放奖励");
if (e._videoCallback) {
e._videoCallback(!1, "观看完视频才能获得奖励!");
e._videoCallback = null;
}
}
});
} else {
l.utils.showLog("激励视频初始化失败!");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
}
}
};
t.prototype._createBanner = function(e, t) {
var i = this;
void 0 === t && (t = null);
if (r.default.IsQQ) {
if (!l.utils.config.qqconfig.bannerId) {
l.utils.showLog("banner广告ID不存在");
return;
}
var o = t;
this._bannerShow = !1;
if (o && o.width) {
this._bannerSizePercent = o.width < 0 ? 0 : o.width;
this._bannerSizePercent = o.width > 1 ? 1 : this._bannerSizePercent;
}
if (o && o.bottom) {
this._bannerBottom = o.bottom / this._sysData.pixelRatio;
this._bannerBottom = this._bannerBottom < 0 ? 0 : this._bannerBottom;
this._bannerBottom = this._bannerBottom > this._sysData.screenHeight ? this._sysData.screenHeight : this._bannerBottom;
}
var n = (this._sysData.screenWidth - 300) / 2, s = this._sysData.screenHeight - 72 - this._bannerBottom, a = {
adUnitId: l.utils.config.qqconfig.bannerId,
style: {
left: n,
width: 300,
top: s,
height: 72
}
}, c = null, u = this._curBannerAd;
c = this.qq.createBannerAd(a);
l.utils.showLog("bannerAd ", c);
if (c) {
c.onError(function(e) {
l.utils.showLog("广告条加载失败! ", JSON.stringify(e));
i._bannerShow = !1;
});
c.onLoad(function() {
if (!i._bannerShow) {
i._bannerShow = !0;
try {
c.show().then(function() {
l.utils.showLog("Banner广告显示成功!");
i.ServerConfig.banner_move_btn_interval && i._cur_level && i._cur_level % i.ServerConfig.banner_move_btn_interval == 0 && i.moveBtnToBannerTop();
u && u.destroy();
i._curBannerAd = c;
}).catch(function(e) {
l.utils.showLog("Banner广告出错", JSON.stringify(e));
i._bannerShow = !1;
});
} catch (e) {
i.ServerConfig.banner_move_btn_interval && i._cur_level && i._cur_level % i.ServerConfig.banner_move_btn_interval == 0 && i.moveBtnToBannerTop();
l.utils.showLog("Banner ad Show erro", e);
}
}
});
c.onResize(function(e) {
e && (i._curBannerHeight = e.height * i._sysData.pixelRatio);
});
}
}
};
t.prototype._showBannerTimer = function(e, t) {
var i = this, o = e, n = t;
l.utils.showLog("显示Banner广告xxx！location:" + o + "; 间隔时间:" + l.utils.Tool_QQ.ServerConfig.refresh_ad_time + ":优先级：" + this.ServerConfig.banner_first_ad);
var s = this.ServerConfig.banner_delay_time ? this.ServerConfig.banner_delay_time : 0;
l.utils.showLog("延迟" + s + "秒显示banner");
if (!this.ServerConfig.banner_move_btn_interval || !this._cur_level || this._cur_level % this.ServerConfig.banner_move_btn_interval != 0) {
l.utils.showLog("当前关卡不做延迟移动！");
this.moveBtnToBannerTop();
}
this._showBannerTimerId = setTimeout(function() {
i._createBanner(o, n);
}, 1e3 * s);
};
t.prototype.ShowBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
if (r.default.IsQQ) if (l.utils.Tool_QQ.ServerConfig) {
var i = e, o = t;
this._moveBtn = t ? t.moveBtn : null;
this._cur_level = t ? t.cur_level : null;
this._showBannerTimer(i, o);
} else l.utils.showLog("服务器配置数据未初始化!");
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
if (r.default.IsQQ) {
l.utils.showLog("隐藏广告条");
this._bannerShow = !1;
clearInterval(this._showBannerTimerId);
this._curBannerAd && this._curBannerAd.hide();
}
};
t.prototype.ShowVideo = function(e) {
var t = this;
if (r.default.IsQQ) {
this._videoCallback = e;
this._isVideoShow = !0;
this._videoAd ? this._videoAd.show().then(function() {
l.utils.showLog("视频显示成功！");
}).catch(function(e) {
l.utils.showLog("视频未加载！");
t._videoAd.load();
}) : this._initVideoAd();
}
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = null);
if (r.default.IsQQ) {
if (!l.utils.Tool_QQ.isOverMinVersion("1.12.0")) {
l.utils.showLog("当前版本" + l.utils.Tool_QQ._sysInfo.SDKVersion + "不支持插屏广告和盒子广告!");
return;
}
if (this.ServerConfig) if (this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("服务器插屏优先级>>>" + this.ServerConfig.intersititial_first_ad);
switch (this.ServerConfig.intersititial_first_ad) {
case "default":
l.utils.delayCall(this._createInsterstitial.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
break;

case "box":
if (!l.utils.Tool_QQ.isOverMinVersion("1.7.1")) {
l.utils.showLog("当前版本" + l.utils.Tool_QQ._sysInfo.SDKVersion + "不支持盒子广告,显示插屏");
l.utils.delayCall(this._createInsterstitial.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
return;
}
l.utils.delayCall(this.ShowAppBox.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
break;

case "onlydefault":
l.utils.delayCall(this._createInsterstitial.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
}
} else {
l.utils.showLog("服务器未配置优先级，显示默认插屏");
l.utils.delayCall(this._createInsterstitial.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
}
}
};
t.prototype._createInsterstitial = function() {
var e = this;
l.utils.showLog("_createInsterstitial >>> 222");
if (!this._insertAd) {
this._insertAd = this.qq.createInterstitialAd({
adUnitId: l.utils.config.qqconfig.insertId
});
this._insertAd.onError(function(t) {
switch (t.errCode) {
case 2001:
l.utils.showLog("小程序启动一定时间内不允许展示插屏广告");
break;

case 2002:
l.utils.showLog("距离小程序插屏广告或者激励视频广告上次播放时间间隔不足，不允许展示插屏广告");
break;

case 2003:
l.utils.showLog("当前正在播放激励视频广告或者插屏广告，不允许再次展示插屏广告");
break;

case 2004:
l.utils.showLog("该项错误不是开发者的异常情况，或因小程序页面切换导致广告渲染失败");
break;

case 2005:
l.utils.showLog("插屏广告实例不允许跨页面调用");
break;

default:
l.utils.showLog("插屏加载失败! ", JSON.stringify(t));
}
if (e.ServerConfig.intersititial_first_ad && "default" == e.ServerConfig.intersititial_first_ad) {
l.utils.showLog("优先显示的是插屏广告，备用显示盒子广告！");
var i = e.ServerConfig.insert_show_appBox_level ? e.ServerConfig.insert_show_appBox_level : 0;
l.utils.currentLevel > i ? e.ShowAppBox() : l.utils.showLog("备用显示盒子广告未达到关卡限制要求");
}
});
this._insertAd.onClose(function() {
l.utils.showLog("插屏广告关闭成功！");
});
}
if (this._insertAd) {
this._insertAd.load().then(function() {
l.utils.showLog("插屏加载成功! ");
e._insertAd.show().then(function() {
l.utils.showLog("插屏广告显示成功!");
}).catch(function(e) {
l.utils.showLog("插屏广告出错", JSON.stringify(e));
});
}).catch(function() {
l.utils.showLog("插屏加载失败! ");
});
if (!this._isShow) {
this._insertAd.show().then(function() {
l.utils.showLog("插屏广告显示成功!");
}).catch(function(e) {
l.utils.showLog("插屏广告出错", JSON.stringify(e));
});
this._isShow = !0;
}
}
};
t.prototype.ShowAppBox = function(e) {
var t = this;
if (r.default.IsQQ) {
if (!l.utils.Tool_QQ.isOverMinVersion("1.7.1")) {
l.utils.showLog("当前版本" + l.utils.Tool_QQ._sysInfo.SDKVersion + "不支持游戏盒子!");
return;
}
l.utils.showLog(">>>>>ShowAppBox");
if (this._appBox) this._appBox.destroy().then(function() {
l.utils.showLog("游戏盒子id为:", l.utils.config.qqconfig.boxId);
t._appBox = t.qq.createAppBox({
adUnitId: l.utils.config.qqconfig.boxId
});
t._appBox.load().then(function() {
l.utils.showLog("游戏盒子加载成功！");
t._appBox.show().then(function() {
l.utils.showLog("游戏盒子显示成功！");
}).catch(function(e) {
l.utils.showLog("游戏盒子未加载！#err=", JSON.stringify(e));
});
}).catch(function(i) {
l.utils.showLog("游戏盒子加载失败！ #err=", JSON.stringify(i));
if (!e && t.ServerConfig.intersititial_first_ad && "box" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("优先显示的是盒子广告，备用显示插屏");
t._createInsterstitial();
}
});
}).catch(function(e) {
l.utils.showLog("游戏盒子销毁失败！ #err=", JSON.stringify(e));
}); else {
l.utils.showLog("游戏盒子id为:", l.utils.config.qqconfig.boxId);
this._appBox = this.qq.createAppBox({
adUnitId: l.utils.config.qqconfig.boxId
});
this._appBox.load().then(function() {
l.utils.showLog("游戏盒子加载成功！");
t._appBox.show().then(function() {
l.utils.showLog("游戏盒子显示成功！");
}).catch(function(e) {
l.utils.showLog("游戏盒子未加载！#err=", JSON.stringify(e));
});
}).catch(function(i) {
l.utils.showLog("游戏盒子加载失败！ #err=", JSON.stringify(i));
if (!e && t.ServerConfig.intersititial_first_ad && "box" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("优先显示的是盒子广告，备用显示插屏");
t._createInsterstitial();
}
});
}
}
};
t.prototype.HideAppbox = function() {
r.default.IsQQ && this._appBox && this._appBox.destroy().then(function() {
l.utils.showLog("游戏盒子销毁成功！");
}).catch(function() {
cc.warn("游戏盒子销毁失败!");
});
};
t.prototype.showBlockAd = function(e) {
var t = this;
if (this.ServerConfig) if (l.utils.config.qqconfig.bannerBoxId) if ("false" != this.ServerConfig.is_banner_box) {
if (this._blockAd) {
this._blockAd.offLoad();
this._blockAd.offResize();
this._blockAd.offError();
this._blockAd.destroy();
}
if (r.default.IsIOS && this._sysData.screenHeight < 736) {
var i = 16, o = 16, n = 65;
i = e.top ? e.top / cc.winSize.height * this._sysData.screenHeight : this._sysData.screenHeight - 65.5 - e.bottom / cc.winSize.height * this._sysData.screenHeight;
this._blockAd = this.qq.createBlockAd({
adUnitId: l.utils.config.qqconfig.bannerBoxId,
style: {
left: o,
top: i
},
size: e.showNum ? e.showNum : 5,
orientation: "landscape"
});
this._blockAd.onResize(function(i) {
t._blockAd.offResize();
l.utils.showLog("this._sysData", JSON.stringify(t._sysData));
l.utils.showLog("onresize >>", JSON.stringify(i));
t._blockAd.show().then(function() {
l.utils.showLog("显示成功！");
}).catch(function(e) {
l.utils.showLog("显示异常", JSON.stringify(e));
});
n = 1 == e.showNum ? 0 : i.width;
o = e.left ? e.left / cc.winSize.width * t._sysData.screenWidth : e.right ? t._sysData.screenWidth - i.width - e.right / cc.winSize.width * t._sysData.screenWidth : (t._sysData.screenWidth - n) / 2;
t._blockAd.style.left = o;
l.utils.showLog("onresize end>>", t._blockAd.style.top, "<<", t._blockAd.style.left, "<<");
});
} else {
this._blockAd = this.qq.createBlockAd({
adUnitId: l.utils.config.qqconfig.bannerBoxId,
style: {
left: 16,
top: 16
},
size: e.showNum ? e.showNum : 5,
orientation: "landscape"
});
this._blockAd.onResize(function(i) {
t._blockAd.offResize();
l.utils.showLog("this._sysData", JSON.stringify(t._sysData));
l.utils.showLog("onresize >>", JSON.stringify(i));
if (e) {
l.utils.showLog("parme:" + JSON.stringify(e));
if (e.top) {
l.utils.showLog("积木广告TOP位置：", e.top);
t._blockAd.style.top = e.top / cc.winSize.height * t._sysData.screenHeight;
} else e.bottom && (t._blockAd.style.top = t._sysData.screenHeight - i.height - e.bottom / cc.winSize.height * t._sysData.screenHeight);
e.left ? t._blockAd.style.left = e.left / cc.winSize.width * t._sysData.screenWidth : e.right ? t._blockAd.style.left = t._sysData.screenWidth - i.width - e.right / cc.winSize.width * t._sysData.screenWidth : t._blockAd.style.left = (t._sysData.screenWidth - i.width) / 2;
} else {
t._blockAd.style.top = t._sysData.screenHeight - i.height;
t._blockAd.style.left = (t._sysData.screenWidth - i.width) / 2;
}
t._blockAd.show().then(function() {
l.utils.showLog("显示成功！");
}).catch(function(e) {
l.utils.showLog("显示异常", JSON.stringify(e));
});
l.utils.showLog("onresize end>>", t._blockAd.style.top, "<<", t._blockAd.style.left, "<<");
});
}
this._blockAd.onLoad(function() {
l.utils.showLog("积木广告加载成功！");
});
this._blockAd.onError(function(e) {
l.utils.showLog("积木广告加载失败！", e.errMsg, ">>", e.errCode);
});
} else l.utils.showLog("服务器配置积木广告不展示！"); else l.utils.showLog("积木广告ID不存在"); else l.utils.showLog("组件未初始化！");
};
t.prototype.hideBlockAd = function() {
l.utils.showLog("隐藏积木广告");
this._blockAd && this._blockAd.hide();
};
t.prototype.moveBtnToBannerTop = function() {
var e = this;
l.utils.showLog("moveBtnToBannerTop >>>>>>>>>.");
if (this.ServerConfig && this._moveBtn && cc.isValid(this._moveBtn)) {
var t = 0, i = this._moveBtn;
this.ServerConfig.banner_move_btn_interval && this._cur_level && this._cur_level % this.ServerConfig.banner_move_btn_interval == 0 && this.ServerConfig.banner_move_btn_time && (t = this.ServerConfig.banner_move_btn_time);
l.utils.showLog(0 == t ? "按钮直接显示在banner上面" : "按钮居底部且" + t + "秒后移动");
setTimeout(function() {
if (i && cc.isValid(i)) {
e._sysData.screenHeight < 600 ? i.getComponent(cc.Widget).bottom = 250 : i.getComponent(cc.Widget).bottom = 220;
i.getComponent(cc.Widget).updateAlignment();
}
}, 1e3 * t);
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentQTT: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "520fef1u0xCZbOYX8XB2Yli", "AdAgentQTT");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._bannerAd = null;
t._videoAd = null;
t._isInsertAdShow = !1;
t._isInsertAdLoaded = !1;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._isVideoShow = !1;
t.qttGame = window.qttGame;
t.options = null;
t._insertLastShowTime = 0;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils._tool_QTT && l.utils._tool_QTT.ServerConfig ? l.utils._tool_QTT.ServerConfig : {};
},
enumerable: !1,
configurable: !0
});
t.prototype.Init = function() {
r.default.IsQTT && (l.utils.config.qttconfig.showAd || cc.warn("广告开关关闭状态，所有广告不显示！要显示广告，请打开 CommonUtils 组件上VIVIO 配置下的广告开关！"));
};
t.prototype.createOption = function() {
var e = this, t = {};
t.gametype = Math.floor(3 * Math.random() + 1);
t.rewardtype = 1;
t.data = {};
t.data.title = "获得奖励";
t.data.url = "//newidea4-gamecenter-frontend.1sapp.com/game/prod/fkxxl_img/1.png";
t.callback = function(t) {
l.utils.showLog("播放互动广告>> #res=", t);
if (1 == t) {
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else if (e._videoCallback) {
e._videoCallback(!1, "广告加载失败,请稍后再试!");
e._videoCallback = null;
}
};
return t;
};
t.prototype.ShowBanner = function() {
if (r.default.IsQTT) {
if (!l.utils.config.qttconfig.showAd) return;
var e = {};
e.index = location;
if (cc.winSize.height < cc.winSize.width) {
e.x = 1;
e.y = 1;
e.w = cc.winSize.width;
e.stage_width = cc.winSize.width;
e.stage_height = cc.winSize.height;
}
this.qttGame.showBanner(e);
}
};
t.prototype.HideBanner = function() {
if (r.default.IsQTT) {
if (!l.utils.config.qttconfig.showAd) return;
this.qttGame.hideBanner();
}
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
};
t.prototype.showInteractiveAd = function() {
if (r.default.IsQTT) {
if (!this.checkInsertAdShow()) return;
var e = {
rewardtype: 1
};
l.utils.showLog("互动直弹时间间隔开始");
this._insertLastShowTime = new Date().getTime();
this.qttGame.showHDReward(e);
}
};
t.prototype.checkInsertAdShow = function() {
var e = this.ServerConfig.intersititial_interval_time ? this.ServerConfig.intersititial_interval_time : 30, t = (new Date().getTime() - this._insertLastShowTime) / 1e3;
l.utils.showLog("qtt服务器插屏间隔显示时间为：" + e + "秒！");
l.utils.showLog("qtt插屏当前广告间隔时间：" + t + "秒！");
if (e > 0 && t < e) {
l.utils.showLog("qtt插屏广告显示的间隔少于" + e + "秒。插屏不显示");
return !1;
}
return !0;
};
t.prototype.ShowVideo = function(e) {
var t = this;
if (r.default.IsQTT) {
this._videoCallback = e;
if (!l.utils.config.qttconfig.showAd) {
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
this._isVideoShow = !0;
var i = this.createOption();
this.qttGame.showVideo(function(e) {
l.utils.showLog("播放视频广告>> #res=", e);
if (1 == e) {
if (t._videoCallback) {
t._videoCallback(!0, "");
t._videoCallback = null;
}
} else if (t._videoCallback) {
0 == e ? t._videoCallback(!1, "广告加载失败,请稍后再试!") : 2 == e && t._videoCallback(!1, "视频播放完毕才能够获取奖励!");
t._videoCallback = null;
}
}, i);
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentUC: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "55980AsZiBGCooaYvCVOMVB", "AdAgentUC");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./PlatUtils"), r = e("./Utils"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._videoAd = null;
t._bannerAd = null;
t.uc = window.uc;
t._sysInfo = {};
return t;
}
t.prototype.Init = function() {
r.utils.showLog("UC 广告初始化");
this.initVideo();
if (!this._sysInfo) {
this._sysInfo = this.uc.getSystemInfoSync();
if ("string" == typeof this._sysInfo) try {
this._sysInfo = JSON.parse(this._sysInfo);
} catch (e) {}
}
};
t.prototype.ShowBanner = function() {
if (this._bannerAd) {
this._bannerAd.destroy();
this._bannerAd = null;
}
r.utils.showLog("uc banner width>>", this._sysInfo.screenWidth, " #height>>", 194 * this._sysInfo.screenWidth / 345);
this._bannerAd = this.uc.createBannerAd({
style: {
gravity: 7,
bottom: 0,
width: cc.winSize.height < cc.winSize.width ? 250 : this._sysInfo.screenWidth,
height: this._sysInfo.screenWidth / 4
}
});
if (this._bannerAd) {
this._bannerAd.show();
this._bannerAd.onError(function(e) {
r.utils.showLog("UC平台banner出错" + e);
});
}
};
t.prototype.ShowInterstitial = function() {
r.utils.showLog("展示插屏广告");
var e = this.uc.createInterstitialAd();
e.load().then().catch(function(e) {
return r.utils.showLog("插屏加载异常：" + e);
});
e.onLoad(function() {
e.offLoad();
e.show().then().catch(function(e) {
return r.utils.showLog("插屏展示异常：" + e);
});
r.utils.showLog("UC插屏广告加载成功");
});
e.onError(function(e) {
r.utils.showLog(e);
});
};
t.prototype.initVideo = function() {
var e = this;
this._videoAd = this.uc.createRewardVideoAd();
this._videoAd.onLoad(function() {
r.utils.showLog("激励视频 广告加载成功");
});
this._videoAd.onError(function(t) {
r.utils.showLog("出错了：" + t);
if (e._videoCallback) {
e._videoCallback(!1, "暂无视频广告");
e._videoCallback = null;
}
});
this._videoAd.onClose(function(t) {
r.utils.showLog("用户关闭视频" + t);
if (t && t.isEnded) {
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else if (e._videoCallback) {
e._videoCallback(!1, "视频播放完毕才能够获取奖励!");
e._videoCallback = null;
}
});
};
t.prototype.ShowVideo = function(e) {
if (a.default.ISUC) {
this._videoCallback = e;
this._videoAd ? this._videoAd.show() : this.initVideo();
}
};
return t = n([ c ], t);
}(s.default));
i.default = u;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
AdAgentVIVO: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "403ectDoOdB058Z+/79HsK6", "AdAgentVIVO");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = e("./NativeTryGamesWidget"), u = e("./CompatibleTool"), h = e("./YZ_NativeAdObject"), d = cc._decorator, f = d.ccclass, _ = (d.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._bannerAd = null;
t._insertAd = null;
t._videoAd = null;
t._nativeBannerAd = [];
t._nativeInsertAd = [];
t._nativeSingleAd = [];
t._isBannerShow = !1;
t._isInsertShow = !1;
t._curPosIdIndexNativeBanner = 0;
t._curPosIdIndexNativeInser = 0;
t._curPosIdIndexSingleNative = 0;
t._nativeData = null;
t._nativeInsertData = null;
t._nativeBannerNode = null;
t._nativeInsertNode = null;
t._videoCallback = null;
t._videoLoaded = null;
t._isInsertAdShow = !1;
t._isInsertAdLoaded = !1;
t._isVideoLoaded = !1;
t._isVideoShow = !1;
t.lastLastShowVideoTime = 0;
t.showNum = 0;
t.showInsertNum = 0;
t._curNativeItem = null;
t._nativeAdObject = null;
t._nativeAd = null;
t._nativeBannerInfo = null;
t._curLocation = a.BannerLocation.None;
t._lastShowTime = 0;
t._bannerTimeoutShow = 0;
t._nativeIsClose = !1;
t._showBannerTimerId = 0;
t._delayShowBannerId = 0;
t._startBannerTimerTask = 0;
t._tryIndex = 0;
t._nativeInsertAdShowCount = 0;
t._curNativeBannerInfo = {};
t._nativeTryGameNode = null;
t.signleNativeAd = null;
t._singleAdCreateTime = 0;
t._customAd = null;
t._refreshCustomAdTimerTask = null;
t._isHide = !1;
t._lastLocation = "";
return t;
}
Object.defineProperty(t.prototype, "SysInfo", {
get: function() {
return l.utils.Tool_Vivo.SysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return r.default.IsVIVO ? l.utils.Tool_Vivo.ServerConfig : null;
},
enumerable: !1,
configurable: !0
});
t.prototype.getNativeBannerInfo = function() {
return this._nativeBannerInfo && this._nativeBannerInfo.location == this._curLocation ? this._nativeBannerInfo : l.utils.config.vivoconfig.getNativeBannerInfo(this._curLocation);
};
t.prototype.Init = function() {
var e = this;
if (r.default.IsVIVO) {
l.utils.Tool_Vivo.isOverMiniVersion("1084") && (qg.isSupportNativeAd = !0);
l.utils.registerServerInitEvent(function() {
l.utils.config.vivoconfig.showAd ? e._initVideoAd() : l.utils.showLog("广告开关关闭状态，所有广告不显示！要显示广告，请打开 CommonUtils 组件上VIVIO 配置下的广告开关！");
}, this);
}
};
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) {
if (!l.utils.Tool_Vivo.isOverMiniVersion("1041")) {
l.utils.showLog("当前版本不支持视频广告!");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
if (!l.utils.config.vivoconfig.videoId) {
l.utils.showLog("视频ID配置不正确！");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
var t = l.utils.config.vivoconfig.videoId.trim();
l.utils.showLog("video广告ID:" + t);
this._videoAd = qg.createRewardedVideoAd({
posId: t
});
if (this._videoAd) {
this._videoAd.onLoad(function() {
l.utils.showLog("激励视频加载成功!");
e._isVideoLoaded = !0;
if (e._isVideoShow) {
var t = e._videoAd.show();
t && t.then(function() {
e._isVideoLoaded = !1;
}).catch(function(t) {
if (e._videoCallback) {
e._videoCallback(!1, "暂无视频广告!");
e._videoCallback = null;
}
l.utils.showLog("视频播放失败！");
});
}
});
this._videoAd.onError(function(t) {
l.utils.showLog("激励视频异常!" + t.errCode);
e._isVideoLoaded = !1;
if (e._videoCallback) {
e._videoCallback(!1, "暂无视频广告!");
e._videoCallback = null;
}
});
this._videoAd.onClose(function(t) {
e._videoAd.load();
e._isVideoShow = !1;
if (t && t.isEnded) {
l.utils.showLog("正常播放结束，可以下发游戏奖励");
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else {
l.utils.showLog("播放中途退出，不下发游戏奖励");
if (e._videoCallback) {
e._videoCallback(!1, "观看完视频才能获得奖励!");
e._videoCallback = null;
}
}
});
}
}
};
t.prototype.ShowBanner = function(e, t, i) {
var o = this;
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
void 0 === i && (i = !1);
if (this.ServerConfig) {
var n = this._curLocation;
this._curLocation = e;
n != e && this.HideBanner(e);
var s = (new Date().getTime() - this._startBannerTimerTask) / 1e3, r = this.ServerConfig.refresh_ad_time;
t && t.isRefresh ? i = !0 : r && r > 0 && s > r && (i = !0);
if (-1 != this.getNativeBannerInfo().is_show_banner) {
if (this.getNativeBannerInfo().is_show_rec > -1) {
l.utils.showLog("当前位置显示互推banner");
if (l.utils.Tool_Vivo.canShowRecommend()) {
this.HideBanner(e);
l.utils.Tool_Vivo.showRecBanner();
return;
}
l.utils.showLog("当前平台不支持互推banner");
} else if (!i && this.ServerConfig.nbclr && "true" == this.ServerConfig.nbclr && this._curNativeBannerInfo.nativeBannerAd) {
l.utils.showLog("服务器配置定时器刷新数据 ");
this._showNativeBanner(this._curNativeBannerInfo.nativeBannerAd, this._curNativeBannerInfo.data);
l.utils.showLog("开启定时刷新 >>>>>>>>>" + (r - s));
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
this._showBannerTimerId = setTimeout(function() {
l.utils.showLog("定时" + r + "秒调用showbanner");
o.ShowOldBanner(o._curLocation, {});
}, 1e3 * (r - s));
return;
}
l.utils._tool_Vivo.isOverMiniVersion("1059") ? this.showNewBanner(e, t) : this.ShowOldBanner(e, t);
} else {
l.utils.showLog("当前位置配置为不展示banner!");
this.HideBanner(e);
}
} else l.utils.showLog("未请求到配置文件！");
};
t.prototype.showNewBanner = function(e, t) {
var i = this;
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
var o = new Date().getTime(), n = this.ServerConfig ? this.ServerConfig.cap_show_banner_time : void 0;
n = n || 15;
if ((o - this._lastShowTime) / 1e3 > n) {
this._lastShowTime = o;
this.ShowOldBanner(e, t);
} else {
this._lastShowTime = o;
clearTimeout(this._bannerTimeoutShow);
this._bannerTimeoutShow = setTimeout(function() {
l.utils.showLog("达到" + n + "间隔，显示banner");
i.ShowOldBanner(i._curLocation, t);
}, 1e3 * n);
l.utils.showLog("1059以上展示banner必须间隔" + n + "秒");
}
};
t.prototype.ShowOldBanner = function(e, t) {
var i = this;
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
if (r.default.IsVIVO) {
if (!l.utils.config.vivoconfig.showAd) return;
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
this._nativeIsClose = !1;
if (this.ServerConfig) {
var o = this.ServerConfig.refresh_ad_time;
this.getNativeBannerInfo();
o && o > 0 && (this._showBannerTimerId = setTimeout(function() {
l.utils.showLog("定时" + o + "秒调用showbanner");
i.ShowBanner(e, {}, !0);
}, 1e3 * o));
if (this.ServerConfig && this.ServerConfig.isTest && "true" == this.ServerConfig.isTest) {
this.showNum++;
if (this.showNum % 2 != 0 && qg.isSupportNativeAd) {
l.utils.showLog("测试模式>> 顺序展示原生Banner广告！");
this._createNativeBannerAd(this._showNativeBanner);
} else {
l.utils.showLog("测试模式>>" + (qg.isSupportNativeAd ? "" : "平台不支持原生广告>>顺序展示小游戏Banner广告！"));
this._createMiniGameBannerAd(e);
}
return;
}
if (this.ServerConfig.banner_first_ad) if ("native" == this.ServerConfig.banner_first_ad && qg.isSupportNativeAd) {
l.utils.showLog("优先展示原生Banner广告!");
if ("native" == this.ServerConfig.intersititial_first_ad) {
var n = 1;
this.ServerConfig.native_banner_delay_time && (n = this.ServerConfig.native_banner_delay_time);
l.utils.showLog("因为插屏也是优先展示原生，所以banner延迟显示" + n + "秒");
this._delayShowBannerId = setTimeout(function() {
i._createNativeBannerAd(i._showNativeBanner);
}, 1e3 * n);
} else this._createNativeBannerAd(this._showNativeBanner);
} else {
l.utils.showLog("优先展示小游戏Banner广告，引擎" + (qg.isSupportNativeAd ? "支持" : "不支持") + "原生广告");
this._createMiniGameBannerAd(e);
} else l.utils.showLog("配置数据中没有 banner_first_ad 字段， banner广告不显示!");
} else l.utils.showLog("服务器配置数据未初始化!");
}
};
t.prototype.HideBanner = function(e) {
var t = this;
void 0 === e && (e = a.BannerLocation.Home);
if (r.default.IsVIVO) {
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
clearTimeout(this._bannerTimeoutShow);
this._nativeIsClose = !0;
if (this._bannerAd) {
var i = this._bannerAd.hide();
i && i.then(function() {
console.log("banner广告隐藏成功");
}).catch(function(e) {
console.log("banner广告隐藏失败", JSON.stringify(e));
var i = t._bannerAd.destroy();
i && i.then(function() {
console.log("banner广告销毁成功");
}).catch(function(e) {
console.log("banner广告销毁失败", JSON.stringify(e));
});
});
}
if (this._nativeBannerNode) {
l.utils.showLog("隐藏原生Banner");
this._nativeBannerNode.active = !1;
}
l.utils.Tool_Vivo && l.utils.Tool_Vivo.hideRecBanner();
}
};
t.prototype.showNativeTryGameWidget = function(e) {
var t = this;
void 0 === e && (e = null);
if (r.default.IsVIVO) {
l.utils.showLog("创建原生抖动广告。 posId:" + l.utils.config.vivoconfig.nativeTryGameIds[0], "  utils.tryGameDate", l.utils.tryGameDate, "needchange", l.utils.nativeNeedChange);
if (l.utils.nativeNeedChange || !l.utils.tryGameDate) if (l.utils.config.vivoconfig.nativeTryGameIds) {
var i = qg.createNativeAd({
posId: l.utils.config.vivoconfig.nativeTryGameIds[0]
});
l.utils.showLog("tryGameAd：" + i);
if (i) {
i.onLoad(function(e) {
l.utils.showLog("res", e);
l.utils.nativeNeedChange = !1;
t.tryGameInfo = e.adList;
if (e && e.adList && e.adList.length > 0) {
l.utils.showLog("原生抖动试完广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var o = (e = JSON.parse(JSON.stringify(e))).adList[0].adId;
l.utils.showLog("adId:" + o);
var n = !0;
l.utils.tryGameDate.forEach(function(e) {
o == e.date[0].adId && (n = !1);
});
if (n) {
l.utils.tryGameDate.push({
tryGameAd: i,
date: t.tryGameInfo
});
l.utils._nativeTryGameNode && l.utils._nativeTryGameNode.getComponent(c.default).init();
}
}
});
i.onError(function(e) {
console.log("原生广告加载异常", JSON.stringify(e));
});
i.load();
}
} else l.utils.showLog("原生抖动id不存在");
this.createNativeTryGameWidget(e);
}
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = null);
if (r.default.IsVIVO) {
if (!l.utils.config.vivoconfig.showAd) return;
if (this.ServerConfig && this.ServerConfig.isTest && "true" == this.ServerConfig.isTest) {
this.showInsertNum++;
if (this.showInsertNum % 2 == 0 && qg.isSupportNativeAd) {
l.utils.showLog("测试模式>> 顺序展示原生插屏广告！");
this.nativeInserAdDelayCall();
} else {
l.utils.showLog("测试模式>>" + (qg.isSupportNativeAd ? "" : "平台不支持原生广告>>") + "顺序展示小游戏插屏广告！");
this._createMiniGameInsertAd();
}
return;
}
if (this.ServerConfig) if (e && e == a.BannerLocation.Pause) if ("native" == this.ServerConfig.intersititial_first_ad && qg.isSupportNativeAd) {
l.utils.showLog("暂停界面不延时展示！");
l.utils.showLog("优先展示原生插屏广告!");
this.nativeInserAdDelayCall();
} else {
l.utils.showLog("优先展示小游戏插屏广告!");
this._createMiniGameInsertAd();
} else if ("native" == this.ServerConfig.intersititial_first_ad && qg.isSupportNativeAd) {
l.utils.showLog("优先展示原生插屏广告!");
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
} else {
l.utils.showLog("优先展示小游戏插屏广告!");
this._createMiniGameInsertAd();
} else l.utils.showLog("服务器配置数据未初始化!");
}
};
t.prototype.nativeInserAdDelayCall = function() {
l.utils.showLog("原生插屏广告: 当前点击次数=" + l.utils.Tool_Vivo.NativeInsertAdClickTimes + "; 点击次数限制=" + this.ServerConfig.intersititia_click_count + "; 展示次数间隔=" + this.ServerConfig.intersititial_interval_time + "; 展示累计=" + this._nativeInsertAdShowCount);
l.utils.Tool_Vivo.NativeInsertAdClickTimes >= (this.ServerConfig.intersititia_click_count || 0) ? this._nativeInsertAdShowCount >= (this.ServerConfig.intersititia_show_interval || 0) ? this._createNativeInsertAd(this._showNativeInsert) : this._nativeInsertAdShowCount++ : this._createNativeInsertAd(this._showNativeInsert);
};
t.prototype.ShowVideo = function(e) {
var t = this;
if (r.default.IsVIVO) {
this._videoCallback = e;
if (!l.utils.config.vivoconfig.showAd) {
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
this._isVideoShow = !0;
var i = (new Date().getTime() - this.lastLastShowVideoTime) / 1e3, o = 0;
l.utils.ServerConfig && l.utils.ServerConfig.video_interval_time && (o = l.utils.ServerConfig.video_interval_time);
if (i > o) {
this.lastLastShowVideoTime = new Date().getTime();
if (this._videoAd) {
if (!this._isVideoLoaded) {
this._isVideoShow = !1;
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
this._videoAd.load();
return;
}
var n = this._videoAd.show();
n && n.then(function() {
l.utils.showLog("视频显示成功!");
t._isVideoLoaded = !1;
}).catch(function(e) {
l.utils.showLog("激励视频广告显示失败" + JSON.stringify(e));
if (t._videoCallback) {
t._videoCallback(!1, "暂无视频广告!");
t._videoCallback = null;
}
});
} else this._initVideoAd();
} else {
l.utils.showLog("视频广告请求间隔小于60秒,直接返回false");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
}
}
};
t.prototype._createMiniGameInsertAd = function() {
var e = this;
if (r.default.IsVIVO) {
this._isInsertShow = !0;
if (l.utils.config.vivoconfig && l.utils.config.vivoconfig.insertId) {
this._insertAd = qg.createInterstitialAd({
posId: l.utils.config.vivoconfig.insertId
});
if (this._insertAd) {
l.utils.showLog("注册小游戏插屏广告回调！");
this._insertAd.onError(function(t) {
l.utils.showLog("vivo 小游戏插屏广告出错:" + t.errCode + t.errMsg);
if (e._isInsertShow && "default" == e.ServerConfig.intersititial_first_ad) {
e._isInsertShow = !1;
l.utils.showLog("开始显示原生插屏广告!");
e._curPosIdIndexNativeInser = 0;
l.utils.delayCall(e.nativeInserAdDelayCall.bind(e), e.ServerConfig.intersititia_delay_show_time || 0);
}
}.bind(this));
if (this._isInsertShow) {
var t = this._insertAd.show();
t && t.then(function() {
l.utils.showLog("vivo 小游戏插屏广告显示成功！");
e._isInsertShow = !1;
}).catch(function(e) {
switch (e.code) {
case 30003:
l.utils.showLog("新用户7天内不能曝光插屏，请将手机时间调整为7天后，退出游戏重新进入");
break;

case 30009:
l.utils.showLog("10秒内调用广告次数超过1次，10秒后再调用");
break;

case 30002:
l.utils.showLog("加载广告失败，重新加载广告");
break;

default:
l.utils.showLog("插屏广告展示失败");
}
});
}
}
if (!this._insertAd) {
l.utils.showLog("vivo 小游戏插屏广告创建失败！");
if ("default" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始显示原生插屏广告!");
this._curPosIdIndexNativeInser = 0;
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
}
}
} else {
l.utils.showLog("vivo 小游戏插屏广告配置信息错误!");
if ("default" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始显示原生插屏广告!");
this._curPosIdIndexNativeInser = 0;
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), this.ServerConfig.intersititia_delay_show_time || 0);
}
}
}
};
t.prototype._createMiniGameBannerAd = function(e) {
var t = this;
void 0 === e && (e = null);
if (r.default.IsVIVO) {
this._isBannerShow = !0;
if (l.utils.config.vivoconfig && l.utils.config.vivoconfig.bannerId) {
var i = this._bannerAd;
if (i) {
var o = i.destroy();
o && o.then(function() {
console.log("banner广告销毁成功");
}).catch(function(e) {
console.log("banner广告销毁失败", JSON.stringify(e));
});
}
this._bannerAd = qg.createBannerAd({
posId: l.utils.config.vivoconfig.bannerId,
style: {}
});
if (this._bannerAd) {
l.utils.showLog("注册小游戏banner回调!");
this._bannerAd.onError(function(e) {
l.utils.showLog("VIVO 广告条加载失败! code : " + e.errCode + "; msg : " + e.errMsg);
if (-1 != t.getNativeBannerInfo().st_banner_show_back_up) {
if (t._isBannerShow) {
t._isBannerShow = !1;
if ("default" == t.ServerConfig.banner_first_ad) {
t._curPosIdIndexNativeBanner = 0;
t._createNativeBannerAd(t._showNativeBanner.bind(t));
}
}
} else l.utils.showLog("服务器配置不显示备用广告");
}.bind(this));
} else if ("default" == this.ServerConfig.banner_first_ad) {
this._curPosIdIndexNativeBanner = 0;
this._createNativeBannerAd(this._showNativeBanner.bind(this));
}
if (this._bannerAd) {
var n = this._bannerAd.show();
n && n.then(function() {
l.utils.showLog("vivo小游戏banner广告展示成功");
t._nativeBannerNode && (t._nativeBannerNode.active = !1);
}).catch(function(e) {
switch (e.code) {
case 30003:
l.utils.showLog("新用户7天内不能曝光Banner，请将手机时间调整为7天后，退出游戏重新进入");
break;

case 30009:
l.utils.showLog("10秒内调用广告次数超过1次，10秒后再调用");
break;

case 30002:
l.utils.showLog("加载广告失败，重新加载广告");
break;

default:
l.utils.showLog("banner广告展示失败");
}
});
} else {
l.utils.showLog("vivo 小游戏Banner广告创建失败!");
if ("default" == this.ServerConfig.banner_first_ad) {
this._curPosIdIndexNativeBanner = 0;
this._createNativeBannerAd(this._showNativeBanner.bind(this));
}
}
} else {
l.utils.showLog("vivo 小游戏Banner广告配置信息错误!");
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog("服务器配置不显示备用广告");
return;
}
if ("default" == this.ServerConfig.banner_first_ad) {
this._curPosIdIndexNativeBanner = 0;
this._createNativeBannerAd(this._showNativeBanner.bind(this));
}
}
}
};
t.prototype._createNativeBannerAd = function(e) {
var t = this;
if (r.default.IsVIVO) {
if (!qg.isSupportNativeAd) {
l.utils.showLog("当前引擎不支持原生Banner广告！");
return;
}
var i = e;
l.utils.showLog("curPosIdIndexNativeBanner:" + this._curPosIdIndexNativeBanner);
if (l.utils.config.vivoconfig.nativeBannerIds && l.utils.config.vivoconfig.nativeBannerIds[this._curPosIdIndexNativeBanner]) {
l.utils.showLog("创建原生广告Banner。 posId:" + l.utils.config.vivoconfig.nativeBannerIds[this._curPosIdIndexNativeBanner]);
var o = qg.createNativeAd({
posId: l.utils.config.vivoconfig.nativeBannerIds[this._curPosIdIndexNativeBanner]
});
if (o) {
o.onLoad(function(e) {
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
if (e && e.adList && e.adList.length > 0) {
t._startBannerTimerTask = new Date().getTime();
l.utils.showLog("原生Banner广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var n = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (t._checkNativeDataValid(n) || "true" == t.getNativeBannerInfo().show_st_banner) {
t._curPosIdIndexNativeBanner = 0;
t._showNativeBanner(o, n);
t._curNativeBannerInfo.nativeBannerAd = o;
t._curNativeBannerInfo.data = n;
if (t._bannerAd) {
var s = t._bannerAd.hide();
s && s.then(function() {
console.log("banner广告隐藏成功");
}).catch(function(e) {
console.log("banner广告隐藏失败", JSON.stringify(e));
var i = t._bannerAd.destroy();
i && i.then(function() {
console.log("banner广告销毁成功");
}).catch(function(e) {
console.log("banner广告销毁失败", JSON.stringify(e));
});
});
}
return;
}
}
l.utils.showLog("原生Banner广告资源出错！");
t._curPosIdIndexNativeBanner++;
if (t._curPosIdIndexNativeBanner < l.utils.config.vivoconfig.nativeBannerIds.length) t._createNativeBannerAd(i); else {
t._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == t.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if ("native" == t.ServerConfig.banner_first_ad) {
l.utils.showLog("开始展示小游戏广告条！");
t._createMiniGameBannerAd();
}
}
}
});
var n = o.load();
n && n.then(function(e) {
console.log("res", JSON.stringify(e));
}).catch(function(e) {
l.utils.showLog("原生Banner广告资源拉取失败！" + JSON.stringify(e));
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
t._curPosIdIndexNativeBanner++;
if (t._curPosIdIndexNativeBanner < l.utils.config.vivoconfig.nativeBannerIds.length) t._createNativeBannerAd(i); else {
t._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == t.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if ("native" == t.ServerConfig.banner_first_ad) {
l.utils.showLog("开始展示小游戏广告条！");
t._createMiniGameBannerAd();
}
}
}
});
} else {
this._curPosIdIndexNativeBanner++;
if (l.utils.config.vivoconfig.nativeBannerIds && this._curPosIdIndexNativeBanner < l.utils.config.vivoconfig.nativeBannerIds.length) this._createNativeBannerAd(i); else {
this._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if ("native" == this.ServerConfig.banner_first_ad) {
l.utils.showLog("开始展示小游戏广告条！");
this._createMiniGameBannerAd();
}
}
}
}
}
};
t.prototype._createNativeInsertAd = function(e) {
var t = this;
if (r.default.IsVIVO) {
if (!qg.isSupportNativeAd) {
l.utils.showLog("当前引擎不支持原生插屏广告！");
return;
}
var i = e;
l.utils.showLog("curPosIdIndexNativeInsert:" + this._curPosIdIndexNativeInser);
if (l.utils.config.vivoconfig.nativeInsertIds && l.utils.config.vivoconfig.nativeInsertIds[this._curPosIdIndexNativeInser]) {
l.utils.showLog("创建原生插屏广告。 posId:" + l.utils.config.vivoconfig.nativeInsertIds[this._curPosIdIndexNativeInser]);
var o = qg.createNativeAd({
posId: l.utils.config.vivoconfig.nativeInsertIds[this._curPosIdIndexNativeInser]
});
if (o) {
o.onLoad(function(e) {
if (e && e.adList && e.adList.length > 0) {
l.utils.showLog("原生插屏广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var n = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (t._checkNativeInsertDataValid(n)) {
t._curPosIdIndexNativeInser = 0;
t._showNativeInsert(o, n);
return;
}
l.utils.showLog("原生插屏广告资源不合法！");
}
l.utils.showLog("原生插屏广告资源出错！");
t._curPosIdIndexNativeInser++;
if (t._curPosIdIndexNativeInser < l.utils.config.vivoconfig.nativeInsertIds.length) t._createNativeInsertAd(i); else {
t._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
t._createMiniGameInsertAd();
}
}
});
o.onError(function(e) {
l.utils.showLog("原生插屏广告创建失败！" + JSON.stringify(e));
});
var n = o.load();
n && n.then(function(e) {
console.log("res", JSON.stringify(e));
}).catch(function(e) {
l.utils.showLog("原生插屏广告资源拉取失败！" + JSON.stringify(e));
t._curPosIdIndexNativeInser++;
if (t._curPosIdIndexNativeInser < l.utils.config.vivoconfig.nativeInsertIds.length) t._createNativeInsertAd(i); else {
t._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
t._createMiniGameInsertAd();
}
}
});
} else {
this._curPosIdIndexNativeInser++;
if (l.utils.config.vivoconfig.nativeInsertIds && this._curPosIdIndexNativeInser < l.utils.config.vivoconfig.nativeInsertIds.length) this._createNativeInsertAd(i); else {
this._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
this._createMiniGameInsertAd();
}
}
}
}
}
};
t.prototype._showNativeBanner = function(e, t) {
if (r.default.IsVIVO && t) {
l.utils.showLog("显示原生banner");
cc.isValid(this._nativeBannerNode) && this._nativeBannerNode && this._nativeBannerNode.destroy();
l.utils.showLog("创建原生广告banner位");
this._nativeBannerNode = cc.instantiate(l.utils.config.otherconfig.nativeBanner);
this._nativeBannerNode.position = u.default.position(cc.winSize.width / 2, this._nativeBannerNode.height * this._nativeBannerNode.scaleY / 2);
cc.director.getScene().addChild(this._nativeBannerNode, 1e3);
if (this._nativeBannerNode) {
this._nativeBannerNode.active = !0;
var i = this._nativeBannerNode.getComponent("YZ_NativeBanner");
i ? i.init(e, t, this.getNativeBannerInfo()) : l.utils.showLog("NativeBanner组件不存在!");
} else l.utils.showLog("原生广告banner位没有创建！");
}
};
t.prototype._showNativeInsert = function(e, t) {
if (r.default.IsVIVO && t) {
l.utils.showLog("显示原生插屏");
if (!cc.isValid(this._nativeInsertNode) || !this._nativeInsertNode && l.utils.config.otherconfig.nativeInsert) {
l.utils.showLog("创建原生插屏广告位");
this._nativeInsertNode = cc.instantiate(l.utils.config.otherconfig.nativeInsert);
this._nativeInsertNode.position = u.default.position(cc.winSize.width / 2, cc.winSize.height / 2);
cc.director.getScene().addChild(this._nativeInsertNode, 9999);
}
if (this._nativeInsertNode) {
var i = this._nativeInsertNode.getComponent("YZ_NativeInsert");
if (i) {
this._nativeInsertAdShowCount = 0;
i.init(e, t);
} else l.utils.showLog("NativeInsert组件不存在!");
} else l.utils.showLog("原生广告插屏位没有创建！");
if (!this.ServerConfig.show_insert_hide_banner || "false" != this.ServerConfig.show_insert_hide_banner) {
l.utils.showLog("原生广告插屏展示后隐藏Banner！");
this.HideBanner();
}
}
};
t.prototype.ShowCloseBtnBanner = function(e, t) {
var i = this;
void 0 === e && (e = a.BannerLocation.Home);
l.utils.showLog("ShowCloseBtnBanner >>>>>>>>>.");
var o = 0, n = t.closeBtn, s = cc.winSize.height;
if (this.ServerConfig) {
this.ServerConfig.is_move_btn && (o = this.ServerConfig.is_move_btn);
l.utils.showLog(0 == o ? "显示banner,且按钮在上面" : "显示Banner,按钮居底部且" + o + "毫秒后移动");
setTimeout(function() {
l.utils.showLog("延迟调用关闭按钮的Banner >>>>");
i.ShowBanner(e, t);
l.utils.showLog("utils - adY:240");
if (n) {
n.y = -(s / 2 - 240) + n.height;
l.utils.showLog("btnClose.y" + n.y);
}
}, o);
}
};
t.prototype._checkNativeDataValid = function(e) {
return !!e && (e.icon || e.imgUrlList && e.imgUrlList.length > 0);
};
t.prototype._checkNativeInsertDataValid = function(e) {
return !!e && (e.icon || e.imgUrlList && e.imgUrlList.length > 0);
};
t.prototype._checkNativeSignDataValid = function(e) {
return !!e && (e.imgUrlList && e.imgUrlList.length > 0);
};
t.prototype.createNativeTryGameWidget = function(e) {
void 0 === e && (e = null);
this._nativeTryGameNode && cc.isValid(this._nativeTryGameNode) && this._nativeTryGameNode.destroy();
var t = cc.instantiate(l.utils.config.otherconfig.nativeTryGameWidget);
if (t) {
this._nativeTryGameNode = t;
this._nativeTryGameNode.zIndex = 9999;
}
var i = (t = this._nativeTryGameNode).getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
i.isAlignTop = !0;
i.isAlignBottom = !1;
i.top = e.top;
} else if (null != e.bottom) {
i.isAlignTop = !1;
i.isAlignBottom = !0;
i.bottom = e.bottom;
}
if (null != e.left) {
i.isAlignLeft = !0;
i.isAlignRight = !1;
i.left = e.left;
} else if (null != e.right) {
i.isAlignLeft = !1;
i.isAlignRight = !0;
i.right = e.right;
}
null != e.parent && (t.parent = e.parent);
}
i.updateAlignment();
t.active = !0;
this._nativeTryGameNode && this._nativeTryGameNode.getComponent(c.default).init();
};
t.prototype.hideNativeTryGameWidget = function() {
this._nativeTryGameNode && cc.isValid(this._nativeTryGameNode) && this._nativeTryGameNode.destroy();
};
t.prototype.ShowSingleNativeAd = function(e) {
if (l.utils.config.otherconfig.singleNativeAd) {
this.signleNativeAd && cc.isValid(this.signleNativeAd) && this.signleNativeAd.destroy();
this.signleNativeAd = cc.instantiate(l.utils.config.otherconfig.singleNativeAd);
var t = this.signleNativeAd.getComponent("YZ_NativeItem");
t.showType = 2;
t.params = e;
this._curNativeItem = t;
e && e.parent && e.parent.addChild(this.signleNativeAd, cc.macro.MAX_ZINDEX);
this.createNativeAd();
l.utils.showLog("单个原生广告创建成功！");
return this.signleNativeAd;
}
l.utils.showLog("未找到预制体 singleNativeAd, 请查看CommonUtils组件上是否赋值！");
return null;
};
t.prototype.createNativeAd = function(e, t) {
var i = this;
void 0 === e && (e = null);
l.utils.showLog("_createNativeAd >>>>>");
if (r.default.IsVIVO) {
t && (this._curNativeItem = t);
var o = this.ServerConfig.st_native_ad_refresh_time ? this.ServerConfig.st_native_ad_refresh_time : 0;
if (this._nativeAdObject && this._nativeAdObject.data && !this._nativeAdObject.is_reportClick && (new Date().getTime() - this._singleAdCreateTime) / 1e3 < o) {
l.utils.showLog("当前原生广告的展示时间" + (new Date().getTime() - this._singleAdCreateTime) / 1e3 + "秒，未达刷新时间" + o + "秒限制，直接使用上一次数据！");
this._showNativeAd();
return;
}
l.utils.showLog("_curPosIdIndexSingleNative:" + this._curPosIdIndexSingleNative + "  #this._nativeSingleAd.length" + this._nativeSingleAd.length);
var n = this._nativeSingleAd[this._curPosIdIndexSingleNative];
if (!n && l.utils.config.vivoconfig.nativeSingleAdIds && l.utils.config.vivoconfig.nativeSingleAdIds[this._curPosIdIndexSingleNative]) {
l.utils.showLog("创建原生广告。 posId:" + l.utils.config.vivoconfig.nativeSingleAdIds[this._curPosIdIndexSingleNative]);
if (n = qg.createNativeAd({
posId: l.utils.config.vivoconfig.nativeSingleAdIds[this._curPosIdIndexSingleNative]
})) {
this._nativeSingleAd.push(n);
n.onLoad(function(e) {
if (e && e.adList && e.adList.length > 0) {
l.utils.showLog("原生广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var t = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (i._checkNativeSignDataValid(t)) {
i._singleAdCreateTime = new Date().getTime();
i._curPosIdIndexSingleNative = 0;
i._nativeData = t;
i._nativeAd = n;
i._showNativeAd();
return;
}
l.utils.showLog("原生广告资源不合法！");
}
l.utils.showLog("原生广告资源出错！");
i._curPosIdIndexSingleNative++;
if (i._curPosIdIndexSingleNative < l.utils.config.vivoconfig.nativeSingleAdIds.length) i.createNativeAd(); else {
i._curPosIdIndexSingleNative = 0;
l.utils.showLog("单个原生广告ID遍历完毕，无法展示！");
}
});
n.onError(function(e) {
l.utils.showLog("原生单个广告资源拉取失败！" + e.code + e.msg);
i._curPosIdIndexSingleNative++;
if (i._curPosIdIndexSingleNative < l.utils.config.vivoconfig.nativeSingleAdIds.length) i.createNativeAd(); else {
i._curPosIdIndexSingleNative = 0;
l.utils.showLog("单个原生广告ID遍历完毕，无法展示！");
}
});
}
}
if (n) {
l.utils.showLog("nativeSingleAd reload");
n.load();
} else {
this._curPosIdIndexSingleNative++;
if (l.utils.config.vivoconfig.nativeSingleAdIds && this._curPosIdIndexSingleNative < l.utils.config.vivoconfig.nativeSingleAdIds.length) this.createNativeAd(); else {
this._curPosIdIndexSingleNative = 0;
l.utils.showLog("单个原生广告ID 遍历完毕，无法展示！");
}
}
}
};
t.prototype._showNativeAd = function() {
this._curNativeItem && cc.isValid(this._curNativeItem.node) && this._curNativeItem.init(this.getNativeAdData());
};
t.prototype.getNativeAdData = function() {
this._nativeAdObject || (this._nativeAdObject = new h.default());
this._nativeAdObject._nativeObj = this._nativeAd;
if (this._nativeAdObject.data && this._nativeAdObject.data.adId != this._nativeData.adId) {
this._nativeAdObject.is_reportClick = !1;
this._nativeAdObject.is_reportShow = !1;
}
this._nativeAdObject.data = this._nativeData;
if (this._nativeData && this._nativeAd) {
l.utils.showLog("获取原生数据 >>>", this._nativeData, "...", this._nativeAdObject);
return this._nativeAdObject;
}
return null;
};
t.prototype.showCustomAd = function(e) {
var t = this;
if (l.utils.config.vivoconfig.customAdInfos.length <= 0) l.utils.showLog("服务器配置未配置模版广告！"); else if (qg.createCustomAd) {
clearTimeout(this._refreshCustomAdTimerTask);
var i = l.utils.config.vivoconfig.getCustomAdInfoInfo(e.location);
l.utils.showLog("当前位置 obj >>>", i.customAdObj);
if ("true" != i.is_show_ad) {
l.utils.showLog("当前位置服务器配置为不显示模版广告！");
return;
}
this._lastLocation != e.location && this.hideCustomAd();
if (null != i.customAdObj) {
this._customAd = i.customAdObj;
if (i.customAdObj.isShow()) l.utils.showLog("当前位置的模版正在显示中，不执行加载！"); else {
l.utils.showLog("当前位置上次展示过原生模版，当前重新显示出来！");
i.customAdObj.show().then(function() {
"true" == i.hide_banner && t.HideBanner();
l.utils.showLog("重新展示成功！");
}).catch(function(o) {
i.customAdObj.destroy();
i.customAdObj = null;
l.utils.showLog("重新展示原生模板广告失败", JSON.stringify(o));
t.showCustomAd(e);
});
}
i.refresh_time > 0 && (this._refreshCustomAdTimerTask = setTimeout(function() {
l.utils.showLog("定时" + i.refresh_time + "秒刷新原生模版");
t.showCustomAd(e);
}, 1e3 * i.refresh_time));
return;
}
this._lastLocation = e.location;
this._isHide = !1;
var o = {};
i.top > 0 ? o.top = i.top / cc.winSize.height * this.SysInfo.screenHeight : i.bottom > 0 && (o.top = this.SysInfo.screenHeight - i.height - i.bottom / cc.winSize.height * this.SysInfo.screenHeight);
i.left > 0 ? o.left = i.left / cc.winSize.width * this.SysInfo.screenWidth : i.right > 0 && (o.left = this.SysInfo.screenWidth - i.width - i.right / cc.winSize.width * this.SysInfo.screenWidth);
l.utils.showLog("custom ad style>>" + JSON.stringify(o));
var n = qg.createCustomAd({
posId: i.id,
style: o
});
n.onError(function(e) {
try {
l.utils.showLog("原生模板广告加载失败", JSON.stringify(e));
} catch (e) {
console.log("模版异常：#errMsg=" + e);
}
});
n.onClose(function() {
l.utils.showLog("原生模板广告 onClose");
n.destroy();
n = null;
i.customAdObj = null;
});
n.onLoad(function() {
n.offLoad();
l.utils.showLog("原生模板广告加载成功！");
t._customAd = n;
i.customAdObj && i.customAdObj.destroy();
i.customAdObj = n;
t._isHide ? l.utils.showLog("原生模板广告调用了隐藏，当前广告不显示！") : n.show().then(function() {
"true" == i.hide_banner && t.HideBanner();
l.utils.showLog("原生模板广告展示完成！");
}).catch(function(e) {
l.utils.showLog("原生模板广告展示失败", JSON.stringify(e));
});
});
i.refresh_time > 0 && (this._refreshCustomAdTimerTask = setTimeout(function() {
l.utils.showLog("定时" + i.refresh_time + "秒刷新原生模版");
t.showCustomAd(e);
}, 1e3 * i.refresh_time));
} else l.utils.showLog("当前平台不支持原生模版广告！");
};
t.prototype.showCustomAdV2 = function(e) {
var t = this;
if (l.utils.config.vivoconfig.customAdInfos.length <= 0) l.utils.showLog("服务器配置未配置模版广告！"); else if (qg.createCustomAd) {
clearTimeout(this._refreshCustomAdTimerTask);
var i = l.utils.config.vivoconfig.getCustomAdInfoInfo(e.location);
l.utils.showLog("当前位置的广告对象 >>>", i.customAdObj);
if ("true" != i.is_show_ad) {
l.utils.showLog("当前位置服务器配置为不显示模版广告！");
return;
}
var o = !0;
if (this._lastLocation != e.location) this.hideCustomAd(); else if (null != i.customAdObj) if (i.customAdObj.isShow()) l.utils.showLog("当前位置的模版正在显示中，不执行加载！"); else {
l.utils.showLog("当前位置上次展示过原生模版，当前重新显示出来！");
o = !1;
i.customAdObj.show().then(function() {
"true" == i.hide_banner && t.HideBanner();
l.utils.showLog("重新展示成功！");
}).catch(function(e) {
o = !0;
i.customAdObj.destroy();
i.customAdObj = null;
l.utils.showLog("重新展示原生模板广告失败", JSON.stringify(e));
});
}
this._lastLocation = e.location;
this._isHide = !1;
var n = {};
i.top > 0 ? n.top = i.top / cc.winSize.height * this.SysInfo.screenHeight : i.bottom > 0 && (n.top = this.SysInfo.screenHeight - i.height - i.bottom / cc.winSize.height * this.SysInfo.screenHeight);
i.left > 0 ? n.left = i.left / cc.winSize.width * this.SysInfo.screenWidth : i.right > 0 && (n.left = this.SysInfo.screenWidth - i.width - i.right / cc.winSize.width * this.SysInfo.screenWidth);
l.utils.showLog("custom ad style>>" + JSON.stringify(n));
var s = qg.createCustomAd({
posId: i.id,
style: n
});
s.onError(function(e) {
try {
l.utils.showLog("原生模板广告加载失败", JSON.stringify(e));
} catch (e) {
console.log("模版异常：#errMsg=" + e);
}
});
s.onClose(function() {
l.utils.showLog("原生模板广告 onClose");
s.destroy();
s = null;
i.customAdObj = null;
});
s.onLoad(function() {
l.utils.showLog("原生模板广告加载成功！");
t._customAd = s;
i.customAdObj && i.customAdObj.destroy();
i.customAdObj = s;
!t._isHide && o ? s.show().then(function() {
"true" == i.hide_banner && t.HideBanner();
l.utils.showLog("原生模板广告展示完成！");
}).catch(function(e) {
l.utils.showLog("原生模板广告展示失败", JSON.stringify(e));
}) : l.utils.showLog("原生模板广告调用了隐藏或者当前不刷新广告，当前广告不显示！");
});
i.refresh_time > 0 && (this._refreshCustomAdTimerTask = setTimeout(function() {
l.utils.showLog("定时" + i.refresh_time + "秒刷新原生模版");
t.showCustomAd(e);
}, 1e3 * i.refresh_time));
} else l.utils.showLog("当前平台不支持原生模版广告！");
};
t.prototype.hideCustomAd = function() {
this._isHide = !0;
clearTimeout(this._refreshCustomAdTimerTask);
this._customAd && this._customAd.hide();
};
return t = n([ f ], t);
}(s.default));
i.default = _;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./CompatibleTool": "CompatibleTool",
"./NativeTryGamesWidget": "NativeTryGamesWidget",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_NativeAdObject": "YZ_NativeAdObject"
} ],
AdAgentWechat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4e11aZbbXVLHacOspfN2ARf", "AdAgentWechat");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = e("./CompatibleTool"), u = cc._decorator, h = u.ccclass, d = (u.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._curBannerAd = null;
t._videoAd = null;
t._videoCallback = null;
t._insertAd = null;
t._rewardInsertNode = null;
t._sysInfo = null;
t._bannerSizePercent = .1;
t._bannerBottom = 0;
t._oldBannerLocation = a.BannerLocation.None;
t._showBannerTimerId = 0;
t.isFirstShowInsertAd = !0;
t._customAdObjs = [];
t._nativeCustomAdObjs = [];
t.nativeBannerAd = null;
t.nativeIntersititialAd = null;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.wechatTool.ServerConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "sysInfo", {
get: function() {
if (this._sysInfo) return this._sysInfo;
this._sysInfo = l.utils.wechatTool.getSystemInfo();
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
t.prototype.Init = function() {
var e = this;
r.default.IsWechat && l.utils.registerServerInitEvent(function() {
e._initVideoAd();
e._initInsertAd();
l.utils.getConfigByKey("game_time_report") && l.utils.scheduleOnce(function() {
l.utils.wechatTool.reportAttributedEvent(a.AttributedType.GameAddiction, a.AttributedKey.GameAddiction, a.AttributedValue.GameTimeAction);
}, l.utils.getConfigByKey("game_time_report"));
}, this);
};
t.prototype._initVideoAd = function() {
if (r.default.IsWechat) {
if (!l.utils.wechatTool.isOverMinVersion("2.0.4")) {
l.utils.showLog("当前版本不支持视频广告!");
return;
}
if (!this._videoAd) {
l.utils.showLog("初始化视频!");
if (!l.utils.config.wechatconfig.videoId) {
l.utils.showLog("视频ID配置错误!");
return;
}
l.utils.showLog("视频广告ID:", l.utils.config.wechatconfig.videoId.trim());
this._videoAd = wx.createRewardedVideoAd({
adUnitId: l.utils.config.wechatconfig.videoId
});
var e = this;
if (this._videoAd) {
l.utils.showLog("初始化注册视频回调!");
this._videoAd.onLoad(function() {
l.utils.showLog("激励视频加载成功");
}.bind(this));
this._videoAd.onError(function(e) {
l.utils.showLog("激励视频加载失败!", e.code, e.msg);
}.bind(this));
this._videoAd.onClose(function(t) {
if (t && t.isEnded || void 0 === t) {
l.utils.showLog("激励视频广告完成，发放奖励");
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else {
l.utils.showLog("激励视频广告取消关闭，不发放奖励");
if (e._videoCallback) {
e._videoCallback(!1, "观看完视频才能获得奖励!");
e._videoCallback = null;
}
}
}.bind(this));
} else l.utils.showLog("激励视频初始化失败!");
}
}
};
t.prototype._createBanner = function(e, t) {
var i = this;
void 0 === t && (t = null);
if (r.default.IsWechat) {
var o = e, n = t;
if (n && n.width) {
this._bannerSizePercent = n.width < 0 ? 0 : n.width;
this._bannerSizePercent = n.width > 1 ? 1 : n.width;
}
if (n && n.bottom) {
this._bannerBottom = n.bottom < 0 ? 0 : n.bottom;
this._bannerBottom = n.bottom > cc.winSize.height ? cc.winSize.height : n.bottom;
}
var s = {
adUnitId: l.utils.config.wechatconfig.getBannerId(o),
style: {
left: 0,
width: 300,
top: 0
}
};
if (this._oldBannerLocation != o && this._curBannerAd) {
this._curBannerAd.destroy();
this._oldBannerLocation = o;
}
var a = wx.createBannerAd(s);
if (a) {
a.onError(function(o) {
l.utils.showLog("广告条加载失败! ", JSON.stringify(o));
a && a.destroy();
i.ServerConfig.banner_first_ad && "default" == i.ServerConfig.banner_first_ad && i.showNativeBannerAd(e, t);
});
var c = this;
a.onLoad(function() {
a.show().then(function() {
var e = c._curBannerAd;
e && e.destroy();
c._curBannerAd = a;
l.utils.showLog("默认Banner广告显示成功!");
i.HideNativeBanner();
}).catch(function(o) {
l.utils.showLog("Banner广告出错", JSON.stringify(o));
a && a.destroy();
i.ServerConfig.banner_first_ad && "default" == i.ServerConfig.banner_first_ad && i.showNativeBannerAd(e, t);
});
});
a.onResize(function(e) {
a.style.width = l.utils.wechatTool.getSystemInfo().screenWidth * c._bannerSizePercent;
a.style.left = .5 * (l.utils.wechatTool.getSystemInfo().screenWidth - e.width);
c._bannerBottom == cc.winSize.height ? a.style.top = 0 : a.style.top = l.utils.wechatTool.getSystemInfo().screenHeight - e.height - c._bannerBottom;
});
} else l.utils.showLog("广告条创建失败!");
}
};
t.prototype.createCustomADBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Game);
void 0 === t && (t = null);
if (r.default.IsWechat) {
var i = e;
l.utils.config.wechatconfig.getBannerId(i) || (i = a.BannerLocation.Home);
var o = t;
if (o && o.width) {
this._bannerSizePercent = o.width < 0 ? 0 : o.width;
this._bannerSizePercent = o.width > 1 ? 1 : o.width;
}
if (o && o.bottom) {
this._bannerBottom = o.bottom < 0 ? 0 : o.bottom;
this._bannerBottom = o.bottom > cc.winSize.height ? cc.winSize.height : o.bottom;
}
var n = {
adUnitId: l.utils.config.wechatconfig.getBannerId(i),
style: {
left: 0,
width: 300,
top: 0
}
};
if (this._oldBannerLocation != i && this._curBannerAd) {
this._curBannerAd.destroy();
this._oldBannerLocation = i;
}
var s = wx.createBannerAd(n);
if (s) {
s.onError(function(e) {
l.utils.showLog("广告条加载失败! ", JSON.stringify(e));
s && s.destroy();
});
var c = this;
s.onLoad(function() {
cc.director.on("CloseCustomADPanel", function() {
s.show().then(function() {
var e = c._curBannerAd;
e && e.destroy();
c._curBannerAd = s;
l.utils.showLog("Banner广告显示成功!");
var t = 18;
l.utils.wechatTool.ServerConfig.refresh_ad_time && (t = l.utils.wechatTool.ServerConfig.refresh_ad_time);
clearInterval(c._showBannerTimerId);
c._showBannerTimerId = setInterval(function() {
l.utils.showLog("显示Banner广告！location:" + i + "; args:" + JSON.stringify(o) + "; 间隔时间:" + l.utils.wechatTool.ServerConfig.refresh_ad_time);
c._showBannerTimer(i, o);
}.bind(c), 1e3 * t);
}).catch(function(e) {
l.utils.showLog("Banner广告出错", JSON.stringify(e));
s && s.destroy();
});
cc.director.targetOff(c);
}, c);
});
s.onResize(function(e) {
s.style.width = l.utils.wechatTool.getSystemInfo().screenWidth * c._bannerSizePercent;
s.style.left = .5 * (l.utils.wechatTool.getSystemInfo().screenWidth - e.width);
c._bannerBottom == cc.winSize.height ? s.style.top = 0 : s.style.top = l.utils.wechatTool.getSystemInfo().screenHeight - e.height - c._bannerBottom;
});
} else l.utils.showLog("广告条创建失败!");
}
};
t.prototype._initInsertAd = function() {
var e = this;
if (r.default.IsWechat) {
if (!l.utils.wechatTool.isOverMinVersion("2.6.0")) {
l.utils.showLog("当前版本不支持插屏广告!");
return;
}
if (!this._insertAd) {
l.utils.showLog("初始化插屏广告!");
if (!l.utils.config.wechatconfig.insertId) {
l.utils.showLog("插屏广告ID配置错误!");
return;
}
l.utils.showLog("插屏广告ID:", l.utils.config.wechatconfig.insertId.trim());
this._insertAd = wx.createInterstitialAd({
adUnitId: l.utils.config.wechatconfig.insertId.trim()
});
if (this._insertAd) {
this._insertAd.onLoad(function() {
l.utils.showLog("插屏广告拉取成功!");
});
this._insertAd.onError(function(t) {
l.utils.showLog("插屏广告拉取失败!", JSON.stringify(t));
e.ServerConfig.intersititial_first_ad && "default" == e.ServerConfig.intersititial_first_ad && e.showNativeIntersititialAd();
});
this._insertAd.onClose(function() {
l.utils.showLog("插屏广告被关闭!");
});
} else l.utils.showLog("插屏组件初始化失败!");
}
}
};
t.prototype._showBannerTimer = function(e, t) {
var i = e, o = t;
l.utils.showLog("显示Banner广告xxx！location:" + i + "; args:" + JSON.stringify(o) + "; 间隔时间:" + l.utils.wechatTool.ServerConfig.refresh_ad_time + ";优先级：" + this.ServerConfig.banner_first_ad);
if (this.ServerConfig.banner_first_ad && "native" == this.ServerConfig.banner_first_ad) this.showNativeBannerAd(e, t); else if (i == a.BannerLocation.None) l.utils.showLog("未定义的BannerLocation,", i); else if (l.utils.config.wechatconfig.getBannerId(i)) this._createBanner(i, o); else {
l.utils.showLog("未找到位置为 " + i + " 的广告ID!");
this._createBanner(a.BannerLocation.Home, o);
}
};
t.prototype.ShowBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
if (r.default.IsWechat) {
if (!l.utils.wechatTool.isOverMinVersion("2.0.4")) {
l.utils.showLog("当前版本不支持Banner广告!");
return;
}
if (l.utils.wechatTool.ServerConfig) {
var i = e, o = t;
this._showBannerTimer(i, o);
var n = 18;
l.utils.wechatTool.ServerConfig.refresh_ad_time && (n = l.utils.wechatTool.ServerConfig.refresh_ad_time);
clearInterval(this._showBannerTimerId);
this._showBannerTimerId = setInterval(function() {
l.utils.showLog("显示Banner广告！location:" + i + "; args:" + JSON.stringify(o) + "; 间隔时间:" + l.utils.wechatTool.ServerConfig.refresh_ad_time);
this._showBannerTimer(i, o);
}.bind(this), 1e3 * n);
} else l.utils.showLog("服务器配置数据未初始化!");
}
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
if (r.default.IsWechat) {
l.utils.showLog("隐藏广告条");
clearInterval(this._showBannerTimerId);
this.HideDefaultBanner();
this.HideNativeBanner();
}
};
t.prototype.HideDefaultBanner = function() {
this._curBannerAd && this._curBannerAd.hide();
};
t.prototype.HideNativeBanner = function() {
this.nativeBannerAd && this.nativeBannerAd.hide();
};
t.prototype.ShowInterstitial = function(e) {
var t = this;
void 0 === e && (e = a.BannerLocation.Home);
if (r.default.IsWechat) {
if (!l.utils.wechatTool.isOverMinVersion("2.6.0")) {
l.utils.showLog("当前版本不支持插屏广告!");
return;
}
var i = 0;
l.utils.wechatTool && l.utils.wechatTool.ServerConfig && l.utils.wechatTool.ServerConfig.intersititia_delay_show_time && (i = l.utils.wechatTool.ServerConfig.intersititia_delay_show_time);
l.utils.showLog("插屏广告延时展示！ delayTime:" + i + "秒");
setTimeout(function() {
if (t.ServerConfig && t.ServerConfig.intersititial_first_ad && "box" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("优先展示盒子插屏广告!");
if (t.canShowBoxInsertAd()) t._createBoxInsertAd(); else {
l.utils.showLog("盒子插屏广告展示失败，展示默认插屏!");
t._createMiniGameInsertAd();
}
} else if (t.ServerConfig && t.ServerConfig.intersititial_first_ad && "native" == t.ServerConfig.intersititial_first_ad) t.showNativeIntersititialAd(); else {
l.utils.showLog("优先展示小游戏插屏广告!");
t._createMiniGameInsertAd();
}
}, 1e3 * i);
}
};
t.prototype._createBoxInsertAd = function() {
l.utils.rewardCallFunc = null;
l.utils.rewardCloseFunc = null;
if (l.utils.config && l.utils.config.otherconfig.beforGameOverRecGamesPanel && l.utils.getRecommondGameList()) {
var e = cc.instantiate(l.utils.config.otherconfig.beforGameOverRecGamesPanel);
e.zIndex = 999999;
var t = e.getComponent("BeforGameOverRecGamesPanel");
cc.director.getScene().addChild(e);
t._location = a.SubLocation.isBoxInsertAd;
t.init(l.utils.getRecommondGameList());
t.show();
} else l.utils.showLog("互推插屏展示失败！");
};
t.prototype.canShowBoxInsertAd = function() {
var e = l.utils.getRecommondGameList();
return !!(e && e.length > 0);
};
t.prototype._createMiniGameInsertAd = function() {
var e = this;
if (this._insertAd) this._insertAd.show().then(function() {
l.utils.showLog("插屏广告展示成功!");
if (e.isFirstShowInsertAd && "true" == l.utils.getConfigByKey("insert_ad_first_show_active")) {
e.isFirstShowInsertAd = !1;
l.utils.wechatTool.reportAttributedEvent(a.AttributedType.GameAddiction, a.AttributedKey.GameAddiction, a.AttributedValue.InsertAdFirstShowAction);
}
}).catch(function(t) {
l.utils.showLog("插屏广告展示失败!", JSON.stringify(t));
e.ServerConfig.intersititial_first_ad && "default" == e.ServerConfig.intersititial_first_ad && e.showNativeIntersititialAd();
}); else {
l.utils.showLog("插屏广告未初始化");
this.ServerConfig.intersititial_first_ad && "default" == this.ServerConfig.intersititial_first_ad && this.showNativeIntersititialAd();
}
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsWechat) {
this._videoCallback = e;
if (this.checkRewardInsertIsShow() && l.utils.wechatTool && l.utils.wechatTool.ServerConfig && l.utils.wechatTool.ServerConfig.reward_first_ad && "video" != l.utils.wechatTool.ServerConfig.reward_first_ad) {
l.utils.showLog("<<<服务器默认优先展示激励插屏>>>");
this.showRewardInsert();
return;
}
if (!l.utils.wechatTool.isOverMinVersion("2.0.4")) {
l.utils.showLog("当前版本不支持视频广告!");
this._videoCallback && this.showRewardInsert();
return;
}
if (this._videoAd) this._videoAd.show().then(function() {
l.utils.showLog("视频显示成功！");
}.bind(this)).catch(function(e) {
l.utils.showLog("视频未加载！");
this._videoAd.load();
this._videoCallback && this.showRewardInsert();
}.bind(this)); else {
l.utils.showLog("视频未初始化!");
this._videoCallback && this.showRewardInsert();
}
}
};
t.prototype.checkRewardInsertIsShow = function() {
var e = l.utils.getRecommondGameList();
if (l.utils.isSupportnavigateToMiniGame()) {
if (l.utils.wechatTool && l.utils.wechatTool.ServerConfig && l.utils.wechatTool.ServerConfig.is_reward_intersititia) {
if ("true" == l.utils.wechatTool.ServerConfig.is_reward_intersititia && e && e.length > 0) {
l.utils.showLog("激励插屏显示环境验证通过！");
return !0;
}
cc.warn("is_reward_intersititia 参数为false，激励插屏组件不显示！");
return !1;
}
cc.warn("配置中没有is_reward_intersititia参数，激励插屏组件组件不显示！");
return !1;
}
l.utils.showLog("当前平台不支持小程序跳转！");
return !1;
};
t.prototype.showRewardInsert = function() {
l.utils.showLog("show reward");
if (this.checkRewardInsertIsShow()) {
if ((!cc.isValid(this._rewardInsertNode) || !this._rewardInsertNode) && l.utils.config.otherconfig.rewardInsert) {
l.utils.showLog("创建激励插屏广告");
this._rewardInsertNode = cc.instantiate(l.utils.config.otherconfig.rewardInsert);
this._rewardInsertNode.position = c.default.position(cc.winSize.width / 2, cc.winSize.height / 2);
cc.director.getScene().addChild(this._rewardInsertNode, 9999);
}
if (this._rewardInsertNode) {
var e = this._rewardInsertNode.getComponent("RewardInsert");
if (e) {
e.isShow = !1;
l.utils.showLog("显示激励插屏组件！");
} else l.utils.showLog("RewardInsert组件不存在!");
} else l.utils.showLog("激励插屏没有创建！");
} else {
l.utils.adManager.videoCallBack && l.utils.adManager.videoCallBack(!1, "暂无视频广告！");
l.utils.adManager.videoCallBack = null;
}
};
t.prototype.hideRewardInsert = function() {
if (this._rewardInsertNode) {
var e = this._rewardInsertNode.getComponent("RewardInsert");
if (e) {
e.hide();
l.utils.showLog("隐藏激励插屏组件！");
} else l.utils.showLog("RewardInsert组件不存在!");
} else l.utils.showLog("激励插屏没有创建！");
};
t.prototype.ShowCloseBtnBanner = function(e, t) {
void 0 === e && (e = a.BannerLocation.Home);
if (r.default.IsWechat) {
if (l.utils.wechatTool && !l.utils.wechatTool.isOverMinVersion("2.0.4")) {
l.utils.showLog("当前版本不支持Banner广告!");
return;
}
if (l.utils.wechatTool.ServerConfig && (!l.utils.wechatTool.ServerConfig.isMoveBtn || "true" != l.utils.wechatTool.ServerConfig.isMoveBtn)) {
l.utils.showLog("服务器没有开启移动按钮，不显示广告！");
return;
}
if (l.utils.wechatTool && l.utils.wechatTool.ServerConfig) {
if (r.default.IsWechat) {
var i = e, o = {
adUnitId: l.utils.config.wechatconfig.getBannerId(i),
style: {
left: 0,
width: 300,
top: 0
}
};
if (this._oldBannerLocation != i && this._curBannerAd) {
this._curBannerAd.destroy();
this._oldBannerLocation = i;
}
var n = wx.createBannerAd(o);
if (n) {
n.onError(function(e) {
l.utils.showLog("广告条加载失败! ", JSON.stringify(e));
n && n.destroy();
});
var s = this;
n.onLoad(function() {
n.show().then(function() {
var e = s._curBannerAd;
e && e.destroy();
s._curBannerAd = n;
var i = t.closeBtn;
if (i) {
var o = cc.winSize.height, a = s.getBannerAdHeight();
l.utils.showLog("utils - adY:", a);
if (a > 0) {
i.y = -(o / 2 - a) + i.height;
l.utils.showLog("btnClose.y", i.y);
}
l.utils.showLog("关闭按钮---Banner广告显示成功!");
}
}).catch(function(e) {
l.utils.showLog("Banner广告出错", JSON.stringify(e));
n && n.destroy();
});
});
n.onResize(function(e) {
n.style.width = .6 * l.utils.wechatTool.getSystemInfo().screenWidth;
n.style.left = .5 * (l.utils.wechatTool.getSystemInfo().screenWidth - e.width);
n.style.top = l.utils.wechatTool.getSystemInfo().screenHeight - e.height;
});
} else l.utils.showLog("广告条创建失败!");
}
} else l.utils.showLog("服务器配置数据未初始化!");
}
};
t.prototype.canShowCrossWidget6 = function() {
if (r.default.IsWechat) {
if (l.utils.isSupportnavigateToMiniGame()) return !0;
cc.warn("当前平台不支持游戏内跳转，6元素交叉推广组件不显示！");
return !1;
}
};
t.prototype.showCrossWidget6 = function() {
if (this.canShowCrossWidget6()) {
if (l.utils.config.otherconfig.crossWidget6) return cc.instantiate(l.utils.config.otherconfig.crossWidget6);
l.utils.showLog("未找到预制体 CrossWidget6, 请查看CommonUtils组件上是否赋值！");
}
return null;
};
t.prototype.showStatementAds = function(e) {
var t = {
type: 0,
node: null
}, i = null;
this.ShowInterstitial();
if (l.utils.canShowCrossWidget6()) {
l.utils.showLog("服务器配置显示6个互推组件");
i = this.showCrossWidget6();
t.type = 1;
t.node = i;
return t;
}
return t;
};
t.prototype.getBannerAdHeight = function() {
if (this._curBannerAd) {
var e = 2 * this._curBannerAd.style.realHeight;
return null === e || void 0 === e || isNaN(e) ? 0 : e;
}
return 0;
};
t.prototype.showNativeTryGameWidget = function(e) {
void 0 === e && (e = null);
if (l.utils.wechatTool.isOverMinVersion("2.11.1")) if (this.ServerConfig) if (l.utils.config.wechatconfig.bannerBoxId) {
var t = 0, i = 0;
t = e.top ? e.top / cc.winSize.height * this.sysInfo.screenHeight : this.sysInfo.screenHeight - 112 - e.bottom / cc.winSize.height * this.sysInfo.screenHeight;
e.left ? i = e.left / cc.winSize.width * this.sysInfo.screenWidth : e.right && (i = this.sysInfo.screenWidth - 70 - e.right / cc.winSize.width * this.sysInfo.screenWidth);
var o = wx.createCustomAd({
adUnitId: l.utils.config.wechatconfig.bannerBoxId,
adIntervals: 30,
style: {
left: i,
top: t
}
});
o.onError(function(t) {
l.utils.showLog("原生广告异常！>>>>> #code=" + t.errCode + " #msg=" + t.errMsg);
if (e.onError) {
l.utils.showLog("执行微信原生广告异常回调！");
e.onError();
}
});
o.onLoad(function() {
l.utils.showLog("微信原生广告加载成功！");
o.show().then(function() {
if (e.onSuccess) {
l.utils.showLog("执行微信原生广告显示成功回调！");
e.onSuccess();
}
l.utils.showLog("微信原生广告显示成功！");
}).catch(function(e) {
l.utils.showLog("微信原生广告显示失败！");
});
});
this._customAdObjs.push(o);
} else l.utils.showLog("原生广告ID不存在"); else l.utils.showLog("组件未初始化！"); else l.utils.showLog("当前版本不支持原生广告!");
};
t.prototype.showCustomAd = function(e) {
void 0 === e && (e = null);
if (l.utils.wechatTool.isOverMinVersion("2.11.1")) if (this.ServerConfig) if (l.utils.config.wechatconfig.customAdInfos.length < 1) l.utils.showLog("原生广告配置不存在"); else {
var t = l.utils.config.wechatconfig.getCustomAdInfoInfo(e.location);
if (t) {
var i = 0, o = 0;
if ("false" == t.is_center) {
i = t.top > -1 ? t.top / cc.winSize.height * this.sysInfo.screenHeight : this.sysInfo.screenHeight - t.height - t.bottom / cc.winSize.height * this.sysInfo.screenHeight;
o = t.left > -1 ? t.left / cc.winSize.width * this.sysInfo.screenWidth : this.sysInfo.screenWidth - t.width - t.right / cc.winSize.width * this.sysInfo.screenWidth;
} else if ("updown" == t.is_center) {
l.utils.showLog("原生模版上下居中对齐！");
o = t.left > -1 ? t.left / cc.winSize.width * this.sysInfo.screenWidth : this.sysInfo.screenWidth - t.width - t.right / cc.winSize.width * this.sysInfo.screenWidth;
i = (this.sysInfo.screenHeight - t.height) / 2;
} else if ("about" == t.is_center) {
l.utils.showLog("原生模版左右居中对齐！");
o = (this.sysInfo.screenWidth - t.width) / 2;
i = t.top > -1 ? t.top / cc.winSize.height * this.sysInfo.screenHeight : this.sysInfo.screenHeight - t.height - t.bottom / cc.winSize.height * this.sysInfo.screenHeight;
} else {
l.utils.showLog("原生模版上下左右居中对齐！");
o = (this.sysInfo.screenWidth - t.width) / 2;
i = (this.sysInfo.screenHeight - t.height) / 2;
}
var n = wx.createCustomAd({
adUnitId: t.id,
adIntervals: t.refresh_time,
style: {
left: o,
top: i,
width: t.width
}
});
n.location = e.location;
l.utils.showLog("customAd style left=" + o + ",top=" + i + ";  screenWidth=" + this.sysInfo.screenWidth + ", screenHeight=" + this.sysInfo.screenHeight);
n.onError(function(t) {
l.utils.showLog("原生广告异常！>>>>> #code=" + t.errCode + " #msg=" + t.errMsg);
if (e.onError) {
l.utils.showLog("执行微信原生广告异常回调！");
e.onError();
}
});
n.onLoad(function() {
l.utils.showLog("微信原生广告加载成功！");
n.show().then(function() {
if (e.onSuccess) {
l.utils.showLog("执行微信原生广告显示成功回调！");
e.onSuccess();
}
l.utils.showLog("微信原生广告显示成功！");
}).catch(function(e) {
l.utils.showLog("微信原生广告显示失败！");
});
});
this._customAdObjs.push(n);
} else l.utils.showLog("当前位置未配置模版广告！");
} else l.utils.showLog("组件未初始化！"); else l.utils.showLog("当前版本不支持原生模版广告!");
};
t.prototype.hideCustomAd = function(e) {
for (var t = 0; t < this._customAdObjs.length; t++) if (this._customAdObjs[t]) if (e && "location" in e) {
if (this._customAdObjs[t].location == e.location) {
l.utils.showLog("隐藏位置：" + e.location + "的原生模版广告");
this._customAdObjs[t].destroy();
this._customAdObjs.splice(t, 1);
}
} else {
this._customAdObjs[t].destroy();
this._customAdObjs.splice(t, 1);
}
e && "location" in e || l.utils.showLog("隐藏所有位置的原生模版广告");
};
t.prototype.hideNativeTryGameWidget = function() {
for (var e = 0; e < this._customAdObjs.length; e++) this._customAdObjs[e] && this._customAdObjs[e].destroy();
for (e = 0; e < this._customAdObjs.length; e++) this._customAdObjs.splice(e, 1);
};
t.prototype.showNativeBannerAd = function(e, t) {
var i = this;
void 0 === t && (t = null);
l.utils.showLog("展示原生banner广告!");
if (l.utils.wechatTool.isOverMinVersion("2.11.1")) if (this.ServerConfig) if (l.utils.config.wechatconfig.nativeBannerId) {
var o = (this.sysInfo.screenWidth - 325) / 2, n = this.sysInfo.screenHeight - 100;
if (this.nativeBannerAd) this.nativeBannerAd.isShow() ? l.utils.showLog("原生Banner正在显示，不重新创建！") : this.nativeBannerAd.show().then(function() {
l.utils.showLog("原生Banner广告显示成功！");
i.HideDefaultBanner();
}).catch(function(o) {
l.utils.showLog("原生Banner广告显示失败！");
i.nativeBannerAd && i.nativeBannerAd.destroy();
i.nativeBannerAd = null;
i.ServerConfig.banner_first_ad && "native" == i.ServerConfig.banner_first_ad && i._createBanner(e, t);
}); else {
var s = wx.createCustomAd({
adUnitId: l.utils.config.wechatconfig.nativeBannerId,
adIntervals: l.utils.wechatTool.ServerConfig.refresh_ad_time || 30,
style: {
left: o,
top: n,
width: 325
}
});
l.utils.showLog("native nanner ad style left=" + o + ",top=" + n + ";  screenWidth=" + this.sysInfo.screenWidth + ", screenHeight=" + this.sysInfo.screenHeight);
s.onError(function(o) {
l.utils.showLog("原生Banner广告异常！>>>>> #code=" + o.errCode + " #msg=" + o.errMsg);
i.nativeBannerAd && i.nativeBannerAd.destroy();
i.nativeBannerAd = null;
i.ServerConfig.banner_first_ad && "native" == i.ServerConfig.banner_first_ad && i._createBanner(e, t);
});
s.onLoad(function() {
l.utils.showLog("原生Banner广告加载成功！");
s.show().then(function() {
i.nativeBannerAd && i.nativeBannerAd.destroy();
i.nativeBannerAd = s;
l.utils.showLog("原生Banner广告显示成功！");
i.HideDefaultBanner();
}).catch(function(o) {
l.utils.showLog("原生Banner广告显示失败！");
i.nativeBannerAd && i.nativeBannerAd.destroy();
i.nativeBannerAd = null;
i.ServerConfig.banner_first_ad && "native" == i.ServerConfig.banner_first_ad && i._createBanner(e, t);
});
});
}
} else l.utils.showLog("原生Banner广告ID配置不存在"); else l.utils.showLog("组件未初始化！"); else l.utils.showLog("当前版本不支持原生模版广告!");
};
t.prototype.showNativeIntersititialAd = function() {
var e = this;
l.utils.showLog("展示原生插屏广告!");
if (l.utils.wechatTool.isOverMinVersion("2.11.1")) if (this.ServerConfig) if (l.utils.config.wechatconfig.nativeInsertIds) {
var t = 420;
cc.winSize.width > cc.winSize.height && (t = 300);
var i = (this.sysInfo.screenWidth - 345) / 2, o = (this.sysInfo.screenHeight - t) / 2;
if (this.nativeIntersititialAd) this.nativeIntersititialAd.isShow() ? l.utils.showLog("原生插屏正在显示，不重新创建！") : this.nativeIntersititialAd.show().then(function() {
l.utils.showLog("原生插屏广告显示成功！");
}).catch(function(t) {
l.utils.showLog("原生插屏广告显示失败！");
e.nativeIntersititialAd && e.nativeIntersititialAd.destroy();
e.nativeIntersititialAd = null;
e.ServerConfig.intersititial_first_ad && "native" == e.ServerConfig.intersititial_first_ad && e._createMiniGameInsertAd();
}); else {
var n = wx.createCustomAd({
adUnitId: l.utils.config.wechatconfig.nativeInsertIds,
adIntervals: 60,
style: {
left: i,
top: o,
width: 345
}
});
l.utils.showLog("native insert ad style left=" + i + ",top=" + o + ";  screenWidth=" + this.sysInfo.screenWidth + ", screenHeight=" + this.sysInfo.screenHeight);
n.onError(function(t) {
l.utils.showLog("原生插屏广告异常！>>>>> #code=" + t.errCode + " #msg=" + t.errMsg);
e.nativeIntersititialAd && e.nativeIntersititialAd.destroy();
e.nativeIntersititialAd = null;
e.ServerConfig.intersititial_first_ad && "native" == e.ServerConfig.intersititial_first_ad && e._createMiniGameInsertAd();
});
n.onLoad(function() {
l.utils.showLog("原生插屏广告加载成功！");
n.show().then(function() {
e.nativeIntersititialAd && e.nativeIntersititialAd.destroy();
e.nativeIntersititialAd = n;
l.utils.showLog("原生插屏广告显示成功！");
}).catch(function(t) {
l.utils.showLog("原生插屏广告显示失败！");
e.nativeIntersititialAd && e.nativeIntersititialAd.destroy();
e.nativeIntersititialAd = null;
e.ServerConfig.intersititial_first_ad && "native" == e.ServerConfig.intersititial_first_ad && e._createMiniGameInsertAd();
});
});
}
} else l.utils.showLog("原生插屏广告ID配置不存在"); else l.utils.showLog("组件未初始化！"); else l.utils.showLog("当前版本不支持原生模版广告!");
};
return t = n([ h ], t);
}(s.default));
i.default = d;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentWiFi: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a74c2u0w9xBuLKuXchK/Ass", "AdAgentWiFi");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._sysData = null;
t._curBannerAd = null;
t._videoAd = null;
t._insertAd = null;
t._oldAd = null;
t._appBox = null;
t._videoCallback = null;
t._isVideoLoaded = !1;
t._isVideoShow = !1;
t.wuji = window.wuji;
t._bannerShow = !0;
t._showBannerTimerId = 0;
return t;
}
t.prototype.Init = function() {
var e = this;
r.default.IsWiFi && l.utils.registerServerInitEvent(function() {
e._sysData = l.utils.wifiTool.getSystemInfo();
}, this);
};
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return l.utils.wifiTool.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) {
l.utils.showLog("初始化视频!");
this._videoAd = this.wuji.createRewardedVideoAd({
adUnitId: ""
});
this._videoAd.onLoad(function() {
l.utils.showLog("激励视频加载完成");
e._videoAd.show().then(function() {
return l.utils.showLog("激励视频展示成功");
}).catch(function(t) {
l.utils.showLog("激励视频展示失败", t);
e._videoAd.load().then(function() {
l.utils.showLog("手动加载成功");
return e._videoAd.show();
});
});
});
this._videoAd.onError(function(t) {
l.utils.showLog("激励视频错误", t);
if (e._videoCallback) {
e._videoCallback(!1, "暂无视频广告!");
e._videoCallback = null;
}
});
this._videoAd.onClose(function(t) {
e._isVideoShow = !1;
if (t.isEnded) {
l.utils.showLog("激励视频广告完成，发放奖励");
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else {
l.utils.showLog("激励视频广告取消关闭，不发放奖励");
if (e._videoCallback) {
e._videoCallback(!1, "观看完视频才能获得奖励!");
e._videoCallback = null;
}
}
});
}
};
t.prototype._createBanner = function(e, t) {
var i = this;
void 0 === t && (t = null);
if (r.default.IsWiFi) {
var o = this._sysData, n = o.windowWidth, s = n - 20, a = {
adUnitId: "",
style: {
top: o.windowHeight,
left: (n - s) / 2,
width: s
}
};
this._curBannerAd = this.wuji.createBannerAd(a);
this._curBannerAd.onLoad(function() {
i._curBannerAd.show().then(function() {
return l.utils.showLog("banner ad 展示成功");
}).catch(function(e) {
return l.utils.showLog(e);
});
});
}
};
t.prototype._showBannerTimer = function(e, t) {
var i = e, o = t;
this._createBanner(i, o);
};
t.prototype.ShowInterstitial = function() {
l.utils.showLog("连尚小游戏没有插屏广告！");
};
t.prototype.ShowBanner = function(e, t) {
var i = this;
void 0 === e && (e = a.BannerLocation.Home);
void 0 === t && (t = null);
if (r.default.IsWiFi) if (this.ServerConfig) {
var o = e, n = t, s = 30;
this.ServerConfig.refresh_ad_time && (s = this.ServerConfig.refresh_ad_time);
l.utils.showLog("显示Banner广告！location:" + o + "; args:" + JSON.stringify(n) + "; 间隔时间:" + this.ServerConfig.refresh_ad_time);
var c = this._sysData, u = c.windowWidth, h = u - 20, d = {
adUnitId: "",
adIntervals: s,
style: {
top: c.windowHeight,
left: (u - h) / 2,
width: h
}
};
if (this._curBannerAd) {
this._curBannerAd.offLoad();
this._curBannerAd.destroy();
}
this._curBannerAd = this.wuji.createBannerAd(d);
this._curBannerAd.onLoad(function() {
i._curBannerAd.show().then(function() {
return l.utils.showLog("banner ad 展示成功");
}).catch(function(e) {
return l.utils.showLog(e);
});
});
} else l.utils.showLog("服务器配置数据未初始化!");
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = a.BannerLocation.Home);
if (r.default.IsWiFi) {
l.utils.showLog("隐藏广告条");
this._bannerShow = !1;
clearInterval(this._showBannerTimerId);
this._curBannerAd && this._curBannerAd.hide();
}
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsWiFi) {
this._videoCallback = e;
this._isVideoShow = !0;
this._videoAd ? this._videoAd.load() : this._initVideoAd();
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgentXiaomi: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fdbd3JnjlNEf4sZulsTyGNv", "AdAgentXiaomi");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./AdAgent"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./Utils"), c = e("./CompatibleTool"), u = cc._decorator, h = u.ccclass, d = (u.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._bannerAd = null;
t._insertAd = null;
t._videoAd = null;
t._nativeBannerAd = [];
t._nativeInsertAd = [];
t._nativeSingleAd = [];
t.nativeBannerAd = null;
t._isInsertShow = !1;
t._curPosIdIndexNativeBanner = 0;
t._curPosIdIndexNativeInser = 0;
t._curPosIdIndexSingleNative = 0;
t._nativeData = null;
t._nativeInsertData = null;
t._nativeBannerNode = null;
t._nativeInsertNode = null;
t._videoCallback = null;
t._videoLoaded = null;
t._isBannerShow = !1;
t._isInsertAdShow = !1;
t._isInsertAdLoaded = !1;
t._isVideoLoaded = !1;
t._isVideoShow = !1;
t.lastLastShowVideoTime = 0;
t.showNum = 0;
t.showInsertNum = 0;
t._showBannerCallBack = null;
t._isNativeBannerShow = !1;
t._nativeIsClose = !1;
t._showBannerTimerId = 0;
t._delayShowBannerId = 0;
t.canShowNativeBanner = !0;
t._curLocation = a.BannerLocation.None;
t._isTimeRefresh = !1;
t._startBannerTimerTask = 0;
t._showBannerCount = 0;
t._nativeBannerInfo = null;
t._curNativeBannerInfo = {};
t._nativeInsertAdShowCount = 0;
t._insertLastShowTime = 0;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return r.default.IsXiaoMi ? l.utils.Tool_XiaoMi.ServerConfig : null;
},
enumerable: !1,
configurable: !0
});
t.prototype.Init = function() {
var e = this;
r.default.IsXiaoMi && l.utils.registerServerInitEvent(function() {
e._initVideoAd();
}, this);
};
t.prototype._initVideoAd = function() {
var e = this;
if (!this._videoAd) {
if (!l.utils.config.xiaomiConfig.videoId) {
l.utils.showLog("视频ID配置不正确！");
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
return;
}
var t = l.utils.config.xiaomiConfig.videoId.trim();
l.utils.showLog("video广告ID:" + t);
this._videoAd = qg.createRewardedVideoAd({
adUnitId: t
});
if (this._videoAd) {
this._videoAd.onLoad(function() {
l.utils.showLog("激励视频加载成功!");
e._isVideoLoaded = !0;
});
this._videoAd.onError(function(t) {
l.utils.showLog("激励视频异常!error: errorMsg: " + t.errMsg + ", erroCode: " + t.errCode);
e._isVideoLoaded = !1;
});
this._videoAd.onClose(function(t) {
e._isVideoShow = !1;
if (t && t.isEnded) {
l.utils.showLog("正常播放结束，可以下发游戏奖励");
if (e._videoCallback) {
e._videoCallback(!0, "");
e._videoCallback = null;
}
} else {
l.utils.showLog("播放中途退出，不下发游戏奖励");
if (e._videoCallback) {
e._videoCallback(!1, "观看完视频才能获得奖励!");
e._videoCallback = null;
}
}
});
}
}
};
t.prototype.ShowBanner = function(e, t, i) {
var o = this;
void 0 === e && (e = null);
void 0 === t && (t = null);
void 0 === i && (i = !1);
if (r.default.IsXiaoMi) {
if (!this.ServerConfig) {
l.utils.showLog("未请求到配置文件！");
return;
}
if (this.ServerConfig && this.ServerConfig.isTest && "true" == this.ServerConfig.isTest) {
this.showNum++;
if (this.showNum % 2 == 0) {
l.utils.showLog("测试模式>> 顺序展示原生Banner广告！");
this._createNativeBannerAd(this._showNativeBanner);
} else {
l.utils.showLog("测试模式>> 顺序展示默认Banner广告！");
this._createMiniGameBannerAd(e);
}
return;
}
if (!this.checkBannerAdShow()) {
this.HideBanner();
return;
}
this._showBannerCount++;
var n = this._curLocation;
this._curLocation = e;
this._isTimeRefresh = i;
n != e && this.HideBanner(e);
var s = (new Date().getTime() - this._startBannerTimerTask) / 1e3, a = this.ServerConfig.refresh_ad_time;
t && t.isRefresh ? i = !0 : a && a > 0 && s > a && (i = !0);
if (-1 == this.getNativeBannerInfo().is_show_banner) {
l.utils.showLog("当前位置配置为不展示banner!");
this.HideBanner(e);
return;
}
if (!i && this.ServerConfig.nbclr && "true" == this.ServerConfig.nbclr && this._curNativeBannerInfo.nativeBannerAd) {
l.utils.showLog("服务器配置定时器刷新数据 ");
l.utils.showLog("原生banner延迟显示" + this.getNativeBannerInfo().delay_show_time + "秒");
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
this._delayShowBannerId = setTimeout(function() {
o._showNativeBanner(o._curNativeBannerInfo.nativeBannerAd, o._curNativeBannerInfo.data);
}, 1e3 * this.getNativeBannerInfo().delay_show_time);
l.utils.showLog("开启定时刷新 >>>>>>>>>" + (a - s));
this._showBannerTimerId = setTimeout(function() {
l.utils.showLog("定时" + a + "秒调用showbanner");
o.ShowBanner(o._curLocation, {}, !0);
}, 1e3 * (a - s));
return;
}
this.canShowNativeBanner = !0;
this._nativeIsClose = !1;
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
l.utils.showLog("清理定时器");
if (this.ServerConfig) {
l.utils.showLog("banner 优先展示 >>>>" + this.ServerConfig.banner_first_ad);
if (a && a > 0) {
l.utils.showLog("开启定时刷新 >>>>>>>>>" + a);
this._showBannerTimerId = setTimeout(function() {
l.utils.showLog("定时" + a + "秒调用showbanner");
o.ShowBanner(o._curLocation, {}, !0);
}, 1e3 * a);
}
var c = this.ServerConfig.banner_close_count ? this.ServerConfig.banner_close_count : 0;
if (c > 0 && l.utils.Tool_XiaoMi.bannerAdCloseCounts >= c) {
l.utils.showLog("banner 关闭次数达到" + c + "次,banner今日不再显示！");
return;
}
if (this.ServerConfig.banner_first_ad) if (this.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("优先展示原生Banner广告!" + i + " <<<<");
if (this._isTimeRefresh) this._createNativeBannerAd(this._showNativeBanner); else {
l.utils.showLog("原生banner延迟显示" + this.getNativeBannerInfo().delay_show_time + "秒");
this._delayShowBannerId = setTimeout(function() {
o._createNativeBannerAd(o._showNativeBanner);
}, 1e3 * this.getNativeBannerInfo().delay_show_time);
}
} else {
l.utils.showLog("优先展示小游戏Banner广告!");
this._createMiniGameBannerAd(e);
} else l.utils.showLog("配置数据中没有 banner_first_ad 字段， banner广告不显示!");
} else l.utils.showLog("服务器配置数据未初始化!");
}
};
t.prototype.HideBanner = function(e) {
void 0 === e && (e = null);
if (r.default.IsXiaoMi) {
clearTimeout(this._showBannerTimerId);
clearTimeout(this._delayShowBannerId);
this._isBannerShow = !1;
this._nativeIsClose = !0;
if (this._bannerAd) {
l.utils.showLog("隐藏小游戏Banner");
this._bannerAd.hide();
}
this.canShowNativeBanner = !1;
if (this._nativeBannerNode) {
l.utils.showLog("隐藏原生Banner");
this._nativeBannerNode.active = !1;
}
}
};
t.prototype.getNativeBannerInfo = function() {
return this._nativeBannerInfo && this._nativeBannerInfo.location == this._curLocation ? this._nativeBannerInfo : l.utils.config.xiaomiConfig.getNativeBannerInfo(this._curLocation);
};
t.prototype._createMiniGameBannerAd = function(e) {
var t = this;
void 0 === e && (e = null);
if (r.default.IsXiaoMi) {
this._isBannerShow = !0;
if (l.utils.config.xiaomiConfig && l.utils.config.xiaomiConfig.bannerId) {
this._bannerAd && this._bannerAd.destroy();
var i = .5 * (l.utils.Tool_XiaoMi.SysInfo.screenWidth - 385);
cc.winSize.height < cc.winSize.width && (i = .5 * l.utils.Tool_XiaoMi.SysInfo.screenWidth);
var o = {
left: i,
top: l.utils.Tool_XiaoMi.SysInfo.screenHeight - 58,
width: 385
};
"top" === this.getNativeBannerInfo()._alignType && (o.top = 0);
this._bannerAd = qg.createBannerAd({
adUnitId: l.utils.config.xiaomiConfig.bannerId,
style: o
});
l.utils.showLog("createBannerAd:" + this._bannerAd);
l.utils.showLog("注册小游戏banner回调!");
this._bannerAd.onError(function(e) {
l.utils.showLog("xiaomi 小游戏Banner广告出错: " + e.code + e.msg);
if (-1 != t.getNativeBannerInfo().st_banner_show_back_up) {
if (t._isBannerShow) {
t._isBannerShow = !1;
if (t.ServerConfig.banner_first_ad.indexOf("default") > -1) {
t._curPosIdIndexNativeBanner = 0;
t._createNativeBannerAd(t._showNativeBanner.bind(t));
}
}
} else l.utils.showLog("服务器配置不显示备用广告");
});
this._bannerAd.onResize(function(e) {
l.utils.showLog("xiaomi 小游戏Banner显示成功！");
t._nativeBannerNode && (t._nativeBannerNode.active = !1);
t._showBannerCallBack && t._showBannerCallBack();
t._showBannerCallBack = null;
t._bannerAd.style.left = .5 * (l.utils.Tool_XiaoMi.SysInfo.screenWidth - e.width);
"top" == t.getNativeBannerInfo()._alignType ? t._bannerAd.style.top = 0 : t._bannerAd.style.top = l.utils.Tool_XiaoMi.SysInfo.screenHeight - e.height;
});
this._bannerAd.onClose(function() {
l.utils._bannerCloseTime = new Date().getTime();
if (t._isNativeBannerShow) {
t._isNativeBannerShow = !1;
l.utils.showLog("xiaomi 小游戏Banner 广告隐藏,来自原生的显示，不增加隐藏次数，当前隐藏次数>" + l.utils.Tool_XiaoMi.bannerAdCloseCounts);
} else {
l.utils.Tool_XiaoMi.countBannerCloseCount();
l.utils.showLog("xiaomi 小游戏Banner 广告隐藏,当前隐藏次数>" + l.utils.Tool_XiaoMi.bannerAdCloseCounts);
}
});
if (this._bannerAd) {
this._bannerAd.show();
l.utils.showLog("xiaomi 小游戏Banner show");
} else {
l.utils.showLog("xiaomi 小游戏Banner广告创建失败!");
if (this.ServerConfig.indexOf("default") > -1) {
this._curPosIdIndexNativeBanner = 0;
this._createNativeBannerAd(this._showNativeBanner.bind(this));
}
}
} else {
l.utils.showLog("xiaomi 小游戏Banner广告配置信息错误!");
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog("服务器配置不显示备用广告");
return;
}
if (this.ServerConfig.banner_first_ad.indexOf("default") > -1) {
this._curPosIdIndexNativeBanner = 0;
this._createNativeBannerAd(this._showNativeBanner.bind(this));
}
}
}
};
t.prototype._createNativeBannerAd = function(e) {
var t = this;
if (r.default.IsXiaoMi) {
var i = e;
l.utils.showLog("curPosIdIndexNativeBanner:" + this._curPosIdIndexNativeBanner);
var o = this._nativeBannerAd[this._curPosIdIndexNativeBanner];
if (!o && l.utils.config.xiaomiConfig.nativeBannerIds && l.utils.config.xiaomiConfig.nativeBannerIds[this._curPosIdIndexNativeBanner]) {
l.utils.showLog("创建原生广告Banner。 posId:" + l.utils.config.xiaomiConfig.nativeBannerIds[this._curPosIdIndexNativeBanner]);
if (o = qg.createNativeAd({
adUnitId: l.utils.config.xiaomiConfig.nativeBannerIds[this._curPosIdIndexNativeBanner]
})) {
this._nativeBannerAd.push(o);
o.onLoad(function(e) {
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
if (e && e.adList && e.adList.length > 0) {
t._startBannerTimerTask = new Date().getTime();
l.utils.showLog("原生Banner广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var n = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (t._checkNativeDataValid(n) || "true" == t.getNativeBannerInfo().show_st_banner) {
if (t.canShowNativeBanner) {
t._curPosIdIndexNativeBanner = 0;
t._showNativeBanner(o, n);
t._curNativeBannerInfo.nativeBannerAd = o;
t._curNativeBannerInfo.data = n;
if (t._bannerAd) {
t._isNativeBannerShow = !0;
l.utils.showLog("隐藏小游戏Banner");
t._bannerAd.hide();
}
} else l.utils.showLog("已经隐藏banner不可重复展示");
return;
}
}
l.utils.showLog("原生Banner广告资源出错！");
t._curPosIdIndexNativeBanner++;
if (t._curPosIdIndexNativeBanner < l.utils.config.xiaomiConfig.nativeBannerIds.length) t._createNativeBannerAd(i); else {
t._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == t.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (t.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
t._createMiniGameBannerAd();
}
}
}
});
o.onError(function(e) {
if (t._nativeIsClose) l.utils.showLog("隐藏了BANNER，不做任何处理！"); else {
l.utils.showLog("原生Banner广告资源拉取失败！" + e.code + e.msg);
t._curPosIdIndexNativeBanner++;
if (t._curPosIdIndexNativeBanner < l.utils.config.xiaomiConfig.nativeBannerIds.length) t._createNativeBannerAd(i); else {
t._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == t.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (t.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
t._createMiniGameBannerAd();
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(t._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
});
}
}
if (o) {
l.utils.showLog("nativeBannerAd reLoad>>");
o.load();
} else {
this._curPosIdIndexNativeBanner++;
if (l.utils.config.xiaomiConfig.nativeBannerIds && this._curPosIdIndexNativeBanner < l.utils.config.xiaomiConfig.nativeBannerIds.length) this._createNativeBannerAd(i); else {
this._curPosIdIndexNativeBanner = 0;
l.utils.showLog("原生广告条遍历完毕，无法展示！");
if (-1 == this.getNativeBannerInfo().st_banner_show_back_up) {
l.utils.showLog(">>>>>服务器配置不显示备用广告！");
return;
}
if (this.ServerConfig.banner_first_ad.indexOf("native") > -1) {
l.utils.showLog("开始展示小游戏广告条！");
this._createMiniGameBannerAd();
} else if (l.utils.isShowRecommondGamesBanner()) {
clearTimeout(this._showBannerTimerId);
l.utils.showRecommendGamesBanner();
l.utils.showLog("小游戏、原生广告条都无法展示，展示自定义banner");
return;
}
}
}
}
};
t.prototype.ShowVideo = function(e) {
if (r.default.IsXiaoMi) {
this._videoCallback = e;
if (this._videoAd) this._videoAd.show(); else {
if (this._videoCallback) {
this._videoCallback(!1, "暂无视频广告!");
this._videoCallback = null;
}
this._initVideoAd();
}
}
};
t.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = null);
if (r.default.IsXiaoMi) {
if (!this.checkInsertAdShow()) return;
var t = 0;
this.ServerConfig && this.ServerConfig.intersititia_delay_show_time && (t = this.ServerConfig.intersititia_delay_show_time);
l.utils.showLog("插屏广告延时展示！ delayTime:" + t + "秒");
if (this.ServerConfig && this.ServerConfig.isTest && "true" == this.ServerConfig.isTest) {
this.showInsertNum++;
if (this.showInsertNum % 2 == 0) {
l.utils.showLog("测试模式>> 顺序展示原生插屏广告！");
this.nativeInserAdDelayCall();
} else this._createMiniGameInsertAd();
return;
}
if (this.ServerConfig) if (e && e == a.BannerLocation.Pause) if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("暂停界面不延时展示！");
l.utils.showLog("优先展示原生插屏广告!");
this.nativeInserAdDelayCall();
} else {
l.utils.showLog("优先展示小游戏插屏广告!");
this._createMiniGameInsertAd();
} else if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("优先展示原生插屏广告!");
l.utils.delayCall(this.nativeInserAdDelayCall.bind(this), t);
} else {
l.utils.showLog("优先展示小游戏插屏广告!");
l.utils.delayCall(this._createMiniGameInsertAd.bind(this), t);
} else l.utils.showLog("服务器配置数据未初始化!");
}
};
t.prototype._createMiniGameInsertAd = function() {
var e = this;
this._isInsertShow = !0;
this._insertAd = qg.createInterstitialAd({
adUnitId: l.utils.config.xiaomiConfig.insertId.trim()
});
if (this._insertAd) {
this._insertAd.onLoad(function() {
l.utils.showLog("插屏广告加载成功");
e._isInsertShow && e._insertAd.show().then(function() {
l.utils.showLog("插屏广告展示成功!");
e._insertLastShowTime = new Date().getTime();
}).catch(function(e) {
l.utils.showLog("插屏广告展示失败!, err=" + JSON.stringify(e));
});
});
this._insertAd.onError(function(t) {
l.utils.showLog("插屏广告监听异常!, err=" + JSON.stringify(t));
if (e._isInsertShow && "default" == e.ServerConfig.intersititial_first_ad) {
e._isInsertShow = !1;
l.utils.showLog("开始显示原生插屏广告!");
e._curPosIdIndexNativeInser = 0;
l.utils.delayCall(e.nativeInserAdDelayCall.bind(e), e.ServerConfig.intersititia_delay_show_time || 0);
}
});
} else l.utils.showLog("插屏广告未初始化!");
};
t.prototype.nativeInserAdDelayCall = function() {
l.utils.showLog("原生插屏广告: 当前点击次数=" + l.utils.Tool_XiaoMi.NativeInsertAdClickTimes + "; 点击次数限制=" + this.ServerConfig.intersititia_click_count + "; 展示次数间隔=" + this.ServerConfig.intersititial_interval_time + "; 展示累计=" + this._nativeInsertAdShowCount);
l.utils.Tool_XiaoMi.NativeInsertAdClickTimes >= (this.ServerConfig.intersititia_click_count || 0) ? this._nativeInsertAdShowCount >= (this.ServerConfig.intersititia_show_interval || 0) ? this._createNativeInsertAd(this._showNativeInsert) : this._nativeInsertAdShowCount++ : this._createNativeInsertAd(this._showNativeInsert);
};
t.prototype._createNativeInsertAd = function(e) {
var t = this;
if (r.default.IsXiaoMi) {
var i = e;
l.utils.showLog("curPosIdIndexNativeInsert:" + this._curPosIdIndexNativeInser);
if (l.utils.config.xiaomiConfig.nativeInsertIds && l.utils.config.xiaomiConfig.nativeInsertIds[this._curPosIdIndexNativeInser]) {
l.utils.showLog("创建原生插屏广告。 posId:" + l.utils.config.xiaomiConfig.nativeInsertIds[this._curPosIdIndexNativeInser]);
var o = qg.createNativeAd({
adUnitId: l.utils.config.xiaomiConfig.nativeInsertIds[this._curPosIdIndexNativeInser]
});
if (o) {
o.onLoad(function(e) {
if (e && e.adList && e.adList.length > 0) {
l.utils.showLog("原生插屏广告资源拉取成功！");
l.utils.showLog(JSON.stringify(e));
var n = (e = JSON.parse(JSON.stringify(e))).adList[0];
if (t._checkNativeInsertDataValid(n)) {
t._curPosIdIndexNativeInser = 0;
t._showNativeInsert(o, n);
return;
}
l.utils.showLog("原生插屏广告资源不合法！");
}
l.utils.showLog("原生插屏广告资源出错！");
t._curPosIdIndexNativeInser++;
if (t._curPosIdIndexNativeInser < l.utils.config.xiaomiConfig.nativeInsertIds.length) t._createNativeInsertAd(i); else {
t._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
t._createMiniGameInsertAd();
}
}
});
o.onError(function(e) {
l.utils.showLog("原生插屏广告创建失败！" + JSON.stringify(e));
});
var n = o.load();
n && n.then(function(e) {
console.log("res", JSON.stringify(e));
}).catch(function(e) {
l.utils.showLog("原生插屏广告资源拉取失败！" + JSON.stringify(e));
t._curPosIdIndexNativeInser++;
if (t._curPosIdIndexNativeInser < l.utils.config.xiaomiConfig.nativeInsertIds.length) t._createNativeInsertAd(i); else {
t._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == t.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
t._createMiniGameInsertAd();
}
}
});
} else {
this._curPosIdIndexNativeInser++;
if (l.utils.config.xiaomiConfig.nativeInsertIds && this._curPosIdIndexNativeInser < l.utils.config.xiaomiConfig.nativeInsertIds.length) this._createNativeInsertAd(i); else {
this._curPosIdIndexNativeInser = 0;
l.utils.showLog("原生插屏广告遍历完毕，无法展示！");
if ("native" == this.ServerConfig.intersititial_first_ad) {
l.utils.showLog("开始展示小游戏插屏广告!");
this._createMiniGameInsertAd();
}
}
}
}
}
};
t.prototype._showNativeInsert = function(e, t) {
if (r.default.IsXiaoMi && t) {
l.utils.showLog("显示原生插屏");
if (!cc.isValid(this._nativeInsertNode) || !this._nativeInsertNode && l.utils.config.otherconfig.nativeInsert) {
l.utils.showLog("创建原生插屏广告位");
this._nativeInsertNode = cc.instantiate(l.utils.config.otherconfig.nativeInsert);
this._nativeInsertNode.position = c.default.position(cc.winSize.width / 2, cc.winSize.height / 2);
cc.director.getScene().addChild(this._nativeInsertNode, 9999);
}
if (this._nativeInsertNode) {
var i = this._nativeInsertNode.getComponent("YZ_NativeInsert");
if (i) {
this._nativeInsertAdShowCount = 0;
this._insertLastShowTime = new Date().getTime();
i.init(e, t);
} else l.utils.showLog("NativeInsert组件不存在!");
} else l.utils.showLog("原生广告插屏位没有创建！");
if (!this.ServerConfig.show_insert_hide_banner || "false" != this.ServerConfig.show_insert_hide_banner) {
l.utils.showLog("原生广告插屏展示后隐藏Banner！");
this.HideBanner();
}
}
};
t.prototype._showNativeBanner = function(e, t) {
if (r.default.IsXiaoMi && t) {
cc.isValid(this._nativeBannerNode) && this._nativeBannerNode && this._nativeBannerNode.destroy();
this._nativeBannerNode = cc.instantiate(l.utils.config.otherconfig.nativeBanner);
this._nativeBannerNode.position = c.default.position(cc.winSize.width / 2, this._nativeBannerNode.height * this._nativeBannerNode.scaleY / 2);
cc.director.getScene().addChild(this._nativeBannerNode, 1e3);
if (this._nativeBannerNode) {
this._nativeBannerNode.active = !0;
var i = this._nativeBannerNode.getComponent("YZ_NativeBanner");
i ? i.init(e, t, this.getNativeBannerInfo()) : l.utils.showLog("NativeBanner组件不存在!");
this._showBannerCallBack && this._showBannerCallBack();
this._showBannerCallBack = null;
} else l.utils.showLog("原生广告banner位没有创建！");
}
};
t.prototype.checkInsertAdShow = function() {
var e = this.ServerConfig.intersititial_interval_time ? this.ServerConfig.intersititial_interval_time : 30, t = (new Date().getTime() - this._insertLastShowTime) / 1e3;
l.utils.showLog("xiaomi服务器插屏间隔显示时间为：" + e + "秒！");
l.utils.showLog("xiaomi插屏当前广告间隔时间：" + t + "秒！");
if (e > 0 && t < e) {
l.utils.showLog("xiaomi插屏广告显示的间隔少于" + e + "秒。插屏不显示");
return !1;
}
return !0;
};
t.prototype.checkBannerAdShow = function() {
var e = this.ServerConfig.hide_banner_interval_show_time ? this.ServerConfig.hide_banner_interval_show_time : 0, t = (new Date().getTime() - l.utils._bannerCloseTime) / 1e3;
l.utils.showLog("xiaomi服务器Banner关闭后间隔显示时间为：" + e + "秒！");
l.utils.showLog("xiaomi-Banner关闭后当前广告间隔时间：" + t + "秒！");
if (e > 0 && t < e) {
l.utils.showLog("xiaomi-Banner关闭后显示的间隔少于" + e + "秒。Banner不显示");
return !1;
}
return !0;
};
t.prototype._checkNativeInsertDataValid = function(e) {
return !!e && (e.title && (e.iconUrlList && e.iconUrlList.length > 0 || e.imgUrlList && e.imgUrlList.length > 0));
};
t.prototype._checkNativeDataValid = function(e) {
return !!e && (e.imgUrlList && e.imgUrlList.length);
};
return t = n([ h ], t);
}(s.default));
i.default = d;
cc._RF.pop();
}, {
"./AdAgent": "AdAgent",
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AdAgent: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c007b2/0jZPJ7WzuygFZTgG", "AdAgent");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, s = n.ccclass, a = (n.property, function() {
function e() {}
e.prototype.Init = function() {};
e.prototype.ShowBanner = function(e, t) {};
e.prototype.HideBanner = function(e) {};
e.prototype.ShowInterstitial = function(e) {};
e.prototype.ShowVideo = function(e) {};
e.prototype.showInteractiveAd = function() {};
e.prototype.ShowAppBox = function(e) {};
e.prototype.HideAppBox = function() {};
e.prototype.showRewardInsert = function() {};
e.prototype.hideRewardInsert = function() {};
e.prototype.ShowCloseBtnBanner = function(e, t) {};
e.prototype.ShowStatementRecomment = function() {};
e.prototype.getNativeAdData = function(e) {};
e.prototype.showStatementAds = function(e) {};
e.prototype.createNativeAd = function(e, t) {
void 0 === e && (e = null);
};
e.prototype.hideKyxBanner = function() {};
e.prototype.showNativeTryGameWidget = function(e) {
void 0 === e && (e = null);
};
e.prototype.hideNativeTryGameWidget = function() {};
e.prototype.showBlockAd = function(e) {};
e.prototype.hideBlockAd = function() {};
e.prototype.showFullScreenVideo = function(e) {};
e.prototype.showNativeSplashView = function(e) {};
e.prototype.ShowSingleNativeAd = function(e) {};
e.prototype.HideSingleNativeAd = function(e) {};
e.prototype.showCustomAd = function(e) {};
e.prototype.hideCustomAd = function(e) {};
e.prototype.createCustomADBanner = function() {};
return e = o([ s("AdAgent") ], e);
}());
i.default = a;
cc._RF.pop();
}, {} ],
AdManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fea03SQueFJo7iMSvZ2Vxkg", "AdManager");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./PlatUtils"), s = e("./AdAgentNative"), a = e("./AdAgentWechat"), r = e("./AdAgentOPPO"), l = e("./AdAgentVIVO"), c = e("./AdAgentBaidu"), u = e("./AdAgentDouyin"), h = e("./YZ_Constant"), d = e("./AdAgentQQ"), f = e("./AdAgentQTT"), _ = e("./Utils"), p = e("./AdAgentXiaomi"), g = e("./AdAgent4399"), m = e("./AdAgentIOS"), v = e("./AdAgentCocosplay"), y = e("./AdAgentUC"), w = e("./AdAgentBili"), I = e("./AdAgentKwai"), b = e("./AdAgentBroser"), S = e("./BeforGameOverRecGamesPanel"), C = e("./AdAgentWiFi"), A = e("./AdAgentHago"), L = e("./AdAgentHuaWei"), T = e("./AdAgentFaceBook"), P = e("./YzCustomAdPanel"), B = e("./AdAgentGoogleWeb"), N = cc._decorator, O = N.ccclass, k = (N.property, 
function() {
function e() {
this._curAdAgent = null;
this.videoCallBack = null;
this._lastShowGameOverAdType = h.BeForGameOverAdId.None;
this.beforRewardTypes = [ h.BeForGameOverAdId.SharePanel, h.BeForGameOverAdId.GoldBox, h.BeForGameOverAdId.Turntable, h.BeForGameOverAdId.CreateShortCut, h.BeForGameOverAdId.RecGame, h.BeForGameOverAdId.LuckBox ];
this.rewardBoxPanel = null;
this.rewardRecGamePanel = null;
this.rewardTurnTablePanel = null;
this.rewardShortCutPanel = null;
this._rewardLuckBoxPanel = null;
this._insertLastShowTime = 0;
this._customAdPanel = null;
}
e.prototype.Init = function() {
if (n.default.IsNativeAndroid) {
this._curAdAgent = new s.default();
this._curAdAgent.Init();
} else if (n.default.IsWechat) {
this._curAdAgent = new a.default();
this._curAdAgent.Init();
} else if (n.default.IsOPPO) {
this._curAdAgent = new r.default();
this._curAdAgent.Init();
} else if (n.default.IsVIVO) {
this._curAdAgent = new l.default();
this._curAdAgent.Init();
} else if (n.default.IsBaidu) {
this._curAdAgent = new c.default();
this._curAdAgent.Init();
} else if (n.default.IsDouyin) {
this._curAdAgent = new u.default();
this._curAdAgent.Init();
} else if (n.default.IsQQ) {
this._curAdAgent = new d.default();
this._curAdAgent.Init();
} else if (n.default.IsQTT) {
this._curAdAgent = new f.default();
this._curAdAgent.Init();
} else if (n.default.IsXiaoMi) {
this._curAdAgent = new p.default();
this._curAdAgent.Init();
} else if (n.default.ISUC) {
this._curAdAgent = new y.default();
this._curAdAgent.Init();
} else if (n.default.ISCocos) {
this._curAdAgent = new v.default();
this._curAdAgent.Init();
} else if (n.default.Is4399) {
this._curAdAgent = new g.default();
this._curAdAgent.Init();
} else if (n.default.IsNativeIOS) {
this._curAdAgent = new m.default();
this._curAdAgent.Init();
} else if (n.default.IsBili) {
this._curAdAgent = new w.default();
this._curAdAgent.Init();
} else if (n.default.IsKwai) {
this._curAdAgent = new I.default();
this._curAdAgent.Init();
} else if (n.default.IsWiFi) {
this._curAdAgent = new C.default();
this._curAdAgent.Init();
} else if (n.default.IsHago) {
this._curAdAgent = new A.default();
this._curAdAgent.Init();
} else if (n.default.IsHuaWei) {
this._curAdAgent = new L.default();
this._curAdAgent.Init();
} else if (n.default.IsFaceBook) {
this._curAdAgent = new T.default();
this._curAdAgent.Init();
} else if (n.default.IsTest) {
this._curAdAgent = new b.default();
this._curAdAgent.Init();
} else if (n.default.IsGoogleWeb) {
this._curAdAgent = new B.default();
this._curAdAgent.Init();
}
};
e.prototype.OnUpdate = function(e) {};
e.prototype.showNativeTryGameWidget = function(e) {
void 0 === e && (e = null);
if (this.checkShowAdTime()) {
if (this._curAdAgent) {
if (!_.utils.isShowNativeTryGamesWidget() || n.default.IsHuaWei) {
_.utils.showLog("不能显示原生抖动试玩");
return;
}
this._curAdAgent.showNativeTryGameWidget(e);
}
} else _.utils.showLog("显示插屏时间未达限制！");
};
e.prototype.hideNativeTryGameWidget = function() {
this._curAdAgent && this._curAdAgent.hideNativeTryGameWidget();
};
e.prototype.showNativeSplashView = function(e) {
void 0 === e && (e = null);
n.default.IsHuaWei && this._curAdAgent ? this._curAdAgent.showNativeSplashView(e) : e && e();
};
e.prototype.ShowBanner = function(e, t) {
void 0 === e && (e = h.BannerLocation.Home);
void 0 === t && (t = null);
this.checkShowAdTime() ? this._curAdAgent && this._curAdAgent.ShowBanner(e, t) : _.utils.showLog("显示广告条时间未达限制！");
};
e.prototype.HideBanner = function(e) {
this._curAdAgent && this._curAdAgent.HideBanner(e);
};
e.prototype.ShowInterstitial = function(e) {
void 0 === e && (e = h.BannerLocation.Home);
this.checkShowAdTime() ? this.checkInsertAdTime() ? this._curAdAgent && this._curAdAgent.ShowInterstitial(e) : _.utils.showLog("显示插屏时间未达到间隔时间！") : _.utils.showLog("显示插屏时间未达限制！");
};
e.prototype.ShowVideo = function(e) {
if (this._curAdAgent) {
this.videoCallBack = e;
this._curAdAgent.ShowVideo(e);
} else e && e(!1, "视频加载失败！");
};
e.prototype.showInteractiveAd = function() {
this._curAdAgent && this._curAdAgent.showInteractiveAd();
};
e.prototype.ShowAppBox = function(e) {
this._curAdAgent && this._curAdAgent.ShowAppBox(e);
};
e.prototype.HideAppBox = function() {
this._curAdAgent && this._curAdAgent.HideAppBox();
};
e.prototype.showRewardInsert = function() {
if (this._curAdAgent) {
_.utils.showLog("显示 RI");
this._curAdAgent.showRewardInsert();
}
};
e.prototype.hideRewardInsert = function() {
this._curAdAgent && this._curAdAgent.hideRewardInsert();
};
e.prototype.ShowCloseBtnBanner = function(e, t) {
void 0 === e && (e = h.BannerLocation.Home);
this.checkShowAdTime() ? this._curAdAgent && this._curAdAgent.ShowCloseBtnBanner(e, t) : _.utils.showLog("显示广告条时间未达限制！");
};
e.prototype.ShowStatementRecomment = function() {
if (this._curAdAgent) {
if (n.default.IsOPPO || n.default.IsVIVO) return this._curAdAgent.ShowStatementRecomment();
if (n.default.IsWechat) return _.utils.showCrossWidget6();
}
return null;
};
e.prototype.getNativeAdData = function(e) {
if (this._curAdAgent) {
_.utils.showLog("adManager 获取原生广告");
return this._curAdAgent.getNativeAdData(e);
}
return null;
};
e.prototype.showStatementAds = function(e) {
var t = {
type: -1,
node: null
};
if (!this.checkShowAdTime()) {
_.utils.showLog("显示结算页面广告时间未达限制！");
return t;
}
if (this._curAdAgent && (n.default.IsWechat || n.default.IsBaidu)) return this._curAdAgent.showStatementAds(e);
n.default.IsQTT ? _.utils.adManager.showInteractiveAd() : _.utils.adManager.ShowInterstitial();
_.utils.showLog("非oppo和微信平台正常显示结算广告");
return t;
};
e.prototype.createNativeAd = function(e, t) {
void 0 === e && (e = null);
this._curAdAgent && this._curAdAgent.createNativeAd(e, t);
};
e.prototype.hideKyxBanner = function() {
this._curAdAgent && this._curAdAgent.hideKyxBanner();
};
e.prototype.showBeforGameOverAd = function(e, t, i, o, s) {
if (n.default.IsOPPO || n.default.IsVIVO || n.default.IsDouyin || n.default.IsBaidu || n.default.IsWechat || n.default.IsQQ || n.default.IsKwai || n.default.IsNativeAndroid || n.default.IsNativeIOS || _.utils._tool_Broswer || n.default.IsWiFi || n.default.IsHuaWei) {
if (_.utils.ServerConfig && _.utils.ServerConfig.befor_ad_min_level && _.utils.ServerConfig.befor_ad_min_level >= e) {
_.utils.showLog(e + " >>服务器配置结算前广告在" + _.utils.ServerConfig.befor_ad_min_level + "关后才能显示！");
o && o();
return;
}
_.utils.showLog("显示结算前广告：  #Level= ", e, " #LevelStatys=", t, " #rewardValue = ", i);
_.utils.currentLevel = e;
_.utils.isSuccess = t == h.LevelStatus.GameWin;
_.utils.rewardCallFunc = s;
_.utils.rewardCloseFunc = o;
_.utils.rewardValue = i;
switch (_.utils.adManager.checkShowBeforGameOverAd(e, t == h.LevelStatus.GameWin)) {
case h.BeForGameOverAdId.SharePanel:
_.utils.recordEnd();
_.utils.showShareRecordPanel();
break;

case h.BeForGameOverAdId.GoldBox:
_.utils.adManager.showRewardBoxPanel();
break;

case h.BeForGameOverAdId.Turntable:
_.utils.adManager.showrewardTurnTablePanel();
break;

case h.BeForGameOverAdId.CreateShortCut:
_.utils.adManager.showRewardShortCutPanel();
break;

case h.BeForGameOverAdId.RecGame:
_.utils.adManager.showRecGamePanel();
break;

case h.BeForGameOverAdId.LuckBox:
if (e > (_.utils.ServerConfig.reward_luck_box_show_level ? _.utils.ServerConfig.reward_luck_box_show_level : 0)) _.utils.adManager.showRewardLuckBoxPanel(); else {
_.utils.showLog("幸运宝箱间隔关卡未达到！");
o && o();
_.utils.rewardCloseFunc = null;
}
break;

default:
o && o();
_.utils.rewardCloseFunc = null;
}
} else {
o && o();
_.utils.rewardCloseFunc = null;
}
};
e.prototype.getRewardCloseAndShowCallFunc = function(e) {
var t = null;
switch (e) {
case 1:
t = _.utils.adManager.showShareRecordPanel;
break;

case 2:
t = _.utils.adManager.showRewardBoxPanel;
break;

case 3:
t = _.utils.adManager.showrewardTurnTablePanel;
break;

case 4:
t = _.utils.adManager.showRewardShortCutPanel;
break;

case 5:
t = _.utils.adManager.showRecGamePanel;
break;

case 6:
t = _.utils.adManager.showRewardLuckBoxPanel;
}
return t;
};
e.prototype.checkShowBeforGameOverAd = function(e, t) {
if (!this._curAdAgent || !_.utils.ServerConfig) {
_.utils.showLog("组件初始化失败！");
return h.BeForGameOverAdId.None;
}
var i = _.utils.ServerConfig.befor_game_over_share_interval, o = _.utils.ServerConfig.befor_game_over_reward_box_interval, s = _.utils.ServerConfig.befor_game_over_turntable_interval, a = _.utils.ServerConfig.auto_desktop_interval, r = _.utils.ServerConfig.befor_game_over_rec_game_interval, l = _.utils.ServerConfig.befor_game_over_luck_box_interval, c = _.utils.ServerConfig.befor_game_over_share_type, u = _.utils.ServerConfig.befor_game_over_reward_box_type, d = _.utils.ServerConfig.befor_game_over_turntable_type, f = _.utils.ServerConfig.befor_game_over_rec_game_type, p = _.utils.ServerConfig.befor_game_over_luck_box_type, g = _.utils.ServerConfig.auto_desktop_type, m = _.utils.ServerConfig.befor_game_over_sync_list, v = _.utils.ServerConfig.befor_game_over_sync_interval, y = _.utils.ServerConfig.befor_game_over_sync_type;
if (n.default.IsTest) {
u = "all";
o = 1;
}
var w = h.BeForGameOverAdId.None, I = !1;
if (m) {
_.utils.showLog("进入同步显示弹窗判断：", m, "<<interval=", v, "<<<type", y);
switch (y) {
case "all":
I = !0;
break;

case "success":
I = t;
break;

case "fail":
I = !t;
}
if (I && v && e % v == 0) for (var b = m.split(""), S = 0; S < b.length; S++) {
0 == S && (w = this.beforRewardTypes[parseInt(b[S]) - 1]);
var C = null;
C = S == b.length - 1 ? _.utils.rewardCloseFunc : this.getRewardCloseAndShowCallFunc(parseInt(b[S + 1]));
switch (b[S]) {
case "1":
_.utils.shareRecordPanelCloseFunc = C;
break;

case "2":
_.utils.rewardBoxPanelCloseFunc = C;
break;

case "3":
_.utils.turnTablePanelCloseFunc = C;
break;

case "4":
_.utils.rewardShortCutPanelCloseFunc = C;
break;

case "5":
_.utils.rewardRecGamePanelCloseFunc = C;
break;

case "6":
_.utils.rewardLuckBoxPanelCloseFunc = C;
}
}
} else {
var A = 0;
c && A++;
u && A++;
d && A++;
g && A++;
p && A++;
_.utils.showLog("显示的类型" + A + "种，进行顺序切换判断,上一次显示的类型为：" + this._lastShowGameOverAdType);
I = !0;
if (i && e % i == 0) {
_.utils.showLog("进入显示分享奖励弹窗判断", c, "<<");
A > 1 && (I = this._lastShowGameOverAdType != h.BeForGameOverAdId.SharePanel);
if (I) switch (c) {
case "all":
_.utils.showLog("间隔" + i + "关，显示分享奖励弹窗！");
w = h.BeForGameOverAdId.SharePanel;
break;

case "success":
if (t) {
w = h.BeForGameOverAdId.SharePanel;
_.utils.showLog("游戏胜利 >> 间隔" + i + "关，显示分享奖励弹窗！");
}
break;

case "fail":
if (!t) {
w = h.BeForGameOverAdId.SharePanel;
_.utils.showLog("游戏失败 >> 间隔" + i + "关，显示分享奖励弹窗！");
}
}
}
if (w != h.BeForGameOverAdId.None) {
_.utils.showLog("结算前广告验证完成，显示结算前广告类型：", w);
this._lastShowGameOverAdType = w;
return w;
}
if (o && e % o == 0) {
_.utils.showLog("进入显示宝箱判断", u, "<<");
A > 1 && (I = this._lastShowGameOverAdType != h.BeForGameOverAdId.GoldBox);
if (I) switch (u) {
case "all":
w = h.BeForGameOverAdId.GoldBox;
_.utils.showLog("间隔" + o + "关，显示宝箱弹窗！");
break;

case "success":
if (t) {
w = h.BeForGameOverAdId.GoldBox;
_.utils.showLog("游戏胜利 >> 间隔" + o + "关，显示宝箱弹窗！");
}
break;

case "fail":
if (!t) {
w = h.BeForGameOverAdId.GoldBox;
_.utils.showLog("游戏失败 >> 间隔" + o + "关，显示宝箱弹窗！");
}
}
}
if (w != h.BeForGameOverAdId.None) {
_.utils.showLog("结算前广告验证完成，显示结算前广告类型：", w);
this._lastShowGameOverAdType = w;
return w;
}
if (s && e % s == 0) {
_.utils.showLog("进入显示抽奖弹窗判断", d, "<<");
A > 1 && (I = this._lastShowGameOverAdType != h.BeForGameOverAdId.Turntable);
if (I) switch (d) {
case "all":
w = h.BeForGameOverAdId.Turntable;
_.utils.showLog("间隔" + s + "关，显示抽奖弹窗！");
break;

case "success":
if (t) {
w = h.BeForGameOverAdId.Turntable;
_.utils.showLog("游戏胜利 >> 间隔" + s + "关，显示抽奖弹窗！");
}
break;

case "fail":
if (!t) {
w = h.BeForGameOverAdId.Turntable;
_.utils.showLog("游戏失败 >> 间隔" + s + "关，显示抽奖弹窗！");
}
}
}
if (w != h.BeForGameOverAdId.None) {
_.utils.showLog("结算前广告验证完成，显示结算前广告类型：", w);
this._lastShowGameOverAdType = w;
return w;
}
if (a && e % a == 0) {
_.utils.showLog("进入显示添加桌面弹窗判断", g, "<<");
A > 1 && (I = this._lastShowGameOverAdType != h.BeForGameOverAdId.CreateShortCut);
if (I) switch (g) {
case "all":
w = h.BeForGameOverAdId.CreateShortCut;
_.utils.showLog("间隔" + a + "关，显示添加桌面弹窗！");
break;

case "success":
if (t) {
w = h.BeForGameOverAdId.CreateShortCut;
_.utils.showLog("游戏胜利 >> 间隔" + a + "关，显示添加桌面弹窗！");
}
break;

case "fail":
if (!t) {
w = h.BeForGameOverAdId.CreateShortCut;
_.utils.showLog("游戏失败 >> 间隔" + a + "关，显示添加桌面弹窗！");
}
}
} else _.utils.showLog("结算前广告验证完成，不显示结算前广告！");
if (w != h.BeForGameOverAdId.None) {
_.utils.showLog("结算前广告验证完成，显示结算前广告类型：", w);
this._lastShowGameOverAdType = w;
return w;
}
if (r && e % r == 0) {
_.utils.showLog("进入显示游戏推荐弹窗判断", f, "<<");
A > 1 && (I = this._lastShowGameOverAdType != h.BeForGameOverAdId.RecGame);
if (I) switch (f) {
case "all":
w = h.BeForGameOverAdId.RecGame;
_.utils.showLog("间隔" + r + "关，显示游戏推荐弹窗！");
break;

case "success":
if (t) {
w = h.BeForGameOverAdId.RecGame;
_.utils.showLog("游戏胜利 >> 间隔" + r + "关，显示游戏推荐弹窗！");
}
break;

case "fail":
if (!t) {
w = h.BeForGameOverAdId.RecGame;
_.utils.showLog("游戏失败 >> 间隔" + r + "关，显示游戏推荐弹窗！");
}
}
} else _.utils.showLog("结算前广告验证完成，不显示更多游戏广告！");
if (w != h.BeForGameOverAdId.None) {
_.utils.showLog("结算前广告验证完成，显示结算前广告类型：", w);
this._lastShowGameOverAdType = w;
return w;
}
if (l && e % l == 0) {
_.utils.showLog("进入显示幸运宝箱弹窗判断", p, "<<");
A > 1 && (I = this._lastShowGameOverAdType != h.BeForGameOverAdId.LuckBox);
if (I) switch (p) {
case "all":
w = h.BeForGameOverAdId.LuckBox;
_.utils.showLog("间隔" + l + "关，显示游戏推荐弹窗！");
break;

case "success":
if (t) {
w = h.BeForGameOverAdId.LuckBox;
_.utils.showLog("游戏胜利 >> 间隔" + l + "关，显示游戏推荐弹窗！");
}
break;

case "fail":
if (!t) {
w = h.BeForGameOverAdId.LuckBox;
_.utils.showLog("游戏失败 >> 间隔" + l + "关，显示游戏推荐弹窗！");
}
}
} else _.utils.showLog("结算前广告验证完成，不显示幸运宝箱弹窗！");
}
_.utils.showLog("结算前广告验证完成，显示结算前广告类型：", w);
this._lastShowGameOverAdType = w;
return w;
};
e.prototype.showShareRecordPanel = function(e) {
void 0 === e && (e = null);
if (!_.utils._isConfigInit) {
_.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (_.utils.config.otherconfig.shareRecordPanel) {
var t = cc.instantiate(_.utils.config.otherconfig.shareRecordPanel);
if (t) {
_.utils.shareRecordPanel && cc.isValid(_.utils.shareRecordPanel) && _.utils.shareRecordPanel.destroy();
_.utils.shareRecordPanel = t;
_.utils.shareRecordPanel.zIndex = 9999;
var i = t.getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
i.isAlignTop = !0;
i.isAlignBottom = !1;
i.top = e.top;
} else if (null != e.bottom) {
i.isAlignTop = !1;
i.isAlignBottom = !0;
i.bottom = e.bottom;
}
if (null != e.left) {
i.isAlignLeft = !0;
i.isAlignRight = !1;
i.left = e.left;
} else if (null != e.right) {
i.isAlignLeft = !1;
i.isAlignRight = !0;
i.right = e.right;
}
null != e.parent ? t.parent = e.parent : cc.director.getScene().addChild(_.utils.shareRecordPanel, 1e3);
} else cc.director.getScene().addChild(_.utils.shareRecordPanel, 1e3);
i.updateAlignment();
return t;
}
} else _.utils.showLog("未找到预制体 ShareRecordPanel, 请查看CommonUtils组件上是否赋值！");
return null;
};
e.prototype.showRewardBoxPanel = function() {
if (!_.utils._isConfigInit) {
_.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (_.utils.config.otherconfig.rewardBoxPanel) {
var e = cc.instantiate(_.utils.config.otherconfig.rewardBoxPanel);
if (e) {
this.rewardBoxPanel && cc.isValid(this.rewardBoxPanel) && this.rewardBoxPanel.destroy();
this.rewardBoxPanel = e;
this.rewardBoxPanel.zIndex = 9999;
cc.director.getScene().addChild(e, 1e3);
return e;
}
} else _.utils.showLog("未找到预制体 rewardBoxPanel, 请查看CommonUtils组件上是否赋值！");
return null;
};
e.prototype.showRecGamePanel = function() {
if (!_.utils._isConfigInit) {
_.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (_.utils.config.otherconfig.beforGameOverRecGamesPanel && _.utils.getRecommondGameList()) {
var e = cc.instantiate(_.utils.config.otherconfig.beforGameOverRecGamesPanel);
if (e) {
this.rewardRecGamePanel && cc.isValid(this.rewardRecGamePanel) && this.rewardRecGamePanel.destroy();
this.rewardRecGamePanel = e;
this.rewardRecGamePanel.zIndex = 9999;
cc.director.getScene().addChild(e, 1e3);
var t = this.rewardRecGamePanel.getComponent(S.default);
t._location = h.SubLocation.isBeforGameOverAd;
t.init(_.utils.getRecommondGameList());
t.show();
return e;
}
} else _.utils.showLog("未找到预制体 moreGamesPanel, 请查看CommonUtils组件上是否赋值！");
return null;
};
e.prototype.showrewardTurnTablePanel = function() {
if (!_.utils._isConfigInit) {
_.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (_.utils.config.otherconfig.rewardTurnTablePanel) {
var e = cc.instantiate(_.utils.config.otherconfig.rewardTurnTablePanel);
if (e) {
this.rewardTurnTablePanel && cc.isValid(this.rewardTurnTablePanel) && this.rewardTurnTablePanel.destroy();
this.rewardTurnTablePanel = e;
this.rewardTurnTablePanel.zIndex = 9999;
cc.director.getScene().addChild(e, 1e3);
return e;
}
} else _.utils.showLog("未找到预制体 rewardTurnTablePanel, 请查看CommonUtils组件上是否赋值！");
return null;
};
e.prototype.showRewardShortCutPanel = function() {
if (!_.utils._isConfigInit) {
_.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (_.utils.config.otherconfig.rewardShortCutPanel) {
var e = cc.instantiate(_.utils.config.otherconfig.rewardShortCutPanel);
if (e) {
this.rewardShortCutPanel && cc.isValid(this.rewardShortCutPanel) && this.rewardShortCutPanel.destroy();
this.rewardShortCutPanel = e;
this.rewardShortCutPanel.zIndex = 9999;
cc.director.getScene().addChild(e, 1e3);
return e;
}
} else _.utils.showLog("未找到预制体 rewardShortCutPanel, 请查看CommonUtils组件上是否赋值！");
return null;
};
e.prototype.showRewardLuckBoxPanel = function() {
if (!_.utils._isConfigInit) {
_.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (_.utils.config.otherconfig.rewardLuckBoxPanel) {
var e = cc.instantiate(_.utils.config.otherconfig.rewardLuckBoxPanel);
if (e) {
this._rewardLuckBoxPanel && cc.isValid(this._rewardLuckBoxPanel) && this._rewardLuckBoxPanel.destroy();
this._rewardLuckBoxPanel = e;
this._rewardLuckBoxPanel.zIndex = 9999;
cc.director.getScene().addChild(e, 1e3);
return e;
}
} else _.utils.showLog("未找到预制体 RewardLuckBoxPanel, 请查看CommonUtils组件上是否赋值！");
return null;
};
e.prototype.checkShowAdTime = function() {
if (!_.utils._isConfigInit) {
_.utils.showLog("warn:组件配置未初始化!");
return !1;
}
var e = (new Date().getTime() - _.utils._gameEntryTime) / 1e3, t = 0;
n.default.IsOPPO && (t = 90);
"" !== _.utils.getConfigByKey("show_ad_time") && (t = _.utils.getConfigByKey("show_ad_time"));
_.utils.showLog("验证当前广告显示时间：#showAdTime=", t, " #interval=", e);
return e >= t;
};
e.prototype.checkInsertAdTime = function() {
if (_.utils.ServerConfig && _.utils.ServerConfig.insert_ad_interval_time) {
var e = new Date().getTime(), t = (e - this._insertLastShowTime) / 1e3;
if (t < _.utils.ServerConfig.insert_ad_interval_time) {
_.utils.showLog("验证当前插屏广告显示时间：#showAdTime=", _.utils.ServerConfig.insert_ad_interval_time, " #interval=", t);
return !1;
}
this._insertLastShowTime = e;
}
return !0;
};
e.prototype.showBlockAd = function(e) {
this._curAdAgent && n.default.IsQQ && this._curAdAgent.showBlockAd(e);
};
e.prototype.hideBlockAd = function(e) {
this._curAdAgent && n.default.IsQQ && this._curAdAgent.hideBlockAd();
};
e.prototype.showFullScreenVideo = function(e) {
this._curAdAgent ? this._curAdAgent.showFullScreenVideo(e) : e && e(!1, "视频加载失败！");
};
e.prototype.ShowSingleNativeAd = function(e) {
this.checkShowAdTime() ? this._curAdAgent && this._curAdAgent.ShowSingleNativeAd && this._curAdAgent.ShowSingleNativeAd(e) : _.utils.showLog("显示广告条时间未达限制！");
};
e.prototype.HideSingleNativeAd = function(e) {
this._curAdAgent && this._curAdAgent.HideSingleNativeAd && this._curAdAgent.HideSingleNativeAd(e);
};
e.prototype.showCustomAd = function(e) {
this.checkShowAdTime() ? this._curAdAgent && this._curAdAgent.showCustomAd && this._curAdAgent.showCustomAd(e) : _.utils.showLog("显示原生模版广告时间未达限制！");
};
e.prototype.hideCustomAd = function(e) {
this._curAdAgent && this._curAdAgent.hideCustomAd && this._curAdAgent.hideCustomAd(e);
};
e.prototype.showCustomAdPanel = function(e, t) {
_.utils.showLog("显示模版弹窗广告");
if (!_.utils._isConfigInit) {
_.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (n.default.IsWechat) if (_.utils.config.wechatconfig.getCustomAdInfoInfo(100)) {
var i = _.utils.getConfigByKey("custom_panel_show_ad_level");
if (!i || e % i == 0) {
if (_.utils.config.otherconfig.yzCustomAdPanel) {
this._curAdAgent && this._curAdAgent.createCustomADBanner();
var o = cc.instantiate(_.utils.config.otherconfig.yzCustomAdPanel);
o.getComponent(P.default).closeCallFunc = t;
if (o) {
this._customAdPanel && cc.isValid(this._customAdPanel) && this._customAdPanel.destroy();
this._customAdPanel = o;
this._customAdPanel.zIndex = 9999;
cc.director.getScene().addChild(o, 1e3);
return o;
}
} else _.utils.showLog("未找到预制体 CustomAdPanel, 请查看CommonUtils组件上是否赋值！");
return null;
}
t && t();
_.utils.showLog("服务器配置间隔" + i + "关显示模版弹窗广告!");
} else {
t && t();
_.utils.showLog("服务器未配置模版弹窗广告");
} else {
t && t();
_.utils.showLog("服务器未配置模版弹窗广告");
}
};
return e = o([ O ], e);
}());
i.default = k;
cc._RF.pop();
}, {
"./AdAgent4399": "AdAgent4399",
"./AdAgentBaidu": "AdAgentBaidu",
"./AdAgentBili": "AdAgentBili",
"./AdAgentBroser": "AdAgentBroser",
"./AdAgentCocosplay": "AdAgentCocosplay",
"./AdAgentDouyin": "AdAgentDouyin",
"./AdAgentFaceBook": "AdAgentFaceBook",
"./AdAgentGoogleWeb": "AdAgentGoogleWeb",
"./AdAgentHago": "AdAgentHago",
"./AdAgentHuaWei": "AdAgentHuaWei",
"./AdAgentIOS": "AdAgentIOS",
"./AdAgentKwai": "AdAgentKwai",
"./AdAgentNative": "AdAgentNative",
"./AdAgentOPPO": "AdAgentOPPO",
"./AdAgentQQ": "AdAgentQQ",
"./AdAgentQTT": "AdAgentQTT",
"./AdAgentUC": "AdAgentUC",
"./AdAgentVIVO": "AdAgentVIVO",
"./AdAgentWechat": "AdAgentWechat",
"./AdAgentWiFi": "AdAgentWiFi",
"./AdAgentXiaomi": "AdAgentXiaomi",
"./BeforGameOverRecGamesPanel": "BeforGameOverRecGamesPanel",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YzCustomAdPanel": "YzCustomAdPanel"
} ],
AdSDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "38700bTBL9M2a/u4fH6cviO", "AdSDK");
window.AdSDK = {
bannerAds: {},
interstitialAds: {},
videoAds: {},
init: function() {
var e = this;
GameSDK.registerCallback("ad_banner_onLoad", function(t) {
var i = e.bannerAds[t.adId];
i && i.onLoad && i.onLoad(t);
});
GameSDK.registerCallback("ad_banner_onError", function(t) {
var i = e.bannerAds[t.adId];
i && i.onError && i.onError(t);
});
GameSDK.registerCallback("ad_banner_onResize", function(t) {
var i = e.bannerAds[t.adId];
i && i.onResize && i.onResize(t);
});
GameSDK.registerCallback("ad_interstitial_onLoad", function(t) {
var i = e.interstitialAds[t.adId];
i && i.onLoad && i.onLoad(t);
});
GameSDK.registerCallback("ad_interstitial_onError", function(t) {
var i = e.interstitialAds[t.adId];
i && i.onError && i.onError(t);
});
GameSDK.registerCallback("ad_interstitial_onResize", function(t) {
var i = e.interstitialAds[t.adId];
i && i.onResize && i.onResize(t);
});
GameSDK.registerCallback("ad_rewardedVideo_onLoad", function(t) {
var i = e.videoAds[t.adId];
i && i.onLoad && i.onLoad(t);
});
GameSDK.registerCallback("ad_rewardedVideo_onError", function(t) {
var i = e.videoAds[t.adId];
i && i.onError && i.onError(t);
});
GameSDK.registerCallback("ad_rewardedVideo_onClose", function(t) {
var i = e.videoAds[t.adId];
i && i.onClose && i.onClose(t);
});
GameSDK.registerCallback("ad_onShow", function(t) {
if (1 == t.type) {
var i = e.bannerAds[t.adId];
i && i.mHandler && i.mHandler(t.success);
} else if (2 == t.type) {
var o = e.interstitialAds[t.adId];
o && o.mHandler && o.mHandler(t.success);
} else if (3 == t.type) {
var n = e.videoAds[t.adId];
n && n.mHandler && n.mHandler(t.success);
}
});
},
createBannerAd: function(e, t, i) {
var o = this, n = {
adId: e
}, s = {
adId: e,
bannerAdId: t,
position: i
};
GameSDK.callNative("ad_banner_create", s);
n.show = function() {
var t = {
adId: e
};
GameSDK.callNative("ad_banner_show", t);
return new Promise(function(t, i) {
o.bannerAds[e].mHandler = function(e) {
0 == e ? t() : i();
};
});
};
n.hide = function() {
var t = {
adId: e
};
GameSDK.callNative("ad_banner_hide", t);
};
n.destroy = function() {
var t = {
adId: e
};
o.bannerAds[e] = null;
GameSDK.callNative("ad_banner_destroy", t);
};
n.onLoad = function(e) {
this.onLoad = e;
};
n.onError = function(e) {
this.onError = e;
};
n.onResize = function(e) {
this.onResize = e;
};
n.offLoad = function(e) {
this.onLoad == e && (this.onLoad = null);
};
n.offError = function(e) {
this.onError == e && (this.onError = null);
};
n.offResize = function(e) {
this.onResize == e && (this.onResize = null);
};
o.bannerAds[e] = n;
return n;
},
createInterstitialAd: function(e, t, i) {
var o = this, n = {
adId: e
}, s = {
adId: e,
interstitialAdId: t,
style: i
};
GameSDK.callNative("ad_interstitial_create", s);
n.show = function() {
var t = {
adId: e
};
GameSDK.callNative("ad_interstitial_show", t);
return new Promise(function(t, i) {
o.interstitialAds[e].mHandler = function(e) {
0 == e ? t() : i();
};
});
};
n.hide = function() {
var t = {
adId: e
};
GameSDK.callNative("ad_interstitial_hide", t);
};
n.destroy = function() {
var t = {
adId: e
};
o.interstitialAds[e] = null;
GameSDK.callNative("ad_interstitial_destroy", t);
};
n.onLoad = function(e) {
this.onLoad = e;
};
n.onError = function(e) {
this.onError = e;
};
n.onResize = function(e) {
this.onResize = e;
};
n.offLoad = function(e) {
this.onLoad == e && (this.onLoad = null);
};
n.offError = function(e) {
this.onError == e && (this.onError = null);
};
n.offResize = function(e) {
this.onResize == e && (this.onResize = null);
};
o.interstitialAds[e] = n;
return n;
},
createRewardedVideoAd: function(e, t, i) {
var o = this, n = {
adId: e
}, s = {
adId: e,
videoAdId: t,
screenOrientation: i
};
GameSDK.callNative("ad_rewardedVideo_create", s);
n.show = function() {
var t = {
adId: e
};
GameSDK.callNative("ad_rewardedVideo_show", t);
return new Promise(function(t, i) {
o.videoAds[e].mHandler = function(e) {
0 == e ? t() : i();
};
});
};
n.hide = function() {
var t = {
adId: e
};
GameSDK.callNative("ad_rewardedVideo_hide", t);
};
n.destroy = function() {
var t = {
adId: e
};
o.videoAds[e] = null;
GameSDK.callNative("ad_rewardedVideo_destroy", t);
};
n.onLoad = function(e) {
this.onLoad = e;
};
n.onError = function(e) {
this.onError = e;
};
n.onClose = function(e) {
this.onClose = e;
};
n.offLoad = function(e) {
this.onLoad == e && (this.onLoad = null);
};
n.offError = function(e) {
this.onError == e && (this.onError = null);
};
n.offClose = function(e) {
this.onClose == e && (this.onClose = null);
};
o.videoAds[e] = n;
return n;
}
};
cc._RF.pop();
}, {} ],
AldUtils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7efdf2MYTNBZ4vdYA+fz1rS", "AldUtils");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./YZ_Constant"), s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, 
function() {
function e() {}
e.StartGame = function(e, t) {
var i = t ? t + ",第" + e + "关" : "第" + e + "关";
s.utils.showLog("关卡：" + i + "开始");
s.utils.cur_tool && s.utils.cur_tool.postLevel && s.utils.cur_tool.postLevel(e, n.LevelStatus.GameStart, i);
};
e.GameWin = function(e, t, i) {
void 0 === t && (t = 0);
var o = i ? i + ",第" + e + "关" : "第" + e + "关";
s.utils.showLog("关卡：" + o + "胜利");
s.utils.cur_tool && s.utils.cur_tool.postLevel && s.utils.cur_tool.postLevel(e, n.LevelStatus.GameWin, o);
};
e.GameFail = function(e, t) {
var i = t ? t + ",第" + e + "关" : "第" + e + "关";
s.utils.showLog("关卡：" + i + "失败");
s.utils.cur_tool && s.utils.cur_tool.postLevel && s.utils.cur_tool.postLevel(e, n.LevelStatus.GameFail, i);
};
e.GameSkip = function(e, t) {
var i = t ? t + ",第" + e + "关" : "第" + e + "关";
s.utils.cur_tool && s.utils.cur_tool.postLevel && s.utils.cur_tool.postLevel(e, n.LevelStatus.GameSkip, i);
};
e.UseTool = function(e, t, i) {};
e.SendEvent = function(e) {
s.utils.showLog("事件上报:" + e);
s.utils.cur_tool && s.utils.cur_tool.sendEvent && s.utils.cur_tool.sendEvent(e);
};
return e = o([ r ], e);
}());
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
AudioMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2fcf47bjJBFQLVlDEKoJgp6", "AudioMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./CocosZ"), n = function() {
function e() {
this._curMusicId = -1;
this._curMusicClip = null;
this._videoOn = !1;
this._guideAudioId = -1;
this.audioIdList = [];
}
Object.defineProperty(e, "inst", {
get: function() {
e._inst || (e._inst = new e());
return e._inst;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "videoOn", {
get: function() {
return this._videoOn;
},
set: function(e) {
this._videoOn = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "AudioOn", {
get: function() {
return o.cocosz.dataMgr.AudioOn;
},
set: function(e) {
o.cocosz.dataMgr.AudioOn = e;
e ? this._curMusicClip && (this._curMusicId = this._play(this._curMusicClip, !0, 1)) : this.stopAll();
},
enumerable: !1,
configurable: !0
});
e.prototype.playBgm = function(e) {
void 0 === e && (e = !0);
if (this.AudioOn) {
var t = "bgm_ui";
if ("Home" == cc.director.getScene().name) t = "bgm_ui"; else {
if ("Game" != cc.director.getScene().name) return;
t = "bgm_6";
}
var i = o.cocosz.resMgr.getRes(t, cc.AudioClip);
if (i) {
this.stopAll();
setTimeout(function() {
cc.audioEngine.playMusic(i, !0);
}, 0);
}
}
};
e.prototype.playGuideAudio = function(e) {
if (-1 != this._guideAudioId) {
cc.audioEngine.stop(this._guideAudioId);
this._guideAudioId = -1;
}
this._guideAudioId = o.cocosz.audioMgr.playEffect(e);
};
e.prototype.playEffect = function(e, t, i) {
void 0 === t && (t = !1);
void 0 === i && (i = 1);
if (!this.videoOn && this.AudioOn) {
var n = o.cocosz.resMgr.getRes(e, cc.AudioClip);
if (n) {
this.audioIdList[e] = cc.audioEngine.play(n, t, i);
return this.audioIdList[e];
}
}
};
e.prototype.playClip = function(e, t, i) {
void 0 === t && (t = !1);
void 0 === i && (i = 1);
if (!this.videoOn && this.AudioOn && e && e.isValid) {
this.audioIdList[e.name] = cc.audioEngine.play(e, t, i);
return this.audioIdList[e.name];
}
};
e.prototype.stopEffect = function(e) {
if (this.audioIdList[e] >= 0) {
cc.audioEngine.stop(this.audioIdList[e]);
this.audioIdList[e] = null;
}
};
e.prototype.checkEffect = function(e) {
return !!this.audioIdList[e];
};
e.prototype.playBtnEffect = function() {
var e = this;
return new Promise(function(t, i) {
e.playEffect("btn");
setTimeout(function() {
t(1);
}, 200);
});
};
e.prototype.playEffectWinner = function(e) {
var t = this;
void 0 === e && (e = 1);
this.stopAll();
setTimeout(function() {
6 != o.cocosz.gameMode ? t.playEffect("win") : t.playEffect("zombie_win");
});
};
e.prototype.playEffectFailed = function(e) {
var t = this;
void 0 === e && (e = 1);
this.stopAll();
setTimeout(function() {
6 != o.cocosz.gameMode ? t.playEffect("fail") : t.playEffect("zombie_fail");
});
};
e.prototype.pauseAll = function() {
cc.audioEngine.pauseAll();
};
e.prototype.resumeAll = function() {
this._videoOn || cc.audioEngine.resumeAll();
};
e.prototype.stopAll = function() {
cc.audioEngine.stopAll();
this.audioIdList = [];
};
e.prototype._play = function(e, t, i) {
return this.AudioOn ? cc.audioEngine.play(e, t, i) : -1;
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./CocosZ": "CocosZ"
} ],
BeforGameOverRecGamesPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fe7d8OK+QlJO4RCiDkr2evw", "BeforGameOverRecGamesPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._gameList = null;
t._originScale = 1;
t._gameItems = [];
t._jumpList = null;
t._dataDirty = !1;
t._is_Horizontal = !1;
t._closeBtnRight = null;
t._closeBtnLine = null;
t._star = null;
t.gameItemNode = null;
t._location = a.SubLocation.isMoreGame;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
r.default.IsNativeAndroid || s.utils.adManager.HideBanner(a.BannerLocation.Home);
this._panel = this.node.getChildByName("Panel");
this.node.active = !1;
var e = 1;
if (cc.winSize.height < cc.winSize.width) {
e = cc.winSize.width / 1920;
this._is_Horizontal = !0;
} else e = cc.winSize.width / 1080;
if (this._is_Horizontal) {
this._panel.getChildByName("VGameScrollView").active = !1;
this._panel.getChildByName("VHead").active = !1;
this._gameList = this._panel.getChildByName("HGameScrollView").getComponent(cc.ScrollView).content;
this.gameItemNode = this._gameList.children[0];
this._gameList.removeAllChildren();
} else {
this._panel.getChildByName("HGameScrollView").active = !1;
this._panel.getChildByName("HHead").active = !1;
this._gameList = this._panel.getChildByName("VGameScrollView").getComponent(cc.ScrollView).content;
this.gameItemNode = this._gameList.children[0];
this._gameList.removeAllChildren();
}
this._panel.scale = e;
this._originScale = this._panel.scale;
};
t.prototype._initWidget = function() {
var e = this;
this.scheduleOnce(function() {
e._gameList.removeAllChildren();
for (var t = e._is_Horizontal ? 7 : 4, i = t * Math.floor(e._jumpList.length / t), o = 0; o < i; o++) {
var n = e._jumpList[o];
if (n && n.logo) {
var s = cc.instantiate(e.gameItemNode);
s.getComponent("GameItem").init(n, e._location);
e._gameList.addChild(s);
}
}
});
};
t.prototype.update = function() {
if (this._dataDirty) {
this._dataDirty = !1;
this._updatePanel();
}
};
t.prototype._updatePanel = function() {
s.utils.postRecommentShowData(this._location);
this._initWidget();
};
t.prototype.init = function(e) {
this._jumpList = e;
this._dataDirty = !0;
};
t.prototype.show = function() {
this.node.active = !0;
};
t.prototype.hide = function() {
this.node.active = !1;
if (s.utils.rewardRecGamePanelCloseFunc) {
s.utils.rewardRecGamePanelCloseFunc();
s.utils.rewardRecGamePanelCloseFunc = null;
} else {
s.utils.rewardCloseFunc && s.utils.rewardCloseFunc();
s.utils.rewardCloseFunc = null;
}
};
t.prototype.onCloseBtnHandler = function(e, t) {
this.hide();
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
BgScroll: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "acdbc3aRD5AGp4ypzXGP/2Q", "BgScroll");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, r = s.property, l = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.sprite = null;
t._material = null;
t._start = 0;
t.speed = 1;
return t;
}
t.prototype.onLoad = function() {
this.sprite = this.getComponent(cc.Sprite);
this.sprite && (this._material = this.sprite.getMaterial(0));
this.initParams();
};
t.prototype.initParams = function() {
this.sprite && this._material && this.speed && this._material.setProperty("speed", this.speed);
};
t.prototype.update = function(e) {
if (this.node.active && this._material && void 0 != this._material.getProperty("time", 0)) {
this._material.setProperty("time", this._start);
this._start += e;
}
};
n([ r({
displayName: "速度"
}) ], t.prototype, "speed", void 0);
return t = n([ a ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {} ],
CheckIsShowIcon: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2ccb4i7SjxNi5AcJc3fVuDW", "CheckIsShowIcon");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onEnable = function() {
s.utils.ServerConfig && s.utils.ServerConfig.show_video_icon && "false" == s.utils.ServerConfig.show_video_icon ? this.node.active = !1 : this.node.active = !0;
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
CocosZ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "54a8bcZAI1KMJdjQ5CMJRqd", "CocosZ");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.cocosz = void 0;
var s = e("./GameMgr"), a = e("./DataMgr"), r = e("./UIMgr"), l = e("./ResMgr"), c = e("./Constant"), u = e("./SceneMgr"), h = e("./AudioMgr"), d = e("../../common-plugin/Scripts/Utils"), f = e("./Msg"), _ = e("../../common-plugin/Scripts/PlatUtils"), p = e("LanguageData");
0;
var g, m = cc._decorator, v = m.ccclass, y = m.property;
(function(e) {
e[e.zh = 0] = "zh";
e[e.en = 1] = "en";
})(g || (g = {}));
i.cocosz = null;
var w = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._gameMgr = null;
t._dataMgr = null;
t._uiMgr = null;
t._resMgr = null;
t._audioMgr = null;
t._sceneMgr = null;
t.btnDebug = !1;
t._languagesArr = [ "zh", "en" ];
t.curLanguage = "zh";
t._curLang = g.zh;
t.audioList = [];
t._useCJTimes = 0;
t._totalCJTimes = 0;
t.curLevel = 0;
t._pauseCount = 0;
t.serverConfig_shareMaxNum = 0;
t.isDeBug = !1;
t.isADON = !1;
t.gameMode = 6;
t._dtBack = 1 / 60;
t.isOk = !1;
t.bundleConfig = {
"ui/UILoadingPage": "bundleLoad"
};
t.serverConfig = {
shareMaxNum: 5,
shareTime: 2,
isVideoAd_advanced_weapon: "true",
isVideoAd_Qpbz: "true",
isVideoAd_Citie: "true",
isVideoAd_hideBanner: "true",
skillLockNum: 2,
isBanner_game: !0,
isInterstitial_UIHomePage: "true",
isInterstitial_UISignPanel: "true",
isInterstitial_UITurntablePanel: "true",
isInterstitial_UITimePanel: "true",
isInterstitial_UIGamePage: "true",
isInterstitial_UIRevivePanel: "true",
isInterstitial_UIPausePanel: "true",
isInterstitial_UIUpgradePanel: "true",
try_skin_level_count: 1,
try_skin_show_ad_interval: 1
};
t.serverConfig_shareTime = 2;
return t;
}
Object.defineProperty(t.prototype, "gameMgr", {
get: function() {
return this._gameMgr;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "dataMgr", {
get: function() {
return this._dataMgr;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "uiMgr", {
get: function() {
return this._uiMgr;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "resMgr", {
get: function() {
return this._resMgr;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "audioMgr", {
get: function() {
return this._audioMgr;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "sceneMgr", {
get: function() {
return this._sceneMgr;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "curLang", {
get: function() {
return this._curLang;
},
set: function(e) {
this._curLang = e;
this.curLanguage = this._languagesArr[e];
cc.log("当前语言: ", this.curLanguage);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "useCJTimes", {
get: function() {
return this._useCJTimes;
},
set: function(e) {
this._useCJTimes = e;
localStorage.setItem(c.default.ST_GameData + "useCJTimes_dmm", this._useCJTimes.toString());
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "totalCJTimes", {
get: function() {
return this._totalCJTimes;
},
set: function(e) {
this._totalCJTimes = e;
localStorage.setItem(c.default.ST_GameData + "totalCJTimes_dmm", this._totalCJTimes.toString());
},
enumerable: !1,
configurable: !0
});
t.prototype.getLevelId = function(e) {
return i.cocosz.dataMgr.TotoalCount_6;
};
Object.defineProperty(t.prototype, "pauseCount", {
get: function() {
return this._pauseCount;
},
set: function(e) {
e < 0 && (e = 0);
this._pauseCount = e;
cc.log("pauseCount:", this._pauseCount);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "isPause", {
get: function() {
return this.pauseCount > 0;
},
set: function(e) {},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "canShare", {
get: function() {
var e = !1;
_.default.IsWechat && i.cocosz.dataMgr.shareNum < i.cocosz.serverConfig_shareMaxNum && (e = !0);
return e;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this;
i.cocosz = this;
this._gameMgr = s.default.inst;
this._dataMgr = a.default.inst;
this._resMgr = l.default.inst;
this._uiMgr = r.default.inst;
this._audioMgr = h.default.inst;
this._sceneMgr = u.default.inst;
cc.game.addPersistRootNode(this.node);
cc.sys.languageCode && (cc.sys.languageCode.toLowerCase().indexOf("zh") > -1 ? this.curLanguage = "zh" : this.curLanguage = "en");
p.init(this.curLanguage);
this.isDeBug = this.btnDebug;
this._initConfigKey();
cc.director.getCollisionManager().enabled = !0;
var t = cc.director.getPhysicsManager();
t.enabled = !0;
t.gravity = cc.v2();
_.default.IsWechat ? wx.setKeepScreenOn({
keepScreenOn: !0
}) : _.default.IsOPPO ? qg.setKeepScreenOn({
keepScreenOn: !0,
success: function(e) {},
fail: function(e) {},
complete: function(e) {}
}) : _.default.IsVIVO && qg.setKeepScreenOn({
keepScreenOn: !0,
success: function() {
console.log("handling success");
},
fail: function(e, t) {
console.log("handling fail, code = " + t);
}
});
cc.assetManager.loadBundle("bundleLoad", null, function(t, i) {
t ? cc.log("加载分包bundleLoad出错") : e._initLoadingPage();
});
};
t.prototype.update = function(e) {
var t = cc.director.getPhysicsManager();
t.enabledAccumulator = !0;
t.FIXED_TIME_STEP = cc.misc.lerp(this._dtBack, e, .01);
this._dtBack = e;
};
t.prototype._initLoadingPage = function() {
var e = this;
this.resMgr.loadAndCacheRes("ui/UILoadingPage", cc.Prefab, null, function() {
e._uiMgr.openPage(c.PageName.UILoadingPage);
d.utils.login(function() {
e._initCache();
e._loadBundleRes();
_.default.IsHuaWei || (e.isOk = !0);
});
});
};
t.prototype._loadBundleRes = function() {
var e = this;
cc.assetManager.loadBundle("bundleRes", function(t, i) {
if (t) cc.log("加载分包bundleRes出错"); else {
e._initBundleConfig();
e._loadRes();
}
});
};
t.prototype._loadRes = function() {
var e, t = this, o = 0, n = [];
i.cocosz.getDirWithPath("UI/", cc.Prefab, n);
i.cocosz.resMgr.loadAndCacheResArray(n, cc.Prefab, null, function() {
o++;
});
var s = [];
i.cocosz.getDirWithPath("i18n/tex_name/" + i.cocosz.curLanguage, cc.SpriteAtlas, s);
i.cocosz.resMgr.loadAndCacheResArray(s, cc.SpriteAtlas, null, function() {
o++;
});
var a = [];
i.cocosz.getDirWithPath("tex_common", cc.SpriteAtlas, a);
i.cocosz.resMgr.loadAndCacheResArray(a, cc.SpriteAtlas, null, function() {
o++;
});
var r = [];
i.cocosz.getDirWithPath("prefab_heads", cc.Prefab, r);
i.cocosz.resMgr.loadAndCacheResArray(r, cc.Prefab, null, function() {
o++;
});
var l = [];
i.cocosz.getDirWithPath("prefab_weapon", cc.Prefab, l);
i.cocosz.resMgr.loadAndCacheResArray(l, cc.Prefab, null, function() {
o++;
});
var u = [];
i.cocosz.getDirWithPath("prefab_skin", cc.Prefab, u);
i.cocosz.resMgr.loadAndCacheResArray(u, cc.Prefab, null, function() {
o++;
});
var h = [];
i.cocosz.getDirWithPath("audio_common", cc.AudioClip, h);
i.cocosz.resMgr.loadAndCacheResArray(h, cc.AudioClip, null, function() {
o++;
});
e = n.length + s.length + a.length + r.length + l.length + u.length + h.length;
this.resMgr.cacheCocoszAudio();
var f = 0;
this.schedule(function() {
f = o / e;
cc.game.emit(c.default.E_GAME_LOGIC, {
type: c.default.E_UPDATE_PROGRESS,
data: f
});
if (o >= e && t.isOk) {
t.unscheduleAllCallbacks();
d.utils.registerServerInitEvent(function() {
var e = i.cocosz.getConfigByKey("interval_time_show_cp");
Number.isInteger(e) && e > 0 && t.schedule(function() {
d.utils.adManager.ShowInterstitial();
}, e);
}, t);
setInterval(function() {
i.cocosz.dataMgr.OnlineToday++;
}, 1e3);
t._sceneMgr.loadScene("Home", function() {
t._uiMgr.openPage(c.PageName.UIHomePage);
});
}
}, 0);
};
t.prototype._initBundleConfig = function() {
for (var e = 0, t = [ "resources", "bundleRes", "bundleLoad" ]; e < t.length; e++) {
var i = t[e], o = cc.assetManager.bundles.get(i);
if (o) {
var n = o._config.paths._map;
if (n) for (var s in n) this.bundleConfig[s] = i;
}
}
};
t.prototype.getBundleWithPath = function(e) {
if (this.bundleConfig[e]) return cc.assetManager.bundles.get(this.bundleConfig[e]);
for (var t in this.bundleConfig) if (t[0] === e[0] && t.includes(e, 0)) return cc.assetManager.bundles.get(this.bundleConfig[t]);
cc.log("查找budle失败：", e);
return null;
};
t.prototype.getDirWithPath = function(e, t, i) {
var o = this.getBundleWithPath(e);
return o ? o.getDirWithPath(e, t, i) : null;
};
t.prototype.getConfigByKey = function(e) {
return d.utils.getConfigByKey(e);
};
t.prototype._initConfigKey = function() {
var e = function() {
"true" == i.cocosz.getConfigByKey("game_debug") && (i.cocosz.isDeBug = !0);
var e = i.cocosz.getConfigByKey("shareMaxNum");
Number.isInteger(e) && e >= 0 && (i.cocosz.serverConfig_shareMaxNum = e);
var t = i.cocosz.getConfigByKey("shareTime");
Number.isInteger(t) && t >= 0 && (i.cocosz.serverConfig_shareTime = t);
};
d.utils.registerServerInitEvent(e, this);
};
t.prototype._initCache = function() {
i.cocosz.dataMgr && i.cocosz.dataMgr.init();
if (i.cocosz.dataMgr.LastLoadDate != new Date().toDateString()) {
i.cocosz.dataMgr.LastLoadDate = new Date().toDateString();
i.cocosz.dataMgr.shareNum = 0;
}
localStorage.getItem(c.default.ST_GameData + "totalCJTimes_dmm") && (this._totalCJTimes = Number(localStorage.getItem(c.default.ST_GameData + "totalCJTimes_dmm")));
localStorage.getItem(c.default.ST_GameData + "useCJTimes_dmm") && (this._useCJTimes = Number(localStorage.getItem(c.default.ST_GameData + "useCJTimes_dmm")));
if (new Date().toDateString() != i.cocosz.dataMgr.LastLoadDate) {
this.useCJTimes = 0;
i.cocosz.dataMgr.OnlineToday = 0;
i.cocosz.dataMgr.receiveToday = [ 0, 0, 0, 0, 0 ];
i.cocosz.dataMgr.LastLoadDate = new Date().toDateString();
}
};
Object.defineProperty(t.prototype, "isShowAd", {
get: function() {
return !1;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "isShowGameBanner", {
get: function() {
return "false" != i.cocosz.getConfigByKey("gameBanner");
},
enumerable: !1,
configurable: !0
});
t.prototype.StoHMS = function(e) {
var t = 0, i = 0;
if (e >= 60) {
t = Math.floor(e / 60);
e = Math.floor(e % 60);
if (t > 60) {
i = Math.floor(t / 60);
t = Math.floor(t % 60);
}
}
var o = "";
o += 0 == i ? "" : i + ":";
o += t >= 10 ? "" + t : "0" + t;
return o += e >= 10 ? ":" + e : ":0" + e;
};
t.prototype.watchAD = function(e, t) {
void 0 === e && (e = null);
void 0 === t && (t = null);
if (this.isDeBug) e ? e() : t && t(); else if (!i.cocosz.audioMgr.videoOn) {
i.cocosz.audioMgr.videoOn = !0;
i.cocosz.pauseCount++;
i.cocosz.audioMgr.stopAll();
d.utils.adManager.ShowVideo(function(o, n) {
i.cocosz.audioMgr.videoOn = !1;
i.cocosz.pauseCount--;
i.cocosz.audioMgr.playBgm();
if (o) e && e(); else {
t && t();
n = n || p.t("msg.video_load_fail");
f.default.Show(n);
}
});
}
};
t.prototype.share = function(e, t) {
var o = this;
void 0 === e && (e = null);
void 0 === t && (t = null);
if (this.isDeBug) {
e && e();
i.cocosz.dataMgr.shareNum++;
} else {
var n = new Date().getTime();
d.utils.share(function() {
if (new Date().getTime() - n > 1e3 * o.serverConfig_shareTime) {
e && e();
i.cocosz.dataMgr.shareNum++;
} else {
t && t();
f.default.Show("请分享至不同好友才可获得奖励哦");
}
});
}
};
t.prototype.vibrate = function(e) {
void 0 === e && (e = "short");
0 != i.cocosz.dataMgr.ShakeOn && (_.default.IsWechat ? "short" == e ? wx.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : wx.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : _.default.IsOPPO ? "short" == e ? qg.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : qg.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : _.default.IsVIVO ? "short" == e ? qg.vibrateShort() : qg.vibrateLong() : _.default.IsQQ ? "short" == e ? qq.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : qq.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : _.default.IsDouyin ? "short" == e ? tt.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : tt.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : _.default.IsBaidu ? "short" == e ? swan.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : swan.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : _.default.IsNativeAndroid && ("short" == e ? jsb.reflection.callStaticMethod(d.utils.Tool_Native.jniClassName, "vibrateShort", "()V") : jsb.reflection.callStaticMethod(d.utils.Tool_Native.jniClassName, "vibrateLong", "()V")));
};
n([ y() ], t.prototype, "btnDebug", void 0);
n([ y({
visible: !1
}) ], t.prototype, "curLanguage", void 0);
n([ y({
visible: !1
}) ], t.prototype, "_curLang", void 0);
n([ y({
type: cc.Enum(g),
displayName: "当前语言",
tooltip: "zh(中文) en(英文)"
}) ], t.prototype, "curLang", null);
n([ y({
type: cc.AudioClip
}) ], t.prototype, "audioList", void 0);
return t = n([ v ], t);
}(cc.Component);
i.default = w;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../../common-plugin/Scripts/Utils": "Utils",
"./AudioMgr": "AudioMgr",
"./Constant": "Constant",
"./DataMgr": "DataMgr",
"./GameMgr": "GameMgr",
"./Msg": "Msg",
"./ResMgr": "ResMgr",
"./SceneMgr": "SceneMgr",
"./UIMgr": "UIMgr",
LanguageData: "LanguageData"
} ],
CoinBord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "96bb6h8GYdOW47cjyMPjHjl", "CoinBord");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/Constant"), a = e("../Framework/CocosZ"), r = e("../Framework/Msg"), l = e("LanguageData"), c = cc._decorator, u = c.ccclass, h = c.property, d = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._label = null;
t._icon = null;
t._adBtn = null;
t.isDiamond = !1;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this._label = this.node.getChildByName("Label").getComponent(cc.Label);
this._icon = this.node.getChildByName("Icon");
this._adBtn = this.node.getChildByName("BtnAD");
if (this._adBtn) {
this._adBtn.on(cc.Node.EventType.TOUCH_END, function() {
var t = cc.instantiate(a.cocosz.resMgr.getRes("UIADPanel", cc.Prefab));
cc.find("Canvas").addChild(t);
e.isDiamond && t.getComponent("UIADPanel").setDiamond();
});
this._adBtn.active = a.cocosz.isADON;
}
};
t.prototype.onEnable = function() {
cc.game.on(s.default.E_GAME_LOGIC, this._onGameMessageHandler, this);
this._updateLabel();
};
t.prototype.onDisable = function() {
cc.game.targetOff(this);
};
t.prototype._onGameMessageHandler = function(e) {
switch (e.type) {
case s.default.E_COIN_CHANGE:
case s.default.E_Diamond_CHANGE:
this._updateLabel();
}
};
t.prototype._updateLabel = function() {
this.isDiamond ? this._label.string = a.cocosz.dataMgr.DiamondCount + "" : this._label.string = a.cocosz.dataMgr.CoinCount + "";
};
t.prototype.getLocation = function() {
return this._icon.convertToWorldSpaceAR(cc.Vec3.ZERO);
};
t.prototype._addGold = function() {
a.cocosz.dataMgr.CoinCount += 200;
r.default.Show(l.t("msg.gxhdjb") + "200");
};
n([ h ], t.prototype, "isDiamond", void 0);
return t = n([ u ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/Msg": "Msg",
LanguageData: "LanguageData"
} ],
CommonConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3506bXX0nhILLUvzUl3W+m/", "CommonConfig");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.OtherConfig = i.FaceBookConfig = i.BiliConfig = i.XiaoMiConfig = i.CocosConfig = i.UCConfig = i.QTTConfig = i.DouyinConfig = i.NativeIosConfig = i.HagoConfig = i.KwaiConfig = i.WiFiConfig = i.BaiduConfig = i.NativeAndroidConfig = i.HuaWeiConfig = i.YzRedBagInfo = i.VivoConfig = i.OppoConfig = i.QQConfig = i.WechatConfig = i.CustomAdInfo = i.NativeBannerInfo = i.BannerIdInfo = void 0;
var n = e("./YZ_Constant"), s = e("./PlatUtils"), a = e("./Utils"), r = e("./YZ_LocalStorage"), l = cc._decorator, c = l.ccclass, u = l.property, h = function() {
function e() {
this.location = n.BannerLocation.None;
this.bannerId = "";
}
o([ u({
type: cc.Enum(n.BannerLocation),
displayName: "广告条位置"
}) ], e.prototype, "location", void 0);
o([ u({
displayName: "广告条ID"
}) ], e.prototype, "bannerId", void 0);
return e = o([ c("BannerIdInfo") ], e);
}();
i.BannerIdInfo = h;
var d = function() {
function e() {
this.location = n.BannerLocation.None;
this.show_st_banner = "false";
this.banner_close_but_size = 40;
this.banner_close_but_alpha = 120;
this.banner_show_height = 160;
this.banner_close_but_range = 40;
this.banner_close_but_show = "true";
this.st_banner_scale = 1;
this.st_banner_down_btn_image = "";
this.st_banner_down_but_show = 0;
this.st_banner_down_but_margin_top = 0;
this.st_banner_close_but_range = 55;
this.st_banner_close_but_size = 55;
this.st_banner_close_but_show = "true";
this.st_banner_bottom = 0;
this.st_banner_close_but_alpha = 255;
this.banner_click_refresh = "true";
this.auto_refresh = -1;
this.st_banner_style = -1;
this.st_banner_width = -1;
this.st_banner_height = -1;
this.st_banner_show_back_up = 1;
this.is_show_banner = 1;
this.is_show_rec = -1;
this.delay_show_time = 0;
this.banner_close_showAd_interval = 0;
this.bg_mask_opacity = 0;
this.st_banner_bg_mask_opacity = 0;
this._alignType = "bottom";
}
e.prototype.init = function(e, t) {
this.location = e;
this.banner_close_but_alpha = t.banner_close_but_alpha ? t.banner_close_but_alpha : this.banner_close_but_alpha;
this.banner_close_but_range = t.banner_close_but_range ? t.banner_close_but_range : this.banner_close_but_range;
this.banner_close_but_size = t.banner_close_but_size ? t.banner_close_but_size : this.banner_close_but_size;
this.banner_show_height = t.banner_show_height ? t.banner_show_height : this.banner_show_height;
this.banner_close_but_show = t.banner_close_but_show ? t.banner_close_but_show : this.banner_close_but_show;
this.bg_mask_opacity = t.bg_mask_opacity ? t.bg_mask_opacity : this.bg_mask_opacity;
this.st_banner_close_but_range = t.st_banner_close_but_range ? t.st_banner_close_but_range : this.st_banner_close_but_range;
this.st_banner_close_but_size = t.st_banner_close_but_size ? t.st_banner_close_but_size : this.st_banner_close_but_size;
this.st_banner_down_btn_image = t.st_banner_down_btn_image ? t.st_banner_down_btn_image : this.st_banner_down_btn_image;
this.st_banner_down_but_margin_top = t.st_banner_down_but_margin_top ? t.st_banner_down_but_margin_top : this.st_banner_down_but_margin_top;
this.st_banner_down_but_show = t.st_banner_down_but_show ? t.st_banner_down_but_show : this.st_banner_down_but_show;
this.st_banner_scale = t.st_banner_scale ? t.st_banner_scale : this.st_banner_scale;
this.show_st_banner = t.show_st_banner ? t.show_st_banner : this.show_st_banner;
this.st_banner_close_but_show = t.st_banner_close_but_show ? t.st_banner_close_but_show : this.st_banner_close_but_show;
this.st_banner_bottom = t.st_banner_bottom ? t.st_banner_bottom : this.st_banner_bottom;
this.st_banner_close_but_alpha = t.st_banner_close_but_alpha ? t.st_banner_close_but_alpha : this.st_banner_close_but_alpha;
this.banner_click_refresh = t.banner_click_refresh ? t.banner_click_refresh : this.banner_click_refresh;
this.auto_refresh = t.auto_refresh ? t.auto_refresh : this.auto_refresh;
this.st_banner_style = t.st_banner_style ? t.st_banner_style : this.st_banner_style;
this.st_banner_width = t.st_banner_width ? t.st_banner_width : this.st_banner_width;
this.st_banner_height = t.st_banner_height ? t.st_banner_height : this.st_banner_height;
this.st_banner_show_back_up = t.st_banner_show_back_up ? t.st_banner_show_back_up : this.st_banner_show_back_up;
this.is_show_banner = t.is_show_banner ? t.is_show_banner : this.is_show_banner;
this.is_show_rec = t.is_show_rec ? t.is_show_rec : this.is_show_rec;
this.delay_show_time = t.delay_show_time ? t.delay_show_time : this.delay_show_time;
this.st_banner_bg_mask_opacity = t.st_banner_bg_mask_opacity ? t.st_banner_bg_mask_opacity : this.st_banner_bg_mask_opacity;
this._alignType = t.align_type ? t.align_type : this._alignType;
this.banner_close_showAd_interval = t.banner_close_showAd_interval ? t.banner_close_showAd_interval : this.banner_close_showAd_interval;
};
e.prototype.toStrong = function() {
return "location=" + this.location + "&is_show_banner=" + this.is_show_banner + "&banner_close_but_show=" + this.banner_close_but_show + "&banner_close_but_alpha=" + this.banner_close_but_alpha + "&banner_close_but_range=" + this.banner_close_but_range + "&banner_close_but_size=" + this.banner_close_but_size + "&banner_show_height=" + this.banner_show_height + "&st_banner_close_but_range=" + this.st_banner_close_but_range + "&st_banner_close_but_size=" + this.st_banner_close_but_size + "&st_banner_down_btn_image=" + this.st_banner_down_btn_image + "&st_banner_down_but_margin_top=" + this.st_banner_down_but_margin_top + "&st_banner_down_but_show=" + this.st_banner_down_but_show + "&st_banner_scale=" + this.st_banner_scale + "&show_st_banner=" + this.show_st_banner + "&st_banner_close_but_show=" + this.st_banner_close_but_show + "&st_banner_bottom=" + this.st_banner_bottom + "&st_banner_close_but_alpha=" + this.st_banner_close_but_alpha + "&banner_click_refresh=" + this.banner_click_refresh + "&auto_refresh=" + this.auto_refresh + "&st_banner_style=" + this.st_banner_style + "&st_banner_width=" + this.st_banner_width + "&st_banner_height=" + this.st_banner_height + "&st_banner_show_back_up=" + this.st_banner_show_back_up + "&is_show_rec=" + this.is_show_rec;
};
return e = o([ c("NativeBannerInfo") ], e);
}();
i.NativeBannerInfo = d;
var f = function() {
function e() {
this.location = n.BannerLocation.None;
this.is_show_ad = "true";
this.top = -1;
this.left = -1;
this.right = -1;
this.bottom = -1;
this.id = "";
this.refresh_time = -1;
this.width = 0;
this.height = 0;
this.hide_banner = "false";
this.is_center = "false";
this.change_location_refresh_ad = "true";
this.customAdObj = null;
}
e.prototype.init = function(e, t) {
this.location = e;
this.top = "top" in t ? t.top : -1;
this.right = "right" in t ? t.right : -1;
this.left = "left" in t ? t.left : -1;
this.bottom = "bottom" in t ? t.bottom : -1;
this.id = "id" in t ? t.id : "";
this.refresh_time = "refresh_time" in t ? t.refresh_time : -1;
this.is_show_ad = "is_show_ad" in t ? t.is_show_ad : "true";
this.width = "width" in t ? t.width : 0;
this.height = "height" in t ? t.height : 0;
this.hide_banner = "hide_banner" in t ? t.hide_banner : "false";
this.change_location_refresh_ad = "change_location_refresh_ad" in t ? t.change_location_refresh_ad : "false";
this.is_center = "is_center" in t ? t.is_center : "all";
};
e.prototype.toStrong = function() {
return "customAdInfo>>>>#location=" + this.location + "#top=" + this.top + "#left=" + this.left + "#right=" + this.right + "#bottom=" + this.bottom + "#refreshTime=" + this.refresh_time + "#id=" + this.id + "#width=" + this.width + "#height=" + this.height + "#is_center=" + this.is_center;
};
return e = o([ c("CustomAdInfo") ], e);
}();
i.CustomAdInfo = f;
var _ = function() {
function e() {
this.appID = "";
this.bannerIds = [];
this.videoId = "";
this.insertId = "";
this.jumpId = "";
this.appBoxId = "";
this.boxId = "";
this.bannerBoxId = "";
this.customAdInfos = [];
this.isAttributed = !1;
this.version = "";
this.nativeBannerId = "";
this.nativeInsertIds = "";
}
e.prototype.getBannerId = function(e) {
for (var t = 0; t < this.bannerIds.length; t++) if (this.bannerIds[t].location == e) return this.bannerIds[t].bannerId;
return this.bannerIds.length > 0 ? this.bannerIds[0].bannerId : "";
};
e.prototype.setCustomAdInfo = function(e, t) {
var i = new f();
i.init(e, t);
this.customAdInfos.push(i);
};
e.prototype.getCustomAdInfoInfo = function(e) {
a.utils.showLog("根据位置获取原生模版配置>>location=", e);
for (var t = 0; t < this.customAdInfos.length; t++) if (this.customAdInfos[t].location == e) {
a.utils.showLog("根据位置获取原生模版配置>>info=", this.customAdInfos[t].toStrong());
return this.customAdInfos[t];
}
return null;
};
e.prototype.setBannerId = function(e, t) {
for (var i = 0; i < this.bannerIds.length; i++) if (this.bannerIds[i].location == e) {
this.bannerIds[i].bannerId = t;
return;
}
};
return e = o([ c("WechatConfig") ], e);
}();
i.WechatConfig = _;
var p = function() {
function e() {
this.QQ = !0;
this.appID = "";
this.bannerId = "";
this.insertId = "";
this.videoId = "";
this.boxId = "";
this.version = "";
this.bannerBoxId = "";
}
return e = o([ c("QQConfig") ], e);
}();
i.QQConfig = p;
var g = function() {
function e() {
this.appID = "";
this.channel = "oppo";
this.bannerId = "";
this.insertId = "";
this.videoId = "";
this.nativeBannerIds = [];
this.nativeTryGameIds = [];
this.nativeInsertIds = [];
this.nativeSingleAdIds = [];
this.packageName = "";
this.nativeBannerInfos = [];
this.recGameBannerId = "";
this.recPortalId = "";
this.version = "";
this.recGameDrawerId = "";
this.umengId = "";
this.intersitialAdConfigs = [];
this.bannerAdConfigs = [];
}
e.prototype.getNativeBannerInfo = function(e) {
a.utils.showLog("根据位置获取原生banner配置>>location=", e);
for (var t = 0; t < this.nativeBannerInfos.length; t++) if (this.nativeBannerInfos[t].location == e) {
a.utils.showLog("根据位置获取原生banner配置>>info=", this.nativeBannerInfos[t].toStrong());
return this.nativeBannerInfos[t];
}
return new d();
};
e.prototype.setNativeBannerInfo = function(e, t) {
var i = new d();
i.init(e, t);
this.nativeBannerInfos.push(i);
};
return e = o([ c("OppoConfig") ], e);
}();
i.OppoConfig = g;
var m = function() {
function e() {
this.showAd = !0;
this.appID = "";
this.bannerId = "";
this.insertId = "";
this.videoId = "";
this.nativeTryGameIds = [];
this.nativeBannerIds = [];
this.nativeInsertIds = [];
this.nativeBannerInfos = [];
this.customAdInfos = [];
this.nativeSingleAdIds = [];
this.recGameBannerId = "";
this.recPortalId = "";
this.version = "";
this.umengId = "";
}
e.prototype.getNativeBannerInfo = function(e) {
a.utils.showLog("根据位置获取原生banner配置>>location=", e);
for (var t = 0; t < this.nativeBannerInfos.length; t++) if (this.nativeBannerInfos[t].location == e) {
a.utils.showLog("根据位置获取原生banner配置>>info=", this.nativeBannerInfos[t].toStrong());
return this.nativeBannerInfos[t];
}
return new d();
};
e.prototype.getCustomAdInfoInfo = function(e) {
a.utils.showLog("根据位置获取原生模版配置>>location=", e);
for (var t = 0; t < this.customAdInfos.length; t++) if (this.customAdInfos[t].location == e) {
a.utils.showLog("根据位置获取原生模版配置>>info=", this.customAdInfos[t].toStrong());
return this.customAdInfos[t];
}
return new f();
};
e.prototype.setNativeBannerInfo = function(e, t) {
var i = new d();
i.init(e, t);
this.nativeBannerInfos.push(i);
};
e.prototype.setCustomAdInfo = function(e, t) {
var i = new f();
i.init(e, t);
this.customAdInfos.push(i);
};
return e = o([ c("VivoConfig") ], e);
}();
i.VivoConfig = m;
var v = function() {
function e() {
this._progress = 0;
this._totalProgress = 5;
this._balance = 0;
this._totalMoeny = 0;
this._lastOpenFreeRedBagTime = "";
this._progressInfos = null;
this._lastOpenLevel = "-1";
this._freeRedBagCount = 0;
this.withdrawaMoneys = [ 5, 20, 45, 50 ];
s.default.IsTest && (this._progressInfos = [ {
level: 0,
min_money: .1,
max_money: 5,
type: 1
}, {
level: 4,
min_money: .1,
max_money: 3,
type: 3
}, {
level: 5,
min_money: .001,
max_money: .005,
type: 2
} ]);
this._progress = r.default.getItem(n.default.ST_RED_BAG_PROGRESS) ? r.default.getItem(n.default.ST_RED_BAG_PROGRESS) : 0;
this._totalProgress = r.default.getItem(n.default.ST_RED_BAG_TOTAL_PROGRESS) ? r.default.getItem(n.default.ST_RED_BAG_TOTAL_PROGRESS) : 5;
this._balance = r.default.getItem(n.default.ST_RED_BAG_BALANCE) ? parseFloat(r.default.getItem(n.default.ST_RED_BAG_BALANCE)) : 0;
this._totalMoeny = r.default.getItem(n.default.ST_RED_BAG_TOTAL_MONEY) ? parseFloat(r.default.getItem(n.default.ST_RED_BAG_TOTAL_MONEY)) : 0;
this._lastOpenFreeRedBagTime = r.default.getItem(n.default.ST_FREE_RED_BAG_TIME) ? r.default.getItem(n.default.ST_FREE_RED_BAG_TIME) : "";
this._lastOpenLevel = r.default.getItem(n.default.ST_LAST_OPEN_LEVEL) ? r.default.getItem(n.default.ST_LAST_OPEN_LEVEL) : "-1";
}
Object.defineProperty(e.prototype, "freeRedBagCount", {
get: function() {
return this._freeRedBagCount;
},
set: function(e) {
this._freeRedBagCount = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "lastOpenLevel", {
get: function() {
return this._lastOpenLevel;
},
set: function(e) {
this._lastOpenLevel = e;
r.default.setItem(n.default.ST_LAST_OPEN_LEVEL, e);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "progress", {
get: function() {
return this._progress;
},
set: function(e) {
this._progress = e;
this._progress > this._totalProgress ? this._progress = this._totalProgress : a.utils._rewardRedBagPanelShowCount = -1;
r.default.setItem(n.default.ST_RED_BAG_PROGRESS, this._progress + "");
cc.game.emit("YZ_RED_BAG_PROGRESS_CHANGE");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "totalProgress", {
get: function() {
return this._totalProgress;
},
set: function(e) {
this._totalProgress = e;
r.default.setItem(n.default.ST_RED_BAG_TOTAL_PROGRESS, e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "totalMoney", {
get: function() {
return this._totalMoeny;
},
set: function(e) {
this._totalMoeny = e;
r.default.setItem(n.default.ST_RED_BAG_TOTAL_MONEY, e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "progressInfos", {
get: function() {
return this._progressInfos;
},
set: function(e) {
this._progressInfos = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "curProgressInfo", {
get: function() {
if (this._progressInfos && this._progressInfos.length > 0) {
if (parseInt(this.lastOpenLevel) > 0 && parseInt(this.lastOpenLevel) >= a.utils.currentLevel) return this._progressInfos[this._progressInfos.length - 1];
for (var e = this.lastOpenLevel ? this._progressInfos[0] : this._progressInfos[1], t = 0; t < this._progressInfos.length; t++) if (a.utils.currentLevel <= this._progressInfos[t].level) {
e = this._progressInfos[t];
break;
}
console.log("curInfo " + JSON.stringify(e));
return e;
}
return null;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "balance", {
get: function() {
return this._balance;
},
set: function(e) {
this._balance = e;
r.default.setItem(n.default.ST_RED_BAG_BALANCE, e + "");
cc.game.emit("YZ_RED_BAG_BALANCE_CHANGE");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "lastOpenFreeRedBagTime", {
get: function() {
return this._lastOpenFreeRedBagTime;
},
set: function(e) {
this._lastOpenFreeRedBagTime = e;
r.default.setItem(n.default.ST_FREE_RED_BAG_TIME, e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "isFreeRedBag", {
get: function() {
cc.log("是否有免费红包：" + new Date().toDateString() != this._lastOpenFreeRedBagTime);
return new Date().toDateString() != this._lastOpenFreeRedBagTime;
},
enumerable: !1,
configurable: !0
});
return e = o([ c("YzRedBagInfo") ], e);
}();
i.YzRedBagInfo = v;
var y = function() {
function e() {
this.appID = "";
this.bannerId = "";
this.insertId = "";
this.videoId = "";
this.nativeSplashId = "";
this.nativeTryGameIds = [];
this.nativeBannerIds = [];
this.nativeInsertIds = [];
this.nativeBannerInfos = [];
this.version = "";
this.umengId = "";
}
e.prototype.getNativeBannerInfo = function(e) {
a.utils.showLog("根据位置获取原生banner配置>>location=", e);
for (var t = 0; t < this.nativeBannerInfos.length; t++) if (this.nativeBannerInfos[t].location == e) {
a.utils.showLog("根据位置获取原生banner配置>>info=", this.nativeBannerInfos[t].toStrong());
return this.nativeBannerInfos[t];
}
return new d();
};
e.prototype.setNativeBannerInfo = function(e, t) {
var i = new d();
i.init(e, t);
this.nativeBannerInfos.push(i);
};
return e = o([ c("HuaWeiConfig") ], e);
}();
i.HuaWeiConfig = y;
var w = function() {
function e() {
this.appID = "";
this.channel = "";
this.version = "";
}
return e = o([ c("NativeAndroidConfig") ], e);
}();
i.NativeAndroidConfig = w;
var I = function() {
function e() {
this.appID = "";
this.appSID = "";
this.bannerId = "";
this.videoId = "";
this.version = "";
}
return e = o([ c("BaiduConfig") ], e);
}();
i.BaiduConfig = I;
var b = function() {
function e() {
this.appID = "";
this.bannerId = "";
this.videoId = "";
this.version = "";
}
return e = o([ c("WiFiConfig") ], e);
}();
i.WiFiConfig = b;
var S = function() {
function e() {
this.appID = "";
this.videoId = "";
this.insertId = "";
this.version = "";
}
return e = o([ c("KwaiConfig") ], e);
}();
i.KwaiConfig = S;
var C = function() {
function e() {
this.appID = "";
this.videoId = "";
this.version = "";
}
return e = o([ c("HagoConfig") ], e);
}();
i.HagoConfig = C;
var A = function() {
function e() {
this.appID = "";
this.bannerId = "";
this.insertId = "";
this.videoId = "";
this.version = "";
}
return e = o([ c("NativeIosConfig") ], e);
}();
i.NativeIosConfig = A;
var L = function() {
function e() {
this.Douyin = !0;
this.appID = "";
this.bannerId = "";
this.insertId = "";
this.videoId = "";
this.version = "";
}
return e = o([ c("DouyinConfig") ], e);
}();
i.DouyinConfig = L;
var T = function() {
function e() {
this.QuTouTiao = !0;
this.showAd = !0;
this.gamename = "";
this.appID = "";
this.appKey = "";
}
return e = o([ c("QuTouTiaoConfig") ], e);
}();
i.QTTConfig = T;
var P = function() {
function e() {
this.appID = "";
this.appKey = "";
this.version = "";
}
return e = o([ c("UCConfig") ], e);
}();
i.UCConfig = P;
var B = function() {
function e() {
this.appID = "";
this.appKey = "";
this.appSecret = "";
this.bannerId = "";
this.videoId = "";
this.insertId = "";
}
return e = o([ c("CocosConfig") ], e);
}();
i.CocosConfig = B;
var N = function() {
function e() {
this.appID = "";
this.bannerId = "";
this.videoId = "";
this.insertId = "";
this.nativeSplashId = "";
this.nativeTryGameIds = [];
this.nativeBannerIds = [];
this.nativeInsertIds = [];
this.nativeBannerInfos = [];
this.version = "";
}
e.prototype.getNativeBannerInfo = function(e) {
a.utils.showLog("根据位置获取原生banner配置>>location=", e);
for (var t = 0; t < this.nativeBannerInfos.length; t++) if (this.nativeBannerInfos[t].location == e) {
a.utils.showLog("根据位置获取原生banner配置>>info=", this.nativeBannerInfos[t].toStrong());
return this.nativeBannerInfos[t];
}
return new d();
};
e.prototype.setNativeBannerInfo = function(e, t) {
var i = new d();
i.init(e, t);
this.nativeBannerInfos.push(i);
};
return e = o([ c("XiaoMiConfig") ], e);
}();
i.XiaoMiConfig = N;
var O = function() {
function e() {
this.appID = "";
this.bannerId = "";
this.videoId = "";
}
return e = o([ c("BiliConfig") ], e);
}();
i.BiliConfig = O;
var k = function() {
function e() {
this.appID = "";
this.bannerId = "";
this.insertId = "";
this.videoId = "";
this.version = "";
}
return e = o([ c("FaceBookConfig") ], e);
}();
i.FaceBookConfig = k;
var R = function() {
function e() {
this.shareTitle = "";
this.shareImgUrl = "";
this.shareIcon = "";
this.shareDesc = "";
this.localConfig = null;
this.logoutView = null;
this.nativeBanner = null;
this.nativeInsert = null;
this.nativeSplashView = null;
this.recommendGamesBanner = null;
this.recommendGamesBar = null;
this.tryGamesWidget = null;
this.moreGamesWidget = null;
this.recordWidget = null;
this.shortcutWidget = null;
this.gameBox = null;
this.crossWidget6 = null;
this.rewardInsert = null;
this.statementRecomment = null;
this.singleNativeAd = null;
this.shareRecordPanel = null;
this.gameExitDialog = null;
this.rewardBoxPanel = null;
this.rewardTurnTablePanel = null;
this.rewardShortCutPanel = null;
this.nativeTryGameWidget = null;
this.beforGameOverRecGamesPanel = null;
this.withdrawalWidget = null;
this.withdrawalPanel = null;
this.redBagProgressWidget = null;
this.openRedBagPanel = null;
this.rewardRedBagPanel = null;
this.rewardLuckBoxPanel = null;
this.verticalRecommentPanel = null;
this.privacyWidget = null;
this.privacyPanel = null;
this.handPrefab = null;
this.yzRealNameAuthPanel = null;
this.yzCustomAdPanel = null;
this.yzLoginPanel = null;
this.yw_app_id = "";
}
o([ u({
type: cc.JsonAsset,
displayName: "本地配置文件",
tooltip: "将Common/Config/下面的配置文件拖放到此处"
}) ], e.prototype, "localConfig", void 0);
o([ u({
type: cc.Prefab,
displayName: "日志输出组件",
tooltip: "将Common/Prefabs/LogoutView拖放到此处"
}) ], e.prototype, "logoutView", void 0);
o([ u({
type: cc.Prefab,
tooltip: "原生广告条组件，将Common/Prefabs/NativeBanner拖到此处",
displayName: "原生广告条组件"
}) ], e.prototype, "nativeBanner", void 0);
o([ u({
type: cc.Prefab,
tooltip: "原生插屏组件，将Common/Prefabs/NativeInsert拖到此处",
displayName: "原生插屏组件"
}) ], e.prototype, "nativeInsert", void 0);
o([ u({
type: cc.Prefab,
tooltip: "原生插屏组件，将Common/Prefabs/nativeSplashView拖到此处",
displayName: "原生开屏组件"
}) ], e.prototype, "nativeSplashView", void 0);
o([ u({
type: cc.Prefab,
tooltip: "底部推荐游戏广告Banner, 将Common/Prefabs/RecommendGamesBanner拖到此处"
}) ], e.prototype, "recommendGamesBanner", void 0);
o([ u({
type: cc.Prefab,
tooltip: "推荐游戏横条，将Common/Prefabs/RecommendGamesBar拖到此处"
}) ], e.prototype, "recommendGamesBar", void 0);
o([ u({
type: cc.Prefab,
tooltip: "推荐游戏圆形挂件，将Common/Prefabs/TryGamesWidget拖到此处"
}) ], e.prototype, "tryGamesWidget", void 0);
o([ u({
type: cc.Prefab,
tooltip: "侧边更多游戏面板挂件，将Common/Prefabs/MoreGamesWidget拖到此处"
}) ], e.prototype, "moreGamesWidget", void 0);
o([ u({
type: cc.Prefab,
tooltip: "录屏按钮组件，将Common/Prefabs/RecordWidget拖到此处"
}) ], e.prototype, "recordWidget", void 0);
o([ u({
type: cc.Prefab,
tooltip: "快捷方式按钮，将Common/Prefabs/ShortcutWidget拖到此处 "
}) ], e.prototype, "shortcutWidget", void 0);
o([ u({
type: cc.Prefab,
tooltip: "6元素交叉推广组件，将Common/Prefabs/CrossWidget6拖到此处"
}) ], e.prototype, "crossWidget6", void 0);
o([ u({
type: cc.Prefab,
tooltip: "结算页面推广组件，将Common/Prefabs/StatementRecomment拖到此处"
}) ], e.prototype, "statementRecomment", void 0);
o([ u({
type: cc.Prefab,
tooltip: "单个原生广告，将Common/Prefabs/SingleNativeAd拖到此处"
}) ], e.prototype, "singleNativeAd", void 0);
o([ u({
type: cc.Prefab,
tooltip: "分享录屏弹窗，将Common/Prefabs/ShareRecordPanel拖到此处"
}) ], e.prototype, "shareRecordPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "五倍奖励宝箱弹窗，将Common/Prefabs/RewardBoxPanel拖到此处"
}) ], e.prototype, "rewardBoxPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "奖励转盘抽奖弹窗，将Common/Prefabs/RewardTurntablePanel拖到此处"
}) ], e.prototype, "rewardTurnTablePanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "添加桌面激励弹窗，将Common/Prefabs/RewardShortCutPanel拖到此处"
}) ], e.prototype, "rewardShortCutPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "原生抖动试玩，将Common/Prefabs/NativeTryGameWidget拖到此处",
displayName: "原生抖动组件"
}) ], e.prototype, "nativeTryGameWidget", void 0);
o([ u({
type: cc.Prefab,
tooltip: "结算前互推面板，将Common/Prefabs/BeforGameOverRecGamesPanel拖到此处",
displayName: "结算前互推面板"
}) ], e.prototype, "beforGameOverRecGamesPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "幸运宝箱弹窗，将Common/Prefabs/RewardLuckBoxPanel拖到此处",
displayName: "幸运宝箱弹窗"
}) ], e.prototype, "rewardLuckBoxPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "竖状互推窗口，将Common/Prefabs/VerticalRecommentPanel拖到此处",
displayName: "竖状互推窗口"
}) ], e.prototype, "verticalRecommentPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "隐私协议挂件，将Common/Prefabs/PrivacyWidget拖到此处",
displayName: "隐私协议挂件"
}) ], e.prototype, "privacyWidget", void 0);
o([ u({
type: cc.Prefab,
tooltip: "隐私协议弹窗，将Common/Prefabs/PrivacyPanel拖到此处",
displayName: "隐私协议弹窗"
}) ], e.prototype, "privacyPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "指引的手势，将Common/Prefabs/HandPrefab拖到此处",
displayName: "指引的手势"
}) ], e.prototype, "handPrefab", void 0);
o([ u({
type: cc.Prefab,
tooltip: "实名制认证弹窗，将Common/Prefabs/YzRealNameAuthPanel拖到此处",
displayName: "实名制认证弹窗"
}) ], e.prototype, "yzRealNameAuthPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "模版广告推荐弹窗，将Common/Prefabs/YzCustomAdPanel拖到此处",
displayName: "模版广告推荐弹窗"
}) ], e.prototype, "yzCustomAdPanel", void 0);
o([ u({
type: cc.Prefab,
tooltip: "登录弹窗，将Common/Prefabs/YzLoginPanel拖到此处",
displayName: "登录弹窗"
}) ], e.prototype, "yzLoginPanel", void 0);
return e = o([ c("OtherConfig") ], e);
}();
i.OtherConfig = R;
var M = function() {
function e() {
this.wechatconfig = new _();
this.oppoconfig = new g();
this.vivoconfig = new m();
this.nativeAndroidConfig = new w();
this.baiduconfig = new I();
this.douyinconfig = new L();
this.wifiConfig = new b();
this.qqconfig = new p();
this.qttconfig = new T();
this.xiaomiConfig = new N();
this.ucConfig = new P();
this.cocosConfig = new B();
this.biliConfig = new O();
this.kwaiConfig = new S();
this.nativeIoSConfig = new A();
this.hagoConfig = new C();
this.huaweiConfig = new y();
this.faceBookConfig = new k();
this.otherconfig = new R();
}
e.prototype.init = function(e) {
this._init_other(e);
return s.default.IsWechat ? this._init_wechat(e) : s.default.IsOPPO ? this._init_oppo(e) : s.default.IsVIVO ? this._init_vivo(e) : s.default.IsDouyin ? this._init_douyin(e) : s.default.IsQQ ? this._init_qq(e) : s.default.IsBaidu ? this._init_baidu(e) : s.default.IsQTT ? this._init_qtt(e) : s.default.IsXiaoMi ? this._init_xiaomi(e) : s.default.ISUC ? this._init_uc(e) : s.default.ISCocos ? this._init_cocos(e) : s.default.IsNativeAndroid ? this._init_native_android() : s.default.IsNativeIOS ? this._init_native_ios(e) : s.default.IsBili ? this._init_bili(e) : s.default.IsKwai ? this._init_kwai(e) : s.default.IsWiFi ? this._init_wifi(e) : s.default.IsHago ? this._init_hago(e) : s.default.IsHuaWei ? this._init_huawei(e) : !s.default.IsFaceBook || this._init_facebook(e);
};
e.prototype._init_other = function(e) {
if (!e) return !1;
var t = JSON.parse(e);
t && t.other && (t.other.yw_app_id ? this.otherconfig.yw_app_id = t.other.yw_app_id : a.utils.showLog("warn:本地配置数据不包含‘yw_app_id’字段！"));
};
e.prototype._init_wechat = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.wechat) {
a.utils.showLog("error本地配置数据不包含‘wechat’字段！");
return !1;
}
if (!t.wechat.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.wechatconfig.appID = t.wechat.app_id;
if (!t.wechat.intersititia_pos_id) {
a.utils.showLog("error本地配置数据不包含‘intersititia_pos_id’字段！");
return !1;
}
this.wechatconfig.insertId = t.wechat.intersititia_pos_id;
if (!t.wechat.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.wechatconfig.videoId = t.wechat.video_pos_id;
t.wechat.app_box_pos_id ? this.wechatconfig.appBoxId = t.wechat.app_box_pos_id : a.utils.showLog("本地配置数据不包含‘app_box_pos_id’字段！");
t.wechat.version ? this.wechatconfig.version = t.wechat.version : a.utils.showLog("本地配置数据不包含‘version’字段！");
t.wechat.is_attributed && (this.wechatconfig.isAttributed = t.wechat.is_attributed);
if (!t.wechat.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
for (var i in t.wechat.banner_pos_id) {
var o = new h();
o.location = this._bannerLocationStringToEnum(i);
o.bannerId = t.wechat.banner_pos_id[i];
this.wechatconfig.bannerIds.push(o);
}
if (!t.wechat.shares) {
a.utils.showLog("error本地配置数据不包含‘shares’字段！");
return !1;
}
if (!t.wechat.shares.sy_title) {
a.utils.showLog("error本地配置数据不包含‘shares.shareTitle’字段！");
return !1;
}
this.otherconfig.shareTitle = t.wechat.shares.sy_title;
if (!t.wechat.shares.sy_img) {
a.utils.showLog("error本地配置数据不包含‘shares.shareImgUrl’字段！");
return !1;
}
this.otherconfig.shareImgUrl = t.wechat.shares.sy_img;
t.wechat.banner_box_pos_id ? this.wechatconfig.bannerBoxId = t.wechat.banner_box_pos_id : a.utils.showLog("error本地配置中不包含 ‘banner_box_pos_id’ 字段");
t.wechat.native_banner_pos_id ? this.wechatconfig.nativeBannerId = t.wechat.native_banner_pos_id : a.utils.showLog("error本地配置中不包含 native_banner_pos_id 字段");
t.wechat.native_intersititial_pos_id ? this.wechatconfig.nativeInsertIds = t.wechat.native_intersititial_pos_id : a.utils.showLog("error本地配置中不包含 native_intersititial_pos_id 字段");
return !0;
};
e.prototype._init_oppo = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.oppo) {
a.utils.showLog("error本地配置数据不包含‘oppo’字段！");
return !1;
}
if (!t.oppo.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.oppoconfig.appID = t.oppo.app_id;
if (!t.oppo.package_name) {
a.utils.showLog("error本地配置数据不包含‘package_name’字段！");
return !1;
}
this.oppoconfig.packageName = t.oppo.package_name;
t.oppo.banner_pos_id && (this.oppoconfig.bannerId = t.oppo.banner_pos_id);
t.oppo.rec_game_drawer_id ? this.oppoconfig.recGameDrawerId = t.oppo.rec_game_drawer_id : a.utils.showLog("errorrec_game_drawer_id");
if (!t.oppo.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.oppoconfig.videoId = t.oppo.video_pos_id;
t.oppo.native_banner_pos_id && (this.oppoconfig.nativeBannerIds = t.oppo.native_banner_pos_id);
t.oppo.native_trygame_pos_id ? this.oppoconfig.nativeTryGameIds = t.oppo.native_trygame_pos_id : a.utils.showLog("error本地配置数据不包含‘native_trygame_pos_id’字段！");
if (!t.oppo.intersitial_configs) {
a.utils.showLog("error本地配置数据不包含‘intersitial_configs’字段！");
return !1;
}
this.oppoconfig.intersitialAdConfigs = t.oppo.intersitial_configs;
if (!t.oppo.banner_configs) {
a.utils.showLog("error本地配置数据不包含‘banner_configs’字段！");
return !1;
}
this.oppoconfig.bannerAdConfigs = t.oppo.banner_configs;
if (!t.oppo.native_single_pos_id) {
a.utils.showLog("error本地配置数据不包含‘native_single_pos_id’字段！");
return !1;
}
this.oppoconfig.nativeSingleAdIds = t.oppo.native_single_pos_id;
t.oppo.rec_portal_id ? this.oppoconfig.recPortalId = t.oppo.rec_portal_id : a.utils.showLog("error本地配置数据不包含‘rec_portal_id’字段！");
t.oppo.rec_game_banner_id ? this.oppoconfig.recGameBannerId = t.oppo.rec_game_banner_id : a.utils.showLog("error本地配置数据不包含‘rec_game_banner_id’字段！");
if (!t.oppo.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
if (window.new_version) {
this.oppoconfig.version = window.new_version;
a.utils.showLog("获取到注入的版本号：" + this.oppoconfig.version);
} else this.oppoconfig.version = t.oppo.version;
t.oppo.umeng_id ? this.oppoconfig.umengId = t.oppo.umeng_id : a.utils.showLog("error本地配置数据不包含‘umeng_id’字段！");
return !0;
};
e.prototype._init_vivo = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.vivo) {
a.utils.showLog("error本地配置数据不包含‘vivo’字段！");
return !1;
}
if (!t.vivo.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.vivoconfig.appID = t.vivo.app_id;
if (!t.vivo.intersititia_pos_id) {
a.utils.showLog("error本地配置数据不包含‘intersititia_pos_id’字段！");
return !1;
}
this.vivoconfig.insertId = t.vivo.intersititia_pos_id;
if (!t.vivo.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.vivoconfig.videoId = t.vivo.video_pos_id;
if (!t.vivo.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.vivoconfig.bannerId = t.vivo.banner_pos_id;
if (!t.vivo.native_banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘native_banner_pos_id’字段！");
return !1;
}
this.vivoconfig.nativeBannerIds = t.vivo.native_banner_pos_id;
t.vivo.native_trygame_pos_id ? this.vivoconfig.nativeTryGameIds = t.vivo.native_trygame_pos_id : a.utils.showLog("error本地配置数据不包含‘native_trygame_pos_id’字段！");
if (!t.vivo.native_intersititial_pos_id) {
a.utils.showLog("error本地配置数据不包含‘native_intersititial_pos_id’字段！");
return !1;
}
this.vivoconfig.nativeInsertIds = t.vivo.native_intersititial_pos_id;
t.vivo.rec_portal_id ? this.vivoconfig.recPortalId = t.vivo.rec_portal_id : a.utils.showLog("warn本地配置数据不包含‘rec_portal_id’字段！");
t.vivo.rec_game_banner_id ? this.vivoconfig.recGameBannerId = t.vivo.rec_game_banner_id : a.utils.showLog("warn本地配置数据不包含‘rec_game_banner_id’字段！");
t.vivo.native_single_pos_id ? this.vivoconfig.nativeSingleAdIds = t.vivo.native_single_pos_id : a.utils.showLog("warn本地配置数据不包含‘native_single_pos_id’字段！");
t.vivo.umeng_id ? this.vivoconfig.umengId = t.vivo.umeng_id : a.utils.showLog("error本地配置数据不包含‘umeng_id’字段,不启用友盟统计！");
t.vivo.version ? this.vivoconfig.version = t.vivo.version : a.utils.showLog("warn:本地配置数据不包含‘version’字段！");
return !0;
};
e.prototype._init_baidu = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.baidu) {
a.utils.showLog("error本地配置数据不包含‘baidu’字段！");
return !1;
}
if (!t.baidu.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.baiduconfig.appID = t.baidu.app_id;
t.baidu.app_sid ? this.baiduconfig.appSID = t.baidu.app_sid : a.utils.showLog("error本地配置数据不包含‘app_sid’字段！");
if (!t.baidu.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.baiduconfig.videoId = t.baidu.video_pos_id;
if (!t.baidu.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.baiduconfig.bannerId = t.baidu.banner_pos_id;
if (!t.baidu.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.baiduconfig.version = t.baidu.version;
if (!t.baidu.shares) {
a.utils.showLog("error本地配置数据不包含‘shares’字段！");
return !1;
}
if (!t.baidu.shares.sy_title) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_title’字段！");
return !1;
}
this.otherconfig.shareTitle = t.baidu.shares.sy_title;
if (!t.baidu.shares.sy_img) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_img’字段！");
return !1;
}
this.otherconfig.shareImgUrl = t.baidu.shares.sy_img;
return !0;
};
e.prototype._init_wifi = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.wifi) {
a.utils.showLog("error本地配置数据不包含‘baidu’字段！");
return !1;
}
if (!t.wifi.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.wifiConfig.appID = t.wifi.app_id;
if (!t.wifi.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.wifiConfig.version = t.wifi.version;
return !0;
};
e.prototype._init_douyin = function(e) {
if (!e) return !1;
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("warn:本地配置数据不是合法的json数据!");
return !1;
}
if (t.toutiao) {
if (!t.toutiao.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.douyinconfig.appID = t.toutiao.app_id;
if (!t.toutiao.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.douyinconfig.bannerId = t.toutiao.banner_pos_id;
if (!t.toutiao.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.douyinconfig.videoId = t.toutiao.video_pos_id;
if (!t.toutiao.intersititia_pos_id) {
a.utils.showLog("error本地配置数据不包含‘intersititia_pos_id’字段！");
return !1;
}
this.douyinconfig.insertId = t.toutiao.intersititia_pos_id;
if (!t.toutiao.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.douyinconfig.version = t.toutiao.version;
if (!t.toutiao.shares) {
a.utils.showLog("error本地配置数据不包含‘shares’字段！");
return !1;
}
if (!t.toutiao.shares.sy_title) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_title’字段！");
return !1;
}
this.otherconfig.shareTitle = t.toutiao.shares.sy_title;
if (!t.toutiao.shares.sy_img) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_img’字段！");
return !1;
}
this.otherconfig.shareImgUrl = t.toutiao.shares.sy_img;
}
return !0;
};
e.prototype._init_qq = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showMsg("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.qq) {
a.utils.showMsg("error本地配置数据不包含‘qq’字段！");
return !1;
}
if (!t.qq.app_id) {
a.utils.showMsg("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.qqconfig.appID = t.qq.app_id;
if (!t.qq.video_pos_id) {
a.utils.showMsg("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.qqconfig.videoId = t.qq.video_pos_id;
if (!t.qq.banner_pos_id) {
a.utils.showMsg("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.qqconfig.bannerId = t.qq.banner_pos_id;
if (!t.qq.intersititia_pos_id) {
a.utils.showMsg("error本地配置数据不包含‘intersititia_pos_id’字段！");
return !1;
}
this.qqconfig.insertId = t.qq.intersititia_pos_id;
if (!t.qq.box_pos_id) {
a.utils.showMsg("error本地配置数据不包含‘box_pos_id’字段！");
return !1;
}
this.qqconfig.boxId = t.qq.box_pos_id;
if (!t.qq.banner_box_pos_id) {
a.utils.showMsg("error本地配置数据不包含‘banner_box_pos_id’字段！");
return !1;
}
this.qqconfig.bannerBoxId = t.qq.banner_box_pos_id;
if (!t.qq.shares) {
a.utils.showMsg("error本地配置数据不包含‘shares’字段！");
return !1;
}
if (!t.qq.shares.sy_title) {
a.utils.showMsg("error本地配置数据不包含‘shares.shareTitle’字段！");
return !1;
}
this.otherconfig.shareTitle = t.qq.shares.sy_title;
if (!t.qq.shares.sy_img) {
a.utils.showMsg("error本地配置数据不包含‘shares.shareImgUrl’字段！");
return !1;
}
this.otherconfig.shareImgUrl = t.qq.shares.sy_img;
if (!t.qq.version) {
a.utils.showMsg("error本地配置数据不包含‘version’字段！");
return !1;
}
this.qqconfig.version = t.qq.version;
return !0;
};
e.prototype._init_qtt = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (t && t.qutoutiao) {
if (!t.qutoutiao.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.qttconfig.appID = t.qutoutiao.app_id;
a.utils.showLog("this.qttconfig.appID:", this.qttconfig.appID);
a.utils.showLog("configObj.qutoutiao.app_id:", t.qutoutiao.app_id);
if (!t.qutoutiao.app_key) {
a.utils.showLog("error本地配置数据不包含‘app_key’字段！");
return !1;
}
this.qttconfig.appKey = t.qutoutiao.app_key;
if (!t.qutoutiao.game_name) {
a.utils.showLog("error本地配置数据不包含‘app_key’字段！");
return !1;
}
this.qttconfig.gamename = t.qutoutiao.game_name;
}
return !0;
};
e.prototype._bannerLocationStringToEnum = function(e) {
switch (e) {
case "home":
return n.BannerLocation.Home;

case "game":
return n.BannerLocation.Game;

case "level":
return n.BannerLocation.Level;

case "skin":
return n.BannerLocation.Skin;

case "pause":
return n.BannerLocation.Pause;

case "over":
return n.BannerLocation.Over;

default:
return n.BannerLocation.None;
}
};
e.prototype._init_xiaomi = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.xiaomi) {
a.utils.showLog("error本地配置数据不包含‘xiaomi’字段！");
return !1;
}
if (!t.xiaomi.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.xiaomiConfig.appID = t.xiaomi.app_id;
if (!t.xiaomi.intersititia_pos_id) {
a.utils.showLog("error本地配置数据不包含‘intersititia_pos_id’字段！");
return !1;
}
this.xiaomiConfig.insertId = t.xiaomi.intersititia_pos_id;
if (!t.xiaomi.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.xiaomiConfig.videoId = t.xiaomi.video_pos_id;
if (!t.xiaomi.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.xiaomiConfig.bannerId = t.xiaomi.banner_pos_id;
if (!t.xiaomi.native_banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘native_banner_pos_id’字段！");
return !1;
}
this.xiaomiConfig.nativeBannerIds = t.xiaomi.native_banner_pos_id;
t.xiaomi.native_trygame_pos_id ? this.xiaomiConfig.nativeTryGameIds = t.xiaomi.native_trygame_pos_id : a.utils.showLog("error本地配置数据不包含‘native_trygame_pos_id’字段！");
if (!t.xiaomi.native_intersititial_pos_id) {
a.utils.showLog("error本地配置数据不包含‘native_intersititial_pos_id’字段！");
return !1;
}
this.xiaomiConfig.nativeInsertIds = t.xiaomi.native_intersititial_pos_id;
return !0;
};
e.prototype._init_uc = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.uc) {
a.utils.showLog("error本地配置数据不包含‘uc’字段！");
return !1;
}
if (!t.uc.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.ucConfig.appID = t.uc.app_id;
if (!t.uc.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.ucConfig.version = t.uc.version;
if (!t.uc.shares) {
a.utils.showLog("error本地配置数据不包含‘shares’字段！");
return !1;
}
if (!t.uc.shares.sy_title) {
a.utils.showLog("error本地配置数据不包含‘shares.shareTitle’字段！");
return !1;
}
this.otherconfig.shareTitle = t.uc.shares.sy_title;
if (!t.uc.shares.sy_img) {
a.utils.showLog("error本地配置数据不包含‘shares.shareImgUrl’字段！");
return !1;
}
this.otherconfig.shareImgUrl = t.uc.shares.sy_img;
return !0;
};
e.prototype._init_cocos = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.cocos) {
a.utils.showLog("error本地配置数据不包含‘cocos’字段！");
return !1;
}
if (!t.cocos.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.cocosConfig.appID = t.cocos.app_id;
if (!t.cocos.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.cocosConfig.videoId = t.cocos.video_pos_id;
if (!t.cocos.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.cocosConfig.bannerId = t.cocos.banner_pos_id;
if (!t.cocos.intersititia_pos_id) {
a.utils.showLog("error本地配置数据不包含‘intersititia_pos_id’字段！");
return !1;
}
this.cocosConfig.insertId = t.cocos.intersititia_pos_id;
if (!t.cocos.shares) {
a.utils.showLog("error本地配置数据不包含‘shares’字段！");
return !1;
}
if (!t.cocos.shares.sy_title) {
a.utils.showLog("error本地配置数据不包含‘shares.shareTitle’字段！");
return !1;
}
this.otherconfig.shareTitle = t.cocos.shares.sy_title;
if (!t.cocos.shares.sy_img) {
a.utils.showLog("error本地配置数据不包含‘shares.shareImgUrl’字段！");
return !1;
}
this.otherconfig.shareImgUrl = t.cocos.shares.sy_img;
return !0;
};
e.prototype._init_native_android = function() {
if (!a.utils.Tool_Native) return !1;
var e = a.utils.Tool_Native.getNativeData();
a.utils.showLog("原生安卓平台本地配置数据:", e);
if (!e) {
a.utils.showLog("error : 安卓本地配置数据配置错误！");
return !1;
}
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.nativeAndroidConfig.appID = t.app_id;
if (!t.version) {
a.utils.showMsg("error本地配置数据不包含‘version’字段！");
return !1;
}
this.nativeAndroidConfig.version = t.version;
if (!t.channel) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.nativeAndroidConfig.channel = t.channel;
a.utils.showLog("原生平台渠道号 channel=" + t.channel);
return !0;
};
e.prototype._init_native_ios = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.ios.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.nativeIoSConfig.appID = t.ios.app_id;
if (!t.ios.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.nativeIoSConfig.videoId = t.ios.video_pos_id;
if (!t.ios.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.nativeIoSConfig.version = t.ios.version;
if (!t.ios.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.nativeIoSConfig.bannerId = t.ios.banner_pos_id;
if (!t.ios.intersititia_pos_id) {
a.utils.showLog("error本地配置数据不包含‘intersititia_pos_id’字段！");
return !1;
}
this.nativeIoSConfig.insertId = t.ios.intersititia_pos_id;
return !0;
};
e.prototype._init_bili = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.bili.shares.sy_title) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_title’字段！");
return !1;
}
this.otherconfig.shareTitle = t.bili.shares.sy_title;
if (!t.bili.shares.sy_img) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_img’字段！");
return !1;
}
this.otherconfig.shareImgUrl = t.bili.shares.sy_img;
return !0;
};
e.prototype._init_kwai = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.kwai.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.kwaiConfig.appID = t.kwai.app_id;
if (!t.kwai.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.kwaiConfig.videoId = t.kwai.video_pos_id;
t.kwai.intersititia_pos_id ? this.kwaiConfig.insertId = t.kwai.intersititia_pos_id : a.utils.showLog("error本地配置数据不包含‘intersititia_pos_id’字段！");
if (!t.kwai.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.kwaiConfig.version = t.kwai.version;
if (!t.kwai.shares) {
a.utils.showLog("error本地配置数据不包含‘shares’字段！");
return !1;
}
if (!t.kwai.shares.sy_title) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_title’字段！");
return !1;
}
this.otherconfig.shareTitle = t.kwai.shares.sy_title;
if (!t.kwai.shares.sy_img) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_img’字段！");
return !1;
}
this.otherconfig.shareImgUrl = t.kwai.shares.sy_img;
if (!t.kwai.shares.sy_icon) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_icon");
return !1;
}
this.otherconfig.shareIcon = t.kwai.shares.sy_icon;
if (!t.kwai.shares.sy_desc) {
a.utils.showLog("error本地配置数据不包含‘shares.sy_desc’字段！");
return !1;
}
this.otherconfig.shareDesc = t.kwai.shares.sy_desc;
return !0;
};
e.prototype._init_facebook = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.faceBook.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.faceBookConfig.appID = t.faceBook.app_id;
if (!t.faceBook.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.faceBookConfig.videoId = t.faceBook.video_pos_id;
if (!t.faceBook.intersititia_pos_id) {
a.utils.showLog("error本地配置数据不包含‘intersititia_pos_id’字段！");
return !1;
}
this.faceBookConfig.insertId = t.faceBook.intersititia_pos_id;
if (!t.faceBook.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.faceBookConfig.bannerId = t.faceBook.banner_pos_id;
if (!t.faceBook.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.faceBookConfig.version = t.faceBook.version;
a.utils.showLog("success本地配置数据验证完成!");
return !0;
};
e.prototype._init_hago = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.hago.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.hagoConfig.appID = t.hago.app_id;
if (!t.hago.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.hagoConfig.videoId = t.hago.video_pos_id;
if (!t.hago.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.hagoConfig.version = t.hago.version;
return !0;
};
e.prototype._init_huawei = function(e) {
if (!e) return !1;
a.utils.showLog("本地配置数据:", e);
var t = JSON.parse(e);
if (!t) {
a.utils.showLog("error本地配置数据不是合法的json数据!");
return !1;
}
if (!t.huawei.app_id) {
a.utils.showLog("error本地配置数据不包含‘app_id’字段！");
return !1;
}
this.huaweiConfig.appID = t.huawei.app_id;
if (!t.huawei.video_pos_id) {
a.utils.showLog("error本地配置数据不包含‘video_pos_id’字段！");
return !1;
}
this.huaweiConfig.videoId = t.huawei.video_pos_id;
if (!t.huawei.banner_pos_id) {
a.utils.showLog("error本地配置数据不包含‘banner_pos_id’字段！");
return !1;
}
this.huaweiConfig.bannerId = t.huawei.banner_pos_id;
t.huawei.native_banner_pos_id ? this.huaweiConfig.nativeBannerIds = t.huawei.native_banner_pos_id : a.utils.showLog("error本地配置数据不包含‘native_banner_pos_id’字段！");
t.huawei.native_intersititial_pos_id ? this.huaweiConfig.nativeInsertIds = t.huawei.native_intersititial_pos_id : a.utils.showLog("error本地配置数据不包含‘native_intersititial_pos_id’字段！");
t.huawei.native_trygame_pos_id ? this.huaweiConfig.nativeTryGameIds = t.huawei.native_trygame_pos_id : a.utils.showLog("error本地配置数据不包含‘native_trygame_pos_id’字段！");
t.huawei.native_splash_id ? this.huaweiConfig.nativeSplashId = t.huawei.native_splash_id : a.utils.showLog("error本地配置数据不包含‘native_splash_id’字段！");
t.huawei.umeng_id ? this.huaweiConfig.umengId = t.huawei.umeng_id : a.utils.showLog("error本地配置数据不包含‘umeng_id’字段,不启用友盟统计！");
if (!t.huawei.version) {
a.utils.showLog("error本地配置数据不包含‘version’字段！");
return !1;
}
this.huaweiConfig.version = t.huawei.version;
return !0;
};
o([ u({
type: R,
tooltip: "其他配置",
displayName: "其他配置"
}) ], e.prototype, "otherconfig", void 0);
return e = o([ c("CommonConfig") ], e);
}();
i.default = M;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
CompatibleTool: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c616dE5RypCGJJPz/ZeBEZZ", "CompatibleTool");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, r = (s.property, function(e) {
o(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
Object.defineProperty(t, "engineVersion", {
get: function() {
if (this._engineVersion > 0) return this._engineVersion;
var e = cc.ENGINE_VERSION;
return parseInt(e.substr(e.indexOf(".") - 1, e.length).split(".").join(""));
},
enumerable: !1,
configurable: !0
});
t.position = function(e, t) {
return this.engineVersion >= 240 ? cc.v3(e, t) : cc.v2(e, t);
};
t.LoadRes = function(e, t) {
if (this.engineVersion >= 240) {
if (".jpg" != (i = e.substr(e.lastIndexOf("."))) && ".png" != i && ".jpeg" != i) {
cc.assetManager.loadRemote(e, {
ext: ".jpeg"
}, t);
cc.assetManager.loadRemote(e, {
ext: ".jpg"
}, t);
cc.assetManager.loadRemote(e, {
ext: ".png"
}, t);
} else cc.assetManager.loadRemote(e, t);
} else {
var i;
if (".jpg" != (i = e.substr(e.lastIndexOf("."))) && ".png" != i && ".jpeg" != i) {
cc.loader.load({
url: e,
type: "jpeg"
}, t);
cc.loader.load({
url: e,
type: "jpg"
}, t);
cc.loader.load({
url: e,
type: "png"
}, t);
} else cc.loader.load(e, t);
}
};
t._engineVersion = 0;
return t = n([ a ], t);
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {} ],
Constant: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "64cadnkviJL44jGEeMwtjtg", "Constant");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.SkillInfo = i.GunInfo = i.SkinInfo = i.Levelitem = i.PanelName = i.PageName = i.ZindexLayer = i.Starstate = i.GameState = void 0;
var o = function() {
function e() {}
e.CT_TotalLevelCount = 20;
e.CT_RewardCoinCount = 100;
e.CT_FailRewardCoinCount = 50;
e.commonCJTimes = 1;
e.weaponLevelPriceArr = [ 100, 300, 600 ];
e.skinLevelPriceArr = [ 100, 200, 300, 400, 500, 600 ];
e.ST_GameData = "GameData_dxcyxtgd";
e.ST_BuildDate = "ST_BuildDate";
e.ST_TotoalCount = "ST_TotoalCount";
e.ST_CurModel1MapId = "ST_CurModel1MapId";
e.ST_CurModel2MapId = "ST_CurModel2MapId";
e.ST_CurLevelId = "ST_CurLevelId";
e.isEndless = !0;
e.ST_AudioOn = "ST_AudioOn";
e.ST_ShakeOn = "ST_ShakeOn";
e.ST_CoinCount = "ST_CoinCount";
e.ST_DiamondCount = "ST_DiamondCount";
e.ST_OnlineToday = "ST_OnlineToday";
e.ST_ReceiveToday = "ST_ReceiveToday";
e.ST_LastLoadDate = "ST_LastLoadDate";
e.ST_LastDailyBonusTime = "ST_LastDailyBonusTime";
e.ST_LastDailyBonusIndex = "ST_LastDailyBonusIndex";
e.ST_SkinInfo = "ST_SkinInfo";
e.ST_CurSkinId = "ST_CurSkinId";
e.ST_SkillInfo = "ST_SkillInfo";
e.ST_CurSkillId = "ST_CurSkillId";
e.ST_GunInfo = "ST_GunInfo";
e.ST_CurMeleeId = "ST_CurMeleeId";
e.ST_CurRangeId = "ST_CurRangeId";
e.ST_LevelItem = "LevelItem";
e.ST_ShareNum = "ST_ShareNum";
e.E_GAME_LOGIC = "E_GAME_LOGIC";
e.E_UPDATE_PROGRESS = "E_UPDATE_PROGRESS";
e.E_Fly_Coin = "E_Fly_Coin";
e.E_COIN_CHANGE = "E_COIN_CHANGE";
e.E_Diamond_CHANGE = "E_Diamond_CHANGE";
e.E_EXP_CHANGE = "E_EXP_CHANGE";
e.E_CJ_SKIN = "E_CJ_SKIN";
e.E_CJ_Weapon = "E_CJ_Weapon";
e.E_ShareOrVideo = "E_ShareOrVideo";
e.E_Player_Death = "E_Player_Death";
e.E_Player_Hart = "E_Player_Hart";
e.E_Bullet_Last = "E_Bullet_Last";
e.E_Bullet_Reload = "E_Bullet_Reload";
e.E_Zombie_Hart = "E_Zombie_Hart";
e.E_Zombie_Death = "E_Zombie_Death";
e.E_Jingyan_Finish = "E_Jingyan_Finish";
e.E_Commonzombie_Destory = "E_Commonzombie_Destory";
e.E_Allzombie_Destory = "E_Allzombie_Destory";
e.E_Skill_Citie = "E_Skill_Citie";
e.ST_Guide_Skill = "ST_Guide_Skill";
return e;
}();
i.default = o;
(function(e) {
e[e.None = -1] = "None";
e[e.Prepare = 0] = "Prepare";
e[e.Start = 1] = "Start";
e[e.Success = 2] = "Success";
e[e.Failed = 3] = "Failed";
e[e.Pause = 4] = "Pause";
e[e.Relive = 5] = "Relive";
})(i.GameState || (i.GameState = {}));
(function(e) {
e[e.default = 0] = "default";
e[e.bright = 1] = "bright";
e[e.drown = 2] = "drown";
})(i.Starstate || (i.Starstate = {}));
(function(e) {
e[e.zindex_min = cc.macro.MIN_ZINDEX] = "zindex_min";
e[e.zinedx_floorTip = cc.macro.MIN_ZINDEX + 1] = "zinedx_floorTip";
e[e.zinedx_floorLiewen = cc.macro.MIN_ZINDEX + 2] = "zinedx_floorLiewen";
e[e.zinedx_floorSkill = cc.macro.MIN_ZINDEX + 3] = "zinedx_floorSkill";
e[e.zinedx_footPrint = cc.macro.MIN_ZINDEX + 4] = "zinedx_footPrint";
e[e.zinedx_gh = cc.macro.MIN_ZINDEX + 5] = "zinedx_gh";
e[e.zinedx_footYc = cc.macro.MIN_ZINDEX + 6] = "zinedx_footYc";
e[e.zinedx_jingyan = cc.macro.MIN_ZINDEX + 7] = "zinedx_jingyan";
e[e.zindex_shellcase = cc.macro.MIN_ZINDEX + 8] = "zindex_shellcase";
e[e.default = 0] = "default";
e[e.zindex_mb = 1] = "zindex_mb";
e[e.zinedx_item = 100] = "zinedx_item";
e[e.zinedx_dropbox = 200] = "zinedx_dropbox";
e[e.zindex_zombie = 300] = "zindex_zombie";
e[e.zindex_monster = 400] = "zindex_monster";
e[e.zindex_enemy = 500] = "zindex_enemy";
e[e.zindex_soldier = 600] = "zindex_soldier";
e[e.zindex_ai = 700] = "zindex_ai";
e[e.zindex_player = 800] = "zindex_player";
e[e.zindex_tower = 900] = "zindex_tower";
e[e.zindex_bullet = 1e3] = "zindex_bullet";
e[e.zindex_hp = 1100] = "zindex_hp";
e[e.zindex_bomb = 1200] = "zindex_bomb";
e[e.zindex_blood = 1300] = "zindex_blood";
e[e.zindex_effect = 1400] = "zindex_effect";
e[e.zindex_effect_fire = 1500] = "zindex_effect_fire";
e[e.zindex_effect_spark = 1600] = "zindex_effect_spark";
e[e.zindex_effect_hit = 1800] = "zindex_effect_hit";
e[e.zindex_bullet_sky = 1900] = "zindex_bullet_sky";
e[e.zindex_skill = cc.macro.MAX_ZINDEX - 6] = "zindex_skill";
e[e.zindex_roleLabel = cc.macro.MAX_ZINDEX - 2] = "zindex_roleLabel";
e[e.zindex_max = cc.macro.MAX_ZINDEX] = "zindex_max";
})(i.ZindexLayer || (i.ZindexLayer = {}));
var n = function() {
function e() {}
e.UILoadingPage = "UILoadingPage";
e.UIHomePage = "UIHomePage";
e.UIGamePage = "UIGamePage";
e.UIOverPage = "UIOverPage";
e.UIGameLoadingPage = "UIGameLoadingPage";
return e;
}();
i.PageName = n;
var s = function() {
function e() {}
e.UISignPanel = "UISignPanel";
e.UITurntablePanel = "UITurntablePanel";
e.UIRevivePanel = "UIRevivePanel";
e.UIUpgradePanel = "UIUpgradePanel";
e.UIPausePanel = "UIPausePanel";
e.UITrySkinPanel = "UITrySkinPanel";
e.UIWeaponLevelPanel = "UIWeaponLevelPanel";
e.UITimePanel = "UITimePanel";
e.UIRankingPanel = "UIRankingPanel";
return e;
}();
i.PanelName = s;
var a = function() {
function e(e) {
var t = JSON.parse(e);
if (t) {
t.Id ? this.Id = parseInt(t.Id) : cc.log("Id 字段不存在!");
t.State ? this.State = parseInt(t.State) : cc.log("State 字段不存在!");
t.Grade ? this.Grade = parseInt(t.Grade) : cc.log("Grade 字段不存在!");
} else cc.log("构建 Levelitem 的字符串不合法!");
}
e.prototype.ToString = function() {
return '{"Id":"' + this.Id + '","State":"' + this.State + '","Grade":"' + this.Grade + '"}';
};
return e;
}();
i.Levelitem = a;
var r = function() {
function e(e) {
var t = JSON.parse(e);
if (t) {
t.Id ? this.Id = parseInt(t.Id) : cc.log("Id 字段不存在!");
t.State ? this.State = parseInt(t.State) : cc.log("State 字段不存在!");
t.Price ? this.Price = parseInt(t.Price) : cc.log("Price 字段不存在!");
t.Level ? this.Level = parseInt(t.Level) : cc.log("Level 字段不存在!");
t.VideoCount ? this.VideoCount = parseInt(t.VideoCount) : cc.log("VideoCount 字段不存在!");
} else cc.log("构建 SkinInfo 的字符串不合法!");
}
e.prototype.ToString = function() {
return '{"Id":"' + this.Id + '","State":' + this.State + '","Price":"' + this.Price + '","VideoCount":"' + this.VideoCount + '"}';
};
return e;
}();
i.SkinInfo = r;
var l = function() {
function e(e) {
var t = JSON.parse(e);
if (t) {
t.Id ? this.Id = parseInt(t.Id) : cc.log("Id 字段不存在!");
t.State ? this.State = parseInt(t.State) : cc.log("State 字段不存在!");
t.Price ? this.Price = parseInt(t.Price) : cc.log("Price 字段不存在!");
t.Level ? this.Level = parseInt(t.Level) : cc.log("Level 字段不存在!");
t.VideoCount ? this.VideoCount = parseInt(t.VideoCount) : cc.log("VideoCount 字段不存在!");
} else cc.log("构建 GunInfo 的字符串不合法!");
}
e.prototype.ToString = function() {
return '{"Id":"' + this.Id + '","State":"' + this.State + '","Price":"' + this.Price + '","Level":"' + this.Level + '","VideoCount":"' + this.VideoCount + '"}';
};
return e;
}();
i.GunInfo = l;
var c = function() {
function e(e) {
var t = JSON.parse(e);
if (t) {
t.Id ? this.Id = parseInt(t.Id) : cc.log("Id 字段不存在!");
t.State ? this.State = parseInt(t.State) : cc.log("State 字段不存在!");
t.Price ? this.Price = parseInt(t.Price) : cc.log("Price 字段不存在!");
} else cc.log("构建 SkillInfo 的字符串不合法!");
}
e.prototype.ToString = function() {
return '{"Id":"' + this.Id + '","State":"' + this.State + '","Price":"' + this.Price + '"}';
};
return e;
}();
i.SkillInfo = c;
cc._RF.pop();
}, {} ],
CryptoJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9c578rOejxNwYyA/OywYDiZ", "CryptoJS");
var o = o || function(e, t) {
var i = {}, o = i.lib = {}, n = function() {}, s = o.Base = {
extend: function(e) {
n.prototype = this;
var t = new n();
e && t.mixIn(e);
t.hasOwnProperty("init") || (t.init = function() {
t.$super.init.apply(this, arguments);
});
t.init.prototype = t;
t.$super = this;
return t;
},
create: function() {
var e = this.extend();
e.init.apply(e, arguments);
return e;
},
init: function() {},
mixIn: function(e) {
for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
e.hasOwnProperty("toString") && (this.toString = e.toString);
},
clone: function() {
return this.init.prototype.extend(this);
}
}, a = o.WordArray = s.extend({
init: function(e, t) {
e = this.words = e || [];
this.sigBytes = void 0 != t ? t : 4 * e.length;
},
toString: function(e) {
return (e || l).stringify(this);
},
concat: function(e) {
var t = this.words, i = e.words, o = this.sigBytes;
e = e.sigBytes;
this.clamp();
if (o % 4) for (var n = 0; n < e; n++) t[o + n >>> 2] |= (i[n >>> 2] >>> 24 - n % 4 * 8 & 255) << 24 - (o + n) % 4 * 8; else if (65535 < i.length) for (n = 0; n < e; n += 4) t[o + n >>> 2] = i[n >>> 2]; else t.push.apply(t, i);
this.sigBytes += e;
return this;
},
clamp: function() {
var t = this.words, i = this.sigBytes;
t[i >>> 2] &= 4294967295 << 32 - i % 4 * 8;
t.length = e.ceil(i / 4);
},
clone: function() {
var e = s.clone.call(this);
e.words = this.words.slice(0);
return e;
},
random: function(t) {
for (var i = [], o = 0; o < t; o += 4) i.push(4294967296 * e.random() | 0);
return new a.init(i, t);
}
}), r = i.enc = {}, l = r.Hex = {
stringify: function(e) {
var t = e.words;
e = e.sigBytes;
for (var i = [], o = 0; o < e; o++) {
var n = t[o >>> 2] >>> 24 - o % 4 * 8 & 255;
i.push((n >>> 4).toString(16));
i.push((15 & n).toString(16));
}
return i.join("");
},
parse: function(e) {
for (var t = e.length, i = [], o = 0; o < t; o += 2) i[o >>> 3] |= parseInt(e.substr(o, 2), 16) << 24 - o % 8 * 4;
return new a.init(i, t / 2);
}
}, c = r.Latin1 = {
stringify: function(e) {
var t = e.words;
e = e.sigBytes;
for (var i = [], o = 0; o < e; o++) i.push(String.fromCharCode(t[o >>> 2] >>> 24 - o % 4 * 8 & 255));
return i.join("");
},
parse: function(e) {
for (var t = e.length, i = [], o = 0; o < t; o++) i[o >>> 2] |= (255 & e.charCodeAt(o)) << 24 - o % 4 * 8;
return new a.init(i, t);
}
}, u = r.Utf8 = {
stringify: function(e) {
try {
return decodeURIComponent(escape(c.stringify(e)));
} catch (e) {
throw Error("Malformed UTF-8 data");
}
},
parse: function(e) {
return c.parse(unescape(encodeURIComponent(e)));
}
}, h = o.BufferedBlockAlgorithm = s.extend({
reset: function() {
this._data = new a.init();
this._nDataBytes = 0;
},
_append: function(e) {
"string" == typeof e && (e = u.parse(e));
this._data.concat(e);
this._nDataBytes += e.sigBytes;
},
_process: function(t) {
var i = this._data, o = i.words, n = i.sigBytes, s = this.blockSize, r = n / (4 * s);
t = (r = t ? e.ceil(r) : e.max((0 | r) - this._minBufferSize, 0)) * s;
n = e.min(4 * t, n);
if (t) {
for (var l = 0; l < t; l += s) this._doProcessBlock(o, l);
l = o.splice(0, t);
i.sigBytes -= n;
}
return new a.init(l, n);
},
clone: function() {
var e = s.clone.call(this);
e._data = this._data.clone();
return e;
},
_minBufferSize: 0
});
o.Hasher = h.extend({
cfg: s.extend(),
init: function(e) {
this.cfg = this.cfg.extend(e);
this.reset();
},
reset: function() {
h.reset.call(this);
this._doReset();
},
update: function(e) {
this._append(e);
this._process();
return this;
},
finalize: function(e) {
e && this._append(e);
return this._doFinalize();
},
blockSize: 16,
_createHelper: function(e) {
return function(t, i) {
return new e.init(i).finalize(t);
};
},
_createHmacHelper: function(e) {
return function(t, i) {
return new d.HMAC.init(e, i).finalize(t);
};
}
});
var d = i.algo = {};
return i;
}(Math);
(function() {
var e = o, t = e.lib.WordArray;
e.enc.Base64 = {
stringify: function(e) {
var t = e.words, i = e.sigBytes, o = this._map;
e.clamp();
e = [];
for (var n = 0; n < i; n += 3) for (var s = (t[n >>> 2] >>> 24 - n % 4 * 8 & 255) << 16 | (t[n + 1 >>> 2] >>> 24 - (n + 1) % 4 * 8 & 255) << 8 | t[n + 2 >>> 2] >>> 24 - (n + 2) % 4 * 8 & 255, a = 0; 4 > a && n + .75 * a < i; a++) e.push(o.charAt(s >>> 6 * (3 - a) & 63));
if (t = o.charAt(64)) for (;e.length % 4; ) e.push(t);
return e.join("");
},
parse: function(e) {
var i = e.length, o = this._map;
(n = o.charAt(64)) && (-1 != (n = e.indexOf(n)) && (i = n));
for (var n = [], s = 0, a = 0; a < i; a++) if (a % 4) {
var r = o.indexOf(e.charAt(a - 1)) << a % 4 * 2, l = o.indexOf(e.charAt(a)) >>> 6 - a % 4 * 2;
n[s >>> 2] |= (r | l) << 24 - s % 4 * 8;
s++;
}
return t.create(n, s);
},
_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
};
})();
(function(e) {
function t(e, t, i, o, n, s, a) {
return ((e = e + (t & i | ~t & o) + n + a) << s | e >>> 32 - s) + t;
}
function i(e, t, i, o, n, s, a) {
return ((e = e + (t & o | i & ~o) + n + a) << s | e >>> 32 - s) + t;
}
function n(e, t, i, o, n, s, a) {
return ((e = e + (t ^ i ^ o) + n + a) << s | e >>> 32 - s) + t;
}
function s(e, t, i, o, n, s, a) {
return ((e = e + (i ^ (t | ~o)) + n + a) << s | e >>> 32 - s) + t;
}
for (var a = o, r = (c = a.lib).WordArray, l = c.Hasher, c = a.algo, u = [], h = 0; 64 > h; h++) u[h] = 4294967296 * e.abs(e.sin(h + 1)) | 0;
c = c.MD5 = l.extend({
_doReset: function() {
this._hash = new r.init([ 1732584193, 4023233417, 2562383102, 271733878 ]);
},
_doProcessBlock: function(e, o) {
for (var a = 0; 16 > a; a++) {
var r = e[h = o + a];
e[h] = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8);
}
a = this._hash.words;
var l, c, h = e[o + 0], d = (r = e[o + 1], e[o + 2]), f = e[o + 3], _ = e[o + 4], p = e[o + 5], g = e[o + 6], m = e[o + 7], v = e[o + 8], y = e[o + 9], w = e[o + 10], I = e[o + 11], b = e[o + 12], S = e[o + 13], C = e[o + 14], A = e[o + 15], L = a[0], T = s(T = s(T = s(T = s(T = n(T = n(T = n(T = n(T = i(T = i(T = i(T = i(T = t(T = t(T = t(T = t(T = a[1], c = t(c = a[2], l = t(l = a[3], L = t(L, T, c, l, h, 7, u[0]), T, c, r, 12, u[1]), L, T, d, 17, u[2]), l, L, f, 22, u[3]), c = t(c, l = t(l, L = t(L, T, c, l, _, 7, u[4]), T, c, p, 12, u[5]), L, T, g, 17, u[6]), l, L, m, 22, u[7]), c = t(c, l = t(l, L = t(L, T, c, l, v, 7, u[8]), T, c, y, 12, u[9]), L, T, w, 17, u[10]), l, L, I, 22, u[11]), c = t(c, l = t(l, L = t(L, T, c, l, b, 7, u[12]), T, c, S, 12, u[13]), L, T, C, 17, u[14]), l, L, A, 22, u[15]), c = i(c, l = i(l, L = i(L, T, c, l, r, 5, u[16]), T, c, g, 9, u[17]), L, T, I, 14, u[18]), l, L, h, 20, u[19]), c = i(c, l = i(l, L = i(L, T, c, l, p, 5, u[20]), T, c, w, 9, u[21]), L, T, A, 14, u[22]), l, L, _, 20, u[23]), c = i(c, l = i(l, L = i(L, T, c, l, y, 5, u[24]), T, c, C, 9, u[25]), L, T, f, 14, u[26]), l, L, v, 20, u[27]), c = i(c, l = i(l, L = i(L, T, c, l, S, 5, u[28]), T, c, d, 9, u[29]), L, T, m, 14, u[30]), l, L, b, 20, u[31]), c = n(c, l = n(l, L = n(L, T, c, l, p, 4, u[32]), T, c, v, 11, u[33]), L, T, I, 16, u[34]), l, L, C, 23, u[35]), c = n(c, l = n(l, L = n(L, T, c, l, r, 4, u[36]), T, c, _, 11, u[37]), L, T, m, 16, u[38]), l, L, w, 23, u[39]), c = n(c, l = n(l, L = n(L, T, c, l, S, 4, u[40]), T, c, h, 11, u[41]), L, T, f, 16, u[42]), l, L, g, 23, u[43]), c = n(c, l = n(l, L = n(L, T, c, l, y, 4, u[44]), T, c, b, 11, u[45]), L, T, A, 16, u[46]), l, L, d, 23, u[47]), c = s(c, l = s(l, L = s(L, T, c, l, h, 6, u[48]), T, c, m, 10, u[49]), L, T, C, 15, u[50]), l, L, p, 21, u[51]), c = s(c, l = s(l, L = s(L, T, c, l, b, 6, u[52]), T, c, f, 10, u[53]), L, T, w, 15, u[54]), l, L, r, 21, u[55]), c = s(c, l = s(l, L = s(L, T, c, l, v, 6, u[56]), T, c, A, 10, u[57]), L, T, g, 15, u[58]), l, L, S, 21, u[59]), c = s(c, l = s(l, L = s(L, T, c, l, _, 6, u[60]), T, c, I, 10, u[61]), L, T, d, 15, u[62]), l, L, y, 21, u[63]);
a[0] = a[0] + L | 0;
a[1] = a[1] + T | 0;
a[2] = a[2] + c | 0;
a[3] = a[3] + l | 0;
},
_doFinalize: function() {
var t = this._data, i = t.words, o = 8 * this._nDataBytes, n = 8 * t.sigBytes;
i[n >>> 5] |= 128 << 24 - n % 32;
var s = e.floor(o / 4294967296);
i[15 + (n + 64 >>> 9 << 4)] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8);
i[14 + (n + 64 >>> 9 << 4)] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);
t.sigBytes = 4 * (i.length + 1);
this._process();
i = (t = this._hash).words;
for (o = 0; 4 > o; o++) n = i[o], i[o] = 16711935 & (n << 8 | n >>> 24) | 4278255360 & (n << 24 | n >>> 8);
return t;
},
clone: function() {
var e = l.clone.call(this);
e._hash = this._hash.clone();
return e;
}
});
a.MD5 = l._createHelper(c);
a.HmacMD5 = l._createHmacHelper(c);
})(Math);
(function() {
var e, t = o, i = (e = t.lib).Base, n = e.WordArray, s = (e = t.algo).EvpKDF = i.extend({
cfg: i.extend({
keySize: 4,
hasher: e.MD5,
iterations: 1
}),
init: function(e) {
this.cfg = this.cfg.extend(e);
},
compute: function(e, t) {
for (var i = (r = this.cfg).hasher.create(), o = n.create(), s = o.words, a = r.keySize, r = r.iterations; s.length < a; ) {
l && i.update(l);
var l = i.update(e).finalize(t);
i.reset();
for (var c = 1; c < r; c++) l = i.finalize(l), i.reset();
o.concat(l);
}
o.sigBytes = 4 * a;
return o;
}
});
t.EvpKDF = function(e, t, i) {
return s.create(i).compute(e, t);
};
})();
o.lib.Cipher || function(e) {
var t = (_ = o).lib, i = t.Base, n = t.WordArray, s = t.BufferedBlockAlgorithm, a = _.enc.Base64, r = _.algo.EvpKDF, l = t.Cipher = s.extend({
cfg: i.extend(),
createEncryptor: function(e, t) {
return this.create(this._ENC_XFORM_MODE, e, t);
},
createDecryptor: function(e, t) {
return this.create(this._DEC_XFORM_MODE, e, t);
},
init: function(e, t, i) {
this.cfg = this.cfg.extend(i);
this._xformMode = e;
this._key = t;
this.reset();
},
reset: function() {
s.reset.call(this);
this._doReset();
},
process: function(e) {
this._append(e);
return this._process();
},
finalize: function(e) {
e && this._append(e);
return this._doFinalize();
},
keySize: 4,
ivSize: 4,
_ENC_XFORM_MODE: 1,
_DEC_XFORM_MODE: 2,
_createHelper: function(e) {
return {
encrypt: function(t, i, o) {
return ("string" == typeof i ? p : f).encrypt(e, t, i, o);
},
decrypt: function(t, i, o) {
return ("string" == typeof i ? p : f).decrypt(e, t, i, o);
}
};
}
});
t.StreamCipher = l.extend({
_doFinalize: function() {
return this._process(!0);
},
blockSize: 1
});
var c = _.mode = {}, u = function(e, t, i) {
var o = this._iv;
o ? this._iv = void 0 : o = this._prevBlock;
for (var n = 0; n < i; n++) e[t + n] ^= o[n];
}, h = (t.BlockCipherMode = i.extend({
createEncryptor: function(e, t) {
return this.Encryptor.create(e, t);
},
createDecryptor: function(e, t) {
return this.Decryptor.create(e, t);
},
init: function(e, t) {
this._cipher = e;
this._iv = t;
}
})).extend();
h.Encryptor = h.extend({
processBlock: function(e, t) {
var i = this._cipher, o = i.blockSize;
u.call(this, e, t, o);
i.encryptBlock(e, t);
this._prevBlock = e.slice(t, t + o);
}
});
h.Decryptor = h.extend({
processBlock: function(e, t) {
var i = this._cipher, o = i.blockSize, n = e.slice(t, t + o);
i.decryptBlock(e, t);
u.call(this, e, t, o);
this._prevBlock = n;
}
});
c = c.CBC = h;
h = (_.pad = {}).Pkcs7 = {
pad: function(e, t) {
for (var i, o = (i = (i = 4 * t) - e.sigBytes % i) << 24 | i << 16 | i << 8 | i, s = [], a = 0; a < i; a += 4) s.push(o);
i = n.create(s, i);
e.concat(i);
},
unpad: function(e) {
e.sigBytes -= 255 & e.words[e.sigBytes - 1 >>> 2];
}
};
t.BlockCipher = l.extend({
cfg: l.cfg.extend({
mode: c,
padding: h
}),
reset: function() {
l.reset.call(this);
var e = (t = this.cfg).iv, t = t.mode;
if (this._xformMode == this._ENC_XFORM_MODE) var i = t.createEncryptor; else i = t.createDecryptor, 
this._minBufferSize = 1;
this._mode = i.call(t, this, e && e.words);
},
_doProcessBlock: function(e, t) {
this._mode.processBlock(e, t);
},
_doFinalize: function() {
var e = this.cfg.padding;
if (this._xformMode == this._ENC_XFORM_MODE) {
e.pad(this._data, this.blockSize);
var t = this._process(!0);
} else t = this._process(!0), e.unpad(t);
return t;
},
blockSize: 4
});
var d = t.CipherParams = i.extend({
init: function(e) {
this.mixIn(e);
},
toString: function(e) {
return (e || this.formatter).stringify(this);
}
}), f = (c = (_.format = {}).OpenSSL = {
stringify: function(e) {
var t = e.ciphertext;
return ((e = e.salt) ? n.create([ 1398893684, 1701076831 ]).concat(e).concat(t) : t).toString(a);
},
parse: function(e) {
var t = (e = a.parse(e)).words;
if (1398893684 == t[0] && 1701076831 == t[1]) {
var i = n.create(t.slice(2, 4));
t.splice(0, 4);
e.sigBytes -= 16;
}
return d.create({
ciphertext: e,
salt: i
});
}
}, t.SerializableCipher = i.extend({
cfg: i.extend({
format: c
}),
encrypt: function(e, t, i, o) {
o = this.cfg.extend(o);
var n = e.createEncryptor(i, o);
t = n.finalize(t);
n = n.cfg;
return d.create({
ciphertext: t,
key: i,
iv: n.iv,
algorithm: e,
mode: n.mode,
padding: n.padding,
blockSize: e.blockSize,
formatter: o.format
});
},
decrypt: function(e, t, i, o) {
o = this.cfg.extend(o);
t = this._parse(t, o.format);
return e.createDecryptor(i, o).finalize(t.ciphertext);
},
_parse: function(e, t) {
return "string" == typeof e ? t.parse(e, this) : e;
}
})), _ = (_.kdf = {}).OpenSSL = {
execute: function(e, t, i, o) {
o || (o = n.random(8));
e = r.create({
keySize: t + i
}).compute(e, o);
i = n.create(e.words.slice(t), 4 * i);
e.sigBytes = 4 * t;
return d.create({
key: e,
iv: i,
salt: o
});
}
}, p = t.PasswordBasedCipher = f.extend({
cfg: f.cfg.extend({
kdf: _
}),
encrypt: function(e, t, i, o) {
i = (o = this.cfg.extend(o)).kdf.execute(i, e.keySize, e.ivSize);
o.iv = i.iv;
(e = f.encrypt.call(this, e, t, i.key, o)).mixIn(i);
return e;
},
decrypt: function(e, t, i, o) {
o = this.cfg.extend(o);
t = this._parse(t, o.format);
i = o.kdf.execute(i, e.keySize, e.ivSize, t.salt);
o.iv = i.iv;
return f.decrypt.call(this, e, t, i.key, o);
}
});
}();
(function() {
for (var e = o, t = e.lib.BlockCipher, i = e.algo, n = [], s = [], a = [], r = [], l = [], c = [], u = [], h = [], d = [], f = [], _ = [], p = 0; 256 > p; p++) _[p] = 128 > p ? p << 1 : p << 1 ^ 283;
var g = 0, m = 0;
for (p = 0; 256 > p; p++) {
var v = (v = m ^ m << 1 ^ m << 2 ^ m << 3 ^ m << 4) >>> 8 ^ 255 & v ^ 99;
n[g] = v;
s[v] = g;
var y = _[g], w = _[y], I = _[w], b = 257 * _[v] ^ 16843008 * v;
a[g] = b << 24 | b >>> 8;
r[g] = b << 16 | b >>> 16;
l[g] = b << 8 | b >>> 24;
c[g] = b;
b = 16843009 * I ^ 65537 * w ^ 257 * y ^ 16843008 * g;
u[v] = b << 24 | b >>> 8;
h[v] = b << 16 | b >>> 16;
d[v] = b << 8 | b >>> 24;
f[v] = b;
g ? (g = y ^ _[_[_[I ^ y]]], m ^= _[_[m]]) : g = m = 1;
}
var S = [ 0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54 ];
i = i.AES = t.extend({
_doReset: function() {
for (var e = (i = this._key).words, t = i.sigBytes / 4, i = 4 * ((this._nRounds = t + 6) + 1), o = this._keySchedule = [], s = 0; s < i; s++) if (s < t) o[s] = e[s]; else {
var a = o[s - 1];
s % t ? 6 < t && 4 == s % t && (a = n[a >>> 24] << 24 | n[a >>> 16 & 255] << 16 | n[a >>> 8 & 255] << 8 | n[255 & a]) : (a = n[(a = a << 8 | a >>> 24) >>> 24] << 24 | n[a >>> 16 & 255] << 16 | n[a >>> 8 & 255] << 8 | n[255 & a], 
a ^= S[s / t | 0] << 24);
o[s] = o[s - t] ^ a;
}
e = this._invKeySchedule = [];
for (t = 0; t < i; t++) s = i - t, a = t % 4 ? o[s] : o[s - 4], e[t] = 4 > t || 4 >= s ? a : u[n[a >>> 24]] ^ h[n[a >>> 16 & 255]] ^ d[n[a >>> 8 & 255]] ^ f[n[255 & a]];
},
encryptBlock: function(e, t) {
this._doCryptBlock(e, t, this._keySchedule, a, r, l, c, n);
},
decryptBlock: function(e, t) {
var i = e[t + 1];
e[t + 1] = e[t + 3];
e[t + 3] = i;
this._doCryptBlock(e, t, this._invKeySchedule, u, h, d, f, s);
i = e[t + 1];
e[t + 1] = e[t + 3];
e[t + 3] = i;
},
_doCryptBlock: function(e, t, i, o, n, s, a, r) {
for (var l = this._nRounds, c = e[t] ^ i[0], u = e[t + 1] ^ i[1], h = e[t + 2] ^ i[2], d = e[t + 3] ^ i[3], f = 4, _ = 1; _ < l; _++) {
var p = o[c >>> 24] ^ n[u >>> 16 & 255] ^ s[h >>> 8 & 255] ^ a[255 & d] ^ i[f++], g = o[u >>> 24] ^ n[h >>> 16 & 255] ^ s[d >>> 8 & 255] ^ a[255 & c] ^ i[f++], m = o[h >>> 24] ^ n[d >>> 16 & 255] ^ s[c >>> 8 & 255] ^ a[255 & u] ^ i[f++];
d = o[d >>> 24] ^ n[c >>> 16 & 255] ^ s[u >>> 8 & 255] ^ a[255 & h] ^ i[f++], c = p, 
u = g, h = m;
}
p = (r[c >>> 24] << 24 | r[u >>> 16 & 255] << 16 | r[h >>> 8 & 255] << 8 | r[255 & d]) ^ i[f++];
g = (r[u >>> 24] << 24 | r[h >>> 16 & 255] << 16 | r[d >>> 8 & 255] << 8 | r[255 & c]) ^ i[f++];
m = (r[h >>> 24] << 24 | r[d >>> 16 & 255] << 16 | r[c >>> 8 & 255] << 8 | r[255 & u]) ^ i[f++];
d = (r[d >>> 24] << 24 | r[c >>> 16 & 255] << 16 | r[u >>> 8 & 255] << 8 | r[255 & h]) ^ i[f++];
e[t] = p;
e[t + 1] = g;
e[t + 2] = m;
e[t + 3] = d;
},
keySize: 8
});
e.AES = t._createHelper(i);
})();
o.pad.ZeroPadding = {
pad: function(e, t) {
var i = 4 * t;
e.clamp();
e.sigBytes += i - (e.sigBytes % i || i);
},
unpad: function(e) {
for (var t = e.words, i = e.sigBytes - 1; !(t[i >>> 2] >>> 24 - i % 4 * 8 & 255); ) i--;
e.sigBytes = i + 1;
}
};
o.mode.ECB = function() {
var e = o.lib.BlockCipherMode.extend();
e.Encryptor = e.extend({
processBlock: function(e, t) {
this._cipher.encryptBlock(e, t);
}
});
e.Decryptor = e.extend({
processBlock: function(e, t) {
this._cipher.decryptBlock(e, t);
}
});
return e;
}();
t.exports = o;
cc._RF.pop();
}, {} ],
DataMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0b76fObtN5FOKzSrvF3Frcp", "DataMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../Game/weapon"), n = e("./Constant"), s = function() {
function e() {
this._dataPool = {};
}
Object.defineProperty(e, "inst", {
get: function() {
e._inst || (e._inst = new e());
return e._inst;
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function() {
if (cc.sys.localStorage.getItem(n.default.ST_GameData)) this._dataPool = JSON.parse(cc.sys.localStorage.getItem(n.default.ST_GameData)); else {
this._dataPool[n.default.ST_CoinCount] = "1000";
this._dataPool[n.default.ST_DiamondCount] = "0";
this._dataPool[n.default.ST_CurSkinId] = "0";
this._dataPool[n.default.ST_CurMeleeId] = "13";
this._dataPool[n.default.ST_CurRangeId] = "0";
this._dataPool[n.default.ST_LastDailyBonusIndex] = "-1";
this._dataPool[n.default.ST_LastDailyBonusTime] = "0";
this._initLevelData();
this._initSkinData();
this._initGunData();
this._save();
}
};
e.prototype._initLevelData = function() {
"";
var e = {}, t = new n.Levelitem('{"Id":"1001","State":"1","Grade":"0"}');
e[1001] = t;
for (var i = 1002; i <= 1e3 + n.default.CT_TotalLevelCount; i++) {
var o = new n.Levelitem('{"Id":"' + i + '","State":"0","Grade":"0"}');
e[i.toString()] = o;
}
for (i = 2001; i <= 2e3 + n.default.CT_TotalLevelCount; i++) {
var s = new n.Levelitem('{"Id":"' + i + '","State":"0","Grade":"0"}');
e[i.toString()] = s;
}
for (i = 3001; i <= 3e3 + n.default.CT_TotalLevelCount; i++) {
var a = new n.Levelitem('{"Id":"' + i + '","State":"0","Grade":"0"}');
e[i.toString()] = a;
}
this._dataPool[n.default.ST_LevelItem] = JSON.stringify(e);
};
e.prototype._initSkinData = function() {
var e = [ 0, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3 ], t = [], i = new n.SkinInfo('{"Id":"0","State":"2","Price":"' + e[0] + '","Level":"0","VideoCount":"0"}');
t.push(i);
for (var o = 1; o < e.length; o++) {
var s = new n.SkinInfo('{"Id":"' + o + '","State":"0","Price":"' + e[o] + '","Level":"0","VideoCount":"0"}');
t.push(s);
}
this._dataPool[n.default.ST_SkinInfo] = JSON.stringify(t);
};
e.prototype._initGunData = function() {
for (var e = [ 0, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 0, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3, 1e3 ], t = [], i = 0; i < e.length; i++) {
var o = null;
o = 0 == i || 13 == i ? new n.GunInfo('{"Id":"' + i + '","State":"2","Price":"' + e[i] + '","Level":"0","VideoCount":"0"}') : new n.GunInfo('{"Id":"' + i + '","State":"0","Price":"' + e[i] + '","Level":"0","VideoCount":"0"}');
t.push(o);
}
this._dataPool[n.default.ST_GunInfo] = JSON.stringify(t);
};
Object.defineProperty(e.prototype, "AudioOn", {
get: function() {
return "1" == this.getItem(n.default.ST_AudioOn, "1");
},
set: function(e) {
this.setItem(n.default.ST_AudioOn, e ? "1" : "0");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ShakeOn", {
get: function() {
return "1" == this.getItem(n.default.ST_ShakeOn, "1");
},
set: function(e) {
this.setItem(n.default.ST_ShakeOn, e ? "1" : "0");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "CoinCount", {
get: function() {
return parseInt(this.getItem(n.default.ST_CoinCount, "0"));
},
set: function(e) {
this.setItem(n.default.ST_CoinCount, e + "");
cc.game.emit(n.default.E_GAME_LOGIC, {
type: n.default.E_COIN_CHANGE
});
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "DiamondCount", {
get: function() {
return parseInt(this.getItem(n.default.ST_DiamondCount, "0"));
},
set: function(e) {
this.setItem(n.default.ST_DiamondCount, e + "");
cc.game.emit(n.default.E_GAME_LOGIC, {
type: n.default.E_Diamond_CHANGE
});
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "TotoalCount_6", {
get: function() {
return parseInt(this.getItem(n.default.ST_TotoalCount + "6", "1"));
},
set: function(e) {
this.setItem(n.default.ST_TotoalCount + "6", e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "LastDailyBonusIndex", {
get: function() {
return parseInt(this.getItem(n.default.ST_LastDailyBonusIndex, "-1"));
},
set: function(e) {
this.setItem(n.default.ST_LastDailyBonusIndex, e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "LastDailyBonusTime", {
get: function() {
return this.getItem(n.default.ST_LastDailyBonusTime, "0");
},
set: function(e) {
this.setItem(n.default.ST_LastDailyBonusTime, e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "LastLoadDate", {
get: function() {
return this.getItem(n.default.ST_LastLoadDate, "");
},
set: function(e) {
this.setItem(n.default.ST_LastLoadDate, e);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "OnlineToday", {
get: function() {
return parseInt(this.getItem(n.default.ST_OnlineToday, "0"));
},
set: function(e) {
this.setItem(n.default.ST_OnlineToday, e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "receiveToday", {
get: function() {
return JSON.parse(this.getItem(n.default.ST_ReceiveToday, "[0, 0, 0, 0, 0]"));
},
set: function(e) {
this.setItem(n.default.ST_ReceiveToday, JSON.stringify(e));
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "CurSkinId", {
get: function() {
return parseInt(this.getItem(n.default.ST_CurSkinId, "0"));
},
set: function(e) {
if (e != this.CurSkinId) {
var t = this.CurSkinId, i = this.getSkinInfo(t);
if (i) {
i.State = 1;
this.setSkinInfo(t, i);
}
var o = this.getSkinInfo(e);
if (o) {
o.State = 2;
this.setSkinInfo(e, o);
}
this.setItem(n.default.ST_CurSkinId, e + "");
}
},
enumerable: !1,
configurable: !0
});
e.prototype.getSkinInfo = function(e) {
var t = this.getItem(n.default.ST_SkinInfo, "");
if (t) {
var i = JSON.parse(t);
if (e >= 0 && e < i.length) return i[e];
}
return null;
};
e.prototype.setSkinInfo = function(e, t) {
var i = this.getItem(n.default.ST_SkinInfo, "");
if (i) {
var o = JSON.parse(i);
if (e >= 0 && e < o.length) {
o[e] = t;
this.setItem(n.default.ST_SkinInfo, JSON.stringify(o));
}
}
};
e.prototype.getRandomLockSkin = function() {
var e = [], t = this.getItem(n.default.ST_SkinInfo, "");
if (t) for (var i = JSON.parse(t), o = 0; o < i.length; o++) 0 == i[o].State && e.push(i[o].Id);
return e;
};
e.prototype.getGunInfo = function(e) {
var t = this.getItem(n.default.ST_GunInfo, "");
if (t) {
var i = JSON.parse(t);
if (e >= 0 && e < i.length) return i[e];
}
return null;
};
e.prototype.setGunInfo = function(e, t) {
var i = this.getItem(n.default.ST_GunInfo, "");
if (i) {
var o = JSON.parse(i);
if (e >= 0 && e < o.length) {
o[e] = t;
this.setItem(n.default.ST_GunInfo, JSON.stringify(o));
}
}
};
Object.defineProperty(e.prototype, "CurMelee", {
get: function() {
return parseInt(this.getItem(n.default.ST_CurMeleeId, "13"));
},
set: function(e) {
if (e != this.CurMelee && o.default.meleeWaapon.includes(e + 1)) {
var t = this.CurMelee, i = this.getGunInfo(t);
if (i) {
i.State = 1;
this.setGunInfo(t, i);
}
var s = this.getGunInfo(e);
if (s) {
s.State = 2;
this.setGunInfo(e, s);
}
this.setItem(n.default.ST_CurMeleeId, e + "");
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "CurRange", {
get: function() {
return parseInt(this.getItem(n.default.ST_CurRangeId, "0"));
},
set: function(e) {
if (e != this.CurRange && o.default.rangeWeapon.includes(e + 1)) {
var t = this.CurRange, i = this.getGunInfo(t);
if (i) {
i.State = 1;
this.setGunInfo(t, i);
}
var s = this.getGunInfo(e);
if (s) {
s.State = 2;
this.setGunInfo(e, s);
}
this.setItem(n.default.ST_CurRangeId, e + "");
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "curWeapon", {
get: function() {
return this.CurRange;
},
set: function(e) {
o.default.meleeWaapon.includes(e + 1) ? this.CurMelee = e : o.default.rangeWeapon.includes(e + 1) && (this.CurRange = e);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "guide_skill", {
get: function() {
return this.getItem(n.default.ST_Guide_Skill, !1);
},
set: function(e) {
this.setItem(n.default.ST_Guide_Skill, e);
cc.game.emit(n.default.E_ShareOrVideo);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "best_time", {
get: function() {
return parseInt(this.getItem("best_time", "0"));
},
set: function(e) {
e > this.best_time && this.setItem("best_time", e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "best_kill", {
get: function() {
return parseInt(this.getItem("best_kill", "0"));
},
set: function(e) {
e > this.best_kill && this.setItem("best_kill", e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "best_level", {
get: function() {
return parseInt(this.getItem("best_level", "0"));
},
set: function(e) {
e > this.best_level && this.setItem("best_level", e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "best_coin", {
get: function() {
return parseInt(this.getItem("best_coin", "0"));
},
set: function(e) {
e > this.best_coin && this.setItem("best_coin", e + "");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "shareNum", {
get: function() {
return this.getItem(n.default.ST_ShareNum, 0);
},
set: function(e) {
this.setItem(n.default.ST_ShareNum, e);
cc.game.emit(n.default.E_ShareOrVideo);
cc.log("今日分享了", e, "次");
},
enumerable: !1,
configurable: !0
});
e.prototype.getItem = function(e, t) {
return void 0 != this._dataPool[e] && null != this._dataPool[e] ? this._dataPool[e] : t;
};
e.prototype.setItem = function(e, t) {
this._dataPool[e] = t;
this._save();
};
e.prototype._save = function() {
cc.sys.localStorage.setItem(n.default.ST_GameData, JSON.stringify(this._dataPool));
};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"../Game/weapon": "weapon",
"./Constant": "Constant"
} ],
EventAdInfo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4488ausP1RLk6Ca9NdEBVaO", "EventAdInfo");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.AdEventParameter = i.YwAdStatus = i.YwAdType = void 0;
var n = cc._decorator, s = n.ccclass;
n.property;
(function(e) {
e[e.BANNER = 1] = "BANNER";
e[e.INTERSITITIAL = 2] = "INTERSITITIAL";
e[e.REWARD_VIDEO = 3] = "REWARD_VIDEO";
e[e.SPLASH = 4] = "SPLASH";
e[e.NATIVE_BANNER = 5] = "NATIVE_BANNER";
e[e.NATIVE_INTERSITITIAL = 6] = "NATIVE_INTERSITITIAL";
e[e.NATIVE_ICON = 7] = "NATIVE_ICON";
e[e.INTERSITITIAL_VIDEO = 8] = "INTERSITITIAL_VIDEO";
e[e.NATIVE = 9] = "NATIVE";
e[e.NATIVE_TEMPLATE_BANNER = 10] = "NATIVE_TEMPLATE_BANNER";
e[e.NATIVE_TEMPLATE_INTERSITIAL = 11] = "NATIVE_TEMPLATE_INTERSITIAL";
})(i.YwAdType || (i.YwAdType = {}));
(function(e) {
e[e.REQUEST = 0] = "REQUEST";
e[e.REQUEST_SUCCESS = 1] = "REQUEST_SUCCESS";
e[e.REQUEST_FAIL = 2] = "REQUEST_FAIL";
e[e.SHOW_SUCCESS = 3] = "SHOW_SUCCESS";
e[e.SHOW_FAIL = 4] = "SHOW_FAIL";
e[e.CLICK = 5] = "CLICK";
e[e.REWARD_SUCCESS = 6] = "REWARD_SUCCESS";
e[e.REWARD_FAIL = 7] = "REWARD_FAIL";
e[e.AD_ID_REQUEST = 10] = "AD_ID_REQUEST";
e[e.AD_ID_REQUEST_SUCCESS = 11] = "AD_ID_REQUEST_SUCCESS";
e[e.AD_ID_REQUEST_FAIL = 12] = "AD_ID_REQUEST_FAIL";
})(i.YwAdStatus || (i.YwAdStatus = {}));
var a = function() {
function e(e, t, i, o) {
this.adId = e;
this.code = t;
this.msg = i;
this.tag = o;
}
e.prototype.toJsonData = function() {
var e = {};
e.adId = this.adId;
this.code && (e.code = this.code);
this.msg && (e.msg = this.msg);
this.tag && (e.tag = this.tag);
return e;
};
return e;
}();
i.AdEventParameter = a;
var r = function() {
function e(e, t, i) {
this.time = new Date().getTime();
this.adType = e;
this.adStatus = t;
this.adEventParameter = i;
}
e.prototype.toJsonData = function() {
try {
var e = {};
e.ad_type = this.adType;
e.ad_status = this.adStatus;
if (null != this.adEventParameter) {
this.adEventParameter.adId && (e.ad_id = this.adEventParameter.adId);
e.ad_info = this.adEventParameter.toJsonData();
}
e.time = this.time;
return e;
} catch (e) {
console.error("EventAdInfo toJsonData erro msg =" + e);
}
return {};
};
return e = o([ s ], e);
}();
i.default = r;
cc._RF.pop();
}, {} ],
FBAdManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1da79n1bmJN5qrv/yL2wYbA", "FBAdManager");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a, r, l = e("../Utils");
(function(e) {
e[e.INTERSTITIAL = 0] = "INTERSTITIAL";
e[e.REWARDED_VIDEO = 1] = "REWARDED_VIDEO";
e[e.BANNER = 2] = "BANNER";
})(a || (a = {}));
(function(e) {
e[e.NONE = 0] = "NONE";
e[e.NEW = 1] = "NEW";
e[e.LOADING = 2] = "LOADING";
e[e.LOADED = 3] = "LOADED";
e[e.PLAYING = 4] = "PLAYING";
})(r || (r = {}));
function c(e) {
var t = "NONE";
switch (e) {
case r.NEW:
t = "NEW";
break;

case r.LOADING:
t = "LOADING";
break;

case r.LOADED:
t = "LOADED";
break;

case r.PLAYING:
t = "PLAYING";
}
return t;
}
function u(e, t) {
return n(this, void 0, void 0, function() {
return s(this, function(i) {
return [ 2, new Promise(function(i, o) {
setTimeout(function() {
t && t();
i();
}, 1e3 * e);
}) ];
});
});
}
var h = {
code: "EXCEED_MAX_AD_INSTANCE",
message: "广告对象不允许超过 3"
}, d = {
code: "NO_READY_AD_INSTANCE",
message: "没有加载完毕的广告，或者广告播放太频繁"
}, f = {
code: "NOT_READY_FOR_LOAD",
message: "当前状态不允许再次加载"
}, _ = {
code: "AD_IS_LOADING",
message: "广告正在加载"
}, p = {
code: "NOT_READY_FOR_PLAYING",
message: "没有可以播放的广告"
}, g = {
code: "AD_IS_PLAYING",
message: "广告正在播放"
}, m = {
code: "NO_BANNER_AD",
message: "没有添加Banner广告"
}, v = {
code: "API_NOT_SUPPORT",
message: "广告接口不支持"
}, y = {
code: "TOO_FAST_SHOW",
message: "广告播放太频繁"
}, w = {
code: "NOT_PLAYING",
message: "广告没有播放"
}, I = {
code: "TOO_MANY_ERRORS",
message: "太多错误, 停止操作"
};
function b(e, t, i) {
return e && "undefined" != typeof e[t] ? e[t] : i;
}
var S = function() {
function e(e, t) {
this._lastShowTime = 0;
this._refreshInterval = 0;
this._refreshInterval = e > 0 ? e : 0;
this._lastShowTime = 0;
t > 0 && (this._lastShowTime = Date.now() + 1e3 * t - 1e3 * this._refreshInterval);
}
e.prototype.isReadyToRefresh = function() {
return this.getNextRefreshInterval() <= 0;
};
e.prototype.getNextRefreshInterval = function() {
var e = 0;
if (this._refreshInterval > 0 && this._lastShowTime > 0) {
var t = Date.now();
e = this._refreshInterval - (t - this._lastShowTime) / 1e3;
}
return e;
};
e.prototype.updateLastShowTime = function() {
this._lastShowTime = Date.now();
};
return e;
}(), C = function() {
function e(e, t, i, o) {
this._maxLoadError = 0;
this._errorCounter = 0;
this._fatalError = !1;
this._sharedTimer = null;
this._adId = e;
this._state = r.NONE;
this._type = t;
this._sharedTimer = i;
this._fatalError = !1;
l.utils.showLog(!!i, "sharedTimer is invalid", i);
this._maxLoadError = b(o, "maxLoadError", 0);
}
e.prototype.getStateName = function() {
return c(this._state);
};
e.prototype.getAdTypeName = function() {
return this._type == a.INTERSTITIAL ? "插屏广告" : this._type == a.REWARDED_VIDEO ? "激励视频广告" : this._type == a.BANNER ? "Banner" : "UNKNOWN";
};
e.prototype.getInfo = function() {
return "[" + this.getAdTypeName() + ":" + this._adId + ":" + this.getStateName() + "]";
};
e.prototype.isReadyToRefresh = function() {
return this._sharedTimer.isReadyToRefresh();
};
e.prototype.getNextRefreshInterval = function() {
return this._sharedTimer.getNextRefreshInterval();
};
e.prototype.updateLastShowTime = function() {
this._sharedTimer.updateLastShowTime();
};
e.prototype.increaseErrorCounter = function() {
this._errorCounter++;
};
e.prototype.resetErrorCounter = function() {
this._errorCounter = 0;
};
e.prototype.setFatalError = function() {
this._fatalError = !0;
};
e.prototype.isErrorTooMany = function() {
return this._fatalError || this._maxLoadError > 0 && this._errorCounter >= this._maxLoadError;
};
return e;
}(), A = function(e) {
o(t, e);
function t(t, i, o, n) {
var s = e.call(this, t, i, o, n) || this;
s._adInstance = null;
s._autoLoadOnPlay = b(n, "autoLoadOnPlay", !1);
return s;
}
t.prototype.loadAsync = function() {
return n(this, void 0, void 0, function() {
var e, t, i;
return s(this, function(o) {
switch (o.label) {
case 0:
if (null != this._adInstance) return [ 3, 4 ];
if (this._state != r.NONE) return [ 3, 2 ];
this._state = r.NEW;
l.utils.showLog("获取广告对象: " + this.getInfo());
e = this;
return [ 4, this.createAdInstanceAsync(this._adId) ];

case 1:
e._adInstance = o.sent();
return [ 3, 3 ];

case 2:
l.utils.showLog("当前状态未满足加载条件, 正在获取广告对象: " + this.getInfo());
return [ 2 ];

case 3:
return [ 3, 4 ];

case 4:
if (this._state != r.NEW) {
l.utils.showLog("当前状态未满足加载条件: " + this.getInfo());
if (this._state == r.LOADING) {
l.utils.showLog("广告正在加载中，不要重复加载" + this.getInfo());
throw _;
}
throw f;
}
if (this.isErrorTooMany()) {
l.utils.showLog("太多错误，停止加载: " + this.getInfo());
throw I;
}
o.label = 5;

case 5:
o.trys.push([ 5, 7, , 8 ]);
this._state = r.LOADING;
l.utils.showLog("开始加载广告: " + this.getInfo());
return [ 4, this._adInstance.loadAsync() ];

case 6:
o.sent();
this._state = r.LOADED;
this.resetErrorCounter();
l.utils.showLog("广告加载成功: " + this.getInfo());
return [ 2, !0 ];

case 7:
t = o.sent();
l.utils.showLog("广告加载失败: " + this.getInfo(), t);
if ("ADS_NO_FILL" == t.code) {
l.utils.showLog("广告无法填充，不再继续请求: " + this.getInfo());
this.setFatalError();
} else {
this.increaseErrorCounter();
this._state = r.NEW;
i = 10 * this._errorCounter + 1;
l.utils.showLog("延迟" + i + "秒后, 自动重新加载: " + this.getInfo());
u(i, this.loadAsync.bind(this));
}
throw t;

case 8:
return [ 2 ];
}
});
});
};
t.prototype.isReady = function() {
return null != this._adInstance && this._state == r.LOADED;
};
t.prototype.showAsync = function() {
return n(this, void 0, void 0, function() {
var e;
return s(this, function(t) {
switch (t.label) {
case 0:
if (!this.isReady()) {
l.utils.showLog("当前状态未满足播放条件: " + this.getInfo());
throw this._state == r.PLAYING ? g : p;
}
if (!this.isReadyToRefresh()) {
l.utils.showLog("播放太频繁，还需间隔" + this.getNextRefreshInterval() + " 秒: " + this.getInfo());
throw y;
}
t.label = 1;

case 1:
t.trys.push([ 1, 3, , 4 ]);
this._state = r.PLAYING;
l.utils.showLog("开始播放广告: " + this.getInfo());
return [ 4, this._adInstance.showAsync() ];

case 2:
t.sent();
l.utils.showLog("播放广告完毕: " + this.getInfo());
this._adInstance = null;
this._state = r.NONE;
this.updateLastShowTime();
if (this._autoLoadOnPlay) {
l.utils.showLog("延迟1秒后, 自动重新加载: " + this.getInfo());
u(1, this.loadAsync.bind(this));
}
return [ 2, !0 ];

case 3:
e = t.sent();
l.utils.showLog("播放广告失败: " + this.getInfo(), e);
if ("RATE_LIMITED" == e.code) this._state = r.LOADED; else {
this._adInstance = null;
this._state = r.NONE;
if (this._autoLoadOnPlay) {
l.utils.showLog("延迟1秒后, 自动重新加载: " + this.getInfo());
u(1, this.loadAsync.bind(this));
}
}
throw e;

case 4:
return [ 2 ];
}
});
});
};
return t;
}(C), L = function(e) {
o(t, e);
function t(t, i, o) {
return e.call(this, t, a.INTERSTITIAL, i, o) || this;
}
t.prototype.createAdInstanceAsync = function(e) {
return n(this, void 0, void 0, function() {
return s(this, function(e) {
switch (e.label) {
case 0:
return [ 4, FBInstant.getInterstitialAdAsync(this._adId) ];

case 1:
return [ 2, e.sent() ];
}
});
});
};
return t;
}(A), T = function(e) {
o(t, e);
function t(t, i, o) {
return e.call(this, t, a.REWARDED_VIDEO, i, o) || this;
}
t.prototype.createAdInstanceAsync = function(e) {
return n(this, void 0, void 0, function() {
return s(this, function(e) {
switch (e.label) {
case 0:
return [ 4, FBInstant.getRewardedVideoAsync(this._adId) ];

case 1:
return [ 2, e.sent() ];
}
});
});
};
return t;
}(A), P = function(e) {
o(t, e);
function t(t, i, o) {
return e.call(this, t, a.BANNER, i, o) || this;
}
t.prototype.showAsync = function() {
return n(this, void 0, void 0, function() {
var e;
return s(this, function(t) {
switch (t.label) {
case 0:
if (!this.isReadyToRefresh()) {
l.utils.showLog("播放太频繁，还需间隔" + this.getNextRefreshInterval() + " 秒: " + this.getInfo());
throw y;
}
if (this.isErrorTooMany()) {
l.utils.showLog("太多错误，停止加载: " + this.getInfo());
throw I;
}
t.label = 1;

case 1:
t.trys.push([ 1, 3, , 4 ]);
this._state = r.PLAYING;
l.utils.showLog("开始显示广告: " + this.getInfo());
return [ 4, FBInstant.loadBannerAdAsync(this._adId) ];

case 2:
t.sent();
l.utils.showLog("显示广告成功: " + this.getInfo());
this.updateLastShowTime();
this.resetErrorCounter();
return [ 3, 4 ];

case 3:
e = t.sent();
l.utils.showLog("显示广告失败: " + this.getInfo(), e);
if ("RATE_LIMITED" == e.code) ; else if ("ADS_NO_FILL" == e.code) {
l.utils.showLog("广告无法填充，不再继续请求: " + this.getInfo());
this.setFatalError();
} else this.increaseErrorCounter();
throw e;

case 4:
return [ 2 ];
}
});
});
};
t.prototype.hideAsync = function() {
return n(this, void 0, void 0, function() {
var e;
return s(this, function(t) {
switch (t.label) {
case 0:
if (this._state != r.PLAYING) {
l.utils.showLog("广告没有在播放中: " + this.getInfo());
throw w;
}
t.label = 1;

case 1:
t.trys.push([ 1, 3, , 4 ]);
l.utils.showLog("隐藏广告: " + this.getInfo());
return [ 4, FBInstant.hideBannerAdAsync() ];

case 2:
t.sent();
this._state = r.NONE;
return [ 3, 4 ];

case 3:
e = t.sent();
l.utils.showLog("隐藏广告失败: " + this.getInfo(), e);
throw e;

case 4:
return [ 2 ];
}
});
});
};
return t;
}(C), B = function() {
function e() {}
e.getVersion = function() {
return "1.0.2";
};
e.addInterstitial = function(e, t) {
void 0 === t && (t = 3);
null == this._interstitialTimer && (this._interstitialTimer = new S(this.defaultInterstitialTimerOption.refreshInterval, this.defaultInterstitialTimerOption.delayForFirstAd));
for (var i = 0; i < t; i++) {
if (this._interstitialAds.length >= 3) {
l.utils.showLog("添加插屏广告失败, 超出限制: " + this._interstitialAds.length, e);
throw h;
}
var o = new L(e, this._interstitialTimer, this.defaultInterstitialOption);
this._interstitialAds.push(o);
l.utils.showLog("添加插屏广告: " + e, "count: " + this._interstitialAds.length);
}
return this._interstitialAds.length;
};
e.addRewardedVideo = function(e, t) {
void 0 === t && (t = 3);
null == this._rewardedVideoTimer && (this._rewardedVideoTimer = new S(this.defaultRewardedVideoTimerOption.refreshInterval, this.defaultRewardedVideoTimerOption.delayForFirstAd));
for (var i = 0; i < t; i++) {
if (this._rewardedVideos.length >= 3) {
l.utils.showLog("添加激励视频广告失败, 超出限制: " + this._rewardedVideos.length, e);
throw h;
}
var o = new T(e, this._rewardedVideoTimer, this.defaultRewardedVideoOption);
this._rewardedVideos.push(o);
l.utils.showLog("添加激励视频广告: " + e, "count: " + this._rewardedVideos.length);
}
return this._rewardedVideos.length;
};
e.addBanner = function(e) {
null == this._bannerTimer && (this._bannerTimer = new S(this.defaultBannerTimerOption.refreshInterval, this.defaultBannerTimerOption.delayForFirstAd));
var t = new P(e, this._bannerTimer, this.defaultBannerOption);
this._banners.push(t);
l.utils.showLog("添加Banner广告: " + e, "count: " + this._banners.length);
return t;
};
e.loadAll = function() {
return n(this, void 0, void 0, function() {
return s(this, function(e) {
switch (e.label) {
case 0:
l.utils.showLog("初始化广告队列");
return [ 4, this.loadAllAsync() ];

case 1:
return [ 2, e.sent() ];
}
});
});
};
e.loadAllAsync = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
switch (i.label) {
case 0:
l.utils.showLog("FBAdManager Version: " + this.getVersion());
l.utils.showLog("初始化广告队列");
e = 0;
i.label = 1;

case 1:
if (!(e < this._rewardedVideos.length)) return [ 3, 7 ];
t = this._rewardedVideos[e];
return e > 0 ? [ 4, u(.1) ] : [ 3, 3 ];

case 2:
i.sent();
i.label = 3;

case 3:
i.trys.push([ 3, 5, , 6 ]);
return [ 4, t.loadAsync() ];

case 4:
i.sent();
return [ 3, 6 ];

case 5:
i.sent();
return [ 3, 6 ];

case 6:
e++;
return [ 3, 1 ];

case 7:
e = 0;
i.label = 8;

case 8:
if (!(e < this._interstitialAds.length)) return [ 3, 14 ];
t = this._interstitialAds[e];
return e > 0 ? [ 4, u(.1) ] : [ 3, 10 ];

case 9:
i.sent();
i.label = 10;

case 10:
i.trys.push([ 10, 12, , 13 ]);
return [ 4, t.loadAsync() ];

case 11:
i.sent();
return [ 3, 13 ];

case 12:
i.sent();
return [ 3, 13 ];

case 13:
e++;
return [ 3, 8 ];

case 14:
return [ 2 ];
}
});
});
};
e._isAdReady = function(e) {
for (var t = e == a.INTERSTITIAL ? this._interstitialAds : this._rewardedVideos, i = !1, o = 0; o < t.length; o++) {
var n = t[o];
if (n.isReady() && n.isReadyToRefresh()) {
i = !0;
break;
}
}
return i;
};
e._showAsync = function(e) {
for (var t = e == a.INTERSTITIAL ? this._interstitialAds : this._rewardedVideos, i = null, o = 0; o < t.length; o++) {
var n = t[o];
if (n.isReady() && n.isReadyToRefresh()) {
i = n;
break;
}
}
if (null != i) return i.showAsync();
throw d;
};
e._getAdTimer = function(e) {
return e == a.INTERSTITIAL ? this._interstitialTimer : e == a.REWARDED_VIDEO ? this._rewardedVideoTimer : this._bannerTimer;
};
e.isInterstitialAdReady = function() {
return this._isAdReady(a.INTERSTITIAL);
};
e.showInterstitialAd = function() {
return n(this, void 0, void 0, function() {
return s(this, function(e) {
switch (e.label) {
case 0:
return [ 4, this._showAsync(a.INTERSTITIAL) ];

case 1:
return [ 2, e.sent() ];
}
});
});
};
e.isRewardedVideoReady = function() {
return this._isAdReady(a.REWARDED_VIDEO);
};
e.showRewardedVideo = function() {
return n(this, void 0, void 0, function() {
return s(this, function(e) {
switch (e.label) {
case 0:
return [ 4, this._showAsync(a.REWARDED_VIDEO) ];

case 1:
return [ 2, e.sent() ];
}
});
});
};
e.checkApiSupport = function(e) {
return FBInstant.getSupportedAPIs().indexOf(e) >= 0;
};
e.isBannerSupport = function() {
"undefined" == typeof this._bannerSupport && (this._bannerSupport = this.checkApiSupport("loadBannerAdAsync"));
return this._bannerSupport;
};
e.isBannerReady = function() {
if (this._banners.length <= 0) throw m;
return this._banners[0].isReadyToRefresh();
};
e.showBannerAsync = function() {
return n(this, void 0, void 0, function() {
return s(this, function(e) {
switch (e.label) {
case 0:
if (!this.isBannerSupport()) throw v;
if (this._banners.length <= 0) throw m;
return [ 4, this._banners[0].showAsync() ];

case 1:
return [ 2, e.sent() ];
}
});
});
};
e.hideBannerAsync = function() {
return n(this, void 0, void 0, function() {
return s(this, function(e) {
switch (e.label) {
case 0:
if (!this.isBannerSupport()) throw v;
if (this._banners.length <= 0) throw m;
return [ 4, this._banners[0].hideAsync() ];

case 1:
return [ 2, e.sent() ];
}
});
});
};
e._interstitialAds = [];
e._rewardedVideos = [];
e._banners = [];
e._interstitialTimer = null;
e._rewardedVideoTimer = null;
e._bannerTimer = null;
e._bannerSupport = void 0;
e.defaultInterstitialOption = {
autoLoadOnPlay: !0,
maxLoadError: 3
};
e.defaultRewardedVideoOption = {
autoLoadOnPlay: !0,
maxLoadError: 3
};
e.defaultBannerOption = {
autoLoadOnPlay: !0,
maxLoadError: 1
};
e.defaultInterstitialTimerOption = {
refreshInterval: 40,
delayForFirstAd: 30
};
e.defaultRewardedVideoTimerOption = {
refreshInterval: 0,
delayForFirstAd: 0
};
e.defaultBannerTimerOption = {
refreshInterval: 40,
delayForFirstAd: 0
};
return e;
}();
i.default = B;
cc._RF.pop();
}, {
"../Utils": "Utils"
} ],
FBSdk: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9b54fpkUvRHgIx4K6bSw7eI", "FBSdk");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./FBAdManager");
window.FBAdManager = o.default;
cc._RF.pop();
}, {
"./FBAdManager": "FBAdManager"
} ],
FlyCoin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ed685HUdhhBDJfsYmbDGwcF", "FlyCoin");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./CocosZ"), n = function() {
function e() {}
e.Show = function(e, t, i, n) {
var s = o.cocosz.resMgr.getRes("FlyIcon", cc.Prefab);
if (s) for (var a = 0, r = function(r) {
var l = cc.instantiate(s);
if (l) {
l.children.forEach(function(t) {
t.name == e ? t.opacity = 255 : t.opacity = 0;
});
i && (l.group = i);
l.position = cc.v3(.5 * cc.winSize.width, .5 * cc.winSize.height);
l.scale = 2;
cc.director.getScene().addChild(l, 1e4);
var c = cc.tween(l);
c.by(.2, {
x: 400 * Math.random() - 200,
y: 400 * Math.random() - 200
});
c.delay(.5 * Math.random() + .2);
c.parallel(cc.tween().to(.3, {
position: t
}), cc.tween().to(.3, {
scale: 0
}));
c.call(function() {
14 == ++a && n && n();
o.cocosz.audioMgr.playEffect(e);
l.destroy();
});
c.start();
}
}, l = 0; l < 15; l++) r(); else cc.log("Prefab FlyCoin is not found!");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./CocosZ": "CocosZ"
} ],
GameBoxListGameItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8d1273vqzBO/YV6wO8v72RF", "GameBoxListGameItem");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = e("./CompatibleTool"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.data = null;
t.icon = null;
t.labelName = null;
t.labelShadow = null;
t._dataDirty = !1;
t.lastPostTime = 0;
return t;
}
t.prototype.onLoad = function() {
var e = this.node.getChildByName("Mask");
this.icon = e.getChildByName("Icon").getComponent(cc.Sprite);
this.labelName = this.node.getChildByName("Label").getComponent(cc.Label);
this.labelShadow = this.node.getChildByName("LabelShadow").getComponent(cc.Label);
};
t.prototype.init = function(e) {
this.data = e;
this._dataDirty = !0;
};
t.prototype.update = function(e) {
if (this._dataDirty) {
this._dataDirty = !1;
this.updateItem();
}
};
t.prototype.onEnable = function() {
var e = this;
this.node.on(cc.Node.EventType.TOUCH_END, function(t) {
e._postData(e.data.app_id);
if (e.data.app_id && s.utils.wechatTool.checkAppId(e.data.app_id)) {
s.utils.showLog("直接跳转!", e.data.app_id);
wx.navigateToMiniProgram({
appId: e.data.app_id,
path: e.data.app_path ? e.data.app_path : "",
success: function(e) {},
fail: function(e) {
s.utils.showLog("跳转失败! ; res=" + JSON.stringify(e));
}
});
} else if (e.data.qr_code) if (a.default.IsWechat) {
s.utils.showLog("二维码跳转!", e.data.qr_code);
s.utils.wechatTool.previewImage(e.data.qr_code);
} else s.utils.showLog("不支持二维码跳转!");
}, this);
};
t.prototype.onDisable = function() {
this.node.targetOff(this);
};
t.prototype.updateItem = function() {
var e = this;
if (this.data) {
if (this.data.name) {
var t = this.data.name;
if (this.data.name.length > 4) {
t = t.slice(0, 4);
t += "...";
}
this.labelName.string = t;
this.labelShadow.string = t;
}
this.data.icon && r.default.LoadRes(this.data.icon, function(t, i) {
!t && cc.isValid(e) && e.icon && e.icon.spriteFrame && (e.icon.spriteFrame = new cc.SpriteFrame(i));
});
}
};
t.prototype._postData = function(e) {
var t = "https://apps.youlesp.com/gbs?m=rclickV2&app_id=" + e + "&game_id=" + s.utils.config.wechatconfig.appID;
s.utils.showLog("上报数据, url=", t);
s.utils.commomHttpRequest(t, function(e, t) {
e ? s.utils.showLog("数据上报成功！") : s.utils.showLog("数据上报失败！");
});
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
GameBoxListItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "43cccVEk7VCIph7mge+mLVv", "GameBoxListItem");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.data = null;
t.titleLabel = null;
t._dataDirty = !1;
t._gameList = null;
t._gameItems = [];
return t;
}
t.prototype.onLoad = function() {
this.titleLabel = this.node.getChildByName("titleLabel").getComponent(cc.RichText);
this._gameList = this.node.getChildByName("listLay");
for (var e = 0; e < this._gameList.childrenCount; e++) {
this._gameItems.push(this._gameList.children[e].getComponent("GameBoxListGameItem"));
this._gameList.children[e].active = !1;
}
};
t.prototype.init = function(e) {
this.data = e;
this._dataDirty = !0;
};
t.prototype.update = function(e) {
if (this._dataDirty) {
this._dataDirty = !1;
this.updateItem();
}
};
t.prototype.updateItem = function() {
if (this.data) {
s.utils.showLog("boxList: ", this.data);
this.data.title && (this.titleLabel.string = "<b>" + this.data.title + "</b>");
if (this.data.infos && this.data.infos.length > 0) for (var e = 0; e < this.data.infos.length; e++) if (this._gameItems[e]) {
this._gameItems[e].init(this.data.infos[e]);
this._gameItems[e].node.active = !0;
}
}
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
GameBoxSlideItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1e163lFRMhCM4Xj0GBex74Z", "GameBoxSlideItem");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = e("./CompatibleTool"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.data = null;
t.itemSprite = null;
t._dataDirty = !1;
t.lastPostTime = 0;
return t;
}
t.prototype.onLoad = function() {
this.itemSprite = this.node.getComponent(cc.Sprite);
};
t.prototype.initUi = function() {};
t.prototype.initListener = function() {};
t.prototype.initData = function(e) {
s.utils.showLog("#slideData=", e);
this.data = e;
this._dataDirty = !0;
};
t.prototype.update = function(e) {
if (this._dataDirty) {
this._dataDirty = !1;
this.updateItem();
}
};
t.prototype.onEnable = function() {
var e = this;
this.node.on(cc.Node.EventType.TOUCH_END, function(t) {
e._postData(e.data.app_id);
if (e.data.app_id && s.utils.wechatTool.checkAppId(e.data.app_id)) {
s.utils.showLog("直接跳转!", e.data.app_id);
wx.navigateToMiniProgram({
appId: e.data.app_id,
path: e.data.app_path ? e.data.app_path : "",
success: function(e) {},
fail: function(e) {
s.utils.showLog("跳转失败!  res=" + JSON.stringify(e));
}
});
} else if (e.data.qr_code) if (a.default.IsWechat) {
s.utils.showLog("二维码跳转!", e.data.qr_code);
s.utils.wechatTool.previewImage(e.data.qr_code);
} else s.utils.showLog("不支持二维码跳转!");
}, this);
};
t.prototype.onDisable = function() {
this.node.targetOff(this);
};
t.prototype.updateItem = function() {
var e = this;
this.data && this.data.banner && r.default.LoadRes(this.data.banner, function(t, i) {
s.utils.showLog(t, "err");
if (!t && cc.isValid(e) && e.itemSprite) {
s.utils.showLog(e.node.active, "node <<<");
e.itemSprite.spriteFrame = new cc.SpriteFrame(i);
}
});
};
t.prototype._postData = function(e) {
var t = "https://apps.youlesp.com/gbs?m=rclickV2&app_id=" + e + "&game_id=" + s.utils.config.wechatconfig.appID;
s.utils.showLog("上报数据, url=", t);
s.utils.commomHttpRequest(t, function(e, t) {
e ? s.utils.showLog("数据上报成功！") : s.utils.showLog("数据上报失败！");
});
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
GameBox: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6ece2t091pFCZ+KR1Ury6C3", "GameBox");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = a.property, c = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.slidePageView = null;
t.listContent = null;
t.topSlideNode = null;
t.recommentNode = null;
t.recommentBanner = null;
t._boxInfo = null;
t._dataDirty = !1;
t._slideList = null;
t._appIdList = [];
t.newPage = null;
return t;
}
t.prototype.onLoad = function() {
this.initListener();
};
t.prototype.onEnable = function() {
var e = this;
this.postData();
s.utils.registerServerInitEvent(function() {
e._setNodeVisible();
}, this);
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
};
t.prototype._setNodeVisible = function() {
this.initData();
this._boxInfo ? this.initUi() : this.node.destroy();
};
t.prototype.initUi = function() {
this.slidePageView.removeAllPages();
this.listContent.removeAllChildren();
s.utils.showLog("gamebox initUi");
if (this._boxInfo) {
for (var e = this._boxInfo.banners, t = this._boxInfo.infos, i = 0; i < e.length; i++) {
var o = cc.instantiate(this.topSlideNode), n = o.getComponent("GameBoxSlideItem");
o.active = !0;
n.initData(e[i]);
this.slidePageView.addPage(o);
}
for (i = 0; i < t.length; i++) {
var a = cc.instantiate(this.recommentNode), r = a.getComponent("GameBoxListItem"), l = t[i];
r.init(l);
this.listContent.addChild(a);
if (l.banner) {
var c = cc.instantiate(this.recommentBanner);
n = c.getComponent("GameBoxSlideItem");
c.active = !0;
n.initData(l.banner);
this.listContent.addChild(c);
}
}
this.startAutoChange();
}
};
t.prototype.startAutoChange = function() {
var e = this;
this.schedule(function() {
var t = e.slidePageView.getPages().length, i = e.slidePageView.getCurrentPageIndex();
i = i < t && i + 1 !== t ? i + 1 : 0;
e.slidePageView.scrollToPage(i, 2);
}, 3);
};
t.prototype.initListener = function() {};
t.prototype.initData = function() {
s.utils.showLog("gamebox initData");
this._boxInfo = s.utils._wechatTool.gameBoxServerConfig;
this._boxInfo ? s.utils.showLog("Gamebox 游戏盒子数据:", JSON.stringify(this._boxInfo)) : s.utils.showLog("Gamebox 游戏盒子数据获取失败!", this._boxInfo);
};
t.prototype.postData = function() {
var e = "https://apps.youlesp.com/gbs?m=rclickV2&app_id=100000000001&game_id=" + s.utils.config.wechatconfig.appID;
s.utils.showLog("上报数据, url=", e);
s.utils.commomHttpRequest(e, function(e, t) {
e ? s.utils.showLog("数据上报成功！") : s.utils.showLog("数据上报失败！");
});
};
t.prototype.update = function(e) {
if (this._dataDirty) {
this._dataDirty = !1;
this.node.active = !0;
}
};
n([ l({
type: cc.PageView,
tooltip: "顶部滚动视图"
}) ], t.prototype, "slidePageView", void 0);
n([ l({
type: cc.Node,
tooltip: "推荐列表"
}) ], t.prototype, "listContent", void 0);
n([ l({
type: cc.Node,
tooltip: "顶部的幻灯片节点"
}) ], t.prototype, "topSlideNode", void 0);
n([ l({
type: cc.Node,
tooltip: "推荐列表节点"
}) ], t.prototype, "recommentNode", void 0);
n([ l({
type: cc.Node,
tooltip: "推荐列表Banner节点"
}) ], t.prototype, "recommentBanner", void 0);
return t = n([ r ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
GameCtr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "127578MG9RJ17mctwhLeqSx", "GameCtr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./Constant"), n = e("./CocosZ"), s = e("../Game/gameMgr"), a = function() {
function e() {
this.curUseSkinId = -1;
this.loadProgress = 0;
this._loadMapPro = 0;
this._totalCount = 0;
this._compCount = 0;
this._pathBack = "";
this._prefabBack = null;
}
e.prototype.init = function() {
this.loadProgress = 0;
this._loadMapPro = 0;
this._totalCount = 0;
this._compCount = 0;
this.loadRes();
};
e.prototype.updateLoadRes = function() {
this.loadProgress = (this._loadMapPro + this._compCount / this._totalCount) / 2;
if (this._compCount >= this._totalCount && 0 == this._loadMapPro) {
this._loadMapPro = .01;
this.loadMap();
}
cc.game.emit(o.default.E_GAME_LOGIC, {
type: o.default.E_UPDATE_PROGRESS,
data: this.loadProgress
});
};
e.prototype.loadRes = function() {
var e = this, t = [], i = [], o = [];
n.cocosz.getDirWithPath("audio_game", cc.AudioClip, t);
n.cocosz.resMgr.loadAndCacheResArray(t, cc.AudioClip, null, function() {
e._compCount++;
e.updateLoadRes();
});
if (6 == n.cocosz.gameMode) {
n.cocosz.getDirWithPath("audio_zombie", cc.AudioClip, i);
n.cocosz.resMgr.loadAndCacheResArray(i, cc.AudioClip, null, function() {
e._compCount++;
e.updateLoadRes();
});
n.cocosz.getDirWithPath("prefab_zombie_skill", cc.Prefab, o);
n.cocosz.resMgr.loadAndCacheResArray(o, cc.Prefab, null, function() {
e._compCount++;
e.updateLoadRes();
});
}
this._totalCount = t.length + i.length + o.length;
};
e.prototype.loadMap = function() {
var e = this, t = "maps/mapzombie";
this._pathBack != t && this._prefabBack && this._prefabBack.isValid && cc.assetManager.releaseAsset(this._prefabBack);
n.cocosz.resMgr.loadRes(t, cc.Prefab, function(t, i) {
t / i > e._loadMapPro && (e._loadMapPro = t / i);
e._loadMapPro > .99 && (e._loadMapPro = .99);
e.updateLoadRes();
}, function(i, a) {
if (i) {
console.log(i);
n.cocosz.sceneMgr.loadScene("Home", function() {
n.cocosz.uiMgr.openPage(o.PageName.UIHomePage);
});
} else {
e._pathBack = t;
e._prefabBack = a;
s.gameMgr.map = cc.instantiate(a);
s.gameMgr.initPos();
s.gameMgr.mapSize = s.gameMgr.map.getContentSize();
s.gameMgr.node.addChild(s.gameMgr.map, -5);
e._loadMapPro = 1;
e.updateLoadRes();
}
});
};
return e;
}();
i.default = a;
cc._RF.pop();
}, {
"../Game/gameMgr": "gameMgr",
"./CocosZ": "CocosZ",
"./Constant": "Constant"
} ],
GameItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e2d27IwlQ5B5pmeL0p/D+5H", "GameItem");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = e("./YZ_Constant"), l = e("./CompatibleTool"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.data = null;
t.icon = null;
t.labelName = null;
t.labelShadow = null;
t._dataDirty = !1;
t._redPoint = null;
t._location = null;
t.mask = null;
t._subNameLength = 4;
return t;
}
t.prototype.onLoad = function() {
this.mask = this.node.getChildByName("Mask");
this.icon = this.mask.getChildByName("Icon").getComponent(cc.Sprite);
this.labelName = this.node.getChildByName("Label").getComponent(cc.Label);
this.labelShadow = this.node.getChildByName("LabelShadow").getComponent(cc.Label);
if (this._location && (this._location == r.SubLocation.isYzBanner || this._location == r.SubLocation.isScrollbar || this._location == r.SubLocation.isMoreGame || this._location == r.SubLocation.isBoxInsertAd || this._location == r.SubLocation.isBeforGameOverAd)) {
this._redPoint = this.mask.getChildByName("redpoint");
this.data && this.data.red && "0" != this.data.red ? "1" == this.data.red && (this._redPoint.getComponent("YZ_ActionScale").isRunAction = !1) : this._redPoint && this._redPoint.destroy();
}
};
t.prototype.init = function(e, t) {
this.data = e;
this._dataDirty = !0;
this._location = t;
[ r.SubLocation.isBoxInsertAd, r.SubLocation.isBeforGameOverAd, r.SubLocation.isVerticalPanel ].indexOf(this._location) > -1 ? this._subNameLength = 6 : this._location == r.SubLocation.isMoreGame && (this._subNameLength = 8);
};
t.prototype.update = function(e) {
if (this._dataDirty) {
this._dataDirty = !1;
this.updateItem();
}
};
t.prototype.onEnable = function() {
var e = this;
this.data && this.node.on(cc.Node.EventType.TOUCH_END, function(t) {
if (a.default.IsDouyin) s.utils.Tool_Douyin.showMoreGamesModal(); else {
e._postClickData(e.data.appid);
if (e.data.is_jump && "true" == e.data.is_jump && e.data.appid) {
s.utils.showLog("直接跳转!", e.data.appid);
s.utils.navigateToMiniGame(e.data, function(t) {
t && e.data && e.data.appid && e._postData(e.data.appid);
});
} else if (e.data.is_jump && "false" == e.data.is_jump && e.data.qr_code) if (a.default.IsWechat) {
s.utils.showLog("二维码跳转!", e.data.qr_code);
s.utils.wechatTool.previewImage(e.data.qr_code);
e.data && e.data.appid && e._postData(e.data.appid);
} else s.utils.showLog("不支持二维码跳转!"); else {
s.utils.showLog("没有is_jump直接跳转!", e.data.appid);
e.data.appid && s.utils.navigateToMiniGame(e.data, function(t) {
t && e.data.appid && e._postData(e.data.appid);
});
}
}
}, this);
};
t.prototype.onDisable = function() {
this.node.targetOff(this);
};
t.prototype.updateItem = function() {
var e = this;
if (this.data) {
if (this.data.name) {
var t = this.data.name;
if (this.data.name.length > this._subNameLength) {
t = t.slice(0, this._subNameLength);
t += "...";
}
this.labelName.string = t;
this.labelShadow.string = t;
}
this.data.icon && l.default.LoadRes(this.data.icon, function(t, i) {
!t && cc.isValid(e) && e.icon && e.icon.spriteFrame && (e.icon.spriteFrame = new cc.SpriteFrame(i));
});
} else this.mask.active = !1;
};
t.prototype._postData = function(e) {
s.utils.postDataByLocation(e, this._location, 1);
};
t.prototype._postClickData = function(e) {
s.utils.postDataByLocation(e, this._location, 0);
};
return t = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
GameMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2a6femhqDpCk53HbKVrUmes", "GameMgr");
var o = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, n = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./GameCtr"), a = e("./CocosZ"), r = e("./Constant"), l = e("./Msg"), c = e("../../common-plugin/Scripts/Utils"), u = e("../../common-plugin/Scripts/YZ_Constant"), h = e("../../common-plugin/Scripts/YZ_LocalStorage"), d = e("LanguageData"), f = function() {
function e() {
this._state = r.GameState.None;
this._gameCtr = new s.default();
this.gameStartTime = 0;
this.canTry = !0;
this.canGame = !0;
}
Object.defineProperty(e, "inst", {
get: function() {
e._inst || (e._inst = new e());
return e._inst;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "State", {
get: function() {
return this._state;
},
set: function(e) {
this._state = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "gameCtr", {
get: function() {
return this._gameCtr;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameStart = function(e) {
return o(this, void 0, void 0, function() {
var t;
return n(this, function(i) {
h.default.setItem(u.default.ST_RED_BAG_PROGRESS, "0");
a.cocosz.curLevel = e;
if (this.canTry) {
this.canTry = !1;
this.gameCtr.curUseSkinId = -1;
if (a.cocosz.isShowAd && a.cocosz.isADON && (a.cocosz.isDeBug || c.utils.isShowTrySkin(e))) {
t = a.cocosz.dataMgr.getGunInfo(a.cocosz.dataMgr.CurRange).Level;
Math.random() < .5 && t < 3 && a.cocosz.uiMgr.openPanel(r.PanelName.UIWeaponLevelPanel);
} else if (this.canGame) {
this.canGame = !1;
this._loadGameScene();
}
} else if (this.canGame) {
this.canGame = !1;
this._loadGameScene();
}
return [ 2 ];
});
});
};
e.prototype._loadGameScene = function() {
var e = this;
this.gameCtr.curUseSkinId < 0 && (this.gameCtr.curUseSkinId = a.cocosz.dataMgr.CurSkinId);
c.utils.StartGame(a.cocosz.getLevelId().toString());
a.cocosz.sceneMgr.loadScene("Game", function() {
e.gameStartTime = new Date().getTime();
e.canTry = !0;
e.canGame = !0;
e._gamePrepare();
a.cocosz.uiMgr.openPage(r.PageName.UIGameLoadingPage);
});
};
e.prototype._gamePrepare = function() {
try {
this.State = r.GameState.Prepare;
this.gameCtr.init();
} catch (e) {
cc.error("erro >>", e);
a.cocosz.sceneMgr.loadScene("Home", function() {
a.cocosz.uiMgr.openPage(r.PageName.UIHomePage);
l.default.Show(d.t("msg.net_error"));
});
}
};
e.prototype.gameSuccess = function() {
cc.log("游戏胜利!");
this.State = r.GameState.Success;
a.cocosz.audioMgr.playEffectWinner();
var e = Math.round((new Date().getTime() - this.gameStartTime) / 1e3 / 60);
c.utils.SendEvent("游戏时间:" + e + "分钟");
};
e.prototype.gameFailed = function() {
cc.log("游戏失败!");
this.State = r.GameState.Failed;
a.cocosz.audioMgr.playEffectFailed();
var e = Math.round((new Date().getTime() - this.gameStartTime) / 1e3 / 60);
c.utils.SendEvent("游戏时间:" + e + "分钟");
var t = "http://192.168.1.10/dev-api/qwk/charts/updateTheCharts/1/1/";
t += (100 * e).toString();
c.utils.showLog("上报数据, url=", t);
c.utils.commomHttpRequest(t, function(e, t) {
e ? c.utils.showLog("数据上报成功！") : c.utils.showLog("数据上报失败！");
});
c.utils.adManager.showBeforGameOverAd(a.cocosz.getLevelId(), u.LevelStatus.GameFail, 50, function() {
cc.log("激励组件关闭！！！！！！");
a.cocosz.uiMgr.openPage(r.PageName.UIOverPage);
}, function(e) {
cc.log("获取激励组件奖励+" + e.rewardValue);
if (e) {
a.cocosz.dataMgr.CoinCount += e.rewardValue;
cc.game.emit(r.default.E_GAME_LOGIC, {
type: r.default.E_COIN_CHANGE
});
}
});
};
return e;
}();
i.default = f;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../../common-plugin/Scripts/YZ_Constant": "YZ_Constant",
"../../common-plugin/Scripts/YZ_LocalStorage": "YZ_LocalStorage",
"./CocosZ": "CocosZ",
"./Constant": "Constant",
"./GameCtr": "GameCtr",
"./Msg": "Msg",
LanguageData: "LanguageData"
} ],
GamePage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "63a41cIPQJDv6DXfWU7Rp52", "GamePage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./YZ_Constant"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._gameList = null;
t._gameItemNodes = [];
t._isContentFilled = !1;
t._dataDirty = !1;
return t;
}
t.prototype.init = function(e) {
this._gameList = e;
this._dataDirty = !0;
};
t.prototype.onLoad = function() {
this._gameItemNodes = this.node.children;
for (var e = 0; e < this._gameItemNodes.length; e++) this._gameItemNodes[e].active = !1;
};
t.prototype.update = function(e) {
if (this._dataDirty) {
this._dataDirty = !1;
this._updateContent();
}
};
t.prototype._updateContent = function() {
if (this._gameList && this._gameList.length > 0 && this._gameList.length <= 5) {
this._isContentFilled = !0;
for (var e = null, t = 0; t < this._gameList.length; t++) {
e = this._gameList[t];
var i = this._gameItemNodes[t];
i.getComponent("GameItem").init(e, s.SubLocation.isScrollbar);
i.active = !0;
}
}
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./YZ_Constant": "YZ_Constant"
} ],
GameSDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2d7b2Hq1SdGo4Ah6K+9Y1sO", "GameSDK");
window.GameSDK = {
callBacks: {},
callNative: function(e, t) {
t = null == t ? "" : JSON.stringify(t);
loadRuntime().callCustomCommand({
success: function(e) {
console.log("success:", e);
},
fail: function(e) {
console.log("fail:", e);
}
}, e, t);
},
nativeCallback: function(e, t) {
var i = this.callBacks[e];
i && i(JSON.parse(t));
},
registerCallback: function(e, t) {
this.callBacks[e] = t;
},
setOnInitCB: function(e) {
this.registerCallback("onInit", e);
},
setOnRoomInfoCB: function(e) {
this.registerCallback("onRoomInfo", e);
},
setOnReadyCB: function(e) {
this.registerCallback("onReady", e);
},
setOnStartCB: function(e) {
this.registerCallback("onStart", e);
},
setOnMessageCB: function(e) {
this.registerCallback("onMessage", e);
},
setOnFinishCB: function(e) {
this.registerCallback("onFinish", e);
},
setOnAudioCB: function(e) {
this.registerCallback("onAudio", e);
},
setOnResumeCB: function(e) {
this.registerCallback("onResume", e);
},
setOnPauseCB: function(e) {
this.registerCallback("onPause", e);
},
setOnPayCB: function(e) {
this.registerCallback("onPay", e);
},
init: function(e) {
var t = {
gameId: e
};
this.callNative("init", t);
},
quit: function(e) {
var t = {
reason: e
};
this.callNative("quit", t);
},
getRoomInfo: function() {
this.callNative("getRoomInfo");
},
finish: function(e) {
var t = {
result: e
};
this.callNative("finish", t);
},
setOrientation: function(e) {
var t = {
orientation: e
};
this.callNative("setOrientation", t);
},
setAudio: function(e, t) {
var i = {
enable: e,
volume: t
};
this.callNative("setAudio", i);
},
setMic: function(e, t) {
var i = {
enable: e,
volume: t
};
this.callNative("setMic", i);
},
setLoadProgress: function(e) {
var t = {
progress: e
};
this.callNative("setLoadProgress", t);
},
hideLoadProgress: function() {
this.callNative("hideLoadProgress", {});
},
ready: function(e) {
var t = {
userData: e
};
this.callNative("ready", t);
},
broadcast: function(e, t) {
null == t && (t = 0);
var i = {
message: e,
includeMe: t
};
this.callNative("broadcast", i);
},
gameOver: function(e) {
var t = {
result: e
};
this.callNative("gameOver", t);
},
pay: function(e, t, i, o, n, s) {
var a = {
orderId: e,
goodsName: t,
goodsDesc: i,
orderAmount: o,
extension: n,
notifyURL: s
};
this.callNative("pay", a);
}
};
cc._RF.pop();
}, {} ],
GuideLayer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "acaa0jcS+FD1plO6fY1CE9z", "GuideLayer");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.guideLayer = void 0;
var s = cc._decorator, a = s.ccclass, r = s.property;
i.guideLayer = null;
var l = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bgLoadNode = null;
t.points = null;
t.fjLoadNode = null;
t.fjAni = null;
t.curIndex = 0;
return t;
}
t.prototype.onLoad = function() {
i.guideLayer = this;
cc.game.addPersistRootNode(this.node);
this.node.setPosition(cc.winSize.width / 2, cc.winSize.height / 2);
this.node.setContentSize(cc.winSize);
};
t.prototype.start = function() {
this.showPoint();
this.schedule(this.showPoint, .5);
};
t.prototype.showPoint = function() {
for (var e = 0; e < this.points.childrenCount; e++) e <= this.curIndex ? this.points.children[e].opacity = 255 : this.points.children[e].opacity = 0;
++this.curIndex > this.points.childrenCount && (this.curIndex = 0);
};
t.prototype.showBgAni = function() {
this.bgLoadNode.active = !0;
this.curIndex = 0;
};
t.prototype.hideBgAni = function() {
this.bgLoadNode.active = !1;
};
t.prototype.showFjAni = function() {
this.fjLoadNode.active = !0;
this.fjAni.setAnimation(0, "jiazai", !1);
this.fjAni.addAnimation(0, "jiazai2", !0);
};
t.prototype.hideFjAni = function() {
this.fjLoadNode.active = !1;
};
n([ r(cc.Node) ], t.prototype, "bgLoadNode", void 0);
n([ r(cc.Node) ], t.prototype, "points", void 0);
n([ r(cc.Node) ], t.prototype, "fjLoadNode", void 0);
n([ r(sp.Skeleton) ], t.prototype, "fjAni", void 0);
return t = n([ a ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {} ],
HandAction: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "790e4sDjF5IWJNaXfl/M8R4", "HandAction");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, r = s.property, l = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.runTime = .3;
return t;
}
t.prototype.onLoad = function() {
cc.winSize.height < cc.winSize.width ? this.node.scale = cc.view.getDesignResolutionSize().width / 1920 * .5 : this.node.scale = cc.view.getDesignResolutionSize().width / 1080 * .5;
};
t.prototype.onEnable = function() {
this.node.runAction(cc.sequence(cc.moveBy(this.runTime, cc.v2(-50, 50)), cc.moveBy(this.runTime, cc.v2(50, -50))).repeatForever());
};
t.prototype.onDisable = function() {
this.node.stopAllActions();
};
n([ r({
type: cc.Float
}) ], t.prototype, "runTime", void 0);
return t = n([ a ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {} ],
LanguageData: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "61de062n4dJ7ZM9/Xdumozn", "LanguageData");
var o = e("polyglot.min"), n = null;
window.i18n || (window.i18n = {
languages: {},
curLang: ""
});
0;
function s(e) {
return window.i18n.languages[e];
}
function a(e) {
e && (n ? n.replace(e) : n = new o({
phrases: e,
allowMissing: !0
}));
}
t.exports = {
init: function(e) {
if (e !== window.i18n.curLang) {
var t = s(e) || {};
window.i18n.curLang = e;
a(t);
this.inst = n;
}
},
t: function(e, t) {
if (n) return n.t(e, t);
},
inst: n,
updateSceneRenderers: function() {
for (var e = cc.director.getScene().children, t = [], i = 0; i < e.length; ++i) {
var o = e[i].getComponentsInChildren("LocalizedLabel");
Array.prototype.push.apply(t, o);
}
for (var n = 0; n < t.length; ++n) {
var s = t[n];
s.node.active && s.updateLabel();
}
for (var a = [], r = 0; r < e.length; ++r) {
var l = e[r].getComponentsInChildren("LocalizedSprite");
Array.prototype.push.apply(a, l);
}
for (var c = 0; c < a.length; ++c) {
var u = a[c];
u.node.active && u.updateSprite(window.i18n.curLang);
}
}
};
cc._RF.pop();
}, {
"polyglot.min": "polyglot.min"
} ],
ListItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "09c0c9GGz9I/KV6p6vh4QOI", "ListItem");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s, a = cc._decorator, r = a.ccclass, l = a.property, c = a.disallowMultiple, u = a.menu, h = a.executionOrder;
(function(e) {
e[e.NONE = 0] = "NONE";
e[e.TOGGLE = 1] = "TOGGLE";
e[e.SWITCH = 2] = "SWITCH";
})(s || (s = {}));
var d = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.icon = null;
t.title = null;
t.selectedMode = s.NONE;
t.selectedFlag = null;
t.selectedSpriteFrame = null;
t._unselectedSpriteFrame = null;
t.adaptiveSize = !1;
t._selected = !1;
t._eventReg = !1;
return t;
}
Object.defineProperty(t.prototype, "selected", {
get: function() {
return this._selected;
},
set: function(e) {
this._selected = e;
if (this.selectedFlag) switch (this.selectedMode) {
case s.TOGGLE:
this.selectedFlag.active = e;
break;

case s.SWITCH:
var t = this.selectedFlag.getComponent(cc.Sprite);
t && (t.spriteFrame = e ? this.selectedSpriteFrame : this._unselectedSpriteFrame);
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "btnCom", {
get: function() {
this._btnCom || (this._btnCom = this.node.getComponent(cc.Button));
return this._btnCom;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
if (this.selectedMode == s.SWITCH) {
var e = this.selectedFlag.getComponent(cc.Sprite);
this._unselectedSpriteFrame = e.spriteFrame;
}
};
t.prototype.onDestroy = function() {
this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);
};
t.prototype._registerEvent = function() {
if (!this._eventReg) {
this.btnCom && this.list.selectedMode > 0 && this.btnCom.clickEvents.unshift(this.createEvt(this, "onClickThis"));
this.adaptiveSize && this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);
this._eventReg = !0;
}
};
t.prototype._onSizeChange = function() {
this.list._onItemAdaptive(this.node);
};
t.prototype.createEvt = function(e, t, i) {
void 0 === i && (i = null);
if (e.isValid) {
e.comName = e.comName || e.name.match(/\<(.*?)\>/g).pop().replace(/\<|>/g, "");
var o = new cc.Component.EventHandler();
o.target = i || e.node;
o.component = e.comName;
o.handler = t;
return o;
}
};
t.prototype.showAni = function(e, t, i) {
var o, n = this;
switch (e) {
case 0:
o = [ cc.scaleTo(.2, .7), cc.moveBy(.3, 0, 2 * this.node.height) ];
break;

case 1:
o = [ cc.scaleTo(.2, .7), cc.moveBy(.3, 2 * this.node.width, 0) ];
break;

case 2:
o = [ cc.scaleTo(.2, .7), cc.moveBy(.3, 0, -2 * this.node.height) ];
break;

case 3:
o = [ cc.scaleTo(.2, .7), cc.moveBy(.3, -2 * this.node.width, 0) ];
break;

default:
o = [ cc.scaleTo(.3, .1) ];
}
(t || i) && o.push(cc.callFunc(function() {
if (i) {
n.list._delSingleItem(n.node);
for (var e = n.list.displayData.length - 1; e >= 0; e--) if (n.list.displayData[e].id == n.listId) {
n.list.displayData.splice(e, 1);
break;
}
}
t();
}));
this.node.runAction(cc.sequence(o));
};
t.prototype.onClickThis = function() {
this.list.selectedId = this.listId;
};
n([ l({
type: cc.Sprite,
tooltip: !1
}) ], t.prototype, "icon", void 0);
n([ l({
type: cc.Node,
tooltip: !1
}) ], t.prototype, "title", void 0);
n([ l({
type: cc.Enum(s),
tooltip: !1
}) ], t.prototype, "selectedMode", void 0);
n([ l({
type: cc.Node,
tooltip: !1,
visible: function() {
return this.selectedMode > s.NONE;
}
}) ], t.prototype, "selectedFlag", void 0);
n([ l({
type: cc.SpriteFrame,
tooltip: !1,
visible: function() {
return this.selectedMode == s.SWITCH;
}
}) ], t.prototype, "selectedSpriteFrame", void 0);
n([ l({
tooltip: !1
}) ], t.prototype, "adaptiveSize", void 0);
return t = n([ r, c(), u("自定义组件/List Item"), h(-5001) ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {} ],
List: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "987bdrXWC5Lz6Y5yNsCVEwF", "List");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s, a, r, l = cc._decorator, c = l.ccclass, u = l.property, h = l.disallowMultiple, d = l.menu, f = l.executionOrder, _ = l.requireComponent, p = e("./ListItem"), g = e("./CompatibleTool");
(function(e) {
e[e.NODE = 1] = "NODE";
e[e.PREFAB = 2] = "PREFAB";
})(s || (s = {}));
(function(e) {
e[e.NORMAL = 1] = "NORMAL";
e[e.ADHERING = 2] = "ADHERING";
e[e.PAGE = 3] = "PAGE";
})(a || (a = {}));
(function(e) {
e[e.NONE = 0] = "NONE";
e[e.SINGLE = 1] = "SINGLE";
e[e.MULT = 2] = "MULT";
})(r || (r = {}));
var m = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.templateType = s.NODE;
t.tmpNode = null;
t.tmpPrefab = null;
t._slideMode = a.NORMAL;
t.pageDistance = .3;
t.pageChangeEvent = new cc.Component.EventHandler();
t._virtual = !0;
t.cyclic = !1;
t.lackCenter = !1;
t.lackSlide = !1;
t._updateRate = 0;
t.frameByFrameRenderNum = 0;
t.renderEvent = new cc.Component.EventHandler();
t.selectedMode = r.NONE;
t.repeatEventSingle = !1;
t.selectedEvent = null;
t._selectedId = -1;
t._forceUpdate = !1;
t._updateDone = !0;
t._numItems = 0;
t._inited = !1;
t._needUpdateWidget = !1;
t._aniDelRuning = !1;
t._doneAfterUpdate = !1;
t.adhering = !1;
t._adheringBarrier = !1;
t.curPageNum = 0;
return t;
}
Object.defineProperty(t.prototype, "slideMode", {
get: function() {
return this._slideMode;
},
set: function(e) {
this._slideMode = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "virtual", {
get: function() {
return this._virtual;
},
set: function(e) {
null != e && (this._virtual = e);
0 != this._numItems && this._onScrolling();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "updateRate", {
get: function() {
return this._updateRate;
},
set: function(e) {
e >= 0 && e <= 6 && (this._updateRate = e);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "selectedId", {
get: function() {
return this._selectedId;
},
set: function(e) {
var t, i = this;
switch (i.selectedMode) {
case r.SINGLE:
if (!i.repeatEventSingle && e == i._selectedId) return;
t = i.getItemByListId(e);
var o = void 0;
i._selectedId >= 0 ? i._lastSelectedId = i._selectedId : i._lastSelectedId = null;
i._selectedId = e;
t && ((o = t.getComponent(p.default)).selected = !0);
if (i._lastSelectedId >= 0 && i._lastSelectedId != i._selectedId) {
var n = i.getItemByListId(i._lastSelectedId);
n && (n.getComponent(p.default).selected = !1);
}
i.selectedEvent && cc.Component.EventHandler.emitEvents([ i.selectedEvent ], t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems);
break;

case r.MULT:
if (!(t = i.getItemByListId(e))) return;
o = t.getComponent(p.default);
i._selectedId >= 0 && (i._lastSelectedId = i._selectedId);
i._selectedId = e;
var s = !o.selected;
o.selected = s;
var a = i.multSelected.indexOf(e);
s && a < 0 ? i.multSelected.push(e) : !s && a >= 0 && i.multSelected.splice(a, 1);
i.selectedEvent && cc.Component.EventHandler.emitEvents([ i.selectedEvent ], t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems, s);
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "numItems", {
get: function() {
return this._actualNumItems;
},
set: function(e) {
var t = this;
if (t.checkInited(!1)) if (null == e || e < 0) cc.error("numItems set the wrong::", e); else {
t._actualNumItems = t._numItems = e;
t._forceUpdate = !0;
if (t._virtual) {
t._resizeContent();
t.cyclic && (t._numItems = t._cyclicNum * t._numItems);
t._onScrolling();
t.frameByFrameRenderNum || t.slideMode != a.PAGE || (t.curPageNum = t.nearestListId);
} else {
t._resizeContent();
t.cyclic && (t._numItems = t._cyclicNum * t._numItems);
var i = t.content.getComponent(cc.Layout);
i && (i.enabled = !0);
t._delRedundantItem();
t.firstListId = 0;
if (t.frameByFrameRenderNum > 0) {
for (var o = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum, n = 0; n < o; n++) t._createOrUpdateItem2(n);
if (t.frameByFrameRenderNum < t._numItems) {
t._updateCounter = t.frameByFrameRenderNum;
t._updateDone = !1;
}
} else {
for (n = 0; n < t._numItems; n++) t._createOrUpdateItem2(n);
t.displayItemNum = t._numItems;
}
}
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "scrollView", {
get: function() {
return this._scrollView;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this._init();
};
t.prototype.onDestroy = function() {
var e = this;
e._itemTmp && e._itemTmp.isValid && e._itemTmp.destroy();
e.tmpNode && e.tmpNode.isValid && e.tmpNode.destroy();
for (;e._pool.size(); ) {
e._pool.get().destroy();
}
};
t.prototype.onEnable = function() {
console.log(" >>>list enable");
this._registerEvent();
this._init();
};
t.prototype.onDisable = function() {
console.log(" >>>list onDisable");
this._unregisterEvent();
};
t.prototype._registerEvent = function() {
var e = this;
e.node.on(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.on("touch-up", e._onTouchUp, e);
e.node.on(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.on("scroll-began", e._onScrollBegan, e, !0);
e.node.on("scroll-ended", e._onScrollEnded, e, !0);
e.node.on("scrolling", e._onScrolling, e, !0);
e.node.on(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
};
t.prototype._unregisterEvent = function() {
var e = this;
e.node.off(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.off("touch-up", e._onTouchUp, e);
e.node.off(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.off("scroll-began", e._onScrollBegan, e, !0);
e.node.off("scroll-ended", e._onScrollEnded, e, !0);
e.node.off("scrolling", e._onScrolling, e, !0);
e.node.off(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
};
t.prototype._init = function() {
var e = this;
if (!e._inited) {
e._scrollView = e.node.getComponent(cc.ScrollView);
e.content = e._scrollView.content;
if (e.content) {
e._layout = e.content.getComponent(cc.Layout);
e._align = e._layout.type;
e._resizeMode = e._layout.resizeMode;
e._startAxis = e._layout.startAxis;
e._topGap = e._layout.paddingTop;
e._rightGap = e._layout.paddingRight;
e._bottomGap = e._layout.paddingBottom;
e._leftGap = e._layout.paddingLeft;
e._columnGap = e._layout.spacingX;
e._lineGap = e._layout.spacingY;
e._colLineNum;
e._verticalDir = e._layout.verticalDirection;
e._horizontalDir = e._layout.horizontalDirection;
e.setTemplateItem(cc.instantiate(e.templateType == s.PREFAB ? e.tmpPrefab : e.tmpNode));
if (e._slideMode == a.ADHERING || e._slideMode == a.PAGE) {
e._scrollView.inertia = !1;
e._scrollView._onMouseWheel = function() {};
}
e.virtual || (e.lackCenter = !1);
e._lastDisplayData = [];
e.displayData = [];
e._pool = new cc.NodePool();
e._forceUpdate = !1;
e._updateCounter = 0;
e._updateDone = !0;
e.curPageNum = 0;
if (e.cyclic) {
e._scrollView._processAutoScrolling = this._processAutoScrolling.bind(e);
e._scrollView._startBounceBackIfNeeded = function() {
return !1;
};
}
switch (e._align) {
case cc.Layout.Type.HORIZONTAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
break;

case cc.Layout.Type.VERTICAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.Type.GRID:
switch (e._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.AxisDirection.VERTICAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
}
}
e.content.removeAllChildren();
e._inited = !0;
} else cc.error(e.node.name + "'s cc.ScrollView unset content!");
}
};
t.prototype._processAutoScrolling = function(e) {
this._scrollView._autoScrollAccumulatedTime += 1 * e;
var t = Math.min(1, this._scrollView._autoScrollAccumulatedTime / this._scrollView._autoScrollTotalTime);
if (this._scrollView._autoScrollAttenuate) {
var i = t - 1;
t = i * i * i * i * i + 1;
}
var o = this._scrollView._autoScrollStartPosition.add(this._scrollView._autoScrollTargetDelta.mul(t)), n = this._scrollView.getScrollEndedEventTiming(), s = Math.abs(t - 1) <= n;
if (Math.abs(t - 1) <= this._scrollView.getScrollEndedEventTiming() && !this._scrollView._isScrollEndedWithThresholdEventFired) {
this._scrollView._dispatchEvent("scroll-ended-with-threshold");
this._scrollView._isScrollEndedWithThresholdEventFired = !0;
}
s && (this._scrollView._autoScrolling = !1);
var a = o.sub(this._scrollView.getContentPosition());
this._scrollView._moveContent(this._scrollView._clampDelta(a), s);
this._scrollView._dispatchEvent("scrolling");
if (!this._scrollView._autoScrolling) {
this._scrollView._isBouncing = !1;
this._scrollView._scrolling = !1;
this._scrollView._dispatchEvent("scroll-ended");
}
};
t.prototype.setTemplateItem = function(e) {
if (e) {
var t = this;
t._itemTmp = e;
t._resizeMode == cc.Layout.ResizeMode.CHILDREN ? t._itemSize = t._layout.cellSize : t._itemSize = cc.size(e.width, e.height);
var i = e.getComponent(p.default), o = !1;
i || (o = !0);
o && (t.selectedMode = r.NONE);
(i = e.getComponent(cc.Widget)) && i.enabled && (t._needUpdateWidget = !0);
t.selectedMode == r.MULT && (t.multSelected = []);
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
t._colLineNum = 1;
t._sizeType = !1;
break;

case cc.Layout.Type.VERTICAL:
t._colLineNum = 1;
t._sizeType = !0;
break;

case cc.Layout.Type.GRID:
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var n = t.content.width - t._leftGap - t._rightGap;
t._colLineNum = Math.floor((n + t._columnGap) / (t._itemSize.width + t._columnGap));
t._sizeType = !0;
break;

case cc.Layout.AxisDirection.VERTICAL:
var s = t.content.height - t._topGap - t._bottomGap;
t._colLineNum = Math.floor((s + t._lineGap) / (t._itemSize.height + t._lineGap));
t._sizeType = !1;
}
}
}
};
t.prototype.checkInited = function(e) {
void 0 === e && (e = !0);
if (!this._inited) {
e && cc.error("List initialization not completed!");
return !1;
}
return !0;
};
t.prototype._resizeContent = function() {
var e, t = this;
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
if (t._customSize) {
var i = t._getFixedSize(null);
e = t._leftGap + i.val + t._itemSize.width * (t._numItems - i.count) + t._columnGap * (t._numItems - 1) + t._rightGap;
} else e = t._leftGap + t._itemSize.width * t._numItems + t._columnGap * (t._numItems - 1) + t._rightGap;
break;

case cc.Layout.Type.VERTICAL:
if (t._customSize) {
i = t._getFixedSize(null);
e = t._topGap + i.val + t._itemSize.height * (t._numItems - i.count) + t._lineGap * (t._numItems - 1) + t._bottomGap;
} else e = t._topGap + t._itemSize.height * t._numItems + t._lineGap * (t._numItems - 1) + t._bottomGap;
break;

case cc.Layout.Type.GRID:
t.lackCenter && (t.lackCenter = !1);
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var o = Math.ceil(t._numItems / t._colLineNum);
e = t._topGap + t._itemSize.height * o + t._lineGap * (o - 1) + t._bottomGap;
break;

case cc.Layout.AxisDirection.VERTICAL:
var n = Math.ceil(t._numItems / t._colLineNum);
e = t._leftGap + t._itemSize.width * n + t._columnGap * (n - 1) + t._rightGap;
}
}
var s = t.content.getComponent(cc.Layout);
s && (s.enabled = !1);
t._allItemSize = e;
t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? t._topGap + t._bottomGap : t._leftGap + t._rightGap);
if (t.cyclic) {
var a = t._sizeType ? t.node.height : t.node.width;
t._cyclicPos1 = 0;
a -= t._cyclicPos1;
t._cyclicNum = Math.ceil(a / t._allItemSizeNoEdge) + 1;
var r = t._sizeType ? t._lineGap : t._columnGap;
t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + r;
t._cyclicAllItemSize = t._allItemSize + t._allItemSizeNoEdge * (t._cyclicNum - 1) + r * (t._cyclicNum - 1);
t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;
t._cycilcAllItemSizeNoEdge += r * (t._cyclicNum - 1);
}
t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t.node.height : t.node.width);
var l = t._lack && t.lackCenter || !t.lackSlide ? .1 : 0, c = t._lack ? (t._sizeType ? t.node.height : t.node.width) - l : t.cyclic ? t._cyclicAllItemSize : t._allItemSize;
c < 0 && (c = 0);
t._sizeType ? t.content.height = c : t.content.width = c;
};
t.prototype._onScrolling = function(e) {
void 0 === e && (e = null);
null == this.frameCount && (this.frameCount = this._updateRate);
if (!this._forceUpdate && e && "scroll-ended" != e.type && this.frameCount > 0) this.frameCount--; else {
this.frameCount = this._updateRate;
if (!this._aniDelRuning) {
if (this.cyclic) {
var t = this.content.getPosition();
t = this._sizeType ? t.y : t.x;
var i = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap), o = this._sizeType ? g.default.position(0, i) : g.default.position(i, 0);
switch (this._alignCalcType) {
case 1:
if (t > -this._cyclicPos1) {
this.content.x = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(o));
} else if (t < -this._cyclicPos2) {
this.content.x = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(o));
}
break;

case 2:
if (t < this._cyclicPos1) {
this.content.x = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(o));
} else if (t > this._cyclicPos2) {
this.content.x = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(o));
}
break;

case 3:
if (t < this._cyclicPos1 + 700) {
this.content.y = this._cyclicPos2 + 700;
cc.log("xxxxxxx");
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(o));
} else if (t > this._cyclicPos2 + 700) {
cc.log("ddddddddddd");
this.content.y = this._cyclicPos1 + 700;
}
break;

case 4:
if (t > -this._cyclicPos1) {
this.content.y = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(o));
} else if (t < -this._cyclicPos2) {
this.content.y = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(o));
}
}
}
this._calcViewPos();
var n, s, a, r;
if (this._sizeType) {
n = this.viewTop;
a = this.viewBottom;
} else {
s = this.viewRight;
r = this.viewLeft;
}
if (this._virtual) {
this.displayData = [];
var l = void 0, c = 0, u = this._numItems - 1;
if (this._customSize) for (var h = !1; c <= u && !h; c++) {
l = this._calcItemPos(c);
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
l.right >= r && l.left <= s ? this.displayData.push(l) : 0 != c && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.VERTICAL:
l.bottom <= n && l.top >= a ? this.displayData.push(l) : 0 != c && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.GRID:
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
l.bottom <= n && l.top >= a ? this.displayData.push(l) : 0 != c && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.AxisDirection.VERTICAL:
l.right >= r && l.left <= s ? this.displayData.push(l) : 0 != c && this.displayData.length > 0 && (h = !0);
}
}
} else {
var d = this._itemSize.width + this._columnGap, f = this._itemSize.height + this._lineGap;
switch (this._alignCalcType) {
case 1:
c = (r + this._leftGap) / d;
u = (s + this._rightGap) / d;
break;

case 2:
c = (-s - this._rightGap) / d;
u = (-r - this._leftGap) / d;
break;

case 3:
c = (-n - this._topGap) / f;
u = (-a - this._bottomGap) / f;
break;

case 4:
c = (a + this._bottomGap) / f;
u = (n + this._topGap) / f;
}
c = Math.floor(c) * this._colLineNum;
u = Math.ceil(u) * this._colLineNum;
u--;
c < 0 && (c = 0);
u >= this._numItems && (u = this._numItems - 1);
for (;c <= u; c++) this.displayData.push(this._calcItemPos(c));
}
this._delRedundantItem();
if (this.displayData.length <= 0 || !this._numItems) {
this._lastDisplayData = [];
return;
}
this.firstListId = this.displayData[0].id;
this.displayItemNum = this.displayData.length;
var _ = this._lastDisplayData.length, p = this.displayItemNum != _;
if (p) {
this.frameByFrameRenderNum > 0 && this._lastDisplayData.sort(function(e, t) {
return e - t;
});
p = this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[_ - 1];
}
if (this._forceUpdate || p) if (this.frameByFrameRenderNum > 0) if (this._numItems > 0) {
this._updateDone ? this._updateCounter = 0 : this._doneAfterUpdate = !0;
this._updateDone = !1;
} else {
this._updateCounter = 0;
this._updateDone = !0;
} else {
this._lastDisplayData = [];
for (var m = 0; m < this.displayItemNum; m++) this._createOrUpdateItem(this.displayData[m]);
this._forceUpdate = !1;
}
this._calcNearestItem();
}
}
}
};
t.prototype._calcViewPos = function() {
var e = this.content.getPosition();
switch (this._alignCalcType) {
case 1:
this.elasticLeft = e.x > 0 ? e.x : 0;
this.viewLeft = (e.x < 0 ? -e.x : 0) - this.elasticLeft;
this.viewRight = this.viewLeft + this.node.width;
this.elasticRight = this.viewRight > this.content.width ? Math.abs(this.viewRight - this.content.width) : 0;
this.viewRight += this.elasticRight;
break;

case 2:
this.elasticRight = e.x < 0 ? -e.x : 0;
this.viewRight = (e.x > 0 ? -e.x : 0) + this.elasticRight;
this.viewLeft = this.viewRight - this.node.width;
this.elasticLeft = this.viewLeft < -this.content.width ? Math.abs(this.viewLeft + this.content.width) : 0;
this.viewLeft -= this.elasticLeft;
break;

case 3:
this.elasticTop = e.y < 0 ? Math.abs(e.y) : 0;
this.viewTop = (e.y > 0 ? -e.y : 0) + this.elasticTop;
this.viewBottom = this.viewTop - this.node.height;
this.elasticBottom = this.viewBottom < -this.content.height ? Math.abs(this.viewBottom + this.content.height) : 0;
this.viewBottom += this.elasticBottom;
break;

case 4:
this.elasticBottom = e.y > 0 ? Math.abs(e.y) : 0;
this.viewBottom = (e.y < 0 ? -e.y : 0) - this.elasticBottom;
this.viewTop = this.viewBottom + this.node.height;
this.elasticTop = this.viewTop > this.content.height ? Math.abs(this.viewTop - this.content.height) : 0;
this.viewTop -= this.elasticTop;
}
};
t.prototype._calcItemPos = function(e) {
var t, i, o, n, s, a, r, l;
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
if (this._customSize) {
var c = this._getFixedSize(e);
s = this._leftGap + (this._itemSize.width + this._columnGap) * (e - c.count) + (c.val + this._columnGap * c.count);
t = (u = this._customSize[e]) > 0 ? u : this._itemSize.width;
} else {
s = this._leftGap + (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
a = s + t;
if (this.lackCenter) {
s += h = this.content.width / 2 - this._allItemSizeNoEdge / 2;
a += h;
}
return {
id: e,
left: s,
right: a,
x: s + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
if (this._customSize) {
c = this._getFixedSize(e);
a = -this._rightGap - (this._itemSize.width + this._columnGap) * (e - c.count) - (c.val + this._columnGap * c.count);
t = (u = this._customSize[e]) > 0 ? u : this._itemSize.width;
} else {
a = -this._rightGap - (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
s = a - t;
if (this.lackCenter) {
s -= h = this.content.width / 2 - this._allItemSizeNoEdge / 2;
a -= h;
}
return {
id: e,
right: a,
left: s,
x: s + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};
}
break;

case cc.Layout.Type.VERTICAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
if (this._customSize) {
c = this._getFixedSize(e);
o = -this._topGap - (this._itemSize.height + this._lineGap) * (e - c.count) - (c.val + this._lineGap * c.count);
i = (u = this._customSize[e]) > 0 ? u : this._itemSize.height;
} else {
o = -this._topGap - (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
n = o - i;
if (this.lackCenter) {
o -= h = this.content.height / 2 - this._allItemSizeNoEdge / 2;
n -= h;
}
return {
id: e,
top: o,
bottom: n,
x: this._itemTmp.x,
y: n + this._itemTmp.anchorY * i
};

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
if (this._customSize) {
var u;
c = this._getFixedSize(e);
n = this._bottomGap + (this._itemSize.height + this._lineGap) * (e - c.count) + (c.val + this._lineGap * c.count);
i = (u = this._customSize[e]) > 0 ? u : this._itemSize.height;
} else {
n = this._bottomGap + (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
o = n + i;
if (this.lackCenter) {
var h;
o += h = this.content.height / 2 - this._allItemSizeNoEdge / 2;
n += h;
}
return {
id: e,
top: o,
bottom: n,
x: this._itemTmp.x,
y: n + this._itemTmp.anchorY * i
};
}

case cc.Layout.Type.GRID:
var d = Math.floor(e / this._colLineNum);
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
l = (n = (o = -this._topGap - (this._itemSize.height + this._lineGap) * d) - this._itemSize.height) + this._itemTmp.anchorY * this._itemSize.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
o = (n = this._bottomGap + (this._itemSize.height + this._lineGap) * d) + this._itemSize.height;
l = n + this._itemTmp.anchorY * this._itemSize.height;
}
r = this._leftGap + e % this._colLineNum * (this._itemSize.width + this._columnGap);
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
r += this._itemTmp.anchorX * this._itemSize.width;
r -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
r += (1 - this._itemTmp.anchorX) * this._itemSize.width;
r -= (1 - this.content.anchorX) * this.content.width;
r *= -1;
}
return {
id: e,
top: o,
bottom: n,
x: r,
y: l
};

case cc.Layout.AxisDirection.VERTICAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
a = (s = this._leftGap + (this._itemSize.width + this._columnGap) * d) + this._itemSize.width;
r = s + this._itemTmp.anchorX * this._itemSize.width;
r -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
r = (s = (a = -this._rightGap - (this._itemSize.width + this._columnGap) * d) - this._itemSize.width) + this._itemTmp.anchorX * this._itemSize.width;
r += (1 - this.content.anchorX) * this.content.width;
}
l = -this._topGap - e % this._colLineNum * (this._itemSize.height + this._lineGap);
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
l -= (1 - this._itemTmp.anchorY) * this._itemSize.height;
l += (1 - this.content.anchorY) * this.content.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
l -= this._itemTmp.anchorY * this._itemSize.height;
l += this.content.anchorY * this.content.height;
l *= -1;
}
return {
id: e,
left: s,
right: a,
x: r,
y: l
};
}
}
};
t.prototype._calcExistItemPos = function(e) {
var t = this.getItemByListId(e);
if (!t) return null;
var i = {
id: e,
x: t.x,
y: t.y
};
if (this._sizeType) {
i.top = t.y + t.height * (1 - t.anchorY);
i.bottom = t.y - t.height * t.anchorY;
} else {
i.left = t.x - t.width * t.anchorX;
i.right = t.x + t.width * (1 - t.anchorX);
}
return i;
};
t.prototype.getItemPos = function(e) {
return this._virtual ? this._calcItemPos(e) : this.frameByFrameRenderNum ? this._calcItemPos(e) : this._calcExistItemPos(e);
};
t.prototype._getFixedSize = function(e) {
if (!this._customSize) return null;
null == e && (e = this._numItems);
var t = 0, i = 0;
for (var o in this._customSize) if (parseInt(o) < e) {
t += this._customSize[o];
i++;
}
return {
val: t,
count: i
};
};
t.prototype._onScrollBegan = function() {
this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;
};
t.prototype._onScrollEnded = function() {
var e = this;
if (null != e.scrollToListId) {
var t = e.getItemByListId(e.scrollToListId);
e.scrollToListId = null;
t && t.runAction(cc.sequence(cc.scaleTo(.1, 1.06), cc.scaleTo(.1, 1)));
}
e._onScrolling();
e._slideMode != a.ADHERING || e.adhering ? e._slideMode == a.PAGE && (null != e._beganPos ? this._pageAdhere() : e.adhere()) : e.adhere();
};
t.prototype._onTouchStart = function(e, t) {
if (!this._scrollView._hasNestedViewGroup(e, t)) {
if (!(e.eventPhase === cc.Event.AT_TARGET && e.target === this.node)) {
for (var i = e.target; null == i._listId && i.parent; ) i = i.parent;
this._scrollItem = null != i._listId ? i : e.target;
}
}
};
t.prototype._onTouchUp = function() {
var e = this;
e._scrollPos = null;
if (e._slideMode == a.ADHERING) {
this.adhering && (this._adheringBarrier = !0);
e.adhere();
} else e._slideMode == a.PAGE && (null != e._beganPos ? this._pageAdhere() : e.adhere());
this._scrollItem = null;
};
t.prototype._onTouchCancelled = function(e, t) {
var i = this;
if (!i._scrollView._hasNestedViewGroup(e, t) && !e.simulate) {
i._scrollPos = null;
if (i._slideMode == a.ADHERING) {
i.adhering && (i._adheringBarrier = !0);
i.adhere();
} else i._slideMode == a.PAGE && (null != i._beganPos ? i._pageAdhere() : i.adhere());
this._scrollItem = null;
}
};
t.prototype._onSizeChanged = function() {
this.checkInited(!1) && this._onScrolling();
};
t.prototype._onItemAdaptive = function(e) {
if (!this._sizeType && e.width != this._itemSize.width || this._sizeType && e.height != this._itemSize.height) {
this._customSize || (this._customSize = {});
var t = this._sizeType ? e.height : e.width;
if (this._customSize[e._listId] != t) {
this._customSize[e._listId] = t;
this._resizeContent();
this.updateAll();
if (null != this._scrollToListId) {
this._scrollPos = null;
this.unschedule(this._scrollToSo);
this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - new Date().getTime() / 1e3));
}
}
}
};
t.prototype._pageAdhere = function() {
var e = this;
if (e.cyclic || !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
var t = e._sizeType ? e.viewTop : e.viewLeft, i = (e._sizeType ? e.node.height : e.node.width) * e.pageDistance;
if (Math.abs(e._beganPos - t) > i) {
switch (e._alignCalcType) {
case 1:
case 4:
e._beganPos > t ? e.prePage(.5) : e.nextPage(.5);
break;

case 2:
case 3:
e._beganPos < t ? e.prePage(.5) : e.nextPage(.5);
}
} else e.elasticTop <= 0 && e.elasticRight <= 0 && e.elasticBottom <= 0 && e.elasticLeft <= 0 && e.adhere();
e._beganPos = null;
}
};
t.prototype.adhere = function() {
var e = this;
if (e.checkInited() && !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
e.adhering = !0;
e._calcNearestItem();
var t = (e._sizeType ? e._topGap : e._leftGap) / (e._sizeType ? e.node.height : e.node.width);
e.scrollTo(e.nearestListId, .7, t);
}
};
t.prototype.update = function() {
if (!(this.frameByFrameRenderNum <= 0 || this._updateDone)) if (this._virtual) {
for (var e = this._updateCounter + this.frameByFrameRenderNum > this.displayItemNum ? this.displayItemNum : this._updateCounter + this.frameByFrameRenderNum, t = this._updateCounter; t < e; t++) {
var i = this.displayData[t];
i && this._createOrUpdateItem(i);
}
if (this._updateCounter >= this.displayItemNum - 1) if (this._doneAfterUpdate) {
this._updateCounter = 0;
this._updateDone = !1;
this._doneAfterUpdate = !1;
} else {
this._updateDone = !0;
this._delRedundantItem();
this._forceUpdate = !1;
this._calcNearestItem();
this.slideMode == a.PAGE && (this.curPageNum = this.nearestListId);
} else this._updateCounter += this.frameByFrameRenderNum;
} else if (this._updateCounter < this._numItems) {
for (e = this._updateCounter + this.frameByFrameRenderNum > this._numItems ? this._numItems : this._updateCounter + this.frameByFrameRenderNum, 
t = this._updateCounter; t < e; t++) this._createOrUpdateItem2(t);
this._updateCounter += this.frameByFrameRenderNum;
} else {
this._updateDone = !0;
this._calcNearestItem();
this.slideMode == a.PAGE && (this.curPageNum = this.nearestListId);
}
};
t.prototype._createOrUpdateItem = function(e) {
var t = this.getItemByListId(e.id);
if (t) {
if (this._forceUpdate && this.renderEvent) {
t.setPosition(g.default.position(e.x, e.y));
this._resetItemSize(t);
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e.id % this._actualNumItems);
}
} else {
var i = this._pool.size() > 0;
if ((t = i ? this._pool.get() : cc.instantiate(this._itemTmp))._listId != e.id) {
t._listId = e.id;
t.setContentSize(this._itemSize);
}
t.setPosition(g.default.position(e.x, e.y));
this._resetItemSize(t);
this.content.addChild(t);
if (i && this._needUpdateWidget) {
var o = t.getComponent(cc.Widget);
o && o.updateAlignment();
}
t.setSiblingIndex(this.content.childrenCount - 1);
var n = t.getComponent(p.default);
t.listItem = n;
if (n) {
n.listId = e.id;
n.list = this;
n._registerEvent();
}
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e.id % this._actualNumItems);
}
this._resetItemSize(t);
this._updateListItem(t.listItem);
this._lastDisplayData.indexOf(e.id) < 0 && this._lastDisplayData.push(e.id);
};
t.prototype._createOrUpdateItem2 = function(e) {
var t, i = this.content.children[e];
if (i) {
if (this._forceUpdate && this.renderEvent) {
i._listId = e;
t && (t.listId = e);
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], i, e % this._actualNumItems);
}
} else {
(i = cc.instantiate(this._itemTmp))._listId = e;
this.content.addChild(i);
t = i.getComponent(p.default);
i.listItem = t;
if (t) {
t.listId = e;
t.list = this;
t._registerEvent();
}
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], i, e % this._actualNumItems);
}
this._updateListItem(t);
this._lastDisplayData.indexOf(e) < 0 && this._lastDisplayData.push(e);
};
t.prototype._updateListItem = function(e) {
if (e && this.selectedMode > r.NONE) {
var t = e.node;
switch (this.selectedMode) {
case r.SINGLE:
e.selected = this.selectedId == t._listId;
break;

case r.MULT:
e.selected = this.multSelected.indexOf(t._listId) >= 0;
}
}
};
t.prototype._resetItemSize = function(e) {};
t.prototype._updateItemPos = function(e) {
var t = isNaN(e) ? e : this.getItemByListId(e), i = this.getItemPos(t._listId);
t.setPosition(i.x, i.y);
};
t.prototype.setMultSelected = function(e, t) {
var i = this;
if (i.checkInited()) {
Array.isArray(e) || (e = [ e ]);
if (null == t) i.multSelected = e; else {
var o = void 0, n = void 0;
if (t) for (var s = e.length - 1; s >= 0; s--) {
o = e[s];
(n = i.multSelected.indexOf(o)) < 0 && i.multSelected.push(o);
} else for (s = e.length - 1; s >= 0; s--) {
o = e[s];
(n = i.multSelected.indexOf(o)) >= 0 && i.multSelected.splice(n, 1);
}
}
i._forceUpdate = !0;
i._onScrolling();
}
};
t.prototype.updateItem = function(e) {
if (this.checkInited()) {
Array.isArray(e) || (e = [ e ]);
for (var t = 0, i = e.length; t < i; t++) {
var o = e[t], n = this.getItemByListId(o);
n && cc.Component.EventHandler.emitEvents([ this.renderEvent ], n, o % this._actualNumItems);
}
}
};
t.prototype.updateAll = function() {
this.checkInited() && (this.numItems = this.numItems);
};
t.prototype.getItemByListId = function(e) {
if (this.content) for (var t = this.content.childrenCount - 1; t >= 0; t--) {
var i = this.content.children[t];
if (i._listId == e) return i;
}
};
t.prototype._getOutsideItem = function() {
for (var e, t = [], i = this.content.childrenCount - 1; i >= 0; i--) {
e = this.content.children[i];
this.displayData.find(function(t) {
return t.id == e._listId;
}) || t.push(e);
}
return t;
};
t.prototype._delRedundantItem = function() {
if (this._virtual) for (var e = this._getOutsideItem(), t = e.length - 1; t >= 0; t--) {
var i = e[t];
if (!this._scrollItem || i._listId != this._scrollItem._listId) {
this._pool.put(i);
for (var o = this._lastDisplayData.length - 1; o >= 0; o--) if (this._lastDisplayData[o] == i._listId) {
this._lastDisplayData.splice(o, 1);
break;
}
}
} else for (;this.content.childrenCount > this._numItems; ) this._delSingleItem(this.content.children[this.content.childrenCount - 1]);
};
t.prototype._delSingleItem = function(e) {
cc.log("DEL::", e._listId, e);
e.removeFromParent();
e.destroy && e.destroy();
e = null;
};
t.prototype.aniDelItem = function(e, t, i) {
var o = this;
if (!o.checkInited() || o.cyclic || !o._virtual) return cc.error("This function is not allowed to be called!");
if (o._aniDelRuning) return cc.warn("Please wait for the current deletion to finish!");
var n, s = o.getItemByListId(e);
if (s) {
n = s.getComponent(p.default);
o._aniDelRuning = !0;
var a = o.displayData[o.displayData.length - 1].id, l = n.selected;
n.showAni(i, function() {
var i;
a < o._numItems - 2 && (i = a + 1);
if (null != i) {
var n = o._calcItemPos(i);
o.displayData.push(n);
o._virtual ? o._createOrUpdateItem(n) : o._createOrUpdateItem2(i);
} else o._numItems--;
if (o.selectedMode == r.SINGLE) l ? o._selectedId = -1 : o._selectedId - 1 >= 0 && o._selectedId--; else if (o.selectedMode == r.MULT && o.multSelected.length) {
var c = o.multSelected.indexOf(e);
c >= 0 && o.multSelected.splice(c, 1);
for (var u = o.multSelected.length - 1; u >= 0; u--) {
(f = o.multSelected[u]) >= e && o.multSelected[u]--;
}
}
if (o._customSize) {
o._customSize[e] && delete o._customSize[e];
var h = {}, d = void 0;
for (var f in o._customSize) {
d = o._customSize[f];
var _ = parseInt(f);
h[_ - (_ >= e ? 1 : 0)] = d;
}
o._customSize = h;
}
var p, m;
for (u = null != i ? i : a; u >= e + 1; u--) if (s = o.getItemByListId(u)) {
var v = o._calcItemPos(u - 1);
p = [ cc.moveTo(.2333, g.default.position(v.x, v.y)) ];
if (u <= e + 1) {
m = !0;
p.push(cc.callFunc(function() {
o._aniDelRuning = !1;
t(e);
}));
}
p.length > 1 ? s.runAction(cc.sequence(p)) : s.runAction(p[0]);
}
if (!m) {
o._aniDelRuning = !1;
t(e);
}
}, !0);
} else t(e);
};
t.prototype.scrollTo = function(e, t, i, o) {
void 0 === t && (t = .5);
void 0 === i && (i = null);
void 0 === o && (o = !1);
var n = this;
if (n.checkInited(!1)) {
null == t ? t = .5 : t < 0 && (t = 0);
e < 0 ? e = 0 : e >= n._numItems && (e = n._numItems - 1);
!n._virtual && n._layout && n._layout.enabled && n._layout.updateLayout();
var s, a, r = n.getItemPos(e);
switch (n._alignCalcType) {
case 1:
s = r.left;
s -= null != i ? n.node.width * i : n._leftGap;
r = g.default.position(s, 0);
break;

case 2:
s = r.right - n.node.width;
s += null != i ? n.node.width * i : n._rightGap;
r = g.default.position(s + n.content.width, 0);
break;

case 3:
a = r.top;
a += null != i ? n.node.height * i : n._topGap;
r = g.default.position(0, -a);
break;

case 4:
a = r.bottom + n.node.height;
a -= null != i ? n.node.height * i : n._bottomGap;
r = g.default.position(0, -a + n.content.height);
}
var l = n.content.getPosition();
l = Math.abs(n._sizeType ? l.y : l.x);
var c = n._sizeType ? r.y : r.x;
if (Math.abs((null != n._scrollPos ? n._scrollPos : l) - c) > .5) {
n._scrollView.scrollToOffset(r, t);
n._scrollToListId = e;
n._scrollToEndTime = new Date().getTime() / 1e3 + t;
n._scrollToSo = n.scheduleOnce(function() {
n._adheringBarrier || (n.adhering = n._adheringBarrier = !1);
n._scrollPos = n._scrollToListId = n._scrollToEndTime = n._scrollToSo = null;
if (o) {
var t = n.getItemByListId(e);
t && t.runAction(cc.sequence(cc.scaleTo(.1, 1.05), cc.scaleTo(.1, 1)));
}
}, t + .1);
t <= 0 && n._onScrolling();
}
}
};
t.prototype._calcNearestItem = function() {
cc.log("_calcNearestItem");
var e, t, i, o, n, s, a = this;
a.nearestListId = null;
a._virtual && a._calcViewPos();
i = a.viewTop;
o = a.viewRight;
n = a.viewBottom;
s = a.viewLeft;
for (var r = !1, l = 0; l < a.content.childrenCount && !r; l += a._colLineNum) if (e = a._virtual ? a.displayData[l] : a._calcExistItemPos(l)) {
t = a._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (a._alignCalcType) {
case 1:
if (e.right >= s) {
a.nearestListId = e.id;
s > t && (a.nearestListId += a._colLineNum);
r = !0;
}
break;

case 2:
if (e.left <= o) {
a.nearestListId = e.id;
o < t && (a.nearestListId += a._colLineNum);
r = !0;
}
break;

case 3:
if (e.bottom <= i) {
a.nearestListId = e.id;
i < t && (a.nearestListId += a._colLineNum);
r = !0;
}
break;

case 4:
if (e.top >= n) {
a.nearestListId = e.id;
n > t && (a.nearestListId += a._colLineNum);
r = !0;
}
}
}
if ((e = a._virtual ? a.displayData[a.displayItemNum - 1] : a._calcExistItemPos(a._numItems - 1)) && e.id == a._numItems - 1) {
t = a._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (a._alignCalcType) {
case 1:
o > t && (a.nearestListId = e.id);
break;

case 2:
s < t && (a.nearestListId = e.id);
break;

case 3:
n < t && (a.nearestListId = e.id);
break;

case 4:
i > t && (a.nearestListId = e.id);
}
}
};
t.prototype.prePage = function(e) {
void 0 === e && (e = .5);
this.checkInited() && this.skipPage(this.curPageNum - 1, e);
};
t.prototype.nextPage = function(e) {
void 0 === e && (e = .5);
this.checkInited() && this.skipPage(this.curPageNum + 1, e);
};
t.prototype.skipPage = function(e, t) {
var i = this;
if (i.checkInited()) {
if (i._slideMode != a.PAGE) return cc.error("This function is not allowed to be called, Must SlideMode = PAGE!");
if (!(e < 0 || e >= i._numItems) && i.curPageNum != e) {
i.curPageNum = e;
i.pageChangeEvent && cc.Component.EventHandler.emitEvents([ i.pageChangeEvent ], e);
i.scrollTo(e, t);
}
}
};
t.prototype.calcCustomSize = function(e) {
var t = this;
if (t.checkInited()) {
if (!t._itemTmp) return cc.error("Unset template item!");
if (!t.renderEvent) return cc.error("Unset Render-Event!");
t._customSize = {};
var i = cc.instantiate(t._itemTmp);
t.content.addChild(i);
for (var o = 0; o < e; o++) {
cc.Component.EventHandler.emitEvents([ t.renderEvent ], i, o);
i.height == t._itemSize.height && i.width == t._itemSize.width || (t._customSize[o] = t._sizeType ? i.height : i.width);
}
Object.keys(t._customSize).length || (t._customSize = null);
i.removeFromParent();
i.destroy && i.destroy();
return t._customSize;
}
};
n([ u({
type: cc.Enum(s),
tooltip: !1
}) ], t.prototype, "templateType", void 0);
n([ u({
type: cc.Node,
tooltip: !1,
visible: function() {
return this.templateType == s.NODE;
}
}) ], t.prototype, "tmpNode", void 0);
n([ u({
type: cc.Prefab,
tooltip: !1,
visible: function() {
return this.templateType == s.PREFAB;
}
}) ], t.prototype, "tmpPrefab", void 0);
n([ u() ], t.prototype, "_slideMode", void 0);
n([ u({
type: cc.Enum(a),
tooltip: !1
}) ], t.prototype, "slideMode", null);
n([ u({
type: cc.Float,
range: [ 0, 1, .1 ],
tooltip: !1,
slide: !0,
visible: function() {
return this._slideMode == a.PAGE;
}
}) ], t.prototype, "pageDistance", void 0);
n([ u({
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
return this._slideMode == a.PAGE;
}
}) ], t.prototype, "pageChangeEvent", void 0);
n([ u() ], t.prototype, "_virtual", void 0);
n([ u({
type: cc.Boolean,
tooltip: !1
}) ], t.prototype, "virtual", null);
n([ u({
tooltip: !1,
visible: function() {
var e = this.slideMode == a.NORMAL;
e || (this.cyclic = !1);
return e;
}
}) ], t.prototype, "cyclic", void 0);
n([ u({
tooltip: !1,
visible: function() {
return this.virtual;
}
}) ], t.prototype, "lackCenter", void 0);
n([ u({
tooltip: !1,
visible: function() {
var e = this.virtual && !this.lackCenter;
e || (this.lackSlide = !1);
return e;
}
}) ], t.prototype, "lackSlide", void 0);
n([ u({
type: cc.Integer
}) ], t.prototype, "_updateRate", void 0);
n([ u({
type: cc.Integer,
range: [ 0, 6, 1 ],
tooltip: !1,
slide: !0
}) ], t.prototype, "updateRate", null);
n([ u({
type: cc.Integer,
range: [ 0, 12, 1 ],
tooltip: !1,
slide: !0
}) ], t.prototype, "frameByFrameRenderNum", void 0);
n([ u({
type: cc.Component.EventHandler,
tooltip: !1
}) ], t.prototype, "renderEvent", void 0);
n([ u({
type: cc.Enum(r),
tooltip: !1
}) ], t.prototype, "selectedMode", void 0);
n([ u({
tooltip: !1,
visible: function() {
return this.selectedMode == r.SINGLE;
}
}) ], t.prototype, "repeatEventSingle", void 0);
n([ u({
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
return this.selectedMode > r.NONE;
}
}) ], t.prototype, "selectedEvent", void 0);
n([ u({
serializable: !1
}) ], t.prototype, "_numItems", void 0);
return t = n([ c, h(), d("自定义组件/List"), _(cc.ScrollView), f(-5e3) ], t);
}(cc.Component);
i.default = m;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./ListItem": "ListItem"
} ],
LocalizedLabel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "744dcs4DCdNprNhG0xwq6FK", "LocalizedLabel");
var o = e("LanguageData");
cc.Class({
extends: cc.Component,
editor: {
executeInEditMode: !0,
menu: "i18n/LocalizedLabel"
},
properties: {
dataID: {
get: function() {
return this._dataID;
},
set: function(e) {
if (this._dataID !== e) {
this._dataID = e;
this.updateLabel();
}
}
},
_dataID: ""
},
onLoad: function() {
0;
o.inst || o.init();
this.fetchRender();
},
fetchRender: function() {
var e = this.getComponent(cc.Label);
if (e) {
this.label = e;
this.updateLabel();
} else ;
},
updateLabel: function() {
if (this.label) {
o.t(this.dataID) && (this.label.string = o.t(this.dataID));
} else cc.error("Failed to update localized label, label component is invalid!");
}
});
cc._RF.pop();
}, {
LanguageData: "LanguageData"
} ],
LocalizedSprite: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f34ac2GGiVOBbG6XlfvgYP4", "LocalizedSprite");
var o = e("SpriteFrameSet");
cc.Class({
extends: cc.Component,
editor: {
executeInEditMode: !0,
inspector: "packages://i18n/inspector/localized-sprite.js",
menu: "i18n/LocalizedSprite"
},
properties: {
spriteFrameSet: {
default: [],
type: o
}
},
onLoad: function() {
this.fetchRender();
},
fetchRender: function() {
var e = this.getComponent(cc.Sprite);
if (e) {
this.sprite = e;
this.updateSprite(window.i18n.curLang);
} else ;
},
getSpriteFrameByLang: function(e) {
for (var t = 0; t < this.spriteFrameSet.length; ++t) if (this.spriteFrameSet[t].language === e) return this.spriteFrameSet[t].spriteFrame;
},
updateSprite: function(e) {
if (this.sprite) {
var t = this.getSpriteFrameByLang(e);
!t && this.spriteFrameSet[0] && (t = this.spriteFrameSet[0].spriteFrame);
this.sprite.spriteFrame = t;
} else cc.error("Failed to update localized sprite, sprite component is invalid!");
}
});
cc._RF.pop();
}, {
SpriteFrameSet: "SpriteFrameSet"
} ],
LogOutView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "97b23Mof7ZKYoQSZIRxxMNL", "LogOutView");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.scrollView = null;
t.content = null;
t.logLabel = null;
t.logArray = [];
t.clearBtn = null;
t.showLogViewBtn = null;
t.hideLogViewBtn = null;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
var e = 1;
e = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .7 : cc.winSize.width / 1080;
this.node.scale = e;
};
t.prototype.start = function() {
var e = this;
this.initUi();
this.initListener();
this.initData();
this.schedule(function() {
e.showLog();
}, 0);
};
t.prototype.initUi = function() {
this.scrollView = this.node.getChildByName("ScrollView").getComponent(cc.ScrollView);
this.showLogViewBtn = this.node.getChildByName("BtnShowLogView");
this.hideLogViewBtn = this.node.getChildByName("BtnHideLogView");
this.clearBtn = this.node.getChildByName("BtnClearLog");
this.content = this.scrollView.content;
this.logLabel = this.content.children[0];
this.content.removeAllChildren();
};
t.prototype.addLog = function(e) {
for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
var o = "";
o += e;
t.forEach(function(e) {
o += "," + e;
});
this.logArray.push(o);
};
t.prototype.showLog = function() {
var e = this;
if (this.logArray.length > 0) {
var t = this.logArray;
this.logArray = [];
t.forEach(function(t) {
var i = cc.instantiate(e.logLabel);
i.getComponent(cc.Label).string = "日志输出：" + t;
e.content.addChild(i);
});
}
};
t.prototype.initListener = function() {};
t.prototype.initData = function() {};
t.prototype.onShowLogView = function() {
this.scrollView.node.active = !0;
this.clearBtn.active = !0;
this.showLogViewBtn.active = !1;
this.hideLogViewBtn.active = !0;
};
t.prototype.onHideLogView = function() {
this.scrollView.node.active = !1;
this.clearBtn.active = !1;
this.showLogViewBtn.active = !0;
this.hideLogViewBtn.active = !1;
};
t.prototype.clearLogView = function() {
this.content.removeAllChildren();
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
LuckBoxPannel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3251aCuG7ZC+oEceDfuKFcK", "LuckBoxPannel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./AldUtils"), l = e("./PlatUtils"), c = cc._decorator, u = c.ccclass, h = c.property, d = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.showVideoBtn = null;
t.clickBtn = null;
t.btnLabel = null;
t.panel = null;
t.videoIcon = null;
t.progressBar = null;
t.boxNode = null;
t.rewardCallFunc = null;
t.rewardValue = 0;
t._luck_box_ad_type = "1";
t._delay_show_btn_time = 0;
t._luck_box_progressbar_back_time = 1e3;
t._showAdProgress = .8;
t._openSlowDown = !1;
t._timetaskId = 0;
t._cancelSlowDown = !1;
t._slowDownSpeed = .2;
t._progresss = 0;
t._totalProgress = 5;
t._isShowAd = !1;
t._videoIsPlay = !1;
return t;
}
t.prototype.onLoad = function() {
var e = this;
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
this.rewardCallFunc = s.utils.rewardCallFunc;
this.rewardValue = s.utils.rewardValue;
this.panel.scale = 0;
s.utils.SendEvent("幸运宝箱-显示成功！");
this.clickBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.clickBtnTouchCancel.bind(this));
this.clickBtn.on(cc.Node.EventType.TOUCH_END, this.clickBtnTouchCancel.bind(this));
this.progressBar.progress = 0;
this.btnLabel.node.opacity = 0;
this.btnLabel.node.active = !1;
s.utils.luckBoxShowCount++;
var t = s.utils.ServerConfig.luck_box_ad_type ? s.utils.ServerConfig.luck_box_ad_type.split(",") : this._luck_box_ad_type, i = s.utils.ServerConfig.luck_box_close_btn_show_delay ? s.utils.ServerConfig.luck_box_close_btn_show_delay.split(",") : this._delay_show_btn_time, o = s.utils.ServerConfig.luck_box_progressbar_back_time ? s.utils.ServerConfig.luck_box_progressbar_back_time.split(",") : this._luck_box_progressbar_back_time;
s.utils.luckBoxShowCount > t.length - 1 && (s.utils.luckBoxShowCount = 0);
s.utils.showLog("幸运宝箱显示次数：" + s.utils.luckBoxShowCount);
this._luck_box_ad_type = t[s.utils.luckBoxShowCount];
this._delay_show_btn_time = i[s.utils.luckBoxShowCount];
this._luck_box_progressbar_back_time = o[s.utils.luckBoxShowCount];
if (s.utils.ServerConfig.luck_box_show_ad_progress_percent) {
var n = s.utils.ServerConfig.luck_box_show_ad_progress_percent.split(",");
this._showAdProgress = n[s.utils.luckBoxShowCount];
} else switch (this._luck_box_ad_type) {
case "1":
case "5":
this._showAdProgress = .45;
break;

case "2":
this._showAdProgress = .3;
break;

case "3":
case "4":
this._showAdProgress = .85;
break;

default:
this._showAdProgress = .45;
}
s.utils.showLog("幸运宝箱显示类型：" + this._luck_box_ad_type + " #showBtnTime=" + this._delay_show_btn_time + " #progressbarBackTime=" + this._luck_box_progressbar_back_time);
"4" != this._luck_box_ad_type && this.scheduleOnce(function() {
if (e.btnLabel.node && cc.isValid(e.btnLabel.node)) {
e.btnLabel.node.active = !0;
e.btnLabel.node.runAction(cc.fadeIn(.3));
}
}, this._delay_show_btn_time);
s.utils.ServerConfig.luck_box_video_icon_is_show && "true" == s.utils.ServerConfig.luck_box_video_icon_is_show ? this.videoIcon.active = !0 : this.videoIcon.active = !1;
if ("1" == this._luck_box_ad_type) {
s.utils.adManager.HideBanner(a.BannerLocation.Game);
l.default.IsIOS && l.default.IsQQ && this.scheduleOnce(function() {
e.clickBtn && cc.isValid(e.clickBtn) && e.clickBtn.setPosition(e.clickBtn.x, e.progressBar.node.position.y - 200);
}, 10);
} else {
this.clickBtn.getComponent(cc.Widget).isAlignBottom = !1;
this.clickBtn.getComponent(cc.Widget).updateAlignment();
this.clickBtn.setPosition(this.clickBtn.x, this.progressBar.node.position.y - 200);
}
};
t.prototype.clickBtnTouchCancel = function() {
var e = this;
clearTimeout(this._timetaskId);
this._timetaskId = setTimeout(function() {
e._openSlowDown = !0;
}, 1e3 * this._luck_box_progressbar_back_time);
};
t.prototype.update = function(e) {
if (this.progressBar.progress > 0 && this.progressBar.progress < 1 && this._openSlowDown && !this._cancelSlowDown) {
this.progressBar.progress -= e * this._slowDownSpeed;
this.progressBar.progress <= 0 && (this.progressBar.progress = 0);
}
};
t.prototype.onEnable = function() {
var e = 1;
e = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .6 : cc.winSize.width / 1080;
this.panel.scale = e;
};
t.prototype.onDestroy = function() {
s.utils.adManager.HideBanner(a.BannerLocation.Game);
s.utils.hideRecommendGamesBanner();
if (s.utils.rewardLuckBoxPanelCloseFunc) {
s.utils.rewardLuckBoxPanelCloseFunc();
s.utils.rewardBoxPanelCloseFunc = null;
} else {
s.utils.rewardCloseFunc && s.utils.rewardCloseFunc();
s.utils.rewardCloseFunc = null;
}
};
t.prototype.onClose = function() {
var e = this;
this.panel.runAction(cc.sequence(cc.scaleTo(.3, 0).easing(cc.easeBackIn()), cc.callFunc(function() {
e.node.destroy();
})));
};
t.prototype.onBtnClick = function() {
var e = this;
this._openSlowDown = !1;
if (this.progressBar.progress < 1) {
this.progressBar.progress += .1;
if (this.progressBar.progress >= 1) {
this.progressBar.progress = 1;
this.openLuckBox();
}
}
if (this.videoIcon.active && !this._videoIsPlay) {
this._videoIsPlay = !0;
s.utils.adManager.ShowVideo(function(t, i) {
if (l.default.IsDouyin) if (t) {
s.utils.showMsg("获得奖励! +" + e.rewardValue);
(o = new a.YZ_Reward()).rewardValue = e.rewardValue;
e.rewardCallFunc && e.rewardCallFunc(o);
e.onClose();
} else {
e._videoIsPlay = !1;
s.utils.showMsg(i || "视频加载失败！");
} else {
s.utils.showMsg("获得奖励! +" + e.rewardValue);
var o;
(o = new a.YZ_Reward()).rewardValue = e.rewardValue;
e.rewardCallFunc && e.rewardCallFunc(o);
e.onClose();
}
});
}
if (this.progressBar.progress >= this._showAdProgress && !this._isShowAd) {
this._isShowAd = !0;
switch (this._luck_box_ad_type) {
case "1":
s.utils.showLog("服务器配置幸运宝箱展示-banner广告！");
s.utils.adManager.ShowBanner(a.BannerLocation.Game);
setTimeout(function() {
e.clickBtn && cc.isValid(e.clickBtn) && e.clickBtn.setPosition(e.clickBtn.x, e.progressBar.node.position.y - 200);
}, 900);
break;

case "2":
s.utils.showLog("服务器配置幸运宝箱展示-插屏广告！");
s.utils.adManager.ShowInterstitial();
break;

case "3":
s.utils.showLog("服务器配置幸运宝箱展示-盒子广告！");
s.utils.adManager.ShowAppBox();
break;

case "4":
s.utils.showLog("服务器配置幸运宝箱展示-视频广告！");
this.videoIcon.active = !0;
this._cancelSlowDown = !0;
this.scheduleOnce(function() {
if (e.btnLabel.node && cc.isValid(e.btnLabel.node)) {
e.btnLabel.node.active = !0;
e.btnLabel.node.runAction(cc.fadeIn(.3));
}
}, this._delay_show_btn_time);
break;

case "5":
s.utils.showLog("服务器配置幸运宝箱展示-互推banner广告！");
s.utils.showRecommendGamesBanner();
break;

default:
s.utils.showLog("服务器配置幸运宝箱展示banner广告！");
s.utils.adManager.ShowBanner(a.BannerLocation.Game);
setTimeout(function() {
e.clickBtn && cc.isValid(e.clickBtn) && e.clickBtn.setPosition(e.clickBtn.x, e.progressBar.node.position.y - 200);
}, 500);
}
}
};
t.prototype.openLuckBox = function() {
if ("true" == s.utils.ServerConfig.luck_box_play_video) {
this.onPlayVideo();
this.onClose();
} else {
s.utils.showMsg("获得奖励! +" + this.rewardValue);
var e = new a.YZ_Reward();
e.rewardValue = this.rewardValue;
this.rewardCallFunc && this.rewardCallFunc(e);
this.onClose();
}
};
t.prototype.onHideBtn = function() {
this.onClose();
};
t.prototype.onPlayVideo = function() {
var e = this;
s.utils.adManager.ShowVideo(function(t, i) {
if (t) {
s.utils.showMsg("获得奖励! +" + e.rewardValue);
e.rewardValue = e.rewardValue;
r.default.SendEvent("幸运宝箱-获取奖励成功！");
} else {
s.utils.showMsg("获得奖励! +" + e.rewardValue);
r.default.SendEvent("幸运宝箱-视频播放失败！");
}
var o = new a.YZ_Reward();
o.rewardValue = e.rewardValue;
e.rewardCallFunc && e.rewardCallFunc(o);
e.onClose();
});
};
n([ h(cc.Node) ], t.prototype, "showVideoBtn", void 0);
n([ h(cc.Node) ], t.prototype, "clickBtn", void 0);
n([ h(cc.Label) ], t.prototype, "btnLabel", void 0);
n([ h(cc.Node) ], t.prototype, "panel", void 0);
n([ h(cc.Node) ], t.prototype, "videoIcon", void 0);
n([ h(cc.ProgressBar) ], t.prototype, "progressBar", void 0);
n([ h(cc.Node) ], t.prototype, "boxNode", void 0);
return t = n([ u ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"./AldUtils": "AldUtils",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
MoreGamesPanel1: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "92ac1akrqlDIJvoROkqJAWr", "MoreGamesPanel1");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./GameItem"), a = e("./YZ_Constant"), r = e("./Utils"), l = e("./List"), c = cc._decorator, u = c.ccclass, h = (c.property, 
cc.size(225, 1e3), cc.size(506, 1e3), cc.size(111, 54), cc.size(275, 54), cc.size(376, 104), 
cc.size(545, 104), cc.size(251, 89), cc.size(425, 89), function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._gameList = null;
t._originScale = 1;
t._gameItems = [];
t._jumpList = null;
t._dataDirty = !1;
t._closeBtnRight = null;
t._closeBtnLine = null;
t._title = null;
t._titleBg = null;
t._star = null;
t.gameItemNode = null;
t.listView = null;
t.autoScorll = !1;
return t;
}
t.prototype.onLoad = function() {
r.utils.otherConfig && r.utils.otherConfig.group && (this.node.group = r.utils.otherConfig.group);
this._panel = this.node.getChildByName("Panel");
this.listView = this._panel.getChildByName("GameList").getComponent(l.default);
this._closeBtnRight = this._panel.getChildByName("Btn_Close");
this._closeBtnRight.active = !0;
this._closeBtnLine = this._panel.getChildByName("Btn_CloseSide");
this._closeBtnLine.active = !1;
this._titleBg = cc.find("Title/TitleBg", this._panel);
this._title = cc.find("Title/Txt", this._panel);
this._star = cc.find("Title/Star", this._panel);
this.node.active = !1;
var e = 1;
e = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .5 : cc.winSize.width / 1080;
this._panel.scale = e;
this._originScale = this._panel.scale;
};
t.prototype.update = function(e) {
if (this.autoScorll && !this.listView.scrollView.isScrolling()) {
this.listView.content.y += 100 * e;
this.listView._onScrolling();
}
};
t.prototype.onListRender = function(e, t) {
e.getComponent(s.default).init(this._jumpList[t], a.SubLocation.isMoreGame);
};
t.prototype._initWidget = function() {
var e = this;
this._jumpList.length > 5 && (r.utils.ServerConfig.more_game_pannel_auto_scroll && "false" == r.utils.ServerConfig.more_game_pannel_auto_scroll ? r.utils.showLog("服务器不开启自动滚动！") : this.scheduleOnce(function() {
e.autoScorll = !0;
}, 1));
r.utils.postRecommentShowData(a.SubLocation.isMoreGame);
};
t.prototype.init = function(e) {
this._jumpList = e;
this._dataDirty = !0;
if (this._jumpList && this._jumpList.length > 0) {
this._initWidget();
this.listView.numItems = this._jumpList.length;
} else {
cc.warn("交叉推广数据为null, 6元素交叉推广组件不显示!");
this.node.destroy();
}
};
t.prototype.show = function() {
this.node.active = !0;
this._panel.y = 0;
this._panel.runAction(cc.moveBy(.3, cc.v2(this._panel.getContentSize().width, 0)).easing(cc.easeQuadraticActionOut()));
};
t.prototype.hide = function() {
var e = this;
this._panel.runAction(cc.sequence(cc.moveBy(.3, cc.v2(-this._panel.getContentSize().width, 0)).easing(cc.easeQuadraticActionOut()), cc.callFunc(function() {
e.node.active = !1;
})));
};
t.prototype.onCloseBtnHandler = function(e, t) {
this.hide();
};
return t = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./GameItem": "GameItem",
"./List": "List",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
MoreGamesPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "369d4RM2rtPj4bmcA3rMp3j", "MoreGamesPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = cc._decorator, c = l.ccclass, u = (l.property, 
cc.size(225, 1e3), cc.size(506, 1e3), cc.size(111, 54), cc.size(275, 54), cc.size(376, 104), 
cc.size(545, 104), cc.size(251, 89), cc.size(425, 89), function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._gameList = null;
t._originScale = 1;
t._gameItems = [];
t._jumpList = null;
t._dataDirty = !1;
t._closeBtnRight = null;
t._closeBtnLine = null;
t._star = null;
t._items = [];
t.gameItemNode = null;
t._location = a.SubLocation.isMoreGame;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
r.default.IsNativeAndroid || s.utils.adManager.HideBanner(a.BannerLocation.Home);
this._panel = this.node.getChildByName("Panel");
this._gameList = this._panel.getChildByName("GameScrollView").getComponent(cc.ScrollView).content;
this.gameItemNode = this._gameList.children[0];
this._gameList.removeAllChildren();
this.node.active = !1;
var e = 1;
e = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .5 : cc.winSize.width / 1080;
this._panel.scale = e;
this._originScale = this._panel.scale;
};
t.prototype._initWidget = function() {
this._gameList.removeAllChildren();
for (var e = 3 * Math.floor(this._jumpList.length / 3), t = 0; t < e; t++) {
var i = this._jumpList[t];
if (i && i.logo) {
var o = cc.instantiate(this.gameItemNode), n = o.getComponent("QCrossWidgetItem");
n._location = this._location;
n.init(i);
this._gameList.addChild(o);
}
}
};
t.prototype.update = function() {
if (this._dataDirty) {
this._dataDirty = !1;
this._updatePanel();
}
};
t.prototype._updatePanel = function() {
s.utils.postRecommentShowData(this._location);
this._initWidget();
};
t.prototype.init = function(e) {
this._jumpList = e;
this._dataDirty = !0;
};
t.prototype.show = function() {
this.node.active = !0;
};
t.prototype.hide = function() {
this.node.active = !1;
};
t.prototype.onCloseBtnHandler = function(e, t) {
this.hide();
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
MoreGamesWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "455abMBsJVHMI9HxToE4F67", "MoreGamesWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = e("./AldUtils"), l = e("./CompatibleTool"), c = e("./YZ_Constant"), u = cc._decorator, h = u.ccclass, d = u.property, f = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.prefab = null;
t.prefab1 = null;
t.btnMoreGames = null;
t.moreGamesPanel = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.btnMoreGames = this.node.getChildByName("Btn_MoreGames");
this.btnMoreGames.active = !1;
var t, i = this, o = this.btnMoreGames.getChildByName("Background").getComponent(cc.Sprite);
s.utils.ServerConfig ? t = s.utils.ServerConfig.more_game_icon : cc.warn("没有服务器配置");
t && !this.bgTexture && l.default.LoadRes(t, function(t, n) {
if (!t && cc.isValid(e) && o.node) {
var s = o.node.getContentSize();
i.bgTexture = new cc.SpriteFrame(n);
o.spriteFrame = i.bgTexture;
o.node.setContentSize(s);
}
});
};
t.prototype.onEnable = function() {
var e = this;
s.utils.registerServerInitEvent(function() {
e._setBtnVisible();
}, this);
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
};
t.prototype._setBtnVisible = function() {
var e = !0;
if (s.utils.isShowMoreGamesWidget()) if (a.default.IsQQ) this.btnMoreGames.active = !0; else if (a.default.Is4399) this.btnMoreGames.active = !0; else if (a.default.IsNativeAndroid && s.utils.Tool_Native && "oppo" == s.utils.config.nativeAndroidConfig.channel) this.btnMoreGames.active = !0; else if (s.utils.ServerConfig.show_oppo_rec && "true" == s.utils.ServerConfig.show_oppo_rec) this.btnMoreGames.active = !0; else {
var t = s.utils.getRecommondGameList();
if (t) if (t.length > 0) this.btnMoreGames.active = !0; else {
cc.warn("\b\b交叉推广数据列表长度为0, 更多游戏按钮不显示!");
e = !1;
} else {
cc.warn("\b\b交叉推广数据列表数据为null, 更多游戏按钮不显示!");
e = !1;
}
} else e = !1;
e || this.node.destroy();
};
t.prototype.onBtnClickedHandler = function(e, t) {
if (a.default.IsQQ) s.utils.adManager.ShowAppBox(!0); else if (a.default.Is4399) s.utils.Tool_4399.showRecommend(); else if (a.default.IsNativeAndroid && s.utils.Tool_Native && 1 == s.utils.Tool_Native.moreGameShowType) {
s.utils.Tool_Native.showMoreGames();
s.utils.postDataByLocation("123", c.SubLocation.isMoreGame, 0);
} else if (a.default.IsDouyin) s.utils.Tool_Douyin.showMoreGamesModal(); else {
if (s.utils.ServerConfig.show_oppo_rec && "true" == s.utils.ServerConfig.show_oppo_rec) {
s.utils.showLog("服务器配置显示官方互推！");
s.utils.oppoTool.showOppoGamePortal();
return;
}
var i = s.utils.getRecommondGameList();
if (i && i.length > 0) {
s.utils.showLog("MoreGamePanel 交叉推广数据:", JSON.stringify(i));
var o = void 0;
if (2 == s.utils.ServerConfig.more_game_skin) {
(o = cc.instantiate(this.prefab1)).zIndex = 999999;
this.moreGamesPanel = o.getComponent("MoreGamesPanel1");
} else {
(o = cc.instantiate(this.prefab)).zIndex = 999999;
this.moreGamesPanel = o.getComponent("MoreGamesPanel");
}
cc.director.getScene().addChild(o);
this.moreGamesPanel._location = c.SubLocation.isMoreGame;
this.moreGamesPanel.init(i);
this.moreGamesPanel.show();
r.default.SendEvent("点击更多游戏按钮");
} else s.utils.showLog("获取交叉推广数据失败!");
}
};
n([ d(cc.Prefab) ], t.prototype, "prefab", void 0);
n([ d(cc.Prefab) ], t.prototype, "prefab1", void 0);
return t = n([ h ], t);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"./AldUtils": "AldUtils",
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
Msg: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b942cZiiK1H/oXLv3KFwjp+", "Msg");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./CocosZ"), n = function() {
function e() {}
e.Show = function(t, i) {
var n = o.cocosz.resMgr.getRes("TipsPanel", cc.Prefab);
if (n) {
var s = cc.instantiate(n);
s.group = "ui";
if (s) {
s.position = cc.v3(cc.winSize.width / 2, cc.winSize.height / 2 + 300);
cc.director.getScene().addChild(s, 1e4);
cc.find("label", s).getComponent(cc.Label).string = t;
s.scale = 0;
var a = cc.tween(s);
a.to(.25, {
scale: 1
}, {
easing: "backOut"
});
a.delay(2);
a.to(.25, {
scale: 0
}, {
easing: "backIn"
});
a.call(function() {
s.destroy();
});
a.start();
for (var r = e.tipList.length - 1; r >= 0; r--) e.tipList[r].isValid ? e.tipList[r].y += 120 : e.tipList.splice(r, 1);
e.tipList.push(s);
}
} else cc.log("提示面板显示失败!");
};
e.isShow = !1;
e.isTouch = !1;
e.tipList = [];
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./CocosZ": "CocosZ"
} ],
NativeTryGameNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c237blrR8tFb7rQ6ElVARTM", "NativeTryGameNode");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = e("./NativeTryGamesWidget"), l = e("./CompatibleTool"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._data = null;
t._icon = null;
t._nameLabel = null;
t._gameJumpInterval = -1;
t._jumpInfo = null;
t._index = -1;
t._jumping = !1;
t._isFirst = !1;
t._mask = null;
return t;
}
t.prototype.onLoad = function() {
this._icon = cc.find("Mask/Icon", this.node).getComponent(cc.Sprite);
this._mask = cc.find("Mask", this.node);
};
t.prototype.init = function(e) {
this._data = e;
s.utils.showLog("原生抖动Node");
if (this._data) {
this._jumpInfo = this._data.jump_list;
this._gameJumpInterval = this._data.jump_refresh_time;
this._isFirst = !0;
this.node.active = !0;
a.default.IsHuaWei && (this.node.getChildByName("source").getComponent(cc.Label).string = this._jumpInfo[this._index].date[0].source ? this._jumpInfo[this._index].date[0].source : "");
} else this.node.active = !1;
};
t.prototype.showNextItem = function() {
this.unscheduleAllCallbacks();
this.jump();
this.schedule(this.jump, this._gameJumpInterval);
};
t.prototype.onEnable = function() {
var e = this;
this.jump();
this.schedule(this.jump, this._gameJumpInterval);
this.node.on(cc.Node.EventType.TOUCH_START, function(t) {
if (0 != e.node.opacity) {
var i = e._jumpInfo[e._index].tryGameAd, o = e._jumpInfo[e._index].date[0].adId;
if (i) {
i.reportAdClick({
adId: o
});
s.utils.showLog("抖动试玩上报tryGameAd:" + JSON.stringify(i) + "adid:" + o);
}
s.utils.nativeNeedChange = !0;
s.utils.tryGameDate.splice(e._index, 1);
s.utils._nativeTryGameNode && s.utils._nativeTryGameNode.getComponent(r.default).init();
}
}, this);
};
t.prototype.onDisable = function() {
this.unscheduleAllCallbacks();
this.node.targetOff(this);
};
t.prototype.jump = function() {
var e = this;
if (!this._jumping) {
this._jumping = !0;
this._index = this._index + 1;
this._index >= this._jumpInfo.length && (this._index = 0);
var t = this._icon.node.getContentSize();
if (this._jumpInfo[this._index]) {
var i = a.default.IsOPPO ? this._jumpInfo[this._index].date[0].iconUrlList[0] : this._jumpInfo[this._index].date[0].icon;
i && !a.default.IsHuaWei || (i = this._jumpInfo[this._index].date[0].imgUrlList[0]);
l.default.LoadRes(i, function(i, o) {
if (!i && cc.isValid(e) && e._icon) {
e._icon.spriteFrame = new cc.SpriteFrame(o);
e._icon.node.setContentSize(t);
if (e._isFirst) {
s.utils.showLog("当前试玩第一次加载！！！！！");
e._mask.active = !0;
e._isFirst = !1;
}
}
e._jumping = !1;
});
var o = this._jumpInfo[this._index].tryGameAd, n = this._jumpInfo[this._index].date[0].adId;
if (o && !o.isReportShow) {
o.reportAdShow({
adId: n
});
o.isReportShow = !0;
}
} else this._jumping = !1;
0 == this.node.opacity && (this.node.opacity = 255);
}
};
return t = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./NativeTryGamesWidget": "NativeTryGamesWidget",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
NativeTryGamesWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "932f9ROnk9AN7mC5qMygyf7", "NativeTryGamesWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = cc._decorator, l = r.ccclass, c = (r.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._tryGameNode = null;
t._btnClose = null;
return t;
}
t.prototype.onLoad = function() {
this._tryGameNode = this.getComponentInChildren("NativeTryGameNode");
this._tryGameNode.node.active = !1;
this._btnClose = this._tryGameNode.node.getChildByName("BtnClose");
};
t.prototype.init = function() {
if (!this._tryGameNode) {
this._tryGameNode = this.getComponentInChildren("NativeTryGameNode");
this._btnClose = this._tryGameNode.node.getChildByName("BtnClose");
}
if (s.utils.isShowNativeTryGamesWidget()) {
var e = !0;
if (s.utils.tryGameDate) {
if (s.utils.tryGameDate.length <= 0) {
cc.warn("res的长度不合法！");
e = !1;
}
} else {
cc.warn("res不存在！");
e = !1;
}
s.utils.showLog("原生抖动dataValid：" + e);
if (e) {
s.utils.showLog("交叉推广数据:", JSON.stringify(s.utils.tryGameDate));
this._tryGameNode.init({
jump_refresh_time: s.utils.ServerConfig.icon_jump_native,
jump_list: s.utils.tryGameDate
});
this._tryGameNode.node.active = !0;
if (a.default.IsHuaWei) {
s.utils.showLog("华为平台，显示关闭按钮>>>>>");
this._btnClose.active = !0;
}
} else this._tryGameNode.node.active = !1;
} else this._tryGameNode.node.active = !1;
};
t.prototype.close = function() {
this._tryGameNode.node.opacity = 0;
};
return t = n([ l ], t);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
OpenRedBagPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "adbe7B8cB1B7Y2iqH4nM4BD", "OpenRedBagPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._moneyLbl = null;
t._totalMoneyLbl = null;
t._openPanel = null;
t._rewardPanel = null;
t._btnOpen = null;
t._redBagInfo = null;
t._btnClose = null;
t._btnVideoOpen = null;
t._title = null;
t._btnDouble = null;
t._proInfo = null;
t._money = 0;
t._canShowVideoOpen = !1;
t._show_type = 1;
return t;
}
t.prototype.onLoad = function() {
var e = this;
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
r.default.IsNativeAndroid || s.utils.adManager.HideBanner(a.BannerLocation.Home);
this._panel = this.node.getChildByName("Panel");
this._openPanel = this._panel.getChildByName("onOpenPanel");
this._openPanel.setScale(.5);
this._openPanel.runAction(cc.scaleTo(.3, 1));
this._rewardPanel = this._panel.getChildByName("rewardPanel");
this._btnOpen = this._openPanel.getChildByName("btnOpen");
this._btnClose = this._panel.getChildByName("btnClose");
this._btnVideoOpen = this._btnOpen.getChildByName("btn_openVideo");
this._title = this._openPanel.getChildByName("title");
this._totalMoneyLbl = this._rewardPanel.getChildByName("totalMoneyLabel").getComponent(cc.Label);
this._moneyLbl = this._rewardPanel.getChildByName("moneyLbl").getComponent(cc.Label);
this._btnDouble = this._rewardPanel.getChildByName("btnDouble");
setTimeout(function() {
e._btnOpen.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1.2), cc.scaleTo(.5, 1))));
}, 500);
this._redBagInfo = s.utils.yzRedBagInfo;
this._proInfo = s.utils.yzRedBagInfo.curProgressInfo;
var t = 1;
t = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .5 : cc.winSize.width / 1080;
this._panel.scale = t;
this.init();
};
t.prototype.openRedBag = function() {
var e = this;
if (!(this._redBagInfo.progress < this._redBagInfo.totalProgress && !this._redBagInfo.isFreeRedBag && this._redBagInfo.freeRedBagCount <= 0)) {
this._btnClose.opacity = 0;
this._btnClose.active = !0;
var t = s.utils.ServerConfig.red_bag_close_btn_show_delay ? s.utils.ServerConfig.red_bag_close_btn_show_delay : 0;
setTimeout(function() {
s.utils.showLog("拆红包关闭按钮延迟显示 " + t + "秒显示！");
e._btnClose.runAction(cc.fadeIn(.3));
}, 1e3 * t);
setTimeout(function() {
e._btnDouble.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1.2), cc.scaleTo(.5, 1))));
}, 500);
this._canShowVideoOpen ? s.utils.adManager.ShowVideo(function(t, i) {
if (t) {
s.utils.SendEvent("拆红包弹窗-视频拆红包成功！");
e.scheduleOnce(function() {
e.showRedBag();
});
} else {
e._btnClose.runAction(cc.fadeIn(.3));
s.utils.SendEvent("拆红包弹窗-视频拆红包失败！");
s.utils.showMsg(i || "视频加载失败！");
}
}) : this.showRedBag();
}
};
t.prototype.showRedBag = function() {
var e, t = this, i = this._proInfo;
cc.log("proInfo ", JSON.stringify(i));
e = parseFloat((Math.random() * (i.max_money - i.min_money) + i.min_money).toFixed(3));
cc.log("红包金额：" + e);
this._money = e;
this._redBagInfo.balance = parseFloat((this._redBagInfo.balance + e).toFixed(3));
this._redBagInfo.isFreeRedBag && 1 == this._show_type && (this._redBagInfo.lastOpenFreeRedBagTime = new Date().toDateString());
2 == this._show_type && (this._redBagInfo.progress -= this._redBagInfo.totalProgress);
this._redBagInfo.totalMoney = parseFloat((this._redBagInfo.totalMoney + e).toFixed(3));
this._moneyLbl.string = "¥" + e + "元";
this._totalMoneyLbl.string = "累计获得现金" + this._redBagInfo.totalMoney + "元";
this._rewardPanel.scaleX = 0;
this._rewardPanel.active = !0;
this._openPanel.runAction(cc.sequence(cc.scaleTo(.3, 0, 1), cc.callFunc(function() {
t._openPanel.active = !1;
t._rewardPanel.runAction(cc.sequence(cc.scaleTo(.3, 1), cc.callFunc(function() {})));
})));
s.utils.currentLevel > parseInt(this._redBagInfo.lastOpenLevel) && 2 == this._show_type && (this._redBagInfo.lastOpenLevel = s.utils.currentLevel.toString());
};
t.prototype.onBtnDoubleMoney = function(e, t) {
var i = this;
s.utils.SendEvent("拆红包弹窗-点击视频双倍领取");
s.utils.adManager.ShowVideo(function(t, o) {
if (t) {
i._redBagInfo.balance = parseFloat((i._redBagInfo.balance + i._money).toFixed(3));
i._redBagInfo.totalMoney = parseFloat((i._redBagInfo.totalMoney + i._money).toFixed(3));
i._totalMoneyLbl.string = "累计获得现金" + i._redBagInfo.totalMoney + "元";
s.utils.showMsg("领取双倍红包成功！");
s.utils.SendEvent("拆红包弹窗-视频双倍领取成功");
e.target.active = !1;
} else {
s.utils.showMsg(o);
s.utils.SendEvent("拆红包弹窗-视频双倍领取失败");
}
});
};
t.prototype.showWithDrawalPanel = function() {
s.utils.SendEvent("拆红包弹窗-点击提现上报");
s.utils.showWithdrawalPanel();
};
t.prototype.init = function() {
var e = this;
s.utils.SendEvent("拆红包弹窗-展示成功！" + this._show_type + " :" + this._redBagInfo.isFreeRedBag);
this._title.children[0].active = 1 == this._show_type && this._redBagInfo.isFreeRedBag;
this._title.children[1].active = 2 == this._show_type;
this._title.children[2].active = 3 == this._show_type;
if (2 == this._proInfo.type && 2 == this._show_type) {
this._canShowVideoOpen = !0;
this._btnVideoOpen.active = !0;
} else {
this._canShowVideoOpen = !1;
this._btnVideoOpen.active = !1;
}
if (s.utils.ServerConfig.red_bag_open_view_close_btn_show_delay && s.utils.ServerConfig.red_bag_open_view_close_btn_show_delay > 0) {
this._btnClose.opacity = 0;
var t = s.utils.ServerConfig.red_bag_open_view_close_btn_show_delay ? s.utils.ServerConfig.red_bag_open_view_close_btn_show_delay : 0;
setTimeout(function() {
s.utils.showLog("拆红包关闭按钮延迟显示 " + t + "秒显示！");
e._btnClose.runAction(cc.fadeIn(.3));
}, 1e3 * t);
} else if (this._redBagInfo.progress < this._redBagInfo.totalProgress && !this._redBagInfo.isFreeRedBag && this._redBagInfo.freeRedBagCount <= 0) {
this._btnOpen.children[0].active = !0;
this._btnOpen.children[1].getComponent(cc.Button).enableAutoGrayEffect = !0;
this._btnClose.opacity = 0;
var i = s.utils.ServerConfig.red_bag_close_btn_show_delay ? s.utils.ServerConfig.red_bag_close_btn_show_delay : 0;
setTimeout(function() {
s.utils.showLog("拆红包关闭按钮延迟显示 " + i + "秒显示！");
e._btnClose.runAction(cc.fadeIn(.3));
}, 1e3 * i);
} else this._btnClose.active = !1;
this._totalMoneyLbl.string = "累计获得现金" + this._redBagInfo.totalMoney + "元";
};
t.prototype.initData = function(e) {
this._show_type = e;
};
t.prototype.show = function() {
this.node.active = !0;
};
t.prototype.hide = function() {
this.node.active = !1;
s.utils.rewardCloseFunc && s.utils.rewardCloseFunc();
s.utils.rewardCloseFunc && (s.utils.rewardCloseFunc = null);
};
t.prototype.onCloseBtnHandler = function(e, t) {
this.hide();
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
PlatUtils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8e57eTF7JlEk4fSovTnBAgF", "PlatUtils");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./Utils"), s = cc._decorator, a = s.ccclass, r = (s.property, function() {
function e() {}
t = e;
Object.defineProperty(e, "IsNativeAndroid", {
get: function() {
return cc.sys.os == cc.sys.OS_ANDROID && !0;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsNativeIOS", {
get: function() {
return cc.sys.os == cc.sys.OS_IOS && !0;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "ISUC", {
get: function() {
return window.uc;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "ISCocos", {
get: function() {
return window.loadRuntime && !this.IsOPPO && !this.IsVIVO && !window.kwaigame && !this.IsWiFi && !this.IsHuaWei;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsAndroid", {
get: function() {
return cc.sys.os == cc.sys.OS_ANDROID;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsIOS", {
get: function() {
return cc.sys.os == cc.sys.OS_IOS;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsWechat", {
get: function() {
return cc.sys.platform == cc.sys.WECHAT_GAME && !this.IsDouyin && !this.IsQQ && !this.IsKwai;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsOPPO", {
get: function() {
return cc.sys.platform == cc.sys.OPPO_GAME;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsBaidu", {
get: function() {
cc.sys.FB_PLAYABLE_ADS;
return cc.sys.platform == cc.sys.BAIDU_GAME;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsVIVO", {
get: function() {
return cc.sys.platform == cc.sys.VIVO_GAME;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsDouyin", {
get: function() {
return window.tt;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsQQ", {
get: function() {
return window.qq;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsQTT", {
get: function() {
return window.qttGame;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsXiaoMi", {
get: function() {
return !(t.IsOPPO || t.IsVIVO || t.IsHuaWei || !window.qg);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "Is4399", {
get: function() {
return window.h5api;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsBili", {
get: function() {
return window.bl;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsKwai", {
get: function() {
return "undefined" != typeof KSGameGlobal;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsWiFi", {
get: function() {
return window.wuji;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsHago", {
get: function() {
return window.hg;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsHuaWei", {
get: function() {
return window.hbs;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsTest", {
get: function() {
return !1;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsFaceBook", {
get: function() {
return void 0 !== window.FB || void 0 !== window.minigame_sdk;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "androidChannel", {
get: function() {
return n.utils.config && n.utils.config.nativeAndroidConfig ? n.utils.config.nativeAndroidConfig.channel : "";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsAndroidChuanYin", {
get: function() {
return "chuanyin" == this.androidChannel;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsAndroidOppo", {
get: function() {
return "oppo" == this.androidChannel;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsAndroidVivo", {
get: function() {
return "vivo" == this.androidChannel;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsAndroidDouYin", {
get: function() {
return "douyin" == this.androidChannel;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsAndroidHuaWei", {
get: function() {
return this.androidChannel.indexOf("huawei") > -1;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e, "IsGoogleWeb", {
get: function() {
return !!window.googleApi;
},
enumerable: !1,
configurable: !0
});
var t;
return e = t = o([ a ], e);
}());
i.default = r;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
QCrossWidget6: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "20525Sx+oND2KEXTsMeJ4bb", "QCrossWidget6");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./AldUtils"), r = e("./YZ_Constant"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._pageView = null;
t._pageItem = null;
t._pageRecItem = null;
t._jumpList = null;
t._items = [];
return t;
}
t.prototype.onLoad = function() {
this._pageView = this.node.getChildByName("PageView").getComponent(cc.PageView);
this._pageItem = this._pageView.content.getChildByName("Panel");
this._pageRecItem = this._pageItem.children[0];
this._pageView.content.removeAllChildren();
a.default.SendEvent("显示6元素交叉推广组件");
};
t.prototype.start = function() {
this._jumpList = s.utils.getRecommondGameList();
if (this._jumpList && this._jumpList.length > 0) this._initWidget(); else {
cc.warn("交叉推广数据为null, 6元素交叉推广组件不显示!");
this.node.destroy();
}
};
t.prototype._initWidget = function() {
var e = Math.ceil(this._jumpList.length / 6);
s.utils.showLog("qcrosswidget >>> totalPage = " + e);
for (var t = 0, i = 0; i < e; i++) {
var o = cc.instantiate(this._pageItem);
o.removeAllChildren();
this._pageView.addPage(o);
for (var n = 0; n < 6 && this._jumpList[t]; n++) {
var a = cc.instantiate(this._pageRecItem);
o.addChild(a);
a.getComponent("QCrossWidgetItem")._location = r.SubLocation.isQCross;
var l = this._jumpList[t];
a.getComponent("QCrossWidgetItem").init(l);
t++;
}
}
this.autoRefrshPageView();
};
t.prototype.autoRefrshPageView = function() {
var e = this;
this.unscheduleAllCallbacks();
var t = 3;
s.utils.ServerConfig && s.utils.ServerConfig.statement_auto_refresh && (t = s.utils.ServerConfig.statement_auto_refresh);
s.utils.showLog("结算交叉推广组件" + t + "秒自动刷新");
this.schedule(function() {
var t = e._pageView.getPages().length, i = e._pageView.getCurrentPageIndex();
0 == (i = i < t && i + 1 !== t ? i + 1 : 0) ? e._pageView.scrollToPage(i, 0) : e._pageView.scrollToPage(i, 2);
}, t);
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./AldUtils": "AldUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
QCrossWidgetItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3f5ab/DxFJAZ6TgbVUiQqrS", "QCrossWidgetItem");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = e("./YZ_Constant"), l = e("./CompatibleTool"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.data = null;
t._sprite = null;
t._dataDirty = !1;
t._isReward = !1;
t._location = null;
return t;
}
t.prototype.onLoad = function() {
this._sprite = this.node.getComponent(cc.Sprite);
};
t.prototype.init = function(e) {
this.data = e;
this._dataDirty = !0;
};
t.prototype.update = function(e) {
if (this._dataDirty) {
this._dataDirty = !1;
this.updateItem();
}
};
t.prototype.onEnable = function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onItemClickHandler, this);
};
t.prototype.onDisable = function() {
this.node.targetOff(this);
};
t.prototype._onItemClickHandler = function() {
var e = this;
console.log("_onItemClickHandler");
if (a.default.IsDouyin) s.utils.Tool_Douyin.showMoreGamesModal(); else {
this.data && this.data.appid && this._postClickData(this.data.appid);
if (this._location != r.SubLocation.isReward) if (this.data.is_jump && "true" == this.data.is_jump && this.data.appid) {
s.utils.showLog("直接跳转!", this.data.appid);
s.utils.navigateToMiniGame(this.data, function(t) {
t && e.data && e.data.appid && e._postData(e.data.appid);
});
} else if (this.data.is_jump && "false" == this.data.is_jump && this.data.qr_code) if (a.default.IsWechat) {
s.utils.showLog("二维码跳转!", this.data.qr_code);
s.utils.wechatTool.previewImage(this.data.qr_code);
} else s.utils.showLog("不支持二维码跳转!"); else {
s.utils.showLog("没有is_jump直接跳转!", this.data.appid);
this.data.appid && s.utils.navigateToMiniGame(this.data, function(t) {
t && e.data.appid && e._postData(e.data.appid);
});
} else s.utils.navigateToMiniGame(this.data, function(t) {
if (t) {
e.data && e.data.appid && e._postData(e.data.appid);
s.utils.showLog("激励插屏跳转成功！下发奖励！");
s.utils.adManager.videoCallBack && s.utils.adManager.videoCallBack(t);
s.utils.adManager.videoCallBack = null;
} else {
s.utils.showLog("激励插屏跳转失败！");
s.utils.adManager.videoCallBack && s.utils.adManager.videoCallBack(!1, "获取试玩奖励失败！");
}
s.utils.adManager.videoCallBack = null;
s.utils.adManager.hideRewardInsert();
});
}
};
t.prototype.updateItem = function() {
var e = this;
if (this.data && this.data.logo) {
var t = cc.loader.getRes(this.data.logo);
if (t) {
if (cc.isValid(this) && this._sprite) {
var i = this.node.getContentSize();
this._sprite.spriteFrame = new cc.SpriteFrame(t);
this.node.setContentSize(i);
}
} else l.default.LoadRes(this.data.logo, function(t, i) {
if (!t && cc.isValid(e) && e._sprite) {
var o = e.node.getContentSize();
e._sprite.spriteFrame = new cc.SpriteFrame(i);
e.node.setContentSize(o);
}
});
}
};
t.prototype._postData = function(e) {
s.utils.postDataByLocation(e, this._location, 1);
};
t.prototype._postClickData = function(e) {
s.utils.postDataByLocation(e, this._location, 0);
};
return t = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
QEasing: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "96829TvMTFNgKlOd5JpyJkO", "QEasing");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.EaseType = void 0;
var s, a = cc._decorator, r = a.ccclass, l = a.property;
(function(e) {
e[e.none = 0] = "none";
e[e.easeIn = 1] = "easeIn";
e[e.easeOut = 2] = "easeOut";
e[e.easeInOut = 3] = "easeInOut";
e[e.easeExponentialIn = 4] = "easeExponentialIn";
e[e.easeExponentialOut = 5] = "easeExponentialOut";
e[e.easeExponentialInOut = 6] = "easeExponentialInOut";
e[e.easeSineIn = 7] = "easeSineIn";
e[e.easeSineOut = 8] = "easeSineOut";
e[e.easeSineInOut = 9] = "easeSineInOut";
e[e.easeElasticIn = 10] = "easeElasticIn";
e[e.easeElasticOut = 11] = "easeElasticOut";
e[e.easeElasticInOut = 12] = "easeElasticInOut";
e[e.easeBounceIn = 13] = "easeBounceIn";
e[e.easeBounceOut = 14] = "easeBounceOut";
e[e.easeBounceInOut = 15] = "easeBounceInOut";
e[e.easeBackIn = 16] = "easeBackIn";
e[e.easeBackOut = 17] = "easeBackOut";
e[e.easeBackInOut = 18] = "easeBackInOut";
e[e.easeBezierAction = 19] = "easeBezierAction";
e[e.easeQuadraticActionIn = 20] = "easeQuadraticActionIn";
e[e.easeQuadraticActionOut = 21] = "easeQuadraticActionOut";
e[e.easeQuadraticActionInOut = 22] = "easeQuadraticActionInOut";
e[e.easeQuarticActionIn = 23] = "easeQuarticActionIn";
e[e.easeQuarticActionOut = 24] = "easeQuarticActionOut";
e[e.easeQuarticActionInOut = 25] = "easeQuarticActionInOut";
e[e.easeQuinticActionIn = 26] = "easeQuinticActionIn";
e[e.easeQuinticActionOut = 27] = "easeQuinticActionOut";
e[e.easeQuinticActionInOut = 28] = "easeQuinticActionInOut";
e[e.easeCircleActionIn = 29] = "easeCircleActionIn";
e[e.easeCircleActionOut = 30] = "easeCircleActionOut";
e[e.easeCircleActionInOut = 31] = "easeCircleActionInOut";
e[e.easeCubicActionIn = 32] = "easeCubicActionIn";
e[e.easeCubicActionOut = 33] = "easeCubicActionOut";
e[e.easeCubicActionInOut = 34] = "easeCubicActionInOut";
})(s = i.EaseType || (i.EaseType = {}));
var c = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.easeType = s.none;
return t;
}
t.prototype._getEase = function() {
switch (this.easeType) {
case s.none:
return "linear";

case s.easeOut:
return "easeOut";

case s.easeInOut:
return "easeInOut";

case s.easeExponentialIn:
return "easeExponentialIn";

case s.easeExponentialOut:
return "easeExponentialOut";

case s.easeExponentialInOut:
return "easeExponentialInOut";

case s.easeSineIn:
return "sineIn";

case s.easeSineOut:
return "sineOut";

case s.easeSineInOut:
return "sineInOut";

case s.easeElasticIn:
return "elasticIn";

case s.easeElasticOut:
return "elasticOut";

case s.easeElasticInOut:
return "elasticInOut";

case s.easeBounceIn:
return "bounceIn";

case s.easeBounceOut:
return "bounceOut";

case s.easeBackIn:
return "backIn";

case s.easeBackOut:
return "backOut";

case s.easeBackInOut:
return "backInOut";

case s.easeQuadraticActionIn:
return "quadraticActionIn";

case s.easeQuadraticActionOut:
return "quadraticActionOut";

case s.easeQuadraticActionInOut:
return "quadraticActionInOut";

case s.easeQuarticActionIn:
return "quarticActionIn";

case s.easeQuarticActionOut:
return "quarticActionOut";

case s.easeQuarticActionInOut:
return "quarticActionInOut";

case s.easeQuinticActionIn:
return "quinticActionIn";

case s.easeQuinticActionOut:
return "quinticActionOut";

case s.easeQuinticActionInOut:
return "quinticActionInOut";

case s.easeCircleActionIn:
return "easeCircleActionIn";

case s.easeCircleActionOut:
return "circleActionOut";

case s.easeCircleActionInOut:
return "circleActionInOut";

case s.easeCubicActionIn:
return "cubicActionIn";

case s.easeCubicActionOut:
return "cubicActionOut";

case s.easeCubicActionInOut:
return "cubicActionInOut";
}
};
n([ l({
type: cc.Enum(s)
}) ], t.prototype, "easeType", void 0);
return t = n([ r ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
QMoveAction: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6fc8aO5YvdLWLunFhyStsI8", "QMoveAction");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./QEasing"), a = cc._decorator, r = a.ccclass, l = a.property, c = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delay = 0;
t.delPos = cc.Vec2.ZERO;
t.duration = 0;
t.interval = 0;
t.loop = !1;
t.revert = !1;
t._tween = null;
t._originPos = cc.Vec3.ZERO;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this._originPos = cc.v3(this.node.x, this.node.y);
this.node.position = cc.v3(this._originPos.x - this.delPos.x, this._originPos.y - this.delPos.y);
var t = this.getComponent(cc.Widget);
t && (t.enabled = !1);
var i = cc.tween().delay(this.delay), o = cc.tween();
o.call(function() {
e.node.position = cc.v3(e._originPos.x - e.delPos.x, e._originPos.y - e.delPos.y);
});
if (this.revert) {
o.by(.5 * this.duration, {
position: cc.v3(this.delPos.x, this.delPos.y)
}, {
easing: this._getEase()
});
o.by(.5 * this.duration, {
position: cc.v3(-this.delPos.x, -this.delPos.y)
}, {
easing: this._getEase()
});
} else o.by(this.duration, {
position: cc.v3(this.delPos.x, this.delPos.y)
}, {
easing: this._getEase()
});
o.delay(this.interval);
this._tween = cc.tween(this.node);
this._tween.then(i);
this._tween.then(o);
this.loop && this._tween.repeatForever();
};
t.prototype.onEnable = function() {
this.node.position = cc.v3(this._originPos.x - this.delPos.x, this._originPos.y - this.delPos.y);
this._tween.start();
};
n([ l() ], t.prototype, "delay", void 0);
n([ l(cc.Vec2) ], t.prototype, "delPos", void 0);
n([ l() ], t.prototype, "duration", void 0);
n([ l() ], t.prototype, "interval", void 0);
n([ l() ], t.prototype, "loop", void 0);
n([ l() ], t.prototype, "revert", void 0);
return t = n([ r ], t);
}(s.default);
i.default = c;
cc._RF.pop();
}, {
"./QEasing": "QEasing"
} ],
QRotation: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "71041IFI81OEb+n+xBiAdfv", "QRotation");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./QEasing"), a = cc._decorator, r = a.ccclass, l = a.property, c = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delay = 0;
t.angle = 0;
t.duration = 0;
t.loop = !1;
t.revert = !1;
t._originAngle = 0;
t._tween = null;
return t;
}
t.prototype.onLoad = function() {
this._originAngle = this.node.angle;
var e = cc.tween().delay(this.delay), t = cc.tween();
this.revert ? t.by(this.duration / 2, {
angle: this.angle
}).by(this.duration / 2, {
angle: -this.angle
}, {
easing: this._getEase()
}) : t.by(this.duration, {
angle: this.angle
}, {
easing: this._getEase()
});
this._tween = cc.tween(this.node);
this._tween.then(e);
this._tween.then(t);
this.loop && this._tween.repeatForever();
};
t.prototype.onEnable = function() {
this.node.angle = this._originAngle;
this._tween.start();
};
n([ l() ], t.prototype, "delay", void 0);
n([ l({
tooltip: "初始角度，顺时针为负数"
}) ], t.prototype, "angle", void 0);
n([ l() ], t.prototype, "duration", void 0);
n([ l() ], t.prototype, "loop", void 0);
n([ l() ], t.prototype, "revert", void 0);
return t = n([ r ], t);
}(s.default);
i.default = c;
cc._RF.pop();
}, {
"./QEasing": "QEasing"
} ],
QScaleAction: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ede9al62i9NEYE1+EQcGsFh", "QScaleAction");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./QEasing"), a = cc._decorator, r = a.ccclass, l = a.property, c = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.delay = 0;
t.fromScale = cc.Vec2.ZERO;
t.targetScale = cc.Vec2.ZERO;
t.duration = 0;
t.loop = !1;
t.revert = !1;
t._tween = null;
return t;
}
t.prototype.onLoad = function() {
this.node.scaleX = this.fromScale.x;
this.node.scaleY = this.fromScale.y;
var e = cc.tween();
e.delay(this.delay);
var t = cc.tween();
if (this.revert) {
t.to(.5 * this.duration, {
scaleX: this.targetScale.x,
scaleY: this.targetScale.y
}, {
easing: this._getEase()
});
t.to(.5 * this.duration, {
scaleX: this.fromScale.x,
scaleY: this.fromScale.y
}, {
easing: this._getEase()
});
} else t.to(this.duration, {
scaleX: this.targetScale.x,
scaleY: this.targetScale.y
}, {
easing: this._getEase()
});
this._tween = cc.tween(this.node);
this._tween.then(e);
this._tween.then(t);
this.loop && this._tween.repeatForever();
};
t.prototype.onEnable = function() {
this.node.scaleX = this.fromScale.x;
this.node.scaleY = this.fromScale.y;
this._tween.start();
};
n([ l() ], t.prototype, "delay", void 0);
n([ l() ], t.prototype, "fromScale", void 0);
n([ l(cc.Vec2) ], t.prototype, "targetScale", void 0);
n([ l() ], t.prototype, "duration", void 0);
n([ l() ], t.prototype, "loop", void 0);
n([ l() ], t.prototype, "revert", void 0);
return t = n([ r ], t);
}(s.default);
i.default = c;
cc._RF.pop();
}, {
"./QEasing": "QEasing"
} ],
QTween: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "05a06upE5xFF5F3p1c1BzPh", "QTween");
var o, n = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), s = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.TweenMess = i.TweenTyep = void 0;
(function(e) {
e[e.move = 0] = "move";
e[e.circle = 1] = "circle";
e[e.bezier = 2] = "bezier";
e[e.rotate = 3] = "rotate";
e[e.scale = 4] = "scale";
})(o = i.TweenTyep || (i.TweenTyep = {}));
var a = cc._decorator, r = a.ccclass, l = a.property, c = function() {
function e() {
this.tweenType = o.move;
this.posList = [ cc.v2(0, 0) ];
this.angleV = 0;
this.actTime = 1;
this.delayTime = 0;
}
s([ l({
type: cc.Enum(o)
}) ], e.prototype, "tweenType", void 0);
s([ l({
type: [ cc.Vec2 ]
}) ], e.prototype, "posList", void 0);
s([ l({
visible: function() {
return this.tweenType == o.circle || this.tweenType == o.rotate;
}
}) ], e.prototype, "angleV", void 0);
s([ l() ], e.prototype, "actTime", void 0);
s([ l() ], e.prototype, "delayTime", void 0);
return e = s([ r("TweenMess") ], e);
}();
i.TweenMess = c;
var u = function(e) {
n(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.tweenList = [];
t.startNum = 0;
t.mainTween = null;
t.angleConut = 0;
t.centerPos = cc.v2(0, 0);
t.isRotate = !1;
return t;
}
t.prototype.start = function() {
this.creatTween();
this.node.opacity = 255;
};
t.prototype.creatTween = function() {
var e = this;
this.mainTween = cc.tween(this.node);
if (!(this.tweenList.length <= 0)) {
for (var t = function(t) {
var n = i.tweenList[t];
if (n.tweenType == o.move) i.mainTween.to(n.actTime, {
position: n.posList[0]
}).delay(n.delayTime); else if (n.tweenType == o.bezier) {
i.runRotate();
i.mainTween.bezierTo(n.actTime, n.posList[0], n.posList[1], n.posList[2]).delay(n.delayTime);
} else n.tweenType == o.circle ? i.mainTween.call(function() {
e.CurAngle = 0;
e.centerPos = n.posList[0];
cc.tween(e).to(n.actTime, {
CurAngle: n.angleV * n.actTime
}).start();
}).delay(n.actTime + n.delayTime) : n.tweenType == o.rotate ? i.mainTween.by(n.actTime, {
angle: n.angleV
}) : n.tweenType == o.scale && i.mainTween.to(n.actTime, {
scaleX: n.posList[0].x,
scaleY: n.posList[0].y
}).delay(n.delayTime);
}, i = this, n = 0; n < this.tweenList.length; n++) t(n);
this.mainTween.union().repeatForever().start();
}
};
Object.defineProperty(t.prototype, "CurAngle", {
get: function() {
return this.angleConut;
},
set: function(e) {
if (Math.abs(this.angleConut - e) < 10) {
var t = cc.v2(this.node.getPosition());
t = t.sub(this.centerPos).rotate((e - this.angleConut) / 180 * Math.PI).add(this.centerPos);
this.node.setPosition(t);
}
this.angleConut = e;
},
enumerable: !1,
configurable: !0
});
t.prototype.runRotate = function() {
var e = this;
if (!this.isRotate) {
this.isRotate = !0;
this.node.x < 0 ? this.schedule(function() {
e.node.angle += 3;
}, .01) : this.schedule(function() {
e.node.angle -= 3;
}, .01);
}
};
s([ l({
type: [ c ]
}) ], t.prototype, "tweenList", void 0);
return t = s([ r ], t);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {} ],
RecommendGamesNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b12f97J/i9PlqiR38XzTuyP", "RecommendGamesNode");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = cc._decorator, c = l.ccclass, u = l.property, h = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.prefab = null;
t.prefab1 = null;
t.moreGamesPanel = null;
t._pageView = null;
t._content = null;
t._gamePageNode = null;
t._dataDirty = !1;
t._isContentFilled = !1;
t._scrollInterval = 3;
t._timeTmp = 0;
t._gameList = null;
t.moreGame = null;
return t;
}
t.prototype.onLoad = function() {
var e = this.node.getChildByName("PageView");
this.moreGame = cc.find("bg/BtnMore", this.node);
this._pageView = e.getComponent(cc.PageView);
this._content = this._pageView.content;
this._gamePageNode = this._content.getChildByName("GamePage");
this._content.removeAllChildren();
};
t.prototype.init = function(e) {
this._gameList = e;
this._gameList && this._gameList.length > 0 ? this._dataDirty = !0 : this.node.active = !1;
};
t.prototype.onEnable = function() {
var e = this;
this.moreGame.on(cc.Node.EventType.TOUCH_START, function(t) {
if (r.default.IsDouyin) s.utils.Tool_Douyin.showMoreGamesModal(); else if (!r.default.IsOPPO || s.utils.ServerConfig.recommend_bar_show_pannel && "true" == s.utils.ServerConfig.recommend_bar_show_pannel) {
var i = void 0;
if (2 == s.utils.ServerConfig.more_game_skin) {
(i = cc.instantiate(e.prefab1)).zIndex = 999;
e.moreGamesPanel = i.getComponent("MoreGamesPanel1");
} else {
(i = cc.instantiate(e.prefab)).zIndex = 999;
e.moreGamesPanel = i.getComponent("MoreGamesPanel");
}
cc.director.getScene().addChild(i);
e.moreGamesPanel._location = a.SubLocation.isScrollbar;
e.moreGamesPanel.init(e._gameList);
e.moreGamesPanel.show();
} else s.utils.showLog("服务器未配置显示更多游戏面板！");
});
};
t.prototype.onDisable = function() {
this.moreGame.targetOff(this);
};
t.prototype.update = function(e) {
if (this._dataDirty) {
this._dataDirty = !1;
this._updateContent();
}
};
t.prototype._updateContent = function() {
if (this._gameList) {
s.utils.postRecommentShowData(a.SubLocation.isScrollbar);
for (var e = Math.floor(this._gameList.length / 4), t = 0, i = 0; i < e; i++) {
for (var o = [], n = 0; n < 4; n++) {
o.push(this._gameList[t]);
t++;
}
var r = cc.instantiate(this._gamePageNode);
r.getComponent("GamePage").init(o);
this._pageView.addPage(r);
}
this._gamePageNode.destroy();
this._isContentFilled = !0;
this.autoRefrshPageView();
}
};
t.prototype.autoRefrshPageView = function() {
var e = this;
this.unscheduleAllCallbacks();
this.schedule(function() {
var t = e._pageView.getPages().length, i = e._pageView.getCurrentPageIndex();
0 == (i = i < t && i + 1 !== t ? i + 1 : 0) ? e._pageView.scrollToPage(i, 0) : e._pageView.scrollToPage(i, 2.5);
}, 3.5);
};
n([ u(cc.Prefab) ], t.prototype, "prefab", void 0);
n([ u(cc.Prefab) ], t.prototype, "prefab1", void 0);
return t = n([ c ], t);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
RecommendGamesWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e31b1c0YlND25VRQ4r4cdDL", "RecommendGamesWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = cc._decorator, l = r.ccclass, c = (r.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._recommendNode = null;
t._isInit = !1;
return t;
}
t.prototype.onLoad = function() {
this._recommendNode = this.getComponentInChildren("RecommendGamesNode");
this._recommendNode.node.active = !1;
};
t.prototype.onEnable = function() {
var e = this;
s.utils.registerServerInitEvent(function() {
e._initWidget();
}, this);
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
};
t.prototype._initWidget = function() {
if (!this._isInit) {
var e = !0;
if (s.utils.isShowRecommondGamesList()) {
a.default.IsDouyin && (s.utils.Tool_Douyin.isShowMoreGamesModal() || this.node.destroy());
var t = s.utils.getRecommondGameList();
if (t) if (t.length > 0) {
this._isInit = !0;
this._recommendNode.init(t);
this._recommendNode.node.active = !0;
} else {
cc.warn("交叉推广数据长度为0");
e = !1;
} else {
cc.warn("交叉推广数据为null!");
e = !1;
}
}
e || this.node.destroy();
}
};
return t = n([ l ], t);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
RedBagProgressNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e9a673D3vhJ67LdUZDWkzQe", "RedBagProgressNode");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.progressLbl = null;
t.progressBar = null;
t.tripNode = null;
t.tripProgressLbl = null;
t._location = "default";
return t;
}
t.prototype.onLoad = function() {
this.progressLbl = this.node.getComponentInChildren(cc.Label);
this.progressBar = this.node.getComponentInChildren(cc.ProgressBar);
this.tripNode = cc.find("Mask/tripNode", this.node);
this.tripNode.opacity = 0;
this.tripProgressLbl = this.tripNode.getComponentInChildren(cc.Label);
};
t.prototype.init = function(e) {
var t = this;
e && e.location && (this._location = e.location);
cc.log("wid s==========" + s.utils.yzRedBagInfo.totalProgress + " pro =" + s.utils.yzRedBagInfo.progress);
this.progressBar.progress = s.utils.yzRedBagInfo.progress / s.utils.yzRedBagInfo.totalProgress;
this.progressLbl.string = s.utils.yzRedBagInfo.progress + "/" + s.utils.yzRedBagInfo.totalProgress;
this.tripProgressLbl.string = "通过" + s.utils.yzRedBagInfo.totalProgress + "关即可领取红包";
if (s.utils.yzRedBagInfo.progress >= s.utils.yzRedBagInfo.totalProgress) {
cc.find("Mask/Icon/pro_cghb", this.node).active = !1;
cc.find("Mask/Icon/pro_full", this.node).active = !0;
cc.find("Mask/Icon/pro_full", this.node).stopAllActions();
cc.find("Mask/Icon/pro_full", this.node).runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1.2), cc.scaleTo(.5, 1))));
} else {
cc.find("Mask/Icon/pro_cghb", this.node).active = !0;
cc.find("Mask/Icon/pro_full", this.node).active = !1;
cc.find("Mask/Icon/pro_full", this.node).stopAllActions();
}
setTimeout(function() {
t.tripNode && cc.isValid(t.tripNode) && t.tripNode.runAction(cc.sequence(cc.fadeIn(.3), cc.callFunc(function() {
t.tripNode && cc.isValid(t.tripNode) && t.tripNode.runAction(cc.sequence(cc.delayTime(5), cc.fadeOut(.3)));
})));
}, 3e3);
};
t.prototype.onEnable = function() {
var e = this;
this.init();
s.utils.SendEvent("红包进度挂件-" + this._location + "-展示成功");
cc.game.on("YZ_RED_BAG_PROGRESS_CHANGE", function() {
e.init();
}, this);
};
t.prototype.showOpenRedBagPanel = function() {
s.utils.SendEvent("红包进度挂件-" + this._location + "-点击上报");
s.utils.yzRedBagInfo.progress >= s.utils.yzRedBagInfo.totalProgress ? s.utils.showOpenRedBagPanel({
showType: 2
}) : s.utils.showMsg("再挑战" + (s.utils.yzRedBagInfo.totalProgress - s.utils.yzRedBagInfo.progress) + "关即可领取现金红包");
};
t.prototype.onDisable = function() {
this.unscheduleAllCallbacks();
this.node.targetOff(this);
cc.game.targetOff(this);
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
RedBagProgressWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "08619NRFCNJ1ZrMhE5AcumI", "RedBagProgressWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._redBagProgressNode = null;
t._isInit = !1;
t._data = null;
return t;
}
t.prototype.onLoad = function() {
this._redBagProgressNode = this.getComponentInChildren("RedBagProgressNode");
this._redBagProgressNode.node.active = !1;
};
t.prototype.onEnable = function() {
var e = this;
s.utils.registerServerInitEvent(function() {
e._initWidget();
}, this);
};
t.prototype.init = function(e) {
this._data = e;
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
};
t.prototype._initWidget = function() {
this._redBagProgressNode._location = this._data ? this._data.location : "default";
this._redBagProgressNode.node.active = !0;
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
ResMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "16b2fTucYZJHKNGhllUA2TP", "ResMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./CocosZ"), n = function() {
function e() {
this._prefabDic = {};
this._imgDic = {};
this._atlasDic = {};
this._audioDic = {};
this._jsonDic = {};
}
Object.defineProperty(e, "inst", {
get: function() {
if (!e._inst) {
e._inst = new e();
e._inst._init();
}
return e._inst;
},
enumerable: !1,
configurable: !0
});
e.prototype._init = function() {};
e.prototype.cacheCocoszAudio = function() {
for (var e = 0; e < o.cocosz.audioList.length; e++) {
var t = o.cocosz.audioList[e];
this._cacheRes(t, cc.AudioClip);
}
o.cocosz.audioList = null;
};
e.prototype.loadRes = function(e, t, i, n) {
var s = o.cocosz.getBundleWithPath(e);
s && s.load(e, t, function(e, t, o) {
i && i(e, t, o);
}, function(t, i) {
t && cc.log("加载资源", e, "失败");
n && n(t, i);
});
};
e.prototype.loadAndCacheResArray = function(e, t, i, o) {
for (var n = 0; n < e.length; n++) this.loadAndCacheRes(e[n], t, i, o);
};
e.prototype.loadAndCacheRes = function(e, t, i, n) {
var s = this, a = e.path ? e.path : e, r = o.cocosz.getBundleWithPath(a);
r && r.load(a, t, function(e, t, o) {
i && i(e, t, o);
}, function(e, i) {
e ? cc.log("加载缓存资源", a, "失败") : s._cacheRes(i, t);
n && n(e, i);
});
};
e.prototype._cacheRes = function(e, t) {
t == cc.Prefab ? this._cachPrefab(e) : t == cc.SpriteFrame ? this._cachTexture(e) : t == cc.SpriteAtlas ? this._cachSpriteAtlas(e) : t == cc.AudioClip ? this._cachAudioClip(e) : t == cc.JsonAsset && this._cachJsonAsset(e);
};
e.prototype._cachPrefab = function(e) {
if (e) {
e.addRef();
this._prefabDic[e.name] = e;
}
};
e.prototype._cachTexture = function(e) {
if (e) {
e.addRef();
this._imgDic[e.name] = e;
}
};
e.prototype._cachSpriteAtlas = function(e) {
if (e) {
e.addRef();
this._atlasDic[e.name] = e;
for (var t = e.getSpriteFrames(), i = 0; i < t.length; i++) this._cachTexture(t[i]);
}
};
e.prototype._cachAudioClip = function(e) {
if (e) {
e.addRef();
this._audioDic[e.name] = e;
}
};
e.prototype._cachJsonAsset = function(e) {
if (e) {
e.addRef();
this._jsonDic[e.name] = e;
}
};
e.prototype.getRes = function(e, t) {
switch (t) {
case cc.Prefab:
return this._check(e, this._prefabDic[e]);

case cc.SpriteFrame:
return this._check(e, this._imgDic[e]);

case cc.AudioClip:
return this._check(e, this._audioDic[e]);

case cc.JsonAsset:
return this._check(e, this._jsonDic[e]);

default:
cc.log("资源类型不存在：" + t);
return null;
}
};
e.prototype._check = function(e, t) {
if (t && t.isValid) return t;
cc.log("资源不存在：" + e);
return null;
};
e.prototype.releaseResArray = function(e, t) {
var i = this;
e.forEach(function(e) {
var o = e.path.split("/").pop();
o && i.releaseSingleRes(o, t);
});
};
e.prototype.releaseSingleRes = function(e, t) {
switch (t) {
case cc.Prefab:
if (this._prefabDic[e] && cc.isValid(this._prefabDic[e])) {
this._prefabDic[e].decRef();
cc.assetManager.releaseAsset(this._prefabDic[e]);
this._prefabDic[e] = null;
}
break;

case cc.SpriteFrame:
if (this._imgDic[e] && cc.isValid(this._imgDic[e])) {
this._imgDic[e].decRef();
cc.assetManager.releaseAsset(this._imgDic[e]);
this._imgDic[e] = null;
}
break;

case cc.SpriteAtlas:
if (this._atlasDic[e] && cc.isValid(this._atlasDic[e])) {
this._atlasDic[e].decRef();
cc.assetManager.releaseAsset(this._atlasDic[e]);
this._atlasDic[e] = null;
}
break;

case cc.AudioClip:
if (this._audioDic[e] && cc.isValid(this._audioDic[e])) {
this._audioDic[e].decRef();
cc.assetManager.releaseAsset(this._audioDic[e]);
this._audioDic[e] = null;
}
break;

case cc.JsonAsset:
if (this._jsonDic[e] && cc.isValid(this._jsonDic[e])) {
this._jsonDic[e].decRef();
cc.assetManager.releaseAsset(this._jsonDic[e]);
this._jsonDic[e] = null;
}
break;

default:
cc.log("释放资源的类型出错");
}
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./CocosZ": "CocosZ"
} ],
RewardBoxPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6f2019z6ZxHbL/eZ03jZOQ0", "RewardBoxPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./AldUtils"), l = e("./PlatUtils"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = u.property, f = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.checked = null;
t.doubleBtn = null;
t.tripleVideoBtn = null;
t.tripleBtn = null;
t.goldLabel = null;
t.tirpNode = null;
t.light = null;
t.panel = null;
t.closeBtn = null;
t.rewardCallFunc = null;
t.rewardValue = 0;
t._boxGetRewardCount = 0;
t._multiple = 1;
return t;
}
Object.defineProperty(t.prototype, "boxGetRewardCount", {
get: function() {
return this._boxGetRewardCount;
},
set: function(e) {
this._boxGetRewardCount = e;
c.default.setItem(a.default.ST_GET_BOX_REWARD_COUNT, e + "");
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
this.rewardCallFunc = s.utils.rewardCallFunc;
this.rewardValue = s.utils.rewardValue;
cc.winSize.height < cc.winSize.width ? s.utils.adManager.HideBanner(a.BannerLocation.Game) : s.utils.adManager.ShowBanner(a.BannerLocation.Game);
this.panel.scale = 0;
this._boxGetRewardCount = c.default.getItem(a.default.ST_GET_BOX_REWARD_COUNT) || 0;
r.default.SendEvent("奖励宝箱显示成功！");
this.goldLabel.string = "/" + this.rewardValue.toString();
};
t.prototype.onEnable = function() {
var e = this;
s.utils.showSkipBtn(this.closeBtn, !0);
var t = 1;
t = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .6 : cc.winSize.width / 1080;
l.default.IsTest && (s.utils.ServerConfig.reward_box_change_count = 5);
this.panel.runAction(cc.sequence(cc.scaleTo(.3, t).easing(cc.easeBackOut()), cc.callFunc(function() {
var t = s.utils.ServerConfig.reward_box_change_count ? parseInt(s.utils.ServerConfig.reward_box_change_count) : 0;
if (void 0 != s.utils.ServerConfig.reward_box_change_count && e.boxGetRewardCount >= t) {
e.tripleVideoBtn.active = !0;
e.tripleBtn.active = !1;
s.utils.showScaleAction(e.tripleVideoBtn, e.doubleBtn, !0, !0);
} else {
e.tripleVideoBtn.active = !1;
s.utils.showScaleAction(e.tripleBtn, null, !1, !0);
}
e.light.runAction(cc.rotateBy(3, 360).repeatForever());
})));
};
t.prototype.onDestroy = function() {
s.utils.adManager.HideBanner(a.BannerLocation.Game);
if (s.utils.rewardBoxPanelCloseFunc) {
s.utils.rewardBoxPanelCloseFunc();
s.utils.rewardBoxPanelCloseFunc = null;
} else {
s.utils.rewardCloseFunc && s.utils.rewardCloseFunc();
s.utils.rewardCloseFunc = null;
}
};
t.prototype.onClose = function() {
var e = this;
this.panel.runAction(cc.sequence(cc.scaleTo(.3, 0).easing(cc.easeBackIn()), cc.callFunc(function() {
e.node.destroy();
})));
};
t.prototype.onPlayVideo = function() {
var e = this;
s.utils.adManager.ShowVideo(function(t, i) {
if (t) {
s.utils.showMsg("获得" + e._multiple + "倍奖励! +" + e.rewardValue * e._multiple);
e.rewardValue = e.rewardValue * e._multiple;
e.boxGetRewardCount++;
var o = new a.YZ_Reward();
o.rewardValue = e.rewardValue;
e.rewardCallFunc && e.rewardCallFunc(o);
e.onClose();
r.default.SendEvent("宝箱获取奖励成功！");
} else {
s.utils.showMsg(i || "视频广告播放失败！");
r.default.SendEvent("宝箱视频播放失败！");
}
});
};
t.prototype.onGetGold = function(e, t) {
this._multiple = parseInt(t);
switch (e.target.name) {
case "BtnTripleVideo":
r.default.SendEvent("点击宝箱视频获取按钮！");
this.onPlayVideo();
break;

case "BtnDouble":
case "BtnTriple":
r.default.SendEvent("点击宝箱普通获取按钮！");
s.utils.showMsg("获得" + this._multiple + "倍奖励! +" + this.rewardValue * this._multiple);
this.boxGetRewardCount++;
if (this.rewardCallFunc) {
var i = new a.YZ_Reward();
i.rewardValue = this.rewardValue * this._multiple;
this.rewardCallFunc(i);
}
this.onClose();
}
};
n([ d(cc.Node) ], t.prototype, "checked", void 0);
n([ d(cc.Node) ], t.prototype, "doubleBtn", void 0);
n([ d(cc.Node) ], t.prototype, "tripleVideoBtn", void 0);
n([ d(cc.Node) ], t.prototype, "tripleBtn", void 0);
n([ d(cc.Label) ], t.prototype, "goldLabel", void 0);
n([ d(cc.Node) ], t.prototype, "tirpNode", void 0);
n([ d(cc.Node) ], t.prototype, "light", void 0);
n([ d(cc.Node) ], t.prototype, "panel", void 0);
n([ d(cc.Node) ], t.prototype, "closeBtn", void 0);
return t = n([ h ], t);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"./AldUtils": "AldUtils",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
RewardInsert: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7087bM2rPJIqI5a6FekvQ2X", "RewardInsert");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./AldUtils"), r = e("./YZ_Constant"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._jumpList = null;
t._items = [];
t.isShow = !1;
t._panel = null;
t._mask = null;
return t;
}
t.prototype.onLoad = function() {
cc.game.addPersistRootNode(this.node);
this._mask = this.node.getChildByName("Mask");
this._panel = this.node.getChildByName("Panel");
for (var e = 0; e < 6; e++) {
var t = this._panel.getChildByName("Item" + e).getComponent("QCrossWidgetItem");
t._location = r.SubLocation.isReward;
this._items.push(t);
}
var i = 1;
i = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .7 : cc.winSize.width / 1080;
this._panel.scale = i;
};
t.prototype.start = function() {
this._jumpList = s.utils.getRecommondGameList();
if (this._jumpList && this._jumpList.length > 0) this._initWidget(); else {
cc.warn("交叉推广数据为null,激励插屏组件不显示!");
s.utils.adManager.videoCallBack && s.utils.adManager.videoCallBack(!1, "激励组件加载失败！");
s.utils.adManager.videoCallBack = null;
this.node.destroy();
}
};
t.prototype._initWidget = function() {
for (var e = 0, t = 0; t < this._jumpList.length; t++) {
var i = this._jumpList[t];
if (i && i.logo) {
var o = e;
if (o >= this._items.length) return;
e++;
this._items[o].init(i);
}
}
};
t.prototype.hide = function() {
this._panel.active = !1;
this._mask.active = !1;
};
t.prototype.onCloseBtnHandler = function(e, t) {
this.hide();
s.utils.adManager.videoCallBack && s.utils.adManager.videoCallBack(!1, "未点击试玩奖励！");
s.utils.adManager.videoCallBack = null;
};
t.prototype.update = function(e) {
if (!this.isShow) {
s.utils.showLog("show insertReward>>>>>");
a.default.SendEvent("显示激励插屏");
this.isShow = !0;
this._panel.active = !0;
this._mask.active = !0;
}
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./AldUtils": "AldUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
RewardRedBagPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "946b7F+eyBGEbvsWerWCHnf", "RewardRedBagPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
this._panel = this.node.getChildByName("Panel");
var e = 1;
e = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .5 : cc.winSize.width / 1080;
this._panel.scale = e;
this.init();
};
t.prototype.openRedBag = function() {
s.utils.SendEvent("恭喜获得红包弹窗-点击领取红包！");
s.utils.showOpenRedBagPanel({
showType: 2
});
this.hide();
};
t.prototype.init = function() {
s.utils.SendEvent("恭喜获得红包弹窗-展示成功！");
};
t.prototype.hide = function() {
this.node.active = !1;
};
t.prototype.onCloseBtnHandler = function(e, t) {
this.hide();
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
RewardShortCutPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "54f94n1JbRKZpvYKlOs4T8g", "RewardShortCutPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bg = null;
t.btnOk = null;
t.btnCancel = null;
t.glodNode = null;
t.glodLabel = null;
t.rewardCallFunc = null;
t.rewardValue = 0;
t._showBanner = !1;
return t;
}
t.prototype.onLoad = function() {
s.utils.SendEvent("结算前广告-创建快捷桌面-展示成功！");
var e = !1;
r.default.IsOPPO ? e = s.utils.oppoTool._shortcutCreated : r.default.IsVIVO && (e = s.utils.Tool_Vivo._shortcutCreated);
if (e) {
s.utils.showLog("已经存在桌面快捷方式，当前窗口直接销毁！");
s.utils.SendEvent("结算前广告-创建快捷桌面-已经存在桌面快捷方式！");
this.node.destroy();
} else if (void 0 == s.utils.ServerConfig.auto_desktop || 0 !== s.utils.ServerConfig.auto_desktop) {
this.rewardValue = s.utils.rewardValue;
this.rewardCallFunc = s.utils.rewardCallFunc;
this.initUi();
this.initListener();
if (cc.winSize.height < cc.winSize.width) s.utils.adManager.HideBanner(a.BannerLocation.Game); else {
this._showBanner = !0;
s.utils.adManager.ShowBanner(a.BannerLocation.Game);
}
} else {
s.utils.showLog("服务器配置直接创建桌面，不显示弹窗，当前窗口直接销毁！");
s.utils.SendEvent("结算前广告-创建快捷桌面-服务器配置直接创建桌面，不显示弹窗！");
s.utils.cur_tool && s.utils.cur_tool.createShortcut && s.utils.cur_tool.createShortcut(function(e) {
s.utils.SendEvent("结算前广告-直接创建快捷桌面-创建成功！");
});
this.node.destroy();
}
};
t.prototype.initUi = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
this.bg = this.node.getChildByName("Panel").children[0];
this.btnCancel = this.bg.getChildByName("btnClose");
this.btnOk = this.bg.getChildByName("btnOk");
this.glodNode = this.bg.getChildByName("rewardLabel");
this.glodLabel = this.glodNode.getComponent(cc.Label);
this.glodLabel.string = "奖励+" + this.rewardValue;
0 == this.rewardValue && (this.glodNode.active = !1);
s.utils.showSkipBtn(this.btnCancel);
};
t.prototype.onDestroy = function() {
this._showBanner && s.utils.adManager.HideBanner(a.BannerLocation.Game);
if (s.utils.rewardShortCutPanelCloseFunc) {
s.utils.rewardShortCutPanelCloseFunc();
s.utils.rewardShortCutPanelCloseFunc = null;
} else {
s.utils.rewardCloseFunc && s.utils.rewardCloseFunc();
s.utils.rewardCloseFunc = null;
}
s.utils.cur_tool && s.utils.cur_tool.checkHasShortCut && s.utils.cur_tool.checkHasShortCut();
};
t.prototype.onClose = function() {
var e = this;
this.bg.runAction(cc.sequence(cc.scaleTo(.3, 0).easing(cc.easeBackIn()), cc.callFunc(function() {
e.node.destroy();
})));
};
t.prototype.onEnable = function() {
var e = this;
this.bg.scale = 0;
var t = 1;
t = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .6 : cc.winSize.width / 1080;
this.bg.runAction(cc.sequence(cc.scaleTo(.3, t).easing(cc.easeBackOut()), cc.callFunc(function() {
e.btnOk.runAction(cc.sequence(cc.scaleTo(.5, 1.15), cc.scaleTo(.5, 1)).repeatForever());
})));
};
t.prototype.onCreateShortCut = function() {
var e = this;
r.default.IsOPPO ? s.utils.oppoTool.createShortcut(function(t) {
s.utils.SendEvent("结算前广告-创建快捷桌面-创建成功！");
e.rewardFunc(t);
}) : r.default.IsVIVO && s.utils.Tool_Vivo.createShortcut(function(t) {
s.utils.SendEvent("结算前广告-创建快捷桌面-创建成功！");
e.rewardFunc(t);
});
};
t.prototype.initListener = function() {};
t.prototype.rewardFunc = function(e) {
if (e) {
var t = new a.YZ_Reward();
t.rewardValue = this.rewardValue;
s.utils.showMsg("添加成功！奖励：+" + this.rewardValue);
this.rewardCallFunc && this.rewardCallFunc(t);
this.onClose();
} else {
s.utils.showMsg("添加失败！");
this.onClose();
}
};
t.prototype.initData = function() {};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
SceneMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a162cN35T1OAIoKBFHGNLm8", "SceneMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../Game/gameMgr"), n = e("../Game/setMap"), s = e("../UI/GuideLayer"), a = e("./CocosZ"), r = function() {
function e() {
this._activeScene = "";
this._timeInterval = 0;
}
Object.defineProperty(e, "inst", {
get: function() {
e._inst || (e._inst = new e());
return e._inst;
},
enumerable: !1,
configurable: !0
});
e.prototype.loadScene = function(e, t) {
var i = this;
if (this._activeScene == e) {
if (new Date().getTime() - this._timeInterval < 1e3) return;
}
this._timeInterval = new Date().getTime();
this.loadBefore(e, function() {
cc.director.loadScene(e, function() {
i._activeScene = e;
t();
i.loadFinish(e);
});
});
};
e.prototype.loadBefore = function(e, t) {
if (s.guideLayer && s.guideLayer.isValid) if ("Home" == e) {
s.guideLayer.node.zIndex = cc.macro.MAX_ZINDEX;
s.guideLayer.hideFjAni();
s.guideLayer.showBgAni();
} else if ("Game" == e) {
s.guideLayer.node.zIndex = cc.macro.MAX_ZINDEX;
if ([ 5, 7 ].includes(a.cocosz.gameMode)) {
s.guideLayer.hideFjAni();
s.guideLayer.showBgAni();
} else {
s.guideLayer.hideBgAni();
s.guideLayer.showFjAni();
}
}
if ("Home" == e && o.gameMgr && o.gameMgr.map && o.gameMgr.map.isValid) {
var i = o.gameMgr.map.getComponent(n.default);
if (i) {
setTimeout(function() {
i.release(t);
}, 100);
return;
}
}
t && t();
};
e.prototype.loadFinish = function(e) {
"Home" == e ? s.guideLayer && s.guideLayer.isValid && (s.guideLayer.node.zIndex = cc.macro.MIN_ZINDEX) : "Game" == e && (s.guideLayer.node.zIndex = cc.macro.MIN_ZINDEX);
a.cocosz.audioMgr.playBgm();
};
e.prototype.releaseRes = function() {
var e = [];
a.cocosz.getDirWithPath("audio_game", cc.AudioClip, e);
a.cocosz.resMgr.releaseResArray(e, cc.AudioClip);
if (6 == a.cocosz.gameMode) {
var t = [];
a.cocosz.getDirWithPath("audio_zombie", cc.AudioClip, t);
a.cocosz.resMgr.releaseResArray(t, cc.AudioClip);
var i = [];
a.cocosz.getDirWithPath("prefab_zombie", cc.Prefab, i);
a.cocosz.resMgr.releaseResArray(i, cc.Prefab);
var o = [];
a.cocosz.getDirWithPath("prefab_zombie_skill", cc.Prefab, o);
a.cocosz.resMgr.releaseResArray(o, cc.Prefab);
var n = [];
a.cocosz.getDirWithPath("tex_zombie", cc.SpriteFrame, n);
a.cocosz.resMgr.releaseResArray(n, cc.SpriteFrame);
}
};
return e;
}();
i.default = r;
cc._RF.pop();
}, {
"../Game/gameMgr": "gameMgr",
"../Game/setMap": "setMap",
"../UI/GuideLayer": "GuideLayer",
"./CocosZ": "CocosZ"
} ],
ShareOrVideo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "af730WeuddAYrpP8Nt749SI", "ShareOrVideo");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/CocosZ"), a = e("../Framework/Constant"), r = cc._decorator, l = r.ccclass, c = r.property, u = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._btn = !1;
t.isGuideSKill = !1;
t.shareNode = null;
t.videoNode = null;
return t;
}
Object.defineProperty(t.prototype, "btn", {
get: function() {
return this._btn;
},
set: function(e) {
this._btn = !1;
this.node.getChildByName("share") && (this.shareNode = this.node.getChildByName("share"));
this.node.getChildByName("video") && (this.videoNode = this.node.getChildByName("video"));
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.node.on(cc.Node.EventType.TOUCH_END, function() {});
cc.game.on(a.default.E_ShareOrVideo, this.show, this);
};
t.prototype.onDestroy = function() {
cc.game.targetOff(this);
};
t.prototype.start = function() {
this.show();
};
t.prototype.show = function() {
if (this.isGuideSKill && s.cocosz.dataMgr.guide_skill) {
this.shareNode && this.shareNode.isValid && (this.shareNode.active = !1);
this.videoNode && this.videoNode.isValid && (this.videoNode.active = !1);
} else {
this.shareNode && this.shareNode.isValid && (this.shareNode.active = s.cocosz.canShare);
this.videoNode && this.videoNode.isValid && (this.videoNode.active = !s.cocosz.canShare);
}
};
n([ c() ], t.prototype, "btn", null);
n([ c({
type: cc.Boolean,
tooltip: "是否新手指引免费使用"
}) ], t.prototype, "isGuideSKill", void 0);
n([ c({
type: cc.Node,
tooltip: "分享图标"
}) ], t.prototype, "shareNode", void 0);
n([ c({
type: cc.Node,
tooltip: "视频图标"
}) ], t.prototype, "videoNode", void 0);
return t = n([ l ], t);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant"
} ],
ShareRecordPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "77194e5qe5JZbqo4fZbTk+i", "ShareRecordPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./CompatibleTool"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bg = null;
t.btnOk = null;
t.btnCancel = null;
t.glodNode = null;
t.glodLabel = null;
t.sharePanel = null;
t.RecPanel = null;
t._panel = null;
t._gameList = null;
t._originScale = 1;
t._gameItems = [];
t._jumpList = null;
t._dataDirty = !1;
t._star = null;
t.gameItemNode = null;
t.rewardCallFunc = null;
t.rewardValue = 0;
return t;
}
t.prototype.onLoad = function() {
s.utils.SendEvent("结算前广告-分享弹窗-展示成功！");
this.rewardValue = s.utils.rewardValue;
this.rewardCallFunc = s.utils.rewardCallFunc;
this.initUi();
cc.winSize.height < cc.winSize.width ? s.utils.adManager.HideBanner(a.BannerLocation.Game) : s.utils.adManager.ShowBanner(a.BannerLocation.Game);
if (r.default.IsOPPO && s.utils.ServerConfig.st_recomment_is_hide_banner && "true" == s.utils.ServerConfig.st_recomment_is_hide_banner) {
s.utils.showLog("服务器配置显示互推后隐藏banner >>>");
s.utils.adManager.HideBanner(a.BannerLocation.Game);
s.utils.adManager.HideBanner(a.BannerLocation.Over);
}
};
t.prototype.initUi = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
this.bg = this.node.getChildByName("Bg");
this.sharePanel = this.bg.getChildByName("SharePanel");
this.RecPanel = this.bg.getChildByName("RecPanel");
if (r.default.IsOPPO) {
this.sharePanel.active = !1;
this.RecPanel.active = !0;
this.btnCancel = this.RecPanel.getChildByName("btnCancel");
this._gameList = this.RecPanel.getChildByName("PageView").getComponent(cc.PageView).content.getChildByName("Panel");
this.gameItemNode = this._gameList.children[0];
this._initRecPanel();
s.utils.showSkipBtn(this.btnCancel);
} else {
this.sharePanel.active = !0;
this.RecPanel.active = !1;
this.btnCancel = this.sharePanel.getChildByName("btnCancel");
this.btnOk = this.sharePanel.getChildByName("btnOk");
this.glodNode = this.sharePanel.getChildByName("rewardNode");
this.glodLabel = this.glodNode.getChildByName("goldLbl").getComponent(cc.Label);
s.utils.showSkipBtn(this.btnCancel);
this.glodLabel.string = "/" + this.rewardValue;
0 == this.rewardValue && (this.glodNode.active = !1);
}
};
t.prototype._initRecPanel = function() {
this._gameList.removeAllChildren();
this._jumpList = s.utils.getRecommondGameList();
for (var e = 0; e < this._jumpList.length; e++) {
var t = this._jumpList[e];
if (t && t.logo) {
var i = cc.instantiate(this.gameItemNode), o = i.getComponent("QCrossWidgetItem");
o._location = a.SubLocation.isMoreGame;
o.init(t);
this._gameList.addChild(i);
}
}
};
t.prototype.onDestroy = function() {
s.utils.adManager.HideBanner(a.BannerLocation.Game);
if (s.utils.shareRecordPanelCloseFunc) {
s.utils.shareRecordPanelCloseFunc();
s.utils.shareRecordPanelCloseFunc = null;
} else {
s.utils.rewardCloseFunc && s.utils.rewardCloseFunc();
s.utils.rewardCloseFunc = null;
}
};
t.prototype.onClose = function() {
var e = this;
this.bg.runAction(cc.sequence(cc.scaleTo(.3, 0).easing(cc.easeBackIn()), cc.callFunc(function() {
e.node.destroy();
})));
};
t.prototype.onEnable = function() {
var e = this;
this.bg.scale = 0;
var t = 1;
t = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .6 : cc.winSize.width / 1080;
this.bg.runAction(cc.sequence(cc.scaleTo(.3, t).easing(cc.easeBackOut()), cc.callFunc(function() {
e.glodNode && 1 == e.glodNode.active && e.glodNode.runAction(cc.sequence(cc.moveBy(.3, l.default.position(0, 50)), cc.moveBy(.3, l.default.position(0, -50))).repeatForever());
})));
};
t.prototype.onCancelClickListener = function() {
if (r.default.IsDouyin && s.utils.ServerConfig && s.utils.ServerConfig.cancel_btn_is_share && "true" == s.utils.ServerConfig.cancel_btn_is_share) {
s.utils.showLog("服务器配置取消按钮也会触发分享！");
s.utils.share(this.rewardFunc.bind(this));
} else this.onClose();
};
t.prototype.onOkBtnClickListener = function() {
s.utils.share(this.rewardFunc.bind(this));
};
t.prototype.rewardFunc = function(e, t) {
if (e) {
s.utils.SendEvent("结算前广告-分享弹窗-分享成功！");
var i = new a.YZ_Reward();
i.rewardValue = this.rewardValue;
s.utils.showMsg("分享成功！奖励：+" + this.rewardValue);
this.rewardCallFunc && this.rewardCallFunc(i);
this.onClose();
} else {
s.utils.SendEvent("结算前广告-分享弹窗-分享失败！");
s.utils.showMsg(t || "分享失败！");
this.onClose();
}
};
t.prototype.initData = function() {};
return t = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
ShowDate: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fb2bf+T41RP1pOMLr4eZBx6", "ShowDate");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, r = s.executeInEditMode, l = function(e) {
o(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {
this.node.zIndex = cc.macro.MAX_ZINDEX;
};
return t = n([ a, r ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {} ],
SpriteFrameSet: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "97019Q80jpE2Yfz4zbuCZBq", "SpriteFrameSet");
var o = cc.Class({
name: "SpriteFrameSet",
properties: {
language: "",
spriteFrame: cc.SpriteFrame
}
});
t.exports = o;
cc._RF.pop();
}, {} ],
StartScene: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "43b0f4vgalEfbPwFDwK4L1k", "StartScene");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, r = (s.property, function(e) {
o(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {
cc.director.loadScene("Load");
};
return t = n([ a ], t);
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {} ],
TryGameNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "038c46RnHFFRL5OfKlehQWS", "TryGameNode");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./CompatibleTool"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._data = null;
t._icon = null;
t._nameLabel = null;
t._gameJumpInterval = -1;
t._jumpInfo = null;
t._index = -1;
t._jumping = !1;
t._isFirst = !1;
t._mask = null;
return t;
}
t.prototype.onLoad = function() {
this._icon = cc.find("Mask/Icon", this.node).getComponent(cc.Sprite);
this._mask = cc.find("Mask", this.node);
};
t.prototype.init = function(e) {
this._data = e;
if (this._data) {
this._jumpInfo = this._data.jump_list;
this._gameJumpInterval = this._data.jump_refresh_time;
this._isFirst = !0;
this.node.active = !1;
} else this.node.active = !1;
};
t.prototype.showNextItem = function() {
this.unscheduleAllCallbacks();
this.jump();
this.schedule(this.jump, this._gameJumpInterval);
};
t.prototype.onEnable = function() {
var e = this;
this.jump();
this.schedule(this.jump, this._gameJumpInterval);
this.node.on(cc.Node.EventType.TOUCH_START, function(t) {
if (e._jumpInfo[e._index] && e._jumpInfo[e._index].appid) {
s.utils.showLog("小游戏跳转! info=" + e._jumpInfo[e._index]);
if (r.default.IsDouyin) s.utils.Tool_Douyin.showMoreGamesModal(); else if (r.default.IsQQ) s.utils.adManager.ShowAppBox(!0); else {
var i = e._index;
e._postClickData(e._jumpInfo[i].appid);
s.utils.navigateToMiniGame(e._jumpInfo[i], function(t) {
t && e._jumpInfo && e._jumpInfo[i] && e._jumpInfo[i].appid && e._postData(e._jumpInfo[i].appid);
});
}
e.showNextItem();
}
}, this);
};
t.prototype.onDisable = function() {
this.unscheduleAllCallbacks();
this.node.targetOff(this);
};
t.prototype.jump = function() {
var e = this;
if (!this._jumping) {
this._jumping = !0;
this._index = this._index + 1;
this._index >= this._jumpInfo.length && (this._index = 0);
var t = this._icon.node.getContentSize();
if (this._jumpInfo[this._index] && this._jumpInfo[this._index].icon) {
var i = this._jumpInfo[this._index].icon;
l.default.LoadRes(i, function(i, o) {
if (!i && cc.isValid(e) && e._icon) {
e._icon.spriteFrame = new cc.SpriteFrame(o);
e._icon.node.setContentSize(t);
if (e._isFirst) {
s.utils.showLog("当前试玩第一次加载！！！！！");
e._mask.active = !0;
e._isFirst = !1;
}
}
e._jumping = !1;
});
} else this._jumping = !1;
}
};
t.prototype._setName = function(e) {
if (e) if (e.length > 5) {
this._nameLabel.string = e.slice(0, 5) + "...";
this._nameLabel.node.scale = .7;
} else this._nameLabel.string = e; else this._nameLabel.string = "";
};
t.prototype._postData = function(e) {
s.utils.postDataByLocation(e, a.SubLocation.isTryGame, 1);
};
t.prototype._postClickData = function(e) {
s.utils.postDataByLocation(e, a.SubLocation.isTryGame, 0);
};
return t = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
TryGamesWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "44f5bUS0vVOsr9VFcezUfsI", "TryGamesWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._tryGameNode = null;
t._isInit = !1;
return t;
}
t.prototype.onLoad = function() {
this._tryGameNode = this.getComponentInChildren("TryGameNode");
this._tryGameNode.node.active = !1;
};
t.prototype.onEnable = function() {
var e = this;
s.utils.registerServerInitEvent(function() {
e._initWidget();
}, this);
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
};
t.prototype._initWidget = function() {
if (!this._isInit) {
var e = !0, t = s.utils.getInnerRecommendData();
if (t) if (t.jump_list) {
if (t.jump_list.length <= 0) {
cc.warn("字段jump_list的长度不合法！");
e = !1;
}
} else {
cc.warn("字段jump_list不存在！");
e = !1;
} else {
cc.warn("交叉推广数据为null");
e = !1;
}
if (e) {
this._isInit = !0;
s.utils.showLog("交叉推广数据:", JSON.stringify(t));
this._tryGameNode.init({
jump_refresh_time: t.jump_refresh_time,
jump_list: t.jump_list
});
this._tryGameNode.node.active = !0;
} else this.node.destroy();
}
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
TweenEffect: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "54110rONwJBArNNreXEArQY", "TweenEffect");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.EaseType = void 0;
var s, a, r, l = cc._decorator, c = l.ccclass, u = l.property, h = l.menu;
l.executeInEditMode;
(function(e) {
e[e.none = 0] = "none";
e[e.fade = 1] = "fade";
e[e.easeIn = 2] = "easeIn";
e[e.easeOut = 3] = "easeOut";
e[e.easeInOut = 4] = "easeInOut";
e[e.easeExponentialIn = 5] = "easeExponentialIn";
e[e.easeExponentialOut = 6] = "easeExponentialOut";
e[e.easeExponentialInOut = 7] = "easeExponentialInOut";
e[e.easeSineIn = 8] = "easeSineIn";
e[e.easeSineOut = 9] = "easeSineOut";
e[e.easeSineInOut = 10] = "easeSineInOut";
e[e.easeElasticIn = 11] = "easeElasticIn";
e[e.easeElasticOut = 12] = "easeElasticOut";
e[e.easeElasticInOut = 13] = "easeElasticInOut";
e[e.easeBounceIn = 14] = "easeBounceIn";
e[e.easeBounceOut = 15] = "easeBounceOut";
e[e.easeBounceInOut = 16] = "easeBounceInOut";
e[e.easeBackIn = 17] = "easeBackIn";
e[e.easeBackOut = 18] = "easeBackOut";
e[e.easeBackInOut = 19] = "easeBackInOut";
e[e.easeBezierAction = 20] = "easeBezierAction";
e[e.easeQuadraticActionIn = 21] = "easeQuadraticActionIn";
e[e.easeQuadraticActionOut = 22] = "easeQuadraticActionOut";
e[e.easeQuadraticActionInOut = 23] = "easeQuadraticActionInOut";
e[e.easeQuarticActionIn = 24] = "easeQuarticActionIn";
e[e.easeQuarticActionOut = 25] = "easeQuarticActionOut";
e[e.easeQuarticActionInOut = 26] = "easeQuarticActionInOut";
e[e.easeQuinticActionIn = 27] = "easeQuinticActionIn";
e[e.easeQuinticActionOut = 28] = "easeQuinticActionOut";
e[e.easeQuinticActionInOut = 29] = "easeQuinticActionInOut";
e[e.easeCircleActionIn = 30] = "easeCircleActionIn";
e[e.easeCircleActionOut = 31] = "easeCircleActionOut";
e[e.easeCircleActionInOut = 32] = "easeCircleActionInOut";
e[e.easeCubicActionIn = 33] = "easeCubicActionIn";
e[e.easeCubicActionOut = 34] = "easeCubicActionOut";
e[e.easeCubicActionInOut = 35] = "easeCubicActionInOut";
})(s = i.EaseType || (i.EaseType = {}));
(function(e) {
e[e.none = 0] = "none";
e[e.line = 1] = "line";
e[e.angle = 2] = "angle";
e[e.opacity = 3] = "opacity";
e[e.scale = 4] = "scale";
e[e.skewY = 5] = "skewY";
e[e.shake = 6] = "shake";
e[e.flip = 7] = "flip";
})(a || (a = {}));
(function(e) {
e[e.onLoad = 0] = "onLoad";
e[e.start = 1] = "start";
e[e.onEnable = 2] = "onEnable";
})(r || (r = {}));
var d = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.type = a.none;
t.easeType = s.none;
t.run = r.start;
t.delay = 0;
t.time = 1;
t.repeat = -1;
t.isReverse = !1;
t.num = 0;
t.toPos = cc.Vec3.ZERO;
t._tw = null;
return t;
}
i = t;
t.prototype.onLoad = function() {
this._tw = cc.tween(this.node);
this._tw.delay(this.delay);
switch (this.type) {
case a.line:
this._line();
break;

case a.angle:
this._angle();
break;

case a.opacity:
this._opacity();
break;

case a.scale:
this._scale();
break;

case a.skewY:
this._skewY();
break;

case a.shake:
this._shake();
break;

case a.flip:
this._flip();
}
this.repeat > 0 ? this._tw.union().repeat(this.repeat) : -1 == this.repeat && this._tw.union().repeatForever();
this.run == r.onLoad && this._tw.start();
};
t.prototype.start = function() {
this.run == r.start && this._tw.start();
};
t.prototype.onEnable = function() {
if (this.run == r.onEnable) {
this.node.stopAllActions();
this._tw.start();
}
};
t.prototype._line = function() {
this._tw.by(this.time, {
position: this.toPos
}, {
easing: i.getEase(this.easeType)
});
this.isReverse && this._tw.by(this.time, {
position: this.toPos.neg()
}, {
easing: i.getEase(this.easeType)
});
};
t.prototype._angle = function() {
this._tw.by(this.time, {
angle: this.num
}, {
easing: i.getEase(this.easeType)
});
this.isReverse && this._tw.by(this.time, {
angle: -this.num
}, {
easing: i.getEase(this.easeType)
});
};
t.prototype._opacity = function() {
this._tw.by(this.time, {
opacity: this.num
}, {
easing: i.getEase(this.easeType)
});
this.isReverse && this._tw.by(this.time, {
opacity: -this.num
}, {
easing: i.getEase(this.easeType)
});
};
t.prototype._scale = function() {
this._tw.by(this.time, {
scale: this.num
}, {
easing: i.getEase(this.easeType)
});
this.isReverse && this._tw.by(this.time, {
scale: -this.num
}, {
easing: i.getEase(this.easeType)
});
};
t.prototype._skewY = function() {
this._tw.by(this.time, {
skewY: this.num
}, {
easing: i.getEase(this.easeType)
});
this.isReverse && this._tw.by(this.time, {
skewY: -this.num
}, {
easing: i.getEase(this.easeType)
});
};
t.prototype._shake = function() {
this._tw.by(this.time, {
angle: this.num
}, {
easing: i.getEase(this.easeType)
}).by(2 * this.time, {
angle: -2 * this.num
}, {
easing: i.getEase(this.easeType)
}).by(this.time, {
angle: this.num
}, {
easing: i.getEase(this.easeType)
});
};
t.prototype._flip = function() {
this._tw.to(this.time, {
scaleX: -this.node.scaleX
}, {
easing: i.getEase(this.easeType)
}).to(this.time, {
scaleX: this.node.scaleX
}, {
easing: i.getEase(this.easeType)
});
};
t.panel_mask_opacity = function(e, t) {
var i = e.opacity;
e.opacity = 0;
cc.tween(e).to(.2, {
opacity: i
}).call(function() {
t && t();
}).start();
};
t.panel_open_moveY = function(e, t) {
e.y += 1e3;
cc.tween(e).to(.5, {
y: e.y - 1e3
}, {
easing: "sineOut"
}).call(function() {
t && t();
}).start();
};
t.panel_close_moveY = function(e, t) {
cc.tween(e).to(.5, {
y: e.y + 1e3
}, {
easing: "sineIn"
}).call(function() {
t && t();
}).start();
};
t.panel_open_scaleY = function(e, t) {
e.scaleY = 0;
cc.tween(e).to(.5, {
scaleY: 1
}, {
easing: "sineOut"
}).call(function() {
t && t();
}).start();
};
t.panel_close_scaleY = function(e, t) {
cc.tween(e).to(.5, {
scaleY: 0
}, {
easing: "sineIn"
}).call(function() {
t && t();
}).start();
};
t.panel_open_scale = function(e, t) {
e.scale = 0;
cc.tween(e).to(.5, {
scale: 1
}, {
easing: "sineOut"
}).call(function() {
t && t();
}).start();
};
t.panel_close_scale = function(e, t) {
cc.tween(e).to(.5, {
scale: 0
}, {
easing: "sineIn"
}).call(function() {
t && t();
}).start();
};
t.panel_open_opacity_scale = function(e, t) {
e.opacity = 0;
e.scale = 1.5;
cc.tween(e).to(.5, {
opacity: 255,
scale: 1
}, {
easing: "fade"
}).call(function() {
t && t();
}).start();
};
t.panel_close_opacity_scale = function(e, t) {
cc.tween(e).to(.5, {
opacity: 0,
scale: 2
}, {
easing: "fade"
}).call(function() {
t && t();
}).start();
};
t.getEase = function(e) {
switch (e) {
case s.none:
return "linear";

case s.fade:
return "fade";

case s.easeOut:
return "easeOut";

case s.easeInOut:
return "easeInOut";

case s.easeExponentialIn:
return "easeExponentialIn";

case s.easeExponentialOut:
return "easeExponentialOut";

case s.easeExponentialInOut:
return "easeExponentialInOut";

case s.easeSineIn:
return "sineIn";

case s.easeSineOut:
return "sineOut";

case s.easeSineInOut:
return "sineInOut";

case s.easeElasticIn:
return "elasticIn";

case s.easeElasticOut:
return "elasticOut";

case s.easeElasticInOut:
return "elasticInOut";

case s.easeBounceIn:
return "bounceIn";

case s.easeBounceOut:
return "bounceOut";

case s.easeBackIn:
return "backIn";

case s.easeBackOut:
return "backOut";

case s.easeBackInOut:
return "backInOut";

case s.easeQuadraticActionIn:
return "quadraticActionIn";

case s.easeQuadraticActionOut:
return "quadraticActionOut";

case s.easeQuadraticActionInOut:
return "quadraticActionInOut";

case s.easeQuarticActionIn:
return "quarticActionIn";

case s.easeQuarticActionOut:
return "quarticActionOut";

case s.easeQuarticActionInOut:
return "quarticActionInOut";

case s.easeQuinticActionIn:
return "quinticActionIn";

case s.easeQuinticActionOut:
return "quinticActionOut";

case s.easeQuinticActionInOut:
return "quinticActionInOut";

case s.easeCircleActionIn:
return "easeCircleActionIn";

case s.easeCircleActionOut:
return "circleActionOut";

case s.easeCircleActionInOut:
return "circleActionInOut";

case s.easeCubicActionIn:
return "cubicActionIn";

case s.easeCubicActionOut:
return "cubicActionOut";

case s.easeCubicActionInOut:
return "cubicActionInOut";
}
};
var i;
n([ u({
type: cc.Enum(a),
tooltip: "动作类型"
}) ], t.prototype, "type", void 0);
n([ u({
type: cc.Enum(s)
}) ], t.prototype, "easeType", void 0);
n([ u({
type: cc.Enum(r),
tooltip: "运行条件"
}) ], t.prototype, "run", void 0);
n([ u({
type: cc.Float,
tooltip: "开始延迟时间"
}) ], t.prototype, "delay", void 0);
n([ u({
type: cc.Float,
tooltip: "单次运行时间"
}) ], t.prototype, "time", void 0);
n([ u({
type: cc.Integer,
tooltip: "重复次数 -1永久重复 0不重复"
}) ], t.prototype, "repeat", void 0);
n([ u({
tooltip: "是否倒置"
}) ], t.prototype, "isReverse", void 0);
n([ u({
tooltip: "目标值",
visible: function() {
return this.type == a.angle || this.type == a.opacity || this.type == a.scale || this.type == a.skewY;
}
}) ], t.prototype, "num", void 0);
n([ u({
tooltip: "目标坐标",
visible: function() {
return this.type == a.line;
}
}) ], t.prototype, "toPos", void 0);
return t = i = n([ c, h("Tools/TweenEffect") ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {} ],
UIADPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "003c2RLzLtIya/ty0NNYWCD", "UIADPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../../common-plugin/Scripts/Utils"), a = e("../Framework/CocosZ"), r = e("../Framework/Msg"), l = e("LanguageData"), c = cc._decorator, u = c.ccclass, h = c.property, d = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.btnAD = null;
t.btnSkip = null;
t.isDiamond = !1;
return t;
}
t.prototype.start = function() {
if (a.cocosz.isADON) {
this.node.scale = 0;
cc.tween(this.node).to(.3, {
scale: 1
}, {
easing: "backOut"
}).start();
s.utils.SendEvent("页面-" + (this.isDiamond ? "钻石" : "金币"));
} else this.node.destroy();
};
t.prototype.setDiamond = function() {
this.isDiamond = !0;
this.node.getChildByName("bg").active = !1;
this.node.getChildByName("bg1").active = !0;
};
t.prototype.watchAD = function() {
var e = this;
s.utils.SendEvent("视频-" + (this.isDiamond ? "钻石购买" : "金币购买") + "-播放");
a.cocosz.watchAD(function() {
s.utils.SendEvent("视频-" + (e.isDiamond ? "钻石购买" : "金币购买") + "-成功");
if (e.isDiamond) {
var t = a.cocosz.isDeBug ? 1e4 : 200;
a.cocosz.dataMgr.DiamondCount += t;
r.default.Show(l.t("msg.gxhdzs") + t);
} else {
t = a.cocosz.isDeBug ? 1e4 : 500;
a.cocosz.dataMgr.CoinCount += t;
r.default.Show(l.t("msg.gxhdjb") + t);
}
e.node.destroy();
}, function() {
s.utils.SendEvent("视频-" + (e.isDiamond ? "钻石购买" : "金币购买") + "-失败");
});
};
t.prototype.exit = function() {
a.cocosz.audioMgr.playBtnEffect();
this.node.destroy();
};
n([ h(cc.Node) ], t.prototype, "btnAD", void 0);
n([ h(cc.Node) ], t.prototype, "btnSkip", void 0);
return t = n([ u ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Msg": "Msg",
LanguageData: "LanguageData"
} ],
UIGameLoadingPage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c5a1dCIX/VATJjbaL5OivFz", "UIGameLoadingPage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/UIPage"), a = e("../Framework/Constant"), r = e("../Framework/CocosZ"), l = e("./GuideLayer"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = e.call(this, a.PageName.UIGameLoadingPage) || this;
t._startTime = 0;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onOpen = function() {
cc.game.on(a.default.E_GAME_LOGIC, this._onGameMessageHandler, this);
this._startTime = new Date().getTime();
r.cocosz.scheduleOnce(function() {
r.cocosz.audioMgr.playEffect("fj", !0, 1);
}, .1);
};
t.prototype.onClose = function() {
cc.game.targetOff(this);
l.guideLayer.hideFjAni();
l.guideLayer.node.zIndex = cc.macro.MIN_ZINDEX;
r.cocosz.audioMgr.stopEffect("fj");
};
t.prototype._onGameMessageHandler = function(e) {
switch (e.type) {
case a.default.E_UPDATE_PROGRESS:
this._updateProgress(e.data);
}
};
t.prototype._updateProgress = function(e) {
if (e >= 1) {
var t = new Date().getTime() - this._startTime;
t >= 6e3 ? r.cocosz.uiMgr.openPage(a.PageName.UIGamePage) : setTimeout(function() {
r.cocosz.uiMgr.openPage(a.PageName.UIGamePage);
}, 6e3 - t);
}
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/UIPage": "UIPage",
"./GuideLayer": "GuideLayer"
} ],
UIGamePage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ca02eHXE+9E+Yrp8V9uxTLx", "UIGamePage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../Framework/UIPage"), l = e("../Framework/Constant"), c = e("../Framework/CocosZ"), u = e("../../common-plugin/Scripts/PlatUtils"), h = e("../../common-plugin/Scripts/Utils"), d = e("../../common-plugin/Scripts/YZ_Constant"), f = e("../Game/gameMgr"), _ = (e("LanguageData"), 
cc._decorator), p = _.ccclass, g = (_.property, function(e) {
o(t, e);
function t() {
var t = e.call(this, l.PageName.UIGamePage) || this;
t._handAni = null;
t._btnCt = null;
t._btnQpbz = null;
t.ctAction = !1;
t.qpbzAction = !1;
t.settimeFunc = null;
t.ctTime = 60;
t.qpbzTime = 300;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
var e = this;
this._handAni = cc.find("handAni", this._page);
[ "rangedWeapon", "rangedWeaponAd", "BtnPause", "BtnBullet", "BtnShuxing", "BtnHideBanner", "BtnCt", "BtnQpbz" ].forEach(function(t) {
var i = e._page.getChildByName(t);
if (i) {
i.on(cc.Node.EventType.TOUCH_END, e._onBtnClickHandler, e);
if ("rangedWeaponAd" == i.name) c.cocosz.isADON && "false" != c.cocosz.getConfigByKey("isVideoAd_advanced_weapon") ? i.active = !0 : i.active = !1; else if ("BtnHideBanner" == i.name) c.cocosz.isShowAd && c.cocosz.isADON && "true" == c.cocosz.getConfigByKey("isVideoAd_hideBanner") ? i.active = !0 : i.active = !1; else if ("BtnCt" == i.name) {
e._btnCt = i;
if (c.cocosz.isShowAd && c.cocosz.isADON && !c.cocosz.dataMgr.guide_skill && "false" != c.cocosz.getConfigByKey("isVideoAd_Citie")) {
e._btnCt.active = !0;
if (e.ctAction) {
e._btnCt.getChildByName("maskNode").getComponent(cc.Sprite).fillRange = 0;
e._btnCt.getComponent(cc.Button).interactable = !0;
} else {
e._btnCt.getChildByName("maskNode").getComponent(cc.Sprite).fillRange = 1;
e._btnCt.getComponent(cc.Button).interactable = !1;
}
e._btnCt.childrenCount && e._btnCt.children.forEach(function(e) {
e.active = !1;
});
}
} else if ("BtnQpbz" == i.name) {
e._btnQpbz = i;
if (c.cocosz.isShowAd && c.cocosz.isADON && !c.cocosz.dataMgr.guide_skill && "false" != c.cocosz.getConfigByKey("isVideoAd_Qpbz")) {
e._btnQpbz.active = !0;
if (e.qpbzAction) {
e._btnQpbz.getChildByName("maskNode").getComponent(cc.Sprite).fillRange = 0;
e._btnQpbz.getComponent(cc.Button).interactable = !0;
} else {
e._btnQpbz.getChildByName("maskNode").getComponent(cc.Sprite).fillRange = 1;
e._btnQpbz.getComponent(cc.Button).interactable = !1;
}
e._btnQpbz.childrenCount && e._btnQpbz.children.forEach(function(e) {
e.active = !1;
});
}
}
}
});
};
t.prototype.onOpen = function() {
var e = this;
h.utils.SendEvent("页面-游戏");
f.gameMgr.uiGamePage = this._page;
f.gameMgr.moveArea = cc.find("moveArea", this._page);
f.gameMgr.yaogan = cc.find("move", this._page);
var t = f.gameMgr.yaogan.getComponent(cc.Widget);
if (t) {
f.gameMgr.yaogan.getComponent(cc.Widget).updateAlignment();
t.enabled = !1;
}
f.gameMgr.rangedWeaponMess = this._page.getChildByName("rangedWeapon");
f.gameMgr.ammo = f.gameMgr.rangedWeaponMess.getChildByName("ammo").getComponent(cc.Label);
f.gameMgr.rangedWeaponAdMess = this._page.getChildByName("rangedWeaponAd");
f.gameMgr.qlzc = this._page.getChildByName("qlzc");
f.gameMgr.BtnBullet = this._page.getChildByName("BtnBullet");
if (6 == c.cocosz.gameMode) {
f.gameMgr.model6_bossBar = this._page.getChildByName("bossBar").getComponent(cc.ProgressBar);
f.gameMgr.model6_jingyanBar = this._page.getChildByName("jingyanBar").getComponent(cc.ProgressBar);
f.gameMgr.model6_skillScrollView = this._page.getChildByName("skillScrollView").getComponent(cc.ScrollView);
f.gameMgr.model6_skillScrollView_content = cc.find("skillScrollView/view/content", this._page);
f.gameMgr.model6_skillScrollView_item = this._page.getChildByName("item");
var i = this._page.getChildByName("BtnShuxing");
f.gameMgr.model6_touxiang = i.getChildByName("touxiang");
var o = c.cocosz.resMgr.getRes("head" + (c.cocosz.gameMgr.gameCtr.curUseSkinId + 1), cc.Prefab);
if (o) {
var n = cc.instantiate(o);
n.setParent(f.gameMgr.model6_touxiang);
n.scale = 1;
n.children[0] && (n.children[0].active = !1);
}
f.gameMgr.model6_btnShuxing = this._page.getChildByName("BtnShuxing");
f.gameMgr.model6_btnShuxing && (f.gameMgr.model6_btnShuxing.active = !0);
f.gameMgr.model6_shuxing = i.getChildByName("shuxing");
f.gameMgr.model6_shuxing.active = !1;
f.gameMgr.model6_levelLabel = this._page.getChildByName("levelLabel").getComponent(cc.Label);
f.gameMgr.model6_timeLabel = this._page.getChildByName("timeLabel").getComponent(cc.Label);
f.gameMgr.model6_ts = this._page.getChildByName("ts");
if (c.cocosz.dataMgr.guide_skill && ("false" != c.cocosz.getConfigByKey("isVideoAd_Qpbz") || "false" != c.cocosz.getConfigByKey("isVideoAd_Citie"))) var s = 0, a = cc.tween(this._page).delay(1).call(function() {
if (f.gameMgr.isGameStart && !c.cocosz.isPause) {
s++;
cc.log("count:", s);
if (5 == s) "false" != c.cocosz.getConfigByKey("isVideoAd_Qpbz") && e.showSkill(e._btnQpbz); else if (8 == s) "false" != c.cocosz.getConfigByKey("isVideoAd_Citie") && e.showSkill(e._btnCt); else if (s > 8) {
c.cocosz.dataMgr.guide_skill = !1;
a && a.stop();
}
}
}).union().repeatForever().start();
}
f.gameMgr.startGame();
this.showAd();
cc.game.on(l.default.E_GAME_LOGIC, this._onGameMessageHandler, this);
this.settimeFunc = setInterval(function() {
if (f.gameMgr.isGameStart && !c.cocosz.isPause) {
if (!this.ctAction) {
this.ctTime -= .05;
var e = this._btnCt.getChildByName("maskNode").getComponent(cc.Sprite);
e.fillRange -= Number(.05 / 60);
if (this.ctTime <= 0) {
this.ctAction = !0;
e.fillRange = 0;
this._btnCt.getComponent(cc.Button).interactable = !0;
this.ctTime = 60;
}
}
if (!this.qpbzAction) {
this.qpbzTime -= .05;
var t = this._btnQpbz.getChildByName("maskNode").getComponent(cc.Sprite);
t.fillRange -= Number(.05 / 300);
if (this.qpbzTime <= 0) {
this.qpbzAction = !0;
t.fillRange = 0;
this._btnQpbz.getComponent(cc.Button).interactable = !0;
this.qpbzTime = 300;
}
}
}
}.bind(this), .05);
};
t.prototype.onClose = function() {
clearInterval(this.settimeFunc);
cc.game.targetOff(this);
h.utils.adManager.hideBlockAd();
h.utils.adManager.hideNativeTryGameWidget();
h.utils.hideVivoGamePortalWidget();
h.utils.adManager.HideSingleNativeAd();
if (u.default.IsWechat) {
h.utils.adManager.hideCustomAd({
location: 3
});
h.utils.adManager.hideCustomAd({
location: 4
});
h.utils.adManager.hideCustomAd({
location: 8
});
} else u.default.IsVIVO && h.utils.adManager.hideCustomAd({
location: d.BannerLocation.Game
});
};
t.prototype.showAd = function() {
h.utils.showRecordWidget({
group: "default",
scale: 1,
top: 50,
left: 100,
parent: this._page
});
if (c.cocosz.isShowAd) {
!c.cocosz.isShowGameBanner || u.default.IsWechat || u.default.IsDouyin || u.default.IsAndroidDouYin ? h.utils.adManager.HideBanner(d.BannerLocation.Game) : h.utils.adManager.ShowBanner(d.BannerLocation.Game, {
width: .1,
bottom: 0
});
h.utils.adManager.showNativeTryGameWidget({
left: 10,
top: 500,
scale: 1,
parent: this._page
});
if (u.default.IsWechat) {
h.utils.adManager.showCustomAd({
location: 3
});
h.utils.adManager.showCustomAd({
location: 4
});
h.utils.adManager.showCustomAd({
location: 8
});
} else u.default.IsVIVO && h.utils.adManager.showCustomAd({
location: d.BannerLocation.Game
});
}
};
t.prototype.showSkill = function(e) {
var t = this, i = e.getComponent(cc.Widget);
i && (i.enabled = !1);
if (e && e.isValid) {
c.cocosz.pauseCount++;
e.setPosition(0, cc.winSize.height / 2);
e.scale = 2;
e.active = !0;
var o = function() {
e.stopAllActions();
cc.tween(e).call(function() {
t._handAni && t._handAni.isValid && (t._handAni.active = !1);
}).to(.5, {
scale: 1,
x: -cc.winSize.width / 2 + i.left + e.width / 2,
y: -cc.winSize.height / 2 + i.bottom + e.height / 2
}).call(function() {
i && (i.enabled = !0);
c.cocosz.pauseCount--;
}).start();
};
e.once(cc.Node.EventType.TOUCH_END, o, this);
e.stopAllActions();
cc.tween(e).to(1, {
y: 0
}, {
easing: "backOut"
}).call(function() {
if (t._handAni && t._handAni.isValid) {
t._handAni.setPosition(0, 0);
t._handAni.active = !0;
var e = t._handAni.getComponent(sp.Skeleton);
e && e.setAnimation(0, "animation", !0);
}
}).delay(4).call(function() {
e.off(cc.Node.EventType.TOUCH_END, o, t);
o();
}).start();
}
};
t.prototype.effect_qpbz = function() {
var e = c.cocosz.resMgr.getRes("effect_qpbz", cc.Prefab);
if (e) {
var t = cc.instantiate(e);
t.setPosition(f.gameMgr.playerTs.node.position);
cc.director.getScene().getChildByName("Canvas").addChild(t);
cc.tween(t).delay(.3).call(function() {
f.gameMgr.playEffect("QuanPingBaoZha");
cc.game.emit(l.default.E_GAME_LOGIC, {
type: l.default.E_Allzombie_Destory
});
}).union().repeat(4).call(function() {
t.destroy();
}).start();
}
};
t.prototype._onGameMessageHandler = function(e) {
e.type;
};
t.prototype._onBtnClickHandler = function(e) {
return s(this, void 0, void 0, function() {
var t, i = this;
return a(this, function(o) {
c.cocosz.audioMgr.playBtnEffect();
switch (e.target.name) {
case "rangedWeaponAd":
if (f.gameMgr.rangedWeaponAdMess) if ((t = f.gameMgr.rangedWeaponAdMess.getChildByName("adIcon")) && t.active) {
h.utils.SendEvent("视频-高级武器-播放");
c.cocosz.watchAD(function() {
h.utils.SendEvent("视频-高级武器-成功");
t.active = !1;
f.gameMgr.useRangedWeaponAd();
f.gameMgr.rangedWeaponAdMess.stopAllActions();
}, function() {
h.utils.SendEvent("视频-高级武器-失败");
});
} else f.gameMgr.useRangedWeaponAd();
break;

case "rangedWeapon":
f.gameMgr.useRangedWeapon();
break;

case "BtnPause":
c.cocosz.uiMgr.openPanel(l.PanelName.UIPausePanel);
break;

case "BtnBullet":
f.gameMgr.BtnBullet && f.gameMgr.playerTs && f.gameMgr.playerTs.curWeapon && f.gameMgr.playerTs.curWeapon.isRangeWeapon && f.gameMgr.playerTs.curWeapon.reloadBullet();
break;

case "BtnShuxing":
f.gameMgr.model6_shuxing.active = !f.gameMgr.model6_shuxing.active;
f.gameMgr.update_model6_shuxing();
break;

case "BtnHideBanner":
h.utils.SendEvent("视频-游戏中去广告-播放");
c.cocosz.watchAD(function() {
h.utils.SendEvent("视频-游戏中去广告-成功");
e.target.active = !1;
f.gameMgr.canSHowGameBanner = !1;
h.utils.adManager.HideBanner(d.BannerLocation.Game);
}, function() {
h.utils.SendEvent("视频-游戏中去广告-失败");
});
break;

case "BtnCt":
if (this._btnCt && this._btnCt.getChildByName("share") && this._btnCt.getChildByName("share").active) {
h.utils.SendEvent("分享-磁铁");
c.cocosz.share(function() {
h.utils.SendEvent("分享-磁铁-成功");
cc.game.emit(l.default.E_Skill_Citie);
}, function() {
h.utils.SendEvent("分享-磁铁-失败");
});
} else if (this._btnCt && this._btnCt.getChildByName("video") && this._btnCt.getChildByName("video").active) {
h.utils.SendEvent("视频-磁铁-播放");
c.cocosz.watchAD(function() {
h.utils.SendEvent("视频-磁铁-成功");
cc.game.emit(l.default.E_Skill_Citie);
}, function() {
h.utils.SendEvent("视频-磁铁-失败");
});
} else if (this.ctAction) {
this._btnCt.getChildByName("maskNode").getComponent(cc.Sprite).fillRange = 1;
this.ctAction = !1;
this._btnCt.getComponent(cc.Button).interactable = !1;
cc.game.emit(l.default.E_Skill_Citie);
}
break;

case "BtnQpbz":
if (this._btnQpbz && this._btnQpbz.getChildByName("share") && this._btnQpbz.getChildByName("share").active) {
h.utils.SendEvent("分享-全屏轰炸");
c.cocosz.share(function() {
h.utils.SendEvent("分享-全屏轰炸-成功");
i.effect_qpbz();
}, function() {
h.utils.SendEvent("分享-全屏轰炸-失败");
});
} else if (this._btnQpbz && this._btnQpbz.getChildByName("video") && this._btnQpbz.getChildByName("video").active) {
h.utils.SendEvent("视频-全屏轰炸-播放");
c.cocosz.watchAD(function() {
h.utils.SendEvent("视频-全屏轰炸-成功");
i.effect_qpbz();
}, function() {
h.utils.SendEvent("视频-全屏轰炸-失败");
});
} else if (this.qpbzAction) {
this._btnQpbz.getChildByName("maskNode").getComponent(cc.Sprite).fillRange = 1;
this.qpbzAction = !1;
this._btnQpbz.getComponent(cc.Button).interactable = !1;
this.effect_qpbz();
}
}
return [ 2 ];
});
});
};
return t = n([ p ], t);
}(r.default));
i.default = g;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../../common-plugin/Scripts/Utils": "Utils",
"../../common-plugin/Scripts/YZ_Constant": "YZ_Constant",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/UIPage": "UIPage",
"../Game/gameMgr": "gameMgr",
LanguageData: "LanguageData"
} ],
UIHomePage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1b644snyrFBGKi85JS90G3O", "UIHomePage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../Framework/UIPage"), l = e("../Framework/Constant"), c = e("../Framework/CocosZ"), u = e("../../common-plugin/Scripts/Utils"), h = e("../../common-plugin/Scripts/YZ_Constant"), d = e("../Game/ani"), f = e("../../common-plugin/Scripts/PlatUtils"), _ = e("../Framework/FlyCoin"), p = e("../Game/gameDate"), g = e("../Game/weapon"), m = e("../Framework/Msg"), v = e("LanguageData"), y = cc._decorator, w = y.ccclass, I = (y.property, 
function(e) {
o(t, e);
function t() {
var t = e.call(this, l.PageName.UIHomePage) || this;
t._icon_set = null;
t._frame_set = null;
t._btnAudio = null;
t._btnShake = null;
t._btnSkin = null;
t._btnSkinAd = null;
t._btnWeapon = null;
t._btnWeaponAd = null;
t._playerAni = null;
t._aniUpgrade = null;
t._aniCaidai = null;
t._weaponScroll = null;
t._weaponList = [];
t._ani_arrow = null;
t._skinInfo_name = null;
t._skinInfo_xuedi = null;
t._skinInfo_value1 = null;
t._skinInfo_value2 = null;
t._skinInfo_change1 = null;
t._skinInfo_change2 = null;
t._skinInfo_level_pro = null;
t._weaponInfo_name = null;
t._weaponInfo_value0 = null;
t._weaponInfo_value1 = null;
t._weaponInfo_value2 = null;
t._weaponInfo_value3 = null;
t._weaponInfo_change0 = null;
t._weaponInfo_change1 = null;
t._weaponInfo_change2 = null;
t._weaponInfo_change3 = null;
t._weaponInfo_level_pro = null;
t._showSkinId = c.cocosz.dataMgr.CurSkinId;
t._showWeaponId = c.cocosz.dataMgr.CurRange;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
var e = this;
console.log("UIHOMEPAGE ONLOAD");
[ "BtnSet", "BtnSet/frame_set/BtnAudio", "BtnSet/frame_set/BtnShake", "ditai/BtnLeft", "ditai/BtnRight", "BtnSkin", "BtnWeapon", "BtnSkinAd", "BtnWeaponAd", "BtnCJ", "BtnRanking", "BtnSign", "BtnTime", "BtnGameStart" ].forEach(function(t) {
var i = cc.find(t, e._page);
if (i) {
i.on(cc.Node.EventType.TOUCH_END, e._onBtnClickHandler, e);
if ("BtnSet" == i.name) {
e._icon_set = cc.find("Background/icon_set", i);
e._frame_set = cc.find("frame_set", i);
} else if ("BtnAudio" == i.name) {
e._btnAudio = i;
e._updateAudioBtn(!1);
} else if ("BtnShake" == i.name) {
e._btnShake = i;
e._updatShakeBtn();
} else "BtnSkin" == i.name ? e._btnSkin = i : "BtnWeapon" == i.name ? e._btnWeapon = i : "BtnSkinAd" == i.name ? e._btnSkinAd = i : "BtnWeaponAd" == i.name && (e._btnWeaponAd = i);
}
});
this._playerAni = cc.find("ditai/skin_all/ani", this._page).getComponent(d.default);
this._aniCaidai = cc.find("ditai/aniCaidai", this._page).getComponent(sp.Skeleton);
this._aniCaidai.setCompleteListener(function() {
e._aniCaidai.node.active = !1;
});
this._aniUpgrade = cc.find("ditai/aniUpgrade", this._page).getComponent(sp.Skeleton);
this._aniUpgrade.setCompleteListener(function() {
e._aniUpgrade.node.active = !1;
});
this._weaponScroll = cc.find("weaponScroll", this._page);
for (var t = cc.find("view/content", this._weaponScroll), i = 0; i < t.children.length; i++) {
this._weaponList.push(t.children[i]);
this._weaponList[i].on(cc.Node.EventType.TOUCH_END, function(t) {
c.cocosz.audioMgr.playBtnEffect();
var i = p.default.Weapon[t.target.name].id;
e._showWeaponId = i;
e._updateWeapon();
e._updateWeaponFrame();
var o = c.cocosz.dataMgr.getGunInfo(i);
o && 1 == o.State && (c.cocosz.dataMgr.curWeapon = i);
}, this);
}
var o = cc.find("view/iconLayer", this._weaponScroll);
o && o.setParent(t);
this._ani_arrow = cc.find("view/ani_arrow", this._weaponScroll);
this._ani_arrow && this._ani_arrow.setParent(t);
this._skinInfo_name = cc.find("ditai/skinName", this._page).getComponent(cc.Sprite);
this._skinInfo_xuedi = cc.find("jueseshuxing/xuedi", this._page);
this._skinInfo_value1 = cc.find("jueseshuxing/value1", this._page).getComponent(cc.Label);
this._skinInfo_value2 = cc.find("jueseshuxing/value2", this._page).getComponent(cc.Label);
this._skinInfo_change1 = cc.find("jueseshuxing/change1", this._page).getComponent(cc.Label);
this._skinInfo_change2 = cc.find("jueseshuxing/change2", this._page).getComponent(cc.Label);
this._skinInfo_level_pro = cc.find("jueseshuxing/levelProgressBar", this._page).getComponent(cc.ProgressBar);
this._weaponInfo_name = cc.find("wuqishuxing/weaponName", this._page).getComponent(cc.Sprite);
this._weaponInfo_value0 = cc.find("wuqishuxing/value0", this._page).getComponent(cc.Label);
this._weaponInfo_value1 = cc.find("wuqishuxing/value1", this._page).getComponent(cc.Label);
this._weaponInfo_value2 = cc.find("wuqishuxing/value2", this._page).getComponent(cc.Label);
this._weaponInfo_value3 = cc.find("wuqishuxing/value3", this._page).getComponent(cc.Label);
this._weaponInfo_change0 = cc.find("wuqishuxing/change0", this._page).getComponent(cc.Label);
this._weaponInfo_change1 = cc.find("wuqishuxing/change1", this._page).getComponent(cc.Label);
this._weaponInfo_change2 = cc.find("wuqishuxing/change2", this._page).getComponent(cc.Label);
this._weaponInfo_change3 = cc.find("wuqishuxing/change3", this._page).getComponent(cc.Label);
this._weaponInfo_level_pro = cc.find("wuqishuxing/levelProgressBar", this._page).getComponent(cc.ProgressBar);
var n = cc.find("CoinLabel", this._page), s = cc.find("jueseshuxing/txt_rank", this._page), a = cc.find("jueseshuxing/levelProgressBar", this._page), r = cc.find("wuqishuxing/txt_rank", this._page), u = cc.find("wuqishuxing/levelProgressBar", this._page);
if (l.default.isEndless) {
n.active = !1;
s.active = !1;
a.active = !1;
r.active = !1;
u.active = !1;
} else {
n.active = !0;
s.active = !0;
a.active = !0;
r.active = !0;
u.active = !0;
}
};
t.prototype._canGetBonus = function() {
return new Date().toDateString() != c.cocosz.dataMgr.LastDailyBonusTime;
};
t.prototype._aniEffect = function(e) {
switch (e) {
case 1:
if (this._aniUpgrade) {
this._aniUpgrade.node.active = !0;
this._aniUpgrade.setAnimation(0, "animation", !1);
c.cocosz.audioMgr.playEffect("ui_upgrade");
}
break;

case 2:
if (this._aniCaidai) {
this._aniCaidai.node.active = !0;
this._aniCaidai.setAnimation(0, "animation", !1);
c.cocosz.audioMgr.playEffect("ui_caidai");
}
}
};
t.prototype.onOpen = function() {
var e = this;
cc.log("home open !");
u.utils.umaEvent("gamehome");
u.utils.SendEvent("页面-首页");
this._updatePlayer();
this._updateWeapon();
this._updateWeaponFrame();
u.utils.showYzRealNameAuthPanel();
u.utils.showPrivacyPanel({
group: "default",
parent: this._page
});
u.utils.registerServerInitEvent(function() {
u.utils.checkAutoSign() && e._canGetBonus() && c.cocosz.uiMgr.openPanel(l.PanelName.UISignPanel);
e.showAd();
}, this);
cc.game.on(l.default.E_GAME_LOGIC, this._onGameMessageHandler, this);
};
t.prototype.onClose = function() {
cc.game.targetOff(this);
u.utils.hideVivoGamePortalWidget();
u.utils.hideOppoGameDrawerAdWidget();
u.utils.adManager.hideBlockAd();
u.utils.adManager.hideNativeTryGameWidget();
u.utils.adManager.HideSingleNativeAd();
if (f.default.IsWechat) {
u.utils.adManager.hideCustomAd({
location: 1
});
u.utils.adManager.hideCustomAd({
location: 2
});
} else f.default.IsVIVO && u.utils.adManager.hideCustomAd({
location: h.BannerLocation.Home
});
};
t.prototype.showAd = function() {
if (c.cocosz.isShowAd) {
f.default.IsWechat ? u.utils.adManager.HideBanner(h.BannerLocation.Home) : u.utils.adManager.ShowBanner(h.BannerLocation.Home, {
width: .1,
bottom: 1
});
if (f.default.IsWechat) {
u.utils.adManager.showCustomAd({
location: 1
});
u.utils.adManager.showCustomAd({
location: 2
});
} else f.default.IsVIVO && u.utils.adManager.showCustomAd({
location: h.BannerLocation.Home
});
u.utils.adManager.showNativeTryGameWidget({
right: 50,
top: 800,
scale: 1,
parent: this._page
});
u.utils.adManager.ShowSingleNativeAd({});
u.utils.adManager.showBlockAd({
right: 50,
top: 500,
showNum: 1
});
u.utils.showMoreGamesWidget({
group: "default",
scale: 1,
bottom: 300,
left: 50,
parent: this._page,
location: h.BannerLocation.Home
});
u.utils.showTryGamesWidget({
group: "default",
scale: 1,
bottom: 350,
right: 50,
parent: this._page,
location: h.BannerLocation.Home
});
u.utils.showVivoGamePortalWidget({
top: 500,
location: h.BannerLocation.Home
});
u.utils.showOppoGameDrawerAdWidget({
top: 500,
location: h.BannerLocation.Home
});
u.utils.showCreateShortcutWidget(null, {
group: "default",
scale: 1,
left: 0,
top: 500,
parent: this._page
});
u.utils.showPrivacyWidget({
group: "default",
top: 0,
left: 0,
parent: this._page.getChildByName("PrivacyWidget"),
color: cc.Color.BLACK
});
}
};
t.prototype._onGameMessageHandler = function(e) {
switch (e.type) {
case l.default.E_Fly_Coin:
this._flyCoins(e.iconName, e.frameNodeName);
break;

case l.default.E_CJ_SKIN:
this._showSkinId = c.cocosz.dataMgr.CurSkinId;
this._updatePlayer();
break;

case l.default.E_CJ_Weapon:
this._showWeaponId = c.cocosz.dataMgr.curWeapon;
this._updateWeapon();
this._updateWeaponFrame();
}
};
t.prototype._onBtnClickHandler = function(e) {
return s(this, void 0, void 0, function() {
var t, i, o, n, s, r, h = this;
return a(this, function(a) {
switch (a.label) {
case 0:
return [ 4, c.cocosz.audioMgr.playBtnEffect().catch() ];

case 1:
a.sent();
switch (e.target.name) {
case "BtnGameStart":
console.log("click BtnGameStart");
c.cocosz.gameMode = 6;
c.cocosz.gameMgr.gameStart(c.cocosz.getLevelId());
break;

case "BtnLeft":
this._showSkinId--;
this._showSkinId < 0 && (this._showSkinId = 11);
this._updatePlayer();
(t = c.cocosz.dataMgr.getSkinInfo(this._showSkinId)) && 1 == t.State && (c.cocosz.dataMgr.CurSkinId = this._showSkinId);
break;

case "BtnRight":
this._showSkinId++;
this._showSkinId > 11 && (this._showSkinId = 0);
this._updatePlayer();
(t = c.cocosz.dataMgr.getSkinInfo(this._showSkinId)) && 1 == t.State && (c.cocosz.dataMgr.CurSkinId = this._showSkinId);
break;

case "BtnSkin":
i = c.cocosz.dataMgr.getSkinInfo(this._showSkinId);
o = "" + (this._showSkinId + 1);
console.log(i);
if (0 == i.State) if (p.default.SkinMess[o].priceType == p.PriceType.Gold) if (c.cocosz.dataMgr.CoinCount >= p.default.SkinMess[o].price) {
c.cocosz.dataMgr.CoinCount -= p.default.SkinMess[o].price;
m.default.Show(v.t("msg.gxhdxjs"));
c.cocosz.dataMgr.CurSkinId = this._showSkinId;
this._updatePlayer();
this._aniEffect(2);
} else this.showCoinPanel(!1); else if (p.default.SkinMess[o].priceType == p.PriceType.Diamond) if (c.cocosz.dataMgr.DiamondCount >= p.default.SkinMess[o].price) {
c.cocosz.dataMgr.DiamondCount -= p.default.SkinMess[o].price;
m.default.Show(v.t("msg.gxhdxjs"));
c.cocosz.dataMgr.CurSkinId = this._showSkinId;
this._updatePlayer();
this._aniEffect(2);
} else this.showCoinPanel(!0); else p.default.SkinMess[o].priceType == p.PriceType.ZhuanPanReward && c.cocosz.uiMgr.openPanel(l.PanelName.UITurntablePanel); else if (!l.default.isEndless && i.Level < 6) if (c.cocosz.dataMgr.CoinCount >= l.default.skinLevelPriceArr[i.Level]) {
c.cocosz.dataMgr.CoinCount -= l.default.skinLevelPriceArr[i.Level];
i.Level++;
c.cocosz.dataMgr.setSkinInfo(i.Id, i);
this._updatePlayer();
this._aniEffect(1);
} else this.showCoinPanel(!1);
break;

case "BtnWeapon":
n = c.cocosz.dataMgr.getGunInfo(this._showWeaponId);
s = g.default.WeaponName[this._showWeaponId];
if (0 == n.State) if (p.default.Weapon[s].priceType == p.PriceType.Gold) if (c.cocosz.dataMgr.CoinCount >= p.default.Weapon[s].price) {
c.cocosz.dataMgr.CoinCount -= p.default.Weapon[s].price;
m.default.Show(v.t("msg.gxhdxwq"));
c.cocosz.dataMgr.curWeapon = this._showWeaponId;
this._updateWeapon();
this._updateWeaponFrame();
this._aniEffect(2);
} else this.showCoinPanel(!1); else if (p.default.Weapon[s].priceType == p.PriceType.Diamond) if (c.cocosz.dataMgr.DiamondCount >= p.default.Weapon[s].price) {
c.cocosz.dataMgr.DiamondCount -= p.default.Weapon[s].price;
m.default.Show(v.t("msg.gxhdxwq"));
c.cocosz.dataMgr.curWeapon = this._showWeaponId;
this._updateWeapon();
this._updateWeaponFrame();
this._aniEffect(2);
} else this.showCoinPanel(!0); else p.default.Weapon[s].priceType == p.PriceType.ZhuanPanReward && c.cocosz.uiMgr.openPanel(l.PanelName.UITurntablePanel); else if (!l.default.isEndless && n.Level < 3) if (c.cocosz.dataMgr.CoinCount >= l.default.weaponLevelPriceArr[n.Level]) {
c.cocosz.dataMgr.CoinCount -= l.default.weaponLevelPriceArr[n.Level];
n.Level++;
c.cocosz.dataMgr.setGunInfo(n.Id, n);
this._updateWeapon();
this._updateWeaponFrame();
this._aniEffect(1);
} else this.showCoinPanel(!1);
break;

case "BtnSkinAd":
u.utils.SendEvent("视频-皮肤解锁-播放");
c.cocosz.watchAD(function() {
u.utils.SendEvent("视频-皮肤解锁-成功");
var e = c.cocosz.dataMgr.getSkinInfo(h._showSkinId), t = "" + (h._showSkinId + 1);
if (e && p.default.SkinMess[t] && p.default.SkinMess[t].videoCount) {
e.VideoCount++;
c.cocosz.dataMgr.setSkinInfo(h._showSkinId, e);
if (e.VideoCount >= p.default.SkinMess[t].videoCount) {
m.default.Show(v.t("msg.gxhdxjs"));
c.cocosz.dataMgr.CurSkinId = h._showSkinId;
h._aniEffect(2);
} else m.default.Show(v.t("msg.jswc") + e.VideoCount + "/" + p.default.SkinMess[t].videoCount);
h._updatePlayer();
}
}, function() {
u.utils.SendEvent("视频-皮肤解锁-失败");
});
break;

case "BtnWeaponAd":
u.utils.SendEvent("视频-武器解锁-播放");
c.cocosz.watchAD(function() {
u.utils.SendEvent("视频-武器解锁-成功");
var e = c.cocosz.dataMgr.getGunInfo(h._showWeaponId), t = g.default.WeaponName[h._showWeaponId];
if (e && p.default.Weapon[t] && p.default.Weapon[t].videoCount) {
e.VideoCount++;
c.cocosz.dataMgr.setGunInfo(h._showWeaponId, e);
if (e.VideoCount >= p.default.Weapon[t].videoCount) {
m.default.Show(v.t("msg.gxhdxwq"));
c.cocosz.dataMgr.curWeapon = h._showWeaponId;
h._aniEffect(2);
} else m.default.Show(v.t("msg.jswc") + e.VideoCount + "/" + p.default.Weapon[t].videoCount);
h._updateWeapon();
h._updateWeaponFrame();
}
}, function() {
u.utils.SendEvent("视频-武器解锁-失败");
});
break;

case "BtnCJ":
c.cocosz.uiMgr.openPanel(l.PanelName.UITurntablePanel);
break;

case "BtnSign":
c.cocosz.uiMgr.openPanel(l.PanelName.UISignPanel);
break;

case "BtnRanking":
c.cocosz.uiMgr.openPanel(l.PanelName.UIRankingPanel);
break;

case "BtnTime":
c.cocosz.uiMgr.openPanel(l.PanelName.UITimePanel);
break;

case "BtnSet":
this._icon_set.stopAllActions();
this._frame_set.stopAllActions();
r = (this._frame_set.scaleY ? this._frame_set.scaleY : 1) / 2;
cc.tween(this._icon_set).to(r, {
angle: this._frame_set.scaleY ? 90 : -90
}, {
easing: "sineInOut"
}).start();
cc.tween(this._frame_set).to(r, {
scaleY: this._frame_set.scaleY ? 0 : 1
}, {
easing: "sineInOut"
}).start();
break;

case "BtnAudio":
c.cocosz.dataMgr.AudioOn = !c.cocosz.dataMgr.AudioOn;
this._updateAudioBtn();
break;

case "BtnShake":
c.cocosz.dataMgr.ShakeOn = !c.cocosz.dataMgr.ShakeOn;
this._updatShakeBtn();
}
return [ 2 ];
}
});
});
};
t.prototype._updatePlayer = function() {
var e = this;
cc.log("showSkinID: ", this._showSkinId);
this._playerAni.setSkinById(this._showSkinId);
this._skinInfo_name.spriteFrame = c.cocosz.resMgr.getRes("p_" + (this._showSkinId + 1), cc.SpriteFrame);
var t = c.cocosz.dataMgr.getSkinInfo(c.cocosz.dataMgr.CurSkinId), i = c.cocosz.dataMgr.getSkinInfo(this._showSkinId), o = t.Level, n = i.Level, s = "" + (c.cocosz.dataMgr.CurSkinId + 1), a = "" + (this._showSkinId + 1);
this._skinInfo_xuedi.children.forEach(function(t, i) {
i < p.default.SkinMess[a].xuedi ? e._skinInfo_xuedi.children[i].opacity = 255 : e._skinInfo_xuedi.children[i].opacity = 0;
});
this._skinInfo_value1.string = "" + p.default.SkinMess[a].atk[n];
this._skinInfo_value2.string = "" + p.default.SkinMess[a].speed[n];
var r = p.default.SkinMess[a].atk[n] - p.default.SkinMess[s].atk[o];
if (r < 0) {
this._skinInfo_change1.string = "" + r;
this._skinInfo_change1.node.children[0].active = !1;
this._skinInfo_change1.node.children[1].active = !0;
this._skinInfo_change1.node.color = cc.Color.RED;
this._skinInfo_change1.node.opacity = 255;
} else if (0 == r) this._skinInfo_change1.node.opacity = 0; else {
this._skinInfo_change1.string = "+" + r;
this._skinInfo_change1.node.children[0].active = !0;
this._skinInfo_change1.node.children[1].active = !1;
this._skinInfo_change1.node.color = cc.Color.GREEN;
this._skinInfo_change1.node.opacity = 255;
}
var u = p.default.SkinMess[a].speed[n] - p.default.SkinMess[s].speed[o];
if (u < 0) {
this._skinInfo_change2.string = "" + u;
this._skinInfo_change2.node.children[0].active = !1;
this._skinInfo_change2.node.children[1].active = !0;
this._skinInfo_change2.node.color = cc.Color.RED;
this._skinInfo_change2.node.opacity = 255;
} else if (0 == u) this._skinInfo_change2.node.opacity = 0; else {
this._skinInfo_change2.string = "+" + u;
this._skinInfo_change2.node.children[0].active = !0;
this._skinInfo_change2.node.children[1].active = !1;
this._skinInfo_change2.node.color = cc.Color.GREEN;
this._skinInfo_change2.node.opacity = 255;
}
this._skinInfo_level_pro.progress = n / 6;
if (i) {
this._btnSkin.children.forEach(function(e) {
return e.active = !1;
});
var h = this._btnSkin.getChildByName("btn_huang"), d = this._btnSkin.getChildByName("btn_huang_small"), f = this._btnSkin.getChildByName("btn_hong"), _ = this._btnSkin.getChildByName("txt_buy"), g = this._btnSkin.getChildByName("txt_sjwc"), m = this._btnSkin.getChildByName("txt_upgrade"), v = this._btnSkin.getChildByName("txt_zpjl"), y = this._btnSkin.getChildByName("icon_jinbi"), w = this._btnSkin.getChildByName("icon_zuanshi"), I = this._btnSkin.getChildByName("price");
l.default.isEndless && p.default.SkinMess[a].priceType == p.PriceType.Gold && (p.default.SkinMess[a].priceType = p.PriceType.Diamond);
if (0 == i.State) if (p.default.SkinMess[a] && p.default.SkinMess[a].videoCount) {
this._btnSkin.x = -350;
this._btnSkin.width = 169;
d && (d.active = !0);
if (p.default.SkinMess[a].priceType == p.PriceType.Gold) {
if (y) {
y.active = !0;
y.x = -50;
}
if (I) {
I.active = !0;
I.x = -10;
I.getComponent(cc.Label).string = "" + p.default.SkinMess[a].price;
}
} else if (p.default.SkinMess[a].priceType == p.PriceType.Diamond) {
if (w) {
w.active = !0;
w.x = -50;
}
if (I) {
I.active = !0;
I.x = -10;
I.getComponent(cc.Label).string = "" + p.default.SkinMess[a].price;
}
} else p.default.SkinMess[a].priceType == p.PriceType.ZhuanPanReward && v && (v.active = !0);
var b = this._btnSkinAd.getChildByName("videoCount");
b && (b.getComponent(cc.Label).string = i.VideoCount + "/" + p.default.SkinMess[a].videoCount);
} else {
this._btnSkin.x = -250;
this._btnSkin.width = 252;
h && (h.active = !0);
if (p.default.SkinMess[a].priceType == p.PriceType.Gold) {
_ && (_.active = !0);
if (y) {
y.active = !0;
y.x = 0;
}
if (I) {
I.active = !0;
I.x = 30;
I.getComponent(cc.Label).string = "" + p.default.SkinMess[a].price;
}
} else if (p.default.SkinMess[a].priceType == p.PriceType.Diamond) {
_ && (_.active = !0);
if (w) {
w.active = !0;
w.x = 0;
}
if (I) {
I.active = !0;
I.x = 30;
I.getComponent(cc.Label).string = "" + p.default.SkinMess[a].price;
}
} else p.default.SkinMess[a].priceType == p.PriceType.ZhuanPanReward && v && (v.active = !0);
} else if (l.default.isEndless) h && (h.active = !1); else if (i.Level < 6) {
this._btnSkin.x = -250;
this._btnSkin.width = 252;
f && (f.active = !0);
m && (m.active = !0);
if (y) {
y.active = !0;
y.x = 0;
}
if (I) {
I.active = !0;
I.x = 30;
I.getComponent(cc.Label).string = "" + l.default.skinLevelPriceArr[i.Level];
}
} else {
this._btnSkin.x = -250;
this._btnSkin.width = 252;
g && (g.active = !0);
}
}
};
t.prototype._updateWeapon = function() {
cc.log("showWeaponID: ", this._showWeaponId);
this._playerAni.setWeaponById(this._showWeaponId);
this._weaponInfo_name.spriteFrame = c.cocosz.resMgr.getRes("w_" + (this._showWeaponId + 1), cc.SpriteFrame);
var e = c.cocosz.dataMgr.getGunInfo(c.cocosz.dataMgr.CurRange), t = c.cocosz.dataMgr.getGunInfo(this._showWeaponId), i = e.Level, o = t.Level, n = g.default.WeaponName[c.cocosz.dataMgr.CurRange], s = g.default.WeaponName[this._showWeaponId];
this._weaponInfo_value0.string = "" + p.default.Weapon[s].atk[o];
this._weaponInfo_value1.string = (1 / p.default.Weapon[s].atkSpeed[o]).toFixed(1);
this._weaponInfo_value2.string = "" + p.default.Weapon[s].atkRange;
this._weaponInfo_value3.string = "" + p.default.Weapon[s].bulletTotal[o];
var a = p.default.Weapon[s].atk[o] - p.default.Weapon[n].atk[i], r = 1 / p.default.Weapon[s].atkSpeed[o] - 1 / p.default.Weapon[n].atkSpeed[i], u = p.default.Weapon[s].atkRange - p.default.Weapon[n].atkRange, h = p.default.Weapon[s].bulletTotal[o] - p.default.Weapon[n].bulletTotal[i];
if (a < 0) {
this._weaponInfo_change0.string = "" + a;
this._weaponInfo_change0.node.children[0].active = !1;
this._weaponInfo_change0.node.children[1].active = !0;
this._weaponInfo_change0.node.color = cc.Color.RED;
this._weaponInfo_change0.node.opacity = 255;
} else if (0 == a) this._weaponInfo_change0.node.opacity = 0; else {
this._weaponInfo_change0.string = "+" + a;
this._weaponInfo_change0.node.children[0].active = !0;
this._weaponInfo_change0.node.children[1].active = !1;
this._weaponInfo_change0.node.color = cc.Color.GREEN;
this._weaponInfo_change0.node.opacity = 255;
}
if (r < 0) {
this._weaponInfo_change1.string = "" + r;
this._weaponInfo_change1.node.children[0].active = !1;
this._weaponInfo_change1.node.children[1].active = !0;
this._weaponInfo_change1.node.color = cc.Color.RED;
this._weaponInfo_change1.node.opacity = 255;
} else if (0 == r) this._weaponInfo_change1.node.opacity = 0; else {
this._weaponInfo_change1.string = "+" + r;
this._weaponInfo_change1.node.children[0].active = !0;
this._weaponInfo_change1.node.children[1].active = !1;
this._weaponInfo_change1.node.color = cc.Color.GREEN;
this._weaponInfo_change1.node.opacity = 255;
}
if (u < 0) {
this._weaponInfo_change2.string = "" + u;
this._weaponInfo_change2.node.children[0].active = !1;
this._weaponInfo_change2.node.children[1].active = !0;
this._weaponInfo_change2.node.color = cc.Color.RED;
this._weaponInfo_change2.node.opacity = 255;
} else if (0 == u) this._weaponInfo_change2.node.opacity = 0; else {
this._weaponInfo_change2.string = "+" + u;
this._weaponInfo_change2.node.children[0].active = !0;
this._weaponInfo_change2.node.children[1].active = !1;
this._weaponInfo_change2.node.color = cc.Color.GREEN;
this._weaponInfo_change2.node.opacity = 255;
}
if (h < 0) {
this._weaponInfo_change3.string = "" + h;
this._weaponInfo_change3.node.children[0].active = !1;
this._weaponInfo_change3.node.children[1].active = !0;
this._weaponInfo_change3.node.color = cc.Color.RED;
this._weaponInfo_change3.node.opacity = 255;
} else if (0 == h) this._weaponInfo_change3.node.opacity = 0; else {
this._weaponInfo_change3.string = "+" + h;
this._weaponInfo_change3.node.children[0].active = !0;
this._weaponInfo_change3.node.children[1].active = !1;
this._weaponInfo_change3.node.color = cc.Color.GREEN;
this._weaponInfo_change3.node.opacity = 255;
}
this._weaponInfo_level_pro.progress = o / 3;
if (t) {
this._btnWeapon.children.forEach(function(e) {
return e.active = !1;
});
var d = this._btnWeapon.getChildByName("btn_huang"), f = this._btnWeapon.getChildByName("btn_huang_small"), _ = this._btnWeapon.getChildByName("btn_hong"), m = this._btnWeapon.getChildByName("txt_buy"), v = this._btnWeapon.getChildByName("txt_sjwc"), y = this._btnWeapon.getChildByName("txt_upgrade"), w = this._btnWeapon.getChildByName("txt_zpjl"), I = this._btnWeapon.getChildByName("icon_jinbi"), b = this._btnWeapon.getChildByName("icon_zuanshi"), S = this._btnWeapon.getChildByName("price");
if (!l.default.isEndless) if (0 == t.State) if (p.default.Weapon[s] && p.default.Weapon[s].videoCount) {
this._btnWeapon.x = 150;
this._btnWeapon.width = 169;
f && (f.active = !0);
if (p.default.Weapon[s].priceType == p.PriceType.Gold) {
if (I) {
I.active = !0;
I.x = -50;
}
if (S) {
S.active = !0;
S.x = -10;
S.getComponent(cc.Label).string = "" + p.default.Weapon[s].price;
}
} else if (p.default.Weapon[s].priceType == p.PriceType.Diamond) {
if (b) {
b.active = !0;
b.x = -50;
}
if (S) {
S.active = !0;
S.x = -10;
S.getComponent(cc.Label).string = "" + p.default.Weapon[s].price;
}
} else p.default.Weapon[s].priceType == p.PriceType.ZhuanPanReward && w && (w.active = !0);
var C = this._btnWeaponAd.getChildByName("videoCount");
C && (C.getComponent(cc.Label).string = t.VideoCount + "/" + p.default.Weapon[s].videoCount);
} else {
this._btnWeapon.x = 250;
this._btnWeapon.width = 252;
d && (d.active = !0);
if (p.default.Weapon[s].priceType == p.PriceType.Gold) {
m && (m.active = !0);
if (I) {
I.active = !0;
I.x = 0;
}
if (S) {
S.active = !0;
S.x = 30;
S.getComponent(cc.Label).string = "" + p.default.Weapon[s].price;
}
} else if (p.default.Weapon[s].priceType == p.PriceType.Diamond) {
m && (m.active = !0);
if (b) {
b.active = !0;
b.x = 0;
}
if (S) {
S.active = !0;
S.x = 30;
S.getComponent(cc.Label).string = "" + p.default.Weapon[s].price;
}
} else p.default.Weapon[s].priceType == p.PriceType.ZhuanPanReward && w && (w.active = !0);
} else if (t.Level < 3) {
this._btnWeapon.x = 250;
this._btnWeapon.width = 252;
_ && (_.active = !0);
y && (y.active = !0);
if (I) {
I.active = !0;
I.x = 0;
}
if (S) {
S.active = !0;
S.x = 30;
S.getComponent(cc.Label).string = "" + l.default.weaponLevelPriceArr[t.Level];
}
} else {
this._btnWeapon.x = 250;
this._btnWeapon.width = 252;
v && (v.active = !0);
}
}
this._updateWeaponFrame();
};
t.prototype._updateWeaponFrame = function() {
var e = c.cocosz.dataMgr.getItem(l.default.ST_GunInfo, "");
if (e) {
var t = JSON.parse(e);
if (t) for (var i = 0; i < this._weaponList.length; i++) {
var o = this._weaponList[i];
if (p.default.Weapon[o.name] && p.default.Weapon[o.name].id >= 0) {
var n = p.default.Weapon[o.name].id;
if (t[n]) {
var s = t[n].State;
o.getChildByName("kuang_hui").active = !(s >= 1);
if (o.name == g.default.WeaponName[this._showWeaponId]) {
o.getChildByName("kuang_huang").active = !0;
if (this._ani_arrow) if (t[n].State > 0 && t[n].Level < 3) {
this._ani_arrow.x = o.x + 30;
this._ani_arrow.active = !0;
} else this._ani_arrow.active = !1;
} else o.getChildByName("kuang_huang").active = !1;
} else {
o.getChildByName("kuang_hui").active = !1;
o.getChildByName("kuang_huang").active = !1;
}
} else {
o.getChildByName("kuang_hui").active = !1;
o.getChildByName("kuang_huang").active = !1;
}
}
}
};
t.prototype.showCoinPanel = function(e) {
var t = cc.instantiate(c.cocosz.resMgr.getRes("UIADPanel", cc.Prefab));
cc.find("Canvas").addChild(t);
e && t.getComponent("UIADPanel").setDiamond();
};
t.prototype._flyCoins = function(e, t) {
var i = cc.find(t, this._page);
if (i) {
var o = i.parent.convertToWorldSpaceAR(i.position);
_.default.Show(e, o);
}
};
t.prototype._updateAudioBtn = function(e) {
void 0 === e && (e = !0);
cc.find("Background/off", this._btnAudio).active = 0 == c.cocosz.dataMgr.AudioOn;
e && (c.cocosz.dataMgr.AudioOn ? c.cocosz.audioMgr.playBgm() : c.cocosz.audioMgr.stopAll());
};
t.prototype._updatShakeBtn = function() {
cc.find("Background/off", this._btnShake).active = 0 == c.cocosz.dataMgr.ShakeOn;
};
return t = n([ w ], t);
}(r.default));
i.default = I;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../../common-plugin/Scripts/Utils": "Utils",
"../../common-plugin/Scripts/YZ_Constant": "YZ_Constant",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/FlyCoin": "FlyCoin",
"../Framework/Msg": "Msg",
"../Framework/UIPage": "UIPage",
"../Game/ani": "ani",
"../Game/gameDate": "gameDate",
"../Game/weapon": "weapon",
LanguageData: "LanguageData"
} ],
UILoadingPage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "672f4K2Ni5IvZKg5f59uM3H", "UILoadingPage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/UIPage"), a = e("../Framework/Constant"), r = e("../Framework/CocosZ"), l = e("../../common-plugin/Scripts/PlatUtils"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = e.call(this, a.PageName.UILoadingPage) || this;
t._loadingBar = null;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
var e = cc.find("health", this._page);
e && ("zh" == r.cocosz.curLanguage && (l.default.IsHuaWei || l.default.IsOPPO || r.cocosz.isDeBug) ? e.active = !0 : e.active = !1);
this._loadingBar = cc.find("LoadingBar", this._page).getComponent(cc.ProgressBar);
};
t.prototype.onOpen = function() {
var e = this;
cc.game.on(a.default.E_GAME_LOGIC, this._onGameMassageHandler, this);
this._loadingBar.progress = .01;
var t = .01;
cc.tween(this._page).delay(.2).call(function() {
(t += .01) < 1 && e._updateProgress(t);
}).union().repeatForever().start();
};
t.prototype.onClose = function() {
cc.game.targetOff(this);
};
t.prototype._onGameMassageHandler = function(e) {
this._loadingBar.node.active = !0;
switch (e.type) {
case a.default.E_UPDATE_PROGRESS:
this._updateProgress(e.data);
}
};
t.prototype._updateProgress = function(e) {
e > this._loadingBar.progress && (this._loadingBar.progress = e);
};
return t = n([ u ], t);
}(s.default));
i.default = h;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/UIPage": "UIPage"
} ],
UIMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "33548NTHxpPnbtMDUrsJscE", "UIMgr");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}();
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./Constant"), s = e("../UI/UILoadingPage"), a = e("../UI/UIHomePage"), r = e("../UI/UIGamePage"), l = e("../UI/UIRevivePanel"), c = e("../UI/UIGameLoadingPage"), u = e("../UI/UIPausePanel"), h = e("../UI/UITurntablePage"), d = e("../UI/UITrySkinPanel"), f = e("../UI/UIWeaponLevelPanel"), _ = e("../UI/UIUpgradePanel"), p = e("../UI/UIOverPage"), g = e("../UI/UISignPage"), m = e("../UI/UITimePage"), v = e("../UI/UIRankingPanel"), y = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._pageDict = {};
t._panelDict = {};
return t;
}
Object.defineProperty(t, "inst", {
get: function() {
t._inst || (t._inst = new t());
return t._inst;
},
enumerable: !1,
configurable: !0
});
t.prototype.openPage = function(e) {
if (!this._panelDict[e] || !this._panelDict[e].isOpen()) {
this.closeAllPanel();
this.closeAllPage();
if (this._pageDict[e] && this._pageDict[e].isValid()) this._pageDict[e].open(); else {
var t = this._createUI(e);
if (t) {
this._pageDict[e] = t;
t.isValid() && t.open();
}
}
}
};
t.prototype.openPanel = function(e) {
if (!this._panelDict[e] || !this._panelDict[e].isOpen()) if (this._panelDict[e] && this._panelDict[e].isValid()) this._panelDict[e].open(); else {
var t = this._createUI(e);
if (t) {
this._panelDict[e] = t;
t.isValid() && t.open();
}
}
};
t.prototype.closeAllPage = function() {
for (var e in this._pageDict) e && this._pageDict[e] && this._pageDict[e].close();
};
t.prototype.closeAllPanel = function() {
for (var e in this._panelDict) e && this._panelDict[e] && this._panelDict[e].close();
};
t.prototype.closePanel = function(e) {
this._panelDict[e] && this._panelDict[e].isValid() && this._panelDict[e].close();
};
t.prototype._createUI = function(e) {
switch (e) {
case n.PageName.UILoadingPage:
return new s.default();

case n.PageName.UIHomePage:
return new a.default();

case n.PanelName.UISignPanel:
return new g.default();

case n.PanelName.UITurntablePanel:
return new h.default();

case n.PanelName.UITimePanel:
return new m.default();

case n.PanelName.UITrySkinPanel:
return new d.default();

case n.PanelName.UIWeaponLevelPanel:
return new f.default();

case n.PageName.UIGameLoadingPage:
return new c.default();

case n.PageName.UIGamePage:
return new r.default();

case n.PanelName.UIPausePanel:
return new u.default();

case n.PanelName.UIUpgradePanel:
return new _.default();

case n.PanelName.UIRevivePanel:
return new l.default();

case n.PageName.UIOverPage:
return new p.default();

case n.PanelName.UIRankingPanel:
return new v.default();

default:
cc.error("Can not found class " + e);
return null;
}
};
return t;
}(cc.Component);
i.default = y;
cc._RF.pop();
}, {
"../UI/UIGameLoadingPage": "UIGameLoadingPage",
"../UI/UIGamePage": "UIGamePage",
"../UI/UIHomePage": "UIHomePage",
"../UI/UILoadingPage": "UILoadingPage",
"../UI/UIOverPage": "UIOverPage",
"../UI/UIPausePanel": "UIPausePanel",
"../UI/UIRankingPanel": "UIRankingPanel",
"../UI/UIRevivePanel": "UIRevivePanel",
"../UI/UISignPage": "UISignPage",
"../UI/UITimePage": "UITimePage",
"../UI/UITrySkinPanel": "UITrySkinPanel",
"../UI/UITurntablePage": "UITurntablePage",
"../UI/UIUpgradePanel": "UIUpgradePanel",
"../UI/UIWeaponLevelPanel": "UIWeaponLevelPanel",
"./Constant": "Constant"
} ],
UIOverPage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a9632KbIPtPCovZ1PzJnE6R", "UIOverPage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../Framework/UIPage"), l = e("../Framework/Constant"), c = e("../Framework/CocosZ"), u = e("../../common-plugin/Scripts/PlatUtils"), h = e("../../common-plugin/Scripts/Utils"), d = e("../../common-plugin/Scripts/YZ_Constant"), f = e("../Game/gameMgr"), _ = e("../Game/UpgradeMgr"), p = (e("LanguageData"), 
cc._decorator), g = p.ccclass, m = (p.property, function(e) {
o(t, e);
function t() {
var t = e.call(this, l.PageName.UIOverPage) || this;
t._panel = null;
t._mask = null;
t._btnContinue = null;
t._btnHome = null;
t._isToHome = !1;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this._mask = cc.find("Mask", this._page);
this._panel = cc.find("Panel", this._page);
this._btnContinue = cc.find("BtnContinue", this._panel);
this._btnContinue.on(cc.Node.EventType.TOUCH_END, this._onBtnClickHandler, this);
this._btnHome = cc.find("BtnHome", this._panel);
this._btnHome.on(cc.Node.EventType.TOUCH_END, this._onBtnClickHandler, this);
};
t.prototype.onOpen = function() {
h.utils.SendEvent("页面-结算-" + (f.gameMgr.isWin ? "胜利" : "失败"));
this.showAd();
this._initPanel();
c.cocosz.dataMgr.TotoalCount_6++;
};
t.prototype.onClose = function() {
cc.game.targetOff(this);
h.utils.hideVivoGamePortalWidget();
h.utils.hideOppoGameDrawerAdWidget();
h.utils.adManager.hideBlockAd();
h.utils.adManager.hideNativeTryGameWidget();
h.utils.adManager.HideSingleNativeAd();
if (u.default.IsWechat) {
h.utils.adManager.HideBanner(d.BannerLocation.Over);
h.utils.adManager.hideCustomAd({
location: 5
});
h.utils.adManager.hideCustomAd({
location: 6
});
h.utils.adManager.hideCustomAd({
location: 7
});
} else u.default.IsVIVO && h.utils.adManager.hideCustomAd({
location: d.BannerLocation.Over
});
};
t.prototype.showAd = function() {
h.utils.adManager.ShowBanner(d.BannerLocation.Over, {
width: .1,
bottom: 1
});
h.utils.adManager.showBlockAd({
top: 500
});
h.utils.adManager.showNativeTryGameWidget({
right: 95,
top: 500,
scale: 1,
parent: this._page
});
if (u.default.IsWechat) {
h.utils.adManager.showCustomAd({
location: 5
});
h.utils.adManager.showCustomAd({
location: 6
});
h.utils.adManager.showCustomAd({
location: 7
});
} else u.default.IsVIVO && h.utils.adManager.showCustomAd({
location: d.BannerLocation.Over
});
h.utils.showTryGamesWidget({
group: "default",
scale: 1,
top: 180,
right: 25,
parent: this._page,
location: d.BannerLocation.Over
});
h.utils.showMoreGamesWidget({
group: "default",
scale: 1,
top: 300,
left: 25,
parent: this._page,
location: d.BannerLocation.Over
});
h.utils.showRecommendGamesList({
group: "default",
scale: 1,
parent: this._page,
bottom: 1e3
});
h.utils.showVivoGamePortalWidget({
top: 500,
location: d.BannerLocation.Over
});
h.utils.showOppoGameDrawerAdWidget({
bottom: 500,
location: d.BannerLocation.Over
});
h.utils.showOppoRecBanner({
bottom: 500,
left: 0,
location: d.BannerLocation.Over
});
f.gameMgr && f.gameMgr.isWin ? h.utils.GameWin(c.cocosz.getLevelId().toString()) : f.gameMgr && f.gameMgr.isFail && h.utils.GameFail(c.cocosz.getLevelId().toString());
null;
};
t.prototype.getSkillIDName = function(e) {
return e + (_.upgradeMgr.upgradeSkillMaxLevelArr[e] > 1 ? "_" + (_.upgradeMgr.upgradeSkillArr[e] + 1) : "");
};
t.prototype._initPanel = function() {
this._mask.opacity = 0;
cc.tween(this._mask).to(.2, {
opacity: 120
}).start();
this._panel.scale = 0;
cc.tween(this._panel).to(.3, {
scale: 1
}, {
easing: "backOut"
}).start();
if (_.upgradeMgr && _.upgradeMgr.isValid) {
var e = this._panel.getChildByName("kuang_boss");
if (_.upgradeMgr.bossKillId.length) {
var t = e.getChildByName("layout");
if (t) {
t.active = !0;
t.children.forEach(function(e, t) {
_.upgradeMgr.bossKillId.includes(parseInt(e.name)) ? e.active = !0 : e.active = !1;
});
}
} else {
var i = e.getChildByName("no");
i && (i.active = !0);
}
var o = this._panel.getChildByName("kuang_skill");
if (_.upgradeMgr.upgradeSkillArr.includes(1) || _.upgradeMgr.upgradeSkillArr.includes(2) || _.upgradeMgr.upgradeSkillArr.includes(3)) {
var n = o.getChildByName("skillScrollView");
if (n) {
n.active = !0;
var s = cc.find("view/content", n);
s && _.upgradeMgr.upgradeSkillArr.forEach(function(e, t) {
if (3 == _.upgradeMgr.upgradeSkillMaxLevelArr[t]) {
if (i = c.cocosz.resMgr.getRes("zombieSkill_icon_" + t + "_" + e, cc.SpriteFrame)) {
(n = (o = new cc.Node()).addComponent(cc.Sprite)).spriteFrame = i;
n.sizeMode = cc.Sprite.SizeMode.CUSTOM;
o.setContentSize(70, 70);
s.addChild(o);
}
} else if (e > 0) {
var i;
if (i = c.cocosz.resMgr.getRes("zombieSkill_icon_" + t, cc.SpriteFrame)) {
var o, n;
(n = (o = new cc.Node()).addComponent(cc.Sprite)).spriteFrame = i;
n.sizeMode = cc.Sprite.SizeMode.CUSTOM;
o.setContentSize(70, 70);
s.addChild(o);
}
}
});
}
} else {
var a = o.getChildByName("no");
a && (a.active = !0);
}
var r = cc.find("info", this._panel);
if (r) {
cc.log("iswin:", f.gameMgr.isWin, " isFail:", f.gameMgr.isFail);
r.getChildByName("tittle").children[0].active = f.gameMgr.isWin;
r.getChildByName("tittle").children[1].active = f.gameMgr.isFail;
r.getChildByName("time2").getComponent(cc.Label).string = c.cocosz.StoHMS(c.cocosz.dataMgr.best_time);
r.getChildByName("kill2").getComponent(cc.Label).string = c.cocosz.dataMgr.best_kill.toString();
r.getChildByName("level2").getComponent(cc.Label).string = c.cocosz.dataMgr.best_level.toString();
r.getChildByName("coin2").getComponent(cc.Label).string = c.cocosz.dataMgr.best_coin.toString();
var l = r.getChildByName("newRecard1"), u = r.getChildByName("newRecard2"), h = r.getChildByName("newRecard3"), d = r.getChildByName("newRecard4");
r.getChildByName("time1").getComponent(cc.Label).string = c.cocosz.StoHMS(f.gameMgr.GameTime);
if (f.gameMgr.GameTime > c.cocosz.dataMgr.best_time) {
r.getChildByName("time1").color = cc.Color.RED;
c.cocosz.dataMgr.best_time = f.gameMgr.GameTime;
l.active = !0;
}
r.getChildByName("kill1").getComponent(cc.Label).string = _.upgradeMgr.zombieKillNum.toString();
if (_.upgradeMgr.zombieKillNum > c.cocosz.dataMgr.best_kill) {
r.getChildByName("kill1").color = cc.Color.RED;
c.cocosz.dataMgr.best_kill = _.upgradeMgr.zombieKillNum;
u.active = !0;
}
r.getChildByName("level1").getComponent(cc.Label).string = _.upgradeMgr.curLevel.toString();
if (_.upgradeMgr.curLevel > c.cocosz.dataMgr.best_level) {
r.getChildByName("level1").color = cc.Color.RED;
c.cocosz.dataMgr.best_level = _.upgradeMgr.curLevel;
h.active = !0;
}
var p = _.upgradeMgr.zombieKillNum + 10 * _.upgradeMgr.curLevel + Math.min(500, Math.ceil(f.gameMgr.GameTime / 10));
c.cocosz.dataMgr.CoinCount += p;
r.getChildByName("coin1").getComponent(cc.Label).string = p.toString();
if (p > c.cocosz.dataMgr.best_coin) {
r.getChildByName("coin1").color = cc.Color.RED;
c.cocosz.dataMgr.best_coin = p;
d.active = !0;
}
}
}
};
t.prototype._onBtnClickHandler = function(e) {
return s(this, void 0, void 0, function() {
return a(this, function(t) {
switch (t.label) {
case 0:
return [ 4, c.cocosz.audioMgr.playBtnEffect().catch() ];

case 1:
t.sent();
if (this._isToHome) return [ 2 ];
switch (e.target.name) {
case "BtnContinue":
h.utils.umaEvent("gamecontinue");
6 == c.cocosz.gameMode && c.cocosz.gameMgr.gameStart(c.cocosz.dataMgr.TotoalCount_6);
break;

case "BtnHome":
h.utils.umaEvent("gamereturn");
c.cocosz.sceneMgr.loadScene("Home", function() {
c.cocosz.uiMgr.openPage(l.PageName.UIHomePage);
});
}
return [ 2 ];
}
});
});
};
return t = n([ g ], t);
}(r.default));
i.default = m;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../../common-plugin/Scripts/Utils": "Utils",
"../../common-plugin/Scripts/YZ_Constant": "YZ_Constant",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/UIPage": "UIPage",
"../Game/UpgradeMgr": "UpgradeMgr",
"../Game/gameMgr": "gameMgr",
LanguageData: "LanguageData"
} ],
UIPage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bbcc9AF2MhO8ouP3e6ksQiO", "UIPage");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../common-plugin/Scripts/Utils"), n = e("./CocosZ"), s = function() {
function e(e) {
var t = this;
this._page = null;
this._pageName = "";
this._isOpen = !1;
var i = n.cocosz.resMgr.getRes(e, cc.Prefab);
if (i) {
var o = cc.instantiate(i);
if (o) {
this._page = o;
this._pageName = e;
o.active = !1;
o.position = cc.Vec3.ZERO;
this._isOpen = !1;
this.getUIRoot().addChild(o);
o.group = "ui";
}
} else n.cocosz.resMgr.loadAndCacheRes("UI/" + e, cc.Prefab, null, function(i, o) {
if (o) {
var n = cc.instantiate(o);
if (n) {
t._page = n;
t._pageName = e;
n.active = !1;
n.position = cc.Vec3.ZERO;
t._isOpen = !1;
t.getUIRoot().addChild(n);
n.group = "ui";
t.onLoad();
t.open();
}
} else cc.error("Prefab " + e + " is not found!");
});
}
e.prototype.open = function() {
if (this.isValid()) {
if (!this._isOpen) {
this._isOpen = !0;
this._page.active = !0;
this.onOpen();
var t = n.cocosz.getConfigByKey("isInterstitial_" + this._pageName);
if (t) if ("true" === t) n.cocosz.isShowAd && o.utils.adManager.ShowInterstitial(); else if (Number.isInteger(t) && t > 0) {
e.interstitialCount[this._pageName] || (e.interstitialCount[this._pageName] = 0);
++e.interstitialCount[this._pageName] % t == 0 && n.cocosz.isShowAd && o.utils.adManager.ShowInterstitial();
}
}
} else cc.log("Page is not found!");
};
e.prototype.close = function() {
if (this._isOpen) {
this._isOpen = !1;
this.onClose();
}
if (this.isValid()) {
this._page.active = !1;
this.destroy();
}
"UILoadingPage" === this._pageName && n.cocosz.resMgr.releaseSingleRes(this._pageName, cc.Prefab);
};
e.prototype.destroy = function() {
this._isOpen && (this._isOpen = !1);
this.onDestroy();
this.isValid() && this._page.destroy();
};
e.prototype.getUIRoot = function() {
return cc.find("Canvas");
};
e.prototype.isValid = function() {
return this._page && cc.isValid(this._page);
};
e.prototype.isOpen = function() {
return this.isValid() && this._isOpen;
};
e.prototype.onLoad = function() {};
e.prototype.onOpen = function() {};
e.prototype.onClose = function() {};
e.prototype.onDestroy = function() {};
e.interstitialCount = {};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"./CocosZ": "CocosZ"
} ],
UIPausePanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "45557zGvJFMOq7sodhqFlFw", "UIPausePanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../../common-plugin/Scripts/PlatUtils"), l = e("../../common-plugin/Scripts/Utils"), c = e("../../common-plugin/Scripts/YZ_Constant"), u = e("../Framework/CocosZ"), h = e("../Framework/Constant"), d = e("../Framework/TweenEffect"), f = e("../Framework/UIPage"), _ = e("../Game/gameMgr"), p = e("../Game/UpgradeMgr"), g = cc._decorator, m = g.ccclass, v = (g.property, 
function(e) {
o(t, e);
function t() {
var t = e.call(this, h.PanelName.UIPausePanel) || this;
t._mask = null;
t._panel = null;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this._mask = this._page.getChildByName("mask");
this._panel = this._page.getChildByName("Panel");
for (var e = [ "BtnRestart", "BtnResume", "BtnHome" ], t = 0; t < e.length; t++) {
cc.find(e[t], this._panel).on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
}
};
t.prototype.onOpen = function() {
l.utils.SendEvent("页面-暂停");
this.showAd();
d.default.panel_mask_opacity(this._mask);
d.default.panel_open_moveY(this._panel);
u.cocosz.pauseCount++;
};
t.prototype.onClose = function() {
r.default.IsVIVO && l.utils.adManager.hideCustomAd({
location: c.BannerLocation.Pause
});
u.cocosz.pauseCount--;
};
t.prototype.showAd = function() {
u.cocosz.isShowAd && r.default.IsVIVO && l.utils.adManager.showCustomAd({
location: c.BannerLocation.Pause
});
};
t.prototype._onBtnClickedHandler = function(e, t) {
return s(this, void 0, void 0, function() {
return a(this, function(t) {
switch (t.label) {
case 0:
return [ 4, u.cocosz.audioMgr.playBtnEffect().catch() ];

case 1:
t.sent();
switch (e.target.name) {
case "BtnRestart":
_.gameMgr.isFail = !0;
_.gameMgr.unscheduleAllCallbacks();
p.upgradeMgr && p.upgradeMgr.unscheduleAllCallbacks();
u.cocosz.uiMgr.closePanel(h.PanelName.UIPausePanel);
6 == u.cocosz.gameMode && u.cocosz.gameMgr.gameStart(u.cocosz.dataMgr.TotoalCount_6);
break;

case "BtnResume":
cc.tween(this._panel).to(.5, {
y: this._panel.y + 1e3
}, {
easing: "sineOut"
}).call(function() {
u.cocosz.uiMgr.closePanel(h.PanelName.UIPausePanel);
}).start();
break;

case "BtnHome":
_.gameMgr.isFail = !0;
_.gameMgr.unscheduleAllCallbacks();
p.upgradeMgr && p.upgradeMgr.unscheduleAllCallbacks();
u.cocosz.uiMgr.closePanel(h.PanelName.UIPausePanel);
u.cocosz.sceneMgr.loadScene("Home", function() {
u.cocosz.uiMgr.openPage(h.PageName.UIHomePage);
});
}
return [ 2 ];
}
});
});
};
return t = n([ m ], t);
}(f.default));
i.default = v;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../../common-plugin/Scripts/Utils": "Utils",
"../../common-plugin/Scripts/YZ_Constant": "YZ_Constant",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/TweenEffect": "TweenEffect",
"../Framework/UIPage": "UIPage",
"../Game/UpgradeMgr": "UpgradeMgr",
"../Game/gameMgr": "gameMgr"
} ],
UIRankingPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4321coAQJVAirFQ0UEXn1GJ", "UIRankingPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.loadRes = void 0;
var r = e("../../common-plugin/Scripts/Utils"), l = e("../Framework/CocosZ"), c = e("../Framework/Constant"), u = e("../Framework/TweenEffect"), h = e("../Framework/UIPage"), d = e("../Framework/Msg"), f = e("LanguageData"), _ = cc._decorator, p = _.ccclass, g = (_.property, 
function() {
}(), function() {
}(), function() {
function e() {}
e.load_res = function(e, t) {
return new Promise(function(i, o) {
cc.assetManager.loadRemote(e, function(e, n) {
if (e) o(e); else {
t && t(n);
i(n);
}
});
});
};
return e;
}());
i.loadRes = g;
var m = function(e) {
o(t, e);
function t() {
var t = e.call(this, c.PanelName.UIRankingPanel) || this;
t._panel = null;
t._btnClose = null;
t._rankList = null;
t.bg = null;
t.timeInterval = null;
t.data = [];
t.myData = [];
t.reward = [];
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
var e = this, t = this;
this._panel = this._page.getChildByName("Panel");
this.bg = this._panel.getChildByName("bg");
this._rankList = this.bg.getChildByName("rankingScrollView").getComponent("list");
var i = "http://192.168.1.10/dev-api/qwk/reward/getRewardList/1";
r.utils.showLog("获取奖励上报数据, url=", i);
r.utils.commomHttpRequest(i, function(t, i) {
if (t) {
r.utils.showLog("获取奖励数据上报成功！");
var o = JSON.parse(i);
console.log(o);
e.reward = o.data;
} else r.utils.showLog("获取奖励数据上报失败！");
});
var o = "http://192.168.1.10/dev-api/qwk/charts/getTheCharts/2/1";
r.utils.showLog("上报数据, url=", o);
r.utils.commomHttpRequest(o, function(e, i) {
if (e) {
t.changeDataToPerson(i);
r.utils.showLog("数据上报成功！");
t.updatePanel();
t.updateMyPanel();
} else r.utils.showLog("数据上报失败！");
});
var n = cc.sys.localStorage.getItem("rggame_lastGameTime");
null != n && void 0 != n && "" !== n ? this.timeInterval = setInterval(function() {
var e = r.utils.checkWeeHours(n);
console.log(e);
if (e) {
var i = "http://192.168.1.10/dev-api/qwk/charts/getTheCharts/1/1";
r.utils.showLog("上报数据, url=", i);
r.utils.commomHttpRequest(i, function(e, i) {
if (e) {
t.changeDataToPerson(i);
r.utils.showLog("数据上报成功！");
t.updatePanel();
t.updateMyPanel();
} else r.utils.showLog("数据上报失败！");
});
}
}.bind(this), 3e3) : cc.sys.localStorage.setItem("rggame_lastGameTime", Date.now());
for (var s = [ "BtnClose" ], a = 0; a < s.length; a++) {
var l = cc.find(s[a], this._panel);
if (l) {
l.on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
"BtnClose" == l.name && (this._btnClose = l);
}
}
};
t.prototype.personData = function(e) {
var t = e, i = "player" + e, o = 1e3 + 150 * e, n = parseInt((100 * Math.random()).toString());
new Object();
return {
rankNum: t,
name: i,
picurl: "",
number: o,
rewardurl: "",
rewardNum: n
};
};
t.prototype.updateMyPanel = function() {
var e = this.bg.getChildByName("bottomNode"), t = e.getChildByName("paihangLabel"), i = e.getChildByName("fightlabel"), o = e.getChildByName("headNode").getChildByName("headSprite");
this.myData.remark <= 100 ? t.getComponent(cc.Label).string = this.myData.remark.toString() : t.getComponent(cc.Label).string = "暂未上榜";
i.getComponent(cc.Label).string = this.myData.combatPower.toString();
if (o.getComponent(cc.Sprite)) {
var n = "" == this.myData.avatar ? "head/head" : "http://192.168.1.10/dev-api" + this.myData.avatar;
"" != n ? cc.assetManager.loadRemote(n, function(e, t) {
if (o.getComponent(cc.Sprite) && o.getComponent(cc.Sprite).isValid) {
var i = new cc.SpriteFrame(t);
o.getComponent(cc.Sprite).spriteFrame = i;
}
}) : l.cocosz.resMgr.loadAndCacheRes(n, cc.SpriteFrame, null, function(e, t) {
o.getComponent(cc.Sprite) && o.getComponent(cc.Sprite).isValid && (o.getComponent(cc.Sprite).spriteFrame = t);
});
}
};
t.prototype.changeDataToPerson = function(e) {
var t = JSON.parse(e);
console.log(t);
this.data = t.theCharts;
this.myData = t.myData;
};
t.prototype.changeItem = function(e, t, i) {
return s(this, void 0, void 0, function() {
var o, n, s, r, c, u, h, _, p, g, m, v;
return a(this, function(a) {
o = this;
n = i.getChildByName("topNode");
s = i.getChildByName("rankingLabel");
r = s.getComponent(cc.Label);
c = n.getComponent(cc.Sprite);
r.string = e;
s.active = !0;
if (e <= 3) {
s.active = !1;
n.active = !0;
c && l.cocosz.resMgr.loadAndCacheRes("ranking/top_" + e, cc.SpriteFrame, null, function(e, t) {
c && c.isValid && (c.spriteFrame = t);
});
} else n.active = !1;
(u = i.getChildByName("headNode").getChildByName("headSprite").getComponent(cc.Sprite)) && ("" != (h = "" == t.avatar ? "head/head" : "http://192.168.1.10/dev-api" + t.avatar) ? cc.assetManager.loadRemote(h, function(e, t) {
o.updateImageIcon(h).then(function(e) {
if (u && u.isValid) {
var i = new cc.SpriteFrame(t);
u.spriteFrame = i;
}
});
}) : l.cocosz.resMgr.loadAndCacheRes(h, cc.SpriteFrame, null, function(e, t) {
u && u.isValid && (u.spriteFrame = t);
}));
i.getChildByName("headNode").getChildByName("nameLabel").getComponent(cc.Label).string = t.nikeName;
i.getChildByName("fightLabel").getComponent(cc.Label).string = t.combatPower;
_ = i.getChildByName("rewardLabel");
p = i.getChildByName("rewardSp").getComponent(cc.Sprite);
i.getChildByName("rewardSp").active = !1;
_.active = !1;
g = function(t) {
if (m.reward[t].sort == e) {
var n = "http://192.168.1.10/dev-api" + m.reward[t].goodsImg;
console.log(n);
setTimeout(function() {
cc.assetManager.loadRemote(n, function(e, n) {
d.default.Show(f.t(n));
if (p && p.isValid) {
i.getChildByName("rewardSp").active = !0;
var s = new cc.SpriteFrame(n);
p.spriteFrame = s;
}
if (o.reward[t].goodsNumber > 1) {
_.active = !0;
_.getComponent(cc.Label).string = "X" + o.reward[t].goodsNumber;
} else _.active = !1;
});
}, 200 * parseFloat(t));
}
};
m = this;
for (v in this.reward) g(v);
return [ 2 ];
});
});
};
t.prototype.updateImageIcon = function(e) {
return new Promise(function(t, i) {
var o = new Image();
o.onload = function() {
var e = new cc.Texture2D();
e.initWithElement(o);
e.handleLoadedTexture();
var i = new cc.SpriteFrame(e);
t(i);
};
o.crossOrigin = "Anonymous";
o.onerror = function(e) {
t(null);
};
o.src = e;
});
};
t.prototype.itemRenderEvent = function(e, t) {
this.changeItem(parseInt(t) + 1, this.data[t], e);
};
t.prototype.onOpen = function() {
r.utils.umaEvent("gamegameranking");
r.utils.SendEvent("页面-排行榜");
this._initPanel();
};
t.prototype._initPanel = function() {
u.default.panel_open_scale(this._panel);
this._rankList.renderEvent = this.itemRenderEvent.bind(this);
this.updatePanel();
};
t.prototype.updatePanel = function() {
this._rankList.numItems = this.data.length;
};
t.prototype._updateDayItem = function() {};
t.prototype._onBtnClickedHandler = function(e, t) {
l.cocosz.audioMgr.playBtnEffect();
switch (e.target.name) {
case "BtnClose":
l.cocosz.uiMgr.closePanel(c.PanelName.UIRankingPanel);
}
};
t.prototype.onDestroy = function() {
clearInterval(this.timeInterval);
};
return t = n([ p ], t);
}(h.default);
i.default = m;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/Msg": "Msg",
"../Framework/TweenEffect": "TweenEffect",
"../Framework/UIPage": "UIPage",
LanguageData: "LanguageData"
} ],
UIRevivePanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f624aGi/QlIuZDbTFGHQJuX", "UIRevivePanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../Framework/UIPage"), l = e("../Framework/Msg"), c = e("../Framework/Constant"), u = e("../Framework/CocosZ"), h = e("../../common-plugin/Scripts/Utils"), d = e("../Game/gameMgr"), f = e("LanguageData"), _ = cc._decorator, p = _.ccclass, g = (_.property, 
function(e) {
o(t, e);
function t() {
var t = e.call(this, c.PanelName.UIRevivePanel) || this;
t._mask = null;
t._panel = null;
t._timeLabel = null;
t._proIcon = null;
t._btnVideo = null;
t._btnPass = null;
t._tw1 = null;
t._tw2 = null;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this._mask = this._page.getChildByName("Mask");
this._panel = this._page.getChildByName("Panel");
this._timeLabel = this._panel.getChildByName("time").getComponent(cc.Label);
this._proIcon = this._panel.getChildByName("shangquan").getComponent(cc.Sprite);
this._btnVideo = this._panel.getChildByName("BtnVideo");
this._btnVideo.on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
this._btnPass = this._panel.getChildByName("BtnPass");
this._btnPass.on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
};
t.prototype.onOpen = function() {
h.utils.SendEvent("页面-复活");
this.showAd();
this._initPanel();
u.cocosz.pauseCount++;
};
t.prototype.onClose = function() {
u.cocosz.pauseCount--;
};
t.prototype.showAd = function() {};
t.prototype._initPanel = function() {
var e = this, t = this._mask.opacity;
this._mask.opacity = 0;
cc.tween(this._mask).to(.2, {
opacity: t
}).start();
this._panel.scale = 0;
cc.tween(this._panel).to(.3, {
scale: 1
}, {
easing: "backOut"
}).start();
var i = 9;
this._tw1 = cc.tween(this._timeLabel).delay(1).call(function() {
e._timeLabel.string = (--i).toString();
}).union().repeat(9).call(function() {
u.cocosz.uiMgr.closePanel(c.PanelName.UIRevivePanel);
d.gameMgr.fail();
}).start();
this._tw2 = cc.tween(this._proIcon).to(9, {
fillRange: 0
}).start();
};
t.prototype.stopTween = function() {
if (6 == u.cocosz.gameMode) {
this._tw1 && this._tw1.stop();
this._tw2 && this._tw2.stop();
}
};
t.prototype._onBtnClickedHandler = function(e, t) {
return s(this, void 0, void 0, function() {
var t = this;
return a(this, function(i) {
u.cocosz.audioMgr.playBtnEffect();
this.stopTween();
switch (e.target.name) {
case "BtnVideo":
h.utils.umaEvent("gamefuhuo");
if (this._btnVideo.getChildByName("share") && this._btnVideo.getChildByName("share").active) {
h.utils.SendEvent("分享-复活");
u.cocosz.share(function() {
h.utils.SendEvent("分享-复活-成功");
t._reLive();
}, function() {
h.utils.SendEvent("分享-复活-失败");
u.cocosz.uiMgr.closePanel(c.PanelName.UIRevivePanel);
d.gameMgr.fail();
});
} else if (this._btnVideo.getChildByName("video") && this._btnVideo.getChildByName("video").active) {
h.utils.SendEvent("视频-复活-播放");
u.cocosz.watchAD(function() {
h.utils.SendEvent("视频-复活-成功");
t._reLive();
}, function() {
h.utils.SendEvent("视频-复活-失败");
u.cocosz.uiMgr.closePanel(c.PanelName.UIRevivePanel);
d.gameMgr.fail();
});
} else {
u.cocosz.uiMgr.closePanel(c.PanelName.UIRevivePanel);
d.gameMgr.fail();
}
break;

case "BtnPass":
h.utils.umaEvent("gamesurr");
u.cocosz.uiMgr.closePanel(c.PanelName.UIRevivePanel);
d.gameMgr.fail();
}
return [ 2 ];
});
});
};
t.prototype._reLive = function() {
l.default.Show(f.t("msg.fhcg"));
u.cocosz.uiMgr.closePanel(c.PanelName.UIRevivePanel);
d.gameMgr.revive();
};
return t = n([ p ], t);
}(r.default));
i.default = g;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/Msg": "Msg",
"../Framework/UIPage": "UIPage",
"../Game/gameMgr": "gameMgr",
LanguageData: "LanguageData"
} ],
UISignPage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "602c3qoDuBPu43NXRhxJ3PJ", "UISignPage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../Framework/UIPage"), l = e("../Framework/Constant"), c = e("../Framework/CocosZ"), u = e("../Framework/Msg"), h = e("../../common-plugin/Scripts/Utils"), d = e("../Framework/TweenEffect"), f = e("LanguageData"), _ = cc._decorator, p = _.ccclass, g = (_.property, 
[ 500, 1e3, 1500, 50, 2e3, 2500, 100 ]), m = function() {
function e(e, t) {
this._index = -1;
this._node = null;
this._normal = null;
this._current = null;
this._got = null;
this._label = null;
this._index = e;
this._node = t;
this._normal = this._node.getChildByName("st1");
this._current = this._node.getChildByName("st2");
this._got = this._node.getChildByName("st3");
if (this._node.getChildByName("rewardLabel")) {
this._label = this._node.getChildByName("rewardLabel").getComponent(cc.Label);
this._label.node.scale = .7;
this._label.node.setPosition(this._node.x, this._node.y - 60);
this._label.node.setParent(this._node.parent);
this._label.string = "+" + g[this._index];
}
}
e.prototype.setStatus = function(e) {
if (0 == e) {
this._normal.active = !0;
this._current.active = !1;
this._got.active = !1;
this._label.node.active = !0;
} else if (1 == e) {
this._normal.active = !1;
this._current.active = !0;
this._got.active = !1;
this._label.node.active = !0;
} else if (2 == e) {
this._normal.active = !0;
this._current.active = !1;
this._got.active = !0;
this._label.node.active = !1;
}
};
e.prototype.update = function() {
var e = c.cocosz.dataMgr.LastDailyBonusIndex;
6 == e && (e = -1);
var t = c.cocosz.dataMgr.LastDailyBonusTime, i = !1;
new Date().toDateString() != t && this._index == e + 1 && (i = !0);
this._index <= e ? this.setStatus(2) : i ? this.setStatus(1) : this.setStatus(0);
};
return e;
}(), v = function(e) {
o(t, e);
function t() {
var t = e.call(this, l.PanelName.UISignPanel) || this;
t._mask = null;
t._panel = null;
t._btnGet = null;
t._btnDouble = null;
t._btnClose = null;
t._day = [];
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this._panel = this._page.getChildByName("Panel");
this._mask = this._page.getChildByName("mask");
for (var e = [ "BtnClose", "BtnDouble", "BtnGet" ], t = 0; t < e.length; t++) {
var i = cc.find(e[t], this._panel);
if (i) {
i.on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
if ("BtnGet" == i.name) this._btnGet = i; else if ("BtnDouble" == i.name) {
this._btnDouble = i;
this._btnDouble.active = c.cocosz.isADON;
} else this._btnClose = i;
}
}
for (t = 0; t < 6; t++) {
var o = new m(t, this._panel.getChildByName("Day_" + (t + 1)));
this._day.push(o);
}
};
t.prototype.onOpen = function() {
h.utils.umaEvent("gamegamesign");
h.utils.SendEvent("页面-签到");
this._initPanel();
};
t.prototype._initPanel = function() {
d.default.panel_open_scale(this._panel);
this._updateDayItem();
};
t.prototype._updateDayItem = function() {
for (var e = 0; e < 6; e++) this._day[e].update();
};
t.prototype._onBtnClickedHandler = function(e, t) {
return s(this, void 0, void 0, function() {
return a(this, function(t) {
c.cocosz.audioMgr.playBtnEffect();
switch (e.target.name) {
case "BtnGet":
if (!this._canGetBonus()) {
u.default.Show(f.t("msg.jryqd"));
return [ 2 ];
}
this._getReward(!1);
break;

case "BtnDouble":
if (!this._canGetBonus()) {
u.default.Show(f.t("msg.jryqd"));
return [ 2 ];
}
this._getReward(!0);
h.utils.SendEvent("视频-双倍签到-成功");
break;

case "BtnClose":
c.cocosz.uiMgr.closePanel(l.PanelName.UISignPanel);
}
return [ 2 ];
});
});
};
t.prototype._getReward = function(e) {
if (0 == e) {
h.utils.umaEvent("gamesignordinary");
h.utils.SendEvent("签到-普通");
} else {
h.utils.umaEvent("gamedoublesign");
h.utils.SendEvent("签到-双倍");
}
var t = c.cocosz.dataMgr.LastDailyBonusIndex;
6 == t && (t = -1);
var i = t + 1, o = g[i];
e && (o *= 2);
if (3 == i || 6 == i) {
u.default.Show(f.t("msg.gxhdzs") + o);
c.cocosz.dataMgr.DiamondCount += o;
setTimeout(function() {
cc.game.emit(l.default.E_GAME_LOGIC, {
type: l.default.E_Fly_Coin,
iconName: "diamond",
frameNodeName: "CoinLabel2"
});
}, 500);
} else {
u.default.Show(f.t("msg.gxhdjb") + o);
c.cocosz.dataMgr.CoinCount += o;
setTimeout(function() {
cc.game.emit(l.default.E_GAME_LOGIC, {
type: l.default.E_Fly_Coin,
iconName: "coin",
frameNodeName: "CoinLabel"
});
}, 500);
}
c.cocosz.dataMgr.LastDailyBonusIndex = i;
c.cocosz.dataMgr.LastDailyBonusTime = new Date().toDateString();
c.cocosz.uiMgr.closePanel(l.PanelName.UISignPanel);
};
t.prototype._canGetBonus = function() {
return new Date().toDateString() != c.cocosz.dataMgr.LastDailyBonusTime;
};
return t = n([ p ], t);
}(r.default);
i.default = v;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/Msg": "Msg",
"../Framework/TweenEffect": "TweenEffect",
"../Framework/UIPage": "UIPage",
LanguageData: "LanguageData"
} ],
UITimePage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5ae23P5tJRKurJ80XOjhemY", "UITimePage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../Framework/UIPage"), l = e("../Framework/Constant"), c = e("../Framework/CocosZ"), u = e("../../common-plugin/Scripts/Utils"), h = e("../Framework/TweenEffect"), d = e("../Game/gameDate"), f = cc._decorator, _ = f.ccclass, p = (f.property, 
function() {
function e(e, t) {
this._id = 0;
this._node = null;
this._txt_zxsc = null;
this._txt_ylq = null;
this._btn = null;
this._label_coin = null;
this._label_diamond = null;
this._label_time = null;
this._id = e;
this._node = t;
this._info = d.default.TimeReward[e];
this._txt_zxsc = this._node.getChildByName("txt_zxsc");
this._txt_ylq = this._node.getChildByName("txt_ylq");
this._btn = this._node.getChildByName("btn");
this._btn.on(cc.Node.EventType.TOUCH_END, this.click, this);
this._label_coin = this._node.getChildByName("label_coin").getComponent(cc.Label);
this._label_coin.string = this._info.coinNum + "";
this._label_diamond = this._node.getChildByName("label_diamond").getComponent(cc.Label);
this._label_diamond.string = this._info.diamondNum + "";
this._label_time = this._node.getChildByName("label_time").getComponent(cc.Label);
this._label_time.string = c.cocosz.StoHMS(this._info.time);
}
e.prototype.click = function() {
var e = c.cocosz.dataMgr.receiveToday;
if (0 == e[this._id]) {
c.cocosz.audioMgr.playBtnEffect();
e[this._id] = 1;
c.cocosz.dataMgr.receiveToday = e;
this.update();
c.cocosz.dataMgr.CoinCount += this._info.coinNum;
c.cocosz.dataMgr.DiamondCount += this._info.diamondNum;
}
};
e.prototype.update = function() {
if (c.cocosz.dataMgr.OnlineToday >= this._info.time) {
if (c.cocosz.dataMgr.receiveToday[this._id]) {
this._btn.active = this._txt_zxsc.active = this._label_time.node.active = !1;
this._txt_ylq.active = !0;
} else {
this._txt_ylq.active = this._txt_zxsc.active = this._label_time.node.active = !1;
this._btn.active = !0;
}
} else {
this._txt_ylq.active = this._btn.active = !1;
this._txt_zxsc.active = this._label_time.node.active = !0;
}
};
return e;
}()), g = function(e) {
o(t, e);
function t() {
var t = e.call(this, l.PanelName.UITimePanel) || this;
t.mask = null;
t.panel = null;
t.label_online = null;
t.itemList = [];
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this.mask = this._page.getChildByName("mask");
this.panel = this._page.getChildByName("panel");
for (var e = [ "BtnBack" ], t = 0; t < e.length; t++) {
var i = cc.find(e[t], this.panel);
i && i.on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
}
this.label_online = this.panel.getChildByName("label_online").getComponent(cc.Label);
};
t.prototype.onOpen = function() {
u.utils.SendEvent("页面-在线奖励");
this._initPanel();
};
t.prototype.onClose = function() {};
t.prototype._initPanel = function() {
var e = this;
h.default.panel_mask_opacity(this.mask);
h.default.panel_open_moveY(this.panel);
for (var t = 0; t < 5; t++) {
var i = this.panel.getChildByName("item" + t);
if (i) {
var o = new p(t, i);
this.itemList.push(o);
}
}
cc.tween(this._page).call(function() {
e.updateTime();
}).delay(1).union().repeatForever().start();
};
t.prototype.updateTime = function() {
this.label_online.string = c.cocosz.StoHMS(c.cocosz.dataMgr.OnlineToday);
this.itemList.forEach(function(e) {
e.update();
});
};
t.prototype._onBtnClickedHandler = function(e, t) {
return s(this, void 0, void 0, function() {
return a(this, function(t) {
c.cocosz.audioMgr.playBtnEffect();
switch (e.target.name) {
case "BtnBack":
h.default.panel_close_moveY(this.panel, function() {
c.cocosz.uiMgr.closePanel(l.PanelName.UITimePanel);
});
}
return [ 2 ];
});
});
};
return t = n([ _ ], t);
}(r.default);
i.default = g;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/TweenEffect": "TweenEffect",
"../Framework/UIPage": "UIPage",
"../Game/gameDate": "gameDate"
} ],
UITrySkinPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9408ddmbX5KJqoO4VRkw0P1", "UITrySkinPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../../common-plugin/Scripts/Utils"), l = e("../Framework/CocosZ"), c = e("../Framework/Constant"), u = e("../Framework/UIPage"), h = e("../Game/ani"), d = cc._decorator.ccclass, f = function(e) {
o(t, e);
function t() {
var t = e.call(this, c.PanelName.UITrySkinPanel) || this;
t._mask = null;
t._panel = null;
t.aniArr = [];
t.btnArr = [];
t.skinArr = [];
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this._panel = this._page.getChildByName("Panel");
this._mask = this._page.getChildByName("Mask");
this.aniArr[0] = this._panel.getChildByName("ani0");
this.aniArr[1] = this._panel.getChildByName("ani1");
this.aniArr[2] = this._panel.getChildByName("ani2");
for (var e = [ "BtnVideo0", "BtnVideo1", "BtnVideo2", "BtnPass" ], t = 0; t < e.length; t++) {
var i = cc.find(e[t], this._panel);
if (i) {
this.btnArr[t] = i;
i.on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
}
}
};
t.prototype.onOpen = function() {
var e = this;
r.utils.SendEvent("页面-皮肤试用");
l.cocosz.pauseCount++;
var t = l.cocosz.dataMgr.getRandomLockSkin();
if (t.length > 0) for (var i = function(i) {
if (t.length > 0) {
var n = Math.floor(Math.random() * t.length), s = t[n];
t.splice(n, 1);
o.skinArr[i] = s;
var a = o.aniArr[i].getComponent(h.default);
a.setSkinById(s);
a.setWeaponById(l.cocosz.dataMgr.CurRange);
o.aniArr[i].opacity = 0;
l.cocosz.scheduleOnce(function() {
e._page && e.aniArr[i] && cc.tween(e.aniArr[i]).set({
y: 500,
opacity: 255
}).to(.4, {
y: 50
}, {
easing: "sineOut"
}).start();
}, .3 * i);
} else {
o.aniArr[i].active = !1;
o.btnArr[i].active = !1;
}
}, o = this, n = 0; n < 3; n++) i(n); else l.cocosz.uiMgr.closePanel(c.PanelName.UITrySkinPanel);
};
t.prototype.onClose = function() {
l.cocosz.gameMgr.gameStart(l.cocosz.curLevel);
};
t.prototype._onBtnClickedHandler = function(e, t) {
return s(this, void 0, void 0, function() {
var t = this;
return a(this, function(i) {
switch (i.label) {
case 0:
return [ 4, l.cocosz.audioMgr.playBtnEffect().catch() ];

case 1:
i.sent();
switch (e.target.name) {
case "BtnVideo0":
case "BtnVideo1":
case "BtnVideo2":
r.utils.SendEvent("视频-弹窗角色试用-播放");
l.cocosz.watchAD(function() {
r.utils.SendEvent("视频-弹窗角色试用-成功");
"BtnVideo0" == e.target.name ? l.cocosz.gameMgr.gameCtr.curUseSkinId = t.skinArr[0] : "BtnVideo1" == e.target.name ? l.cocosz.gameMgr.gameCtr.curUseSkinId = t.skinArr[1] : "BtnVideo2" == e.target.name && (l.cocosz.gameMgr.gameCtr.curUseSkinId = t.skinArr[2]);
l.cocosz.uiMgr.closePanel(c.PanelName.UITrySkinPanel);
}, function() {
r.utils.SendEvent("视频-弹窗角色试用-失败");
l.cocosz.uiMgr.closePanel(c.PanelName.UITrySkinPanel);
});
break;

case "BtnPass":
l.cocosz.uiMgr.closePanel(c.PanelName.UITrySkinPanel);
}
return [ 2 ];
}
});
});
};
return t = n([ d ], t);
}(u.default);
i.default = f;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/UIPage": "UIPage",
"../Game/ani": "ani"
} ],
UITurntablePage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a2b2aQ0OHtIGIW0RibIyjtk", "UITurntablePage");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../../common-plugin/Scripts/Utils"), l = e("../Framework/CocosZ"), c = e("../Framework/Constant"), u = e("../Framework/Msg"), h = e("../Framework/UIPage"), d = e("../Game/gameDate"), f = e("../Game/weapon"), _ = e("LanguageData"), p = cc._decorator, g = p.ccclass, m = (p.property, 
function(e) {
o(t, e);
function t() {
var t = e.call(this, c.PanelName.UITurntablePanel) || this;
t._panel = null;
t._rewardList = null;
t._totalLabel = null;
t._btnCJ = null;
t._btnAD = null;
t.startNum = 0;
t.startIntervalTime = 10;
t.addTime = 1;
t.isCJ = !1;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this._panel = this._page.getChildByName("panel");
this._rewardList = this._panel.getChildByName("rewardList");
this._totalLabel = this._panel.getChildByName("totalLabel").getComponent(cc.Label);
for (var e = [ "BtnBack", "BtnCJ", "BtnAD" ], t = 0; t < e.length; t++) {
var i = this._panel.getChildByName(e[t]);
if (i) {
i.on(cc.Node.EventType.TOUCH_END, this._onBtnClickHandler, this);
"BtnCJ" == e[t] ? this._btnCJ = i : "BtnAD" == e[t] && (this._btnAD = i);
}
}
};
t.prototype.onOpen = function() {
r.utils.umaEvent("gamechoujiang");
r.utils.SendEvent("页面-抽奖");
this._panel.scale = 0;
cc.tween(this._panel).to(.3, {
scale: .8
}, {
easing: "backOut"
}).start();
cc.tween(this._page.getChildByName("guang")).by(.5, {
angle: 60,
opacity: -150
}).by(.5, {
angle: 60,
opacity: 150
}).union().repeatForever().start();
this._totalLabel.string = (l.cocosz.totalCJTimes > 30 ? 30 : l.cocosz.totalCJTimes) + "/30";
(l.cocosz.totalCJTimes > 30 || l.cocosz.dataMgr.getGunInfo(10).State > 0) && (this._panel.getChildByName("w_nnp").color = cc.Color.GRAY);
this.updateReward();
this.updateBtn();
};
t.prototype.updateReward = function() {
for (var e = 0; e < 12; e++) {
var t = "reward" + (e + 1), i = this._rewardList.getChildByName(t);
if (d.default.TurntableReward[e].type == d.RewardType.Gold) {
var o = i.getChildByName("gold");
o && (o.active = !0);
if (n = i.getChildByName("label")) {
n.active = !0;
n.zIndex = 2;
n.setPosition(i.x + n.x, i.y + n.y);
n.setParent(this._rewardList);
n.getComponent(cc.Label).string = "+" + d.default.TurntableReward[e].num;
}
} else if (d.default.TurntableReward[e].type == d.RewardType.Diamond) {
var n, s = i.getChildByName("diamond");
s && (s.active = !0);
if (n = i.getChildByName("label")) {
n.active = !0;
n.zIndex = 2;
n.setPosition(i.x + n.x, i.y + n.y);
n.setParent(this._rewardList);
n.getComponent(cc.Label).string = "+" + d.default.TurntableReward[e].num;
}
} else if (d.default.TurntableReward[e].type == d.RewardType.Skin) {
var a = cc.instantiate(l.cocosz.resMgr.getRes("skin" + d.default.TurntableReward[e].num, cc.Prefab));
if (a) {
a.scale = .5;
a.zIndex = 1;
a.setParent(this._rewardList);
a.setPosition(i.x, i.y - 65);
}
if (r = i.getChildByName("nameSpr")) {
r.active = !0;
r.zIndex = 2;
r.setPosition(i.x + r.x, i.y + r.y);
r.setParent(this._rewardList);
r.getComponent(cc.Sprite).spriteFrame = l.cocosz.resMgr.getRes("p_" + d.default.TurntableReward[e].num, cc.SpriteFrame);
}
if (0 != l.cocosz.dataMgr.getSkinInfo(d.default.TurntableReward[e].num - 1).State) {
if (h = this._rewardList.getChildByName("mask" + (e + 1))) {
h.active = !0;
h.zIndex = 3;
}
}
} else if (d.default.TurntableReward[e].type == d.RewardType.Weapon) {
var r, c = new cc.Node(), u = "w_" + f.default.WeaponName[d.default.TurntableReward[e].num];
c.addComponent(cc.Sprite).spriteFrame = l.cocosz.resMgr.getRes(u, cc.SpriteFrame);
c.setParent(this._rewardList);
c.setPosition(i.x, i.y);
if (r = i.getChildByName("nameSpr")) {
r.active = !0;
r.zIndex = 2;
r.setPosition(i.x + r.x, i.y + r.y);
r.setParent(this._rewardList);
r.getComponent(cc.Sprite).spriteFrame = l.cocosz.resMgr.getRes("w_" + (d.default.TurntableReward[e].num + 1), cc.SpriteFrame);
}
if (0 != l.cocosz.dataMgr.getGunInfo(d.default.TurntableReward[e].num).State) {
var h;
if (h = this._rewardList.getChildByName("mask" + (e + 1))) {
h.active = !0;
h.zIndex = 3;
}
}
}
}
};
t.prototype.CJ = function() {
var e = this;
r.utils.umaEvent("gamechoujiang" + l.cocosz.useCJTimes);
this.isCJ = !0;
var t = 20;
t += Math.floor(12 * Math.random());
var i = 0, o = this.startNum, n = 0;
l.cocosz.audioMgr.playEffect("turntable");
var s = setInterval(function() {
i++;
if (0 == e.getTimeCount(i, n)) {
e._rewardList.children[o].children[0].opacity = 0;
++o >= 12 && (o = 0);
d.default.TurntableReward[o].type == d.RewardType.Skin ? 0 != l.cocosz.dataMgr.getSkinInfo(d.default.TurntableReward[o].num - 1).State && ++o >= 12 && (o = 0) : d.default.TurntableReward[o].type == d.RewardType.Weapon && 0 != l.cocosz.dataMgr.getGunInfo(d.default.TurntableReward[o].num).State && ++o >= 12 && (o = 0);
n++;
e._rewardList.children[o].children[0].opacity = 255;
if (n >= t) {
e.startNum = o;
clearInterval(s);
if (d.default.TurntableReward[o].type == d.RewardType.Gold) {
u.default.Show(_.t("msg.gxhdjb") + d.default.TurntableReward[o].num);
l.cocosz.dataMgr.CoinCount += d.default.TurntableReward[o].num;
} else if (d.default.TurntableReward[o].type == d.RewardType.Diamond) {
u.default.Show(_.t("msg.gxhdzs") + d.default.TurntableReward[o].num);
l.cocosz.dataMgr.DiamondCount += d.default.TurntableReward[o].num;
} else if (d.default.TurntableReward[o].type == d.RewardType.Skin) {
u.default.Show(_.t("msg.gxhdxjs"));
l.cocosz.dataMgr.CurSkinId = d.default.TurntableReward[o].num - 1;
cc.game.emit(c.default.E_GAME_LOGIC, {
type: c.default.E_CJ_SKIN
});
e._rewardList.children[o].children[0].opacity = 0;
e._rewardList.getChildByName("mask6").active = !0;
e._rewardList.getChildByName("mask6").zIndex = 3;
} else {
u.default.Show(_.t("msg.gxhdxwq"));
l.cocosz.dataMgr.curWeapon = d.default.TurntableReward[o].num;
cc.game.emit(c.default.E_GAME_LOGIC, {
type: c.default.E_CJ_Weapon
});
e._rewardList.children[o].children[0].opacity = 0;
e._rewardList.getChildByName("mask12").active = !0;
e._rewardList.getChildByName("mask12").zIndex = 3;
}
e.isCJ = !1;
l.cocosz.useCJTimes++;
l.cocosz.totalCJTimes++;
e._totalLabel.string = (l.cocosz.totalCJTimes > 30 ? 30 : l.cocosz.totalCJTimes) + "/30";
if (30 == l.cocosz.totalCJTimes && 0 == l.cocosz.dataMgr.getGunInfo(10).State) {
u.default.Show(_.t("msg.gxhdnnp"));
l.cocosz.dataMgr.curWeapon = 10;
e._panel.getChildByName("w_nnp").color = cc.Color.GRAY;
cc.game.emit(c.default.E_GAME_LOGIC, {
type: c.default.E_CJ_Weapon
});
}
e.updateBtn();
}
}
}, 10);
};
t.prototype.getTimeCount = function(e, t) {
for (var i = 0, o = 0; o < t; o++) i += o * this.addTime;
return (e - i) % (this.startIntervalTime + t * this.addTime);
};
t.prototype.updateBtn = function() {
if (l.cocosz.isADON && l.cocosz.useCJTimes >= c.default.commonCJTimes) {
this._btnCJ.active = !1;
this._btnAD.active = !0;
} else {
this._btnCJ.active = !0;
this._btnAD.active = !1;
}
};
t.prototype._onBtnClickHandler = function(e) {
return s(this, void 0, void 0, function() {
var t = this;
return a(this, function(i) {
switch (i.label) {
case 0:
return [ 4, l.cocosz.audioMgr.playBtnEffect().catch() ];

case 1:
i.sent();
if (this.isCJ) return [ 2 ];
switch (e.target.name) {
case "BtnBack":
l.cocosz.uiMgr.closePanel(c.PanelName.UITurntablePanel);
break;

case "BtnCJ":
this.CJ();
break;

case "BtnAD":
r.utils.SendEvent("视频-抽奖-播放");
l.cocosz.watchAD(function() {
r.utils.SendEvent("视频-抽奖-成功");
t.CJ();
}, function() {
r.utils.SendEvent("视频-抽奖-失败");
});
}
return [ 2 ];
}
});
});
};
return t = n([ g ], t);
}(h.default));
i.default = m;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/Msg": "Msg",
"../Framework/UIPage": "UIPage",
"../Game/gameDate": "gameDate",
"../Game/weapon": "weapon",
LanguageData: "LanguageData"
} ],
UIUpgradePanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6b4ebcCT0lEhoZZWJGVc0YS", "UIUpgradePanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../Framework/UIPage"), l = e("../Framework/Constant"), c = e("../Framework/CocosZ"), u = e("../../common-plugin/Scripts/Utils"), h = e("../Framework/TweenEffect"), d = e("../Game/UpgradeMgr"), f = e("../../common-plugin/Scripts/PlatUtils"), _ = e("../Game/gameMgr"), p = cc._decorator, g = p.ccclass, m = (p.property, 
function(e) {
o(t, e);
function t() {
var t = e.call(this, l.PanelName.UIUpgradePanel) || this;
t._mask = null;
t._panel = null;
t._skill0 = null;
t._skill1 = null;
t._skill2 = null;
t._skill3 = null;
t._skill4 = null;
t._btnRefresh = null;
t._betterArr = [];
t._otherArr = [];
t._uiSkillIdArr = [];
t._curIndex = -1;
t._canClick = !0;
t._lockArr = [ !1, !1, !1, !1, !1 ];
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this._mask = this._page.getChildByName("Mask");
this._panel = this._page.getChildByName("Panel");
for (var e = [ "skill0", "skill1", "skill2", "skill3", "skill4", "btnRefresh" ], t = 0; t < e.length; t++) {
var i = cc.find(e[t], this._panel);
if (i) {
i.on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
if ("skill0" == i.name) this._skill0 = i; else if ("skill1" == i.name) this._skill1 = i; else if ("skill2" == i.name) this._skill2 = i; else if ("skill3" == i.name) this._skill3 = i; else if ("skill4" == i.name) this._skill4 = i; else if ("btnRefresh" == i.name) {
this._btnRefresh = i;
i.active = c.cocosz.isADON;
}
}
}
var o = c.cocosz.getConfigByKey("skillLockNum");
if (Number.isInteger(o)) for (t = 0; t < 5; t++) this._lockArr[t] = t + o >= 5;
};
t.prototype.onOpen = function() {
u.utils.SendEvent("页面-技能");
for (var e = [ d.SkillType.双发, d.SkillType.子弹碎片, d.SkillType.枪林弹雨, d.SkillType.谢幕, d.SkillType.瞬斩, d.SkillType.冰霜精通, d.SkillType.火焰精通, d.SkillType.萃取, d.SkillType.再生, d.SkillType.护甲靴子, d.SkillType.疾走, d.SkillType.神圣守护, d.SkillType.通灵匕首, d.SkillType.飞轮, d.SkillType.闪电, d.SkillType.燃烧瓶 ], t = 0; t <= 34; t++) [ d.SkillType.雷电精通, d.SkillType.龙卵, d.SkillType.通灵镰刀 ].includes(t) || d.upgradeMgr && d.upgradeMgr.isValid && d.upgradeMgr.upgradeSkillArr[t] >= d.upgradeMgr.upgradeSkillMaxLevelArr[t] || (e.includes(t) ? this._betterArr.push(t) : this._otherArr.push(t));
this._initPanel();
if (f.default.IsWechat) {
u.utils.adManager.hideCustomAd({
location: 3
});
u.utils.adManager.hideCustomAd({
location: 4
});
}
};
t.prototype.onClose = function() {
c.cocosz.pauseCount--;
if (f.default.IsWechat) {
u.utils.adManager.showCustomAd({
location: 3
});
u.utils.adManager.showCustomAd({
location: 4
});
}
};
t.prototype._initPanel = function() {
h.default.panel_mask_opacity(this._mask);
h.default.panel_open_moveY(this._panel);
this._curIndex = -1;
this._skill_refresh();
};
t.prototype._onBtnClickedHandler = function(e, t) {
return s(this, void 0, void 0, function() {
var t, i, o = this;
return a(this, function(n) {
switch (n.label) {
case 0:
return [ 4, c.cocosz.audioMgr.playBtnEffect().catch() ];

case 1:
n.sent();
if (!this._canClick) return [ 2 ];
switch (e.target.name) {
case "btnRefresh":
this._canClick = !1;
if (e.target.getChildByName("share") && e.target.getChildByName("share").active) {
u.utils.SendEvent("分享-刷新技能");
c.cocosz.share(function() {
u.utils.SendEvent("分享-刷新技能-成功");
o._skill_refresh();
o._canClick = !0;
}, function() {
u.utils.SendEvent("分享-刷新技能-失败");
o._canClick = !0;
});
} else if (e.target.getChildByName("video") && e.target.getChildByName("video").active) {
u.utils.SendEvent("视频-技能刷新(地下城僵尸)-播放");
c.cocosz.watchAD(function() {
u.utils.SendEvent("视频-技能刷新(地下城僵尸)-成功");
o._skill_refresh();
o._canClick = !0;
}, function() {
u.utils.SendEvent("视频-技能刷新(地下城僵尸)-失败");
o._canClick = !0;
});
}
break;

case "skill0":
case "skill1":
case "skill2":
case "skill3":
case "skill4":
this._canClick = !1;
t = function() {
"skill0" == e.target.name ? o._curIndex = 0 : "skill1" == e.target.name ? o._curIndex = 1 : "skill2" == e.target.name ? o._curIndex = 2 : "skill3" == e.target.name ? o._curIndex = 3 : "skill4" == e.target.name && (o._curIndex = 4);
o.updateFrame();
o._selectSkill();
};
if ((i = e.target.getChildByName("lock")) && i.active) if (i.getChildByName("share") && i.getChildByName("share").active) {
u.utils.SendEvent("分享-技能解锁");
c.cocosz.share(function() {
u.utils.SendEvent("分享-技能解锁-成功");
t && t();
}, function() {
u.utils.SendEvent("分享-技能解锁-失败");
o._canClick = !0;
});
} else if (i.getChildByName("video") && i.getChildByName("video").active) {
u.utils.SendEvent("视频-技能解锁-播放");
c.cocosz.watchAD(function() {
u.utils.SendEvent("视频-技能解锁-成功");
t && t();
}, function() {
u.utils.SendEvent("视频-技能解锁-失败");
o._canClick = !0;
});
} else t && t(); else t && t();
}
return [ 2 ];
}
});
});
};
t.prototype._selectSkill = function() {
var e = this;
this._canClick = !1;
this._uiSkillIdArr[this._curIndex] && d.upgradeMgr && d.upgradeMgr.isValid && d.upgradeMgr.getSkill(this._uiSkillIdArr[this._curIndex]);
[ this._skill0, this._skill1, this._skill2, this._skill3, this._skill4 ].forEach(function(t, i) {
i == e._curIndex ? e.card_click(t) : e.card_recycle(t);
});
c.cocosz.scheduleOnce(function() {
c.cocosz.uiMgr.closePanel(l.PanelName.UIUpgradePanel);
_.gameMgr && _.gameMgr.playerTs && _.gameMgr.playerTs.isValid && _.gameMgr.playerTs.avoidInjury(2);
}, 1.5);
};
t.prototype._getSkillIDName = function(e) {
return e + (d.upgradeMgr.upgradeSkillMaxLevelArr[e] > 1 ? "_" + (d.upgradeMgr.upgradeSkillArr[e] + 1) : "");
};
t.prototype._skill_load = function(e, t) {
var i = e.getChildByName("name");
if (i) {
var o = i.getComponent(cc.Sprite);
o && c.cocosz.resMgr.loadAndCacheRes("i18n/tex_zombie/" + c.cocosz.curLanguage + "/zombieSkill_name_" + this._getSkillIDName(t), cc.SpriteFrame, null, function(e, t) {
o && o.isValid && (o.spriteFrame = t);
});
}
var n = e.getChildByName("icon");
if (n) {
var s = n.getComponent(cc.Sprite);
s && c.cocosz.resMgr.loadAndCacheRes("tex_zombie/zombieSkill_icon_" + this._getSkillIDName(t), cc.SpriteFrame, null, function(e, t) {
s && s.isValid && (s.spriteFrame = t);
});
}
var a = e.getChildByName("introduce");
if (a) {
var r = a.getComponent(cc.Sprite);
r && c.cocosz.resMgr.loadAndCacheRes("i18n/tex_zombie/" + c.cocosz.curLanguage + "/zombieSkill_introduce_" + this._getSkillIDName(t), cc.SpriteFrame, null, function(e, t) {
r && r.isValid && (r.spriteFrame = t);
});
}
};
t.prototype._skill_refresh = function() {
var e;
this._uiSkillIdArr.length = 0;
if (this._betterArr.length) for (var t = Math.min(5 - this._uiSkillIdArr.length, this._betterArr.length); t > 0; t--) {
var i = Math.floor(Math.random() * this._betterArr.length);
if (this._betterArr[i] >= 0) {
this._uiSkillIdArr.push(this._betterArr[i]);
this._betterArr.splice(i, 1);
}
}
if (this._otherArr.length) for (t = Math.min(5 - this._uiSkillIdArr.length, this._otherArr.length); t > 0; t--) {
i = Math.floor(Math.random() * this._otherArr.length);
if (this._otherArr[i] >= 0) {
this._uiSkillIdArr.push(this._otherArr[i]);
this._otherArr.splice(i, 1);
}
}
for (t = 0; t < this._uiSkillIdArr.length; t++) if (2 == d.upgradeMgr.upgradeSkillArr[this._uiSkillIdArr[t]] && !this._lockArr[t]) for (var o = this._uiSkillIdArr.length - 1; o > t; o--) this._lockArr[o] && 2 != d.upgradeMgr.upgradeSkillArr[this._uiSkillIdArr[o]] && (e = [ this._uiSkillIdArr[o], this._uiSkillIdArr[t] ], 
this._uiSkillIdArr[t] = e[0], this._uiSkillIdArr[o] = e[1]);
if (this._uiSkillIdArr[0] >= 0) {
this._skill0.active = !0;
var n = this._uiSkillIdArr[0];
this._skill_load(this._skill0, n);
} else this._skill0.active = !1;
if (this._uiSkillIdArr[1] >= 0) {
this._skill1.active = !0;
n = this._uiSkillIdArr[1];
this._skill_load(this._skill1, n);
} else this._skill1.active = !1;
if (this._uiSkillIdArr[2] >= 0) {
this._skill2.active = !0;
n = this._uiSkillIdArr[2];
this._skill_load(this._skill2, n);
} else this._skill2.active = !1;
if (this._uiSkillIdArr[3] >= 0) {
this._skill3.active = !0;
n = this._uiSkillIdArr[3];
this._skill_load(this._skill3, n);
} else this._skill3.active = !1;
if (this._uiSkillIdArr[4] >= 0) {
this._skill4.active = !0;
n = this._uiSkillIdArr[4];
this._skill_load(this._skill4, n);
} else this._skill4.active = !1;
0 == this._otherArr.length && this._btnRefresh && this._btnRefresh.active && (this._btnRefresh.active = !1);
this.updateFrame();
};
t.prototype.updateFrame = function() {
this._skill0.children[0].active = 0 == this._curIndex;
this._skill1.children[0].active = 1 == this._curIndex;
this._skill2.children[0].active = 2 == this._curIndex;
this._skill3.children[0].active = 3 == this._curIndex;
this._skill4.children[0].active = 4 == this._curIndex;
this._skill0.children[5].active = this._lockArr[0] && 0 != this._curIndex;
this._skill1.children[5].active = this._lockArr[1] && 1 != this._curIndex;
this._skill2.children[5].active = this._lockArr[2] && 2 != this._curIndex;
this._skill3.children[5].active = this._lockArr[3] && 3 != this._curIndex;
this._skill4.children[5].active = this._lockArr[4] && 4 != this._curIndex;
};
t.prototype.card_click = function(e) {
e.zIndex = cc.macro.MAX_ZINDEX;
cc.tween(e).to(.5, {
x: 0,
y: 200
}, {
easing: "sineIn"
}).to(1, {
scale: 2,
opacity: 0
}, {
easing: "fade"
}).start();
};
t.prototype.card_recycle = function(e) {
var t = e.getChildByName("btnUnLock");
t && (t.active = !1);
cc.tween(e).to(.5, {
opacity: 0
}, {
easing: "sineIn"
}).start();
};
return t = n([ g ], t);
}(r.default));
i.default = m;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/TweenEffect": "TweenEffect",
"../Framework/UIPage": "UIPage",
"../Game/UpgradeMgr": "UpgradeMgr",
"../Game/gameMgr": "gameMgr"
} ],
UIWeaponLevelPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "83dfcUFp79CK5jLHVT/rcgh", "UIWeaponLevelPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = e("../../common-plugin/Scripts/Utils"), l = e("../Framework/CocosZ"), c = e("../Framework/Constant"), u = e("../Framework/Msg"), h = e("../Framework/UIPage"), d = e("../Game/gameDate"), f = e("../Game/weapon"), _ = e("LanguageData"), p = cc._decorator.ccclass, g = function(e) {
o(t, e);
function t() {
var t = e.call(this, c.PanelName.UIWeaponLevelPanel) || this;
t._panel = null;
t.weapon = null;
t.weaponId = 0;
t.isRange = !0;
t.isValid() && t.onLoad();
return t;
}
t.prototype.onLoad = function() {
this._panel = this._page.getChildByName("Panel");
this.weapon = this._panel.getChildByName("weapon").getComponent(cc.Sprite);
for (var e = [ "BtnPass", "BtnVideo" ], t = 0; t < e.length; t++) {
var i = cc.find(e[t], this._panel);
i && i.on(cc.Node.EventType.TOUCH_END, this._onBtnClickedHandler, this);
}
};
t.prototype.onOpen = function() {
r.utils.SendEvent("页面-武器升级");
l.cocosz.pauseCount++;
var e = "", t = 0, i = l.cocosz.dataMgr.getGunInfo(l.cocosz.dataMgr.CurRange).Level, o = l.cocosz.dataMgr.getGunInfo(l.cocosz.dataMgr.CurMelee).Level;
if (i < 3) {
this.isRange = !0;
this.weaponId = l.cocosz.dataMgr.CurRange;
e = f.default.WeaponName[this.weaponId];
t = i;
this.weapon.spriteFrame = l.cocosz.resMgr.getRes("w_" + e, cc.SpriteFrame);
} else {
if (!(o < 3)) {
l.cocosz.uiMgr.closePanel(c.PanelName.UIWeaponLevelPanel);
return;
}
this.isRange = !1;
this.weaponId = l.cocosz.dataMgr.CurMelee;
e = f.default.WeaponName[this.weaponId];
t = o;
this.weapon.spriteFrame = l.cocosz.resMgr.getRes("w_" + e, cc.SpriteFrame);
}
var n = d.default.Weapon[e], s = cc.find("kuang/txt1", this._panel);
if (s) {
if (m = s.getComponent(cc.RichText)) {
var a = n.atk[t], u = n.atk[3] - a;
m.string = "<outline color=black width=2><color=white>" + _.t("try.gjl") + ": " + a + "</c><color=green}>" + (u > 0 ? " +" + u : "") + "</c></outline>";
}
}
var h = cc.find("kuang/txt2", this._panel);
if (h) {
if (m = h.getComponent(cc.RichText)) {
a = 1 / n.atkSpeed[t], u = 1 / n.atkSpeed[3] - a;
m.string = "<outline color=black width=2><color=white>" + _.t("try.gjpl") + ": " + a + "</c><color=green}>" + (u > 0 ? " +" + u : "") + "</c></outline>";
}
}
var p = cc.find("kuang/txt3", this._panel);
if (p) {
if (m = p.getComponent(cc.RichText)) {
a = n.atkRange;
m.string = "<outline color=black width=2><color=white>" + _.t("try.gjfw") + ": " + a + "</c></outline>";
}
}
var g = cc.find("kuang/txt4", this._panel);
if (g) {
var m;
if (m = g.getComponent(cc.RichText)) {
a = n.bulletTotal[t], u = n.bulletTotal[3] - a;
m.string = "<outline color=black width=2><color=white>" + _.t("try.dyl") + ": " + (this.isRange ? a : "♾") + "</c><color=green}>" + (u > 0 ? " +" + u : "") + "</c></outline>";
}
}
};
t.prototype.onClose = function() {
l.cocosz.gameMgr.gameStart(l.cocosz.curLevel);
};
t.prototype._onBtnClickedHandler = function(e, t) {
return s(this, void 0, void 0, function() {
var t = this;
return a(this, function(i) {
switch (i.label) {
case 0:
return [ 4, l.cocosz.audioMgr.playBtnEffect().catch() ];

case 1:
i.sent();
switch (e.target.name) {
case "BtnPass":
l.cocosz.uiMgr.closePanel(c.PanelName.UIWeaponLevelPanel);
break;

case "BtnVideo":
r.utils.SendEvent("视频-弹窗武器升级-播放");
l.cocosz.watchAD(function() {
r.utils.SendEvent("视频-弹窗武器升级-成功");
var e = l.cocosz.dataMgr.getGunInfo(t.weaponId);
e.Level = 3;
l.cocosz.dataMgr.setGunInfo(t.weaponId, e);
u.default.Show(_.t("msg.sjcg"));
l.cocosz.uiMgr.closePanel(c.PanelName.UIWeaponLevelPanel);
}, function() {
r.utils.SendEvent("视频-弹窗武器升级-失败");
l.cocosz.uiMgr.closePanel(c.PanelName.UIWeaponLevelPanel);
});
}
return [ 2 ];
}
});
});
};
return t = n([ p ], t);
}(h.default);
i.default = g;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/Msg": "Msg",
"../Framework/UIPage": "UIPage",
"../Game/gameDate": "gameDate",
"../Game/weapon": "weapon",
LanguageData: "LanguageData"
} ],
UpgradeMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f4901QXz85C5Y7PEKsAdvsM", "UpgradeMgr");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.upgradeMgr = i.SkillType = void 0;
var s, a = e("../Framework/CocosZ"), r = e("../Framework/Constant"), l = e("./bullet"), c = e("./gameMgr"), u = e("./jingyan"), h = e("./ZombieBase"), d = e("./weapon"), f = e("./prop"), _ = cc._decorator, p = _.ccclass, g = _.property;
(function(e) {
e[e["整装待发"] = 0] = "整装待发";
e[e["瞄准"] = 1] = "瞄准";
e[e["强化"] = 2] = "强化";
e[e["瞬斩"] = 3] = "瞬斩";
e[e["强力射击"] = 4] = "强力射击";
e[e["窃魂弹夹"] = 5] = "窃魂弹夹";
e[e["科技子弹"] = 6] = "科技子弹";
e[e["站姿射击"] = 7] = "站姿射击";
e[e["子弹碎片"] = 8] = "子弹碎片";
e[e["双发"] = 9] = "双发";
e[e["谢幕"] = 10] = "谢幕";
e[e["枪林弹雨"] = 11] = "枪林弹雨";
e[e["疾走"] = 12] = "疾走";
e[e["跑动射击"] = 13] = "跑动射击";
e[e["意气风发"] = 14] = "意气风发";
e[e["护甲靴子"] = 15] = "护甲靴子";
e[e["磁场"] = 16] = "磁场";
e[e["灵能补给"] = 17] = "灵能补给";
e[e["容光焕发"] = 18] = "容光焕发";
e[e["鹰眼"] = 19] = "鹰眼";
e[e["生命力"] = 20] = "生命力";
e[e["再生"] = 21] = "再生";
e[e["进化"] = 22] = "进化";
e[e["萃取"] = 23] = "萃取";
e[e["火焰精通"] = 24] = "火焰精通";
e[e["雷电精通"] = 25] = "雷电精通";
e[e["冰霜精通"] = 26] = "冰霜精通";
e[e["双重附魔"] = 27] = "双重附魔";
e[e["龙卵"] = 28] = "龙卵";
e[e["通灵匕首"] = 29] = "通灵匕首";
e[e["通灵镰刀"] = 30] = "通灵镰刀";
e[e["神圣守护"] = 31] = "神圣守护";
e[e["飞轮"] = 32] = "飞轮";
e[e["闪电"] = 33] = "闪电";
e[e["燃烧瓶"] = 34] = "燃烧瓶";
})(s = i.SkillType || (i.SkillType = {}));
i.upgradeMgr = null;
var m = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bulletPrefab = null;
t.zombieKillNum = 0;
t.weaponPre = null;
t.createPropArr = [];
t.bossKillId = [];
t.jingyanLayer = null;
t.propLayer = null;
t.jingyanPre = null;
t.jingyanRange = 200;
t._jingyanArr = [ 5, 10, 20, 25, 30, 40, 50, 60, 60, 70, 80, 90, 100, 110, 120, 130, 150, 170, 200, 220, 250, 280, 300, 350, 400, 500, 1e3 ];
t.upgradeSkillArr = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];
t.upgradeSkillMaxLevelArr = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3 ];
t.skill_14 = 1;
t.skill_18 = 0;
t.skill_magic = 0;
t._maxLevel = 25;
t._curLevel = 0;
t._curMaxJingyan = t._jingyanArr[t.curLevel];
t._curJingyan = 0;
t.canUpgrade = !0;
t.skillImgArr = [];
t.createNum = 0;
t.createMaxNum = 10;
t._canAccelerate = !0;
t._bishou = null;
t.hudun = null;
t._zaishengCdTime = 0;
t._feilun = null;
t._posArr = [ [ [ 500, 0 ] ], [ [ 500, 0 ], [ -500, 0 ] ], [ [ 500, 0 ], [ -300, 400 ], [ -300, -400 ] ], [ [ 500, 0 ], [ -500, 0 ], [ 0, 500 ], [ 0, -500 ] ] ];
t._shandianCount = 0;
t._shandianNum = [ 1, 1, 3, 5 ];
t._shandiCdTime = 0;
t._fireCount = 0;
t._fireNum = [ 1, 1, 2, 3 ];
t._fireCdTime = 0;
return t;
}
Object.defineProperty(t.prototype, "curLevel", {
get: function() {
return this._curLevel;
},
set: function(e) {
e < 0 ? e = 0 : e > this._maxLevel && (e = this._maxLevel);
if (e >= this._curLevel) {
this._curLevel = e;
c.gameMgr.model6_levelLabel.string = "" + this._curLevel;
this.upgradeEffect();
a.cocosz.pauseCount++;
a.cocosz.uiMgr.openPanel(r.PanelName.UIUpgradePanel);
this._curJingyan -= this._curMaxJingyan;
this._curMaxJingyan = this._jingyanArr[this.curLevel];
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "curJingyan", {
get: function() {
return this._curJingyan;
},
set: function(e) {
e < 0 && (e = 0);
this._curJingyan = e;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
i.upgradeMgr = this;
cc.game.on(r.default.E_GAME_LOGIC, this._onGameMessageHandler, this);
this.jingyanPre = a.cocosz.resMgr.getRes("jingyan", cc.Prefab);
this.jingyanLayer = new cc.Node();
this.jingyanLayer.name = "jingyanLayer";
this.jingyanLayer.zIndex = r.ZindexLayer.zinedx_jingyan;
this.jingyanLayer.setPosition(cc.Vec2.ZERO);
this.jingyanLayer.setParent(this.node);
this.weaponPre = a.cocosz.resMgr.getRes("weaponPop", cc.Prefab);
this.propLayer = new cc.Node();
this.propLayer.name = "propLayer";
this.propLayer.zIndex = r.ZindexLayer.zinedx_jingyan;
this.propLayer.setPosition(cc.Vec2.ZERO);
this.propLayer.setParent(this.node);
};
t.prototype.start = function() {};
t.prototype.onDestroy = function() {
i.upgradeMgr = null;
cc.game.targetOff(this);
};
t.prototype.update = function(e) {
if (c.gameMgr && c.gameMgr.model6_jingyanBar) {
var t = c.gameMgr.model6_jingyanBar.progress, i = this.curJingyan / this._curMaxJingyan;
0 == i && (i = .001);
c.gameMgr.model6_jingyanBar.progress = cc.misc.lerp(t, i, .2);
}
this.canUpgrade && !a.cocosz.isPause && this.curLevel < this._maxLevel && this._curJingyan >= this._curMaxJingyan && (this.curLevel += 1);
};
t.prototype.isHaveSkill = function(e) {
return this.upgradeSkillArr[e] > 0;
};
t.prototype.setSkillImg = function(e) {
var t = "zombieSkill_icon_" + e + (this.upgradeSkillMaxLevelArr[e] > 1 ? "_" + this.upgradeSkillArr[e] : ""), i = a.cocosz.resMgr.getRes(t, cc.SpriteFrame);
if (i && c.gameMgr.model6_skillScrollView_content && c.gameMgr.model6_skillScrollView_content.isValid) {
if (!this.skillImgArr[e] && c.gameMgr.model6_skillScrollView_item) {
this.skillImgArr[e] = cc.instantiate(c.gameMgr.model6_skillScrollView_item);
this.skillImgArr[e].active = !0;
this.skillImgArr[e].setParent(c.gameMgr.model6_skillScrollView_content);
c.gameMgr.model6_skillScrollView_content.width > c.gameMgr.model6_skillScrollView.node.width && c.gameMgr.model6_skillScrollView.scrollToRight();
}
if (this.skillImgArr[e]) {
var o = this.skillImgArr[e].getComponent(cc.Sprite);
o && (o.spriteFrame = i);
}
}
};
t.prototype.setSkillCD = function(e, t) {
if (this.skillImgArr[e]) {
var i = this.skillImgArr[e].getChildByName("skillCD");
if (i) {
i.active = !0;
i.opacity = 255;
cc.tween(i.children[0].getComponent(cc.Sprite)).set({
fillRange: 1
}).to(t, {
fillRange: 0
}).call(function() {
i.opacity = 0;
}).start();
var o = t, n = i.children[1].getComponent(cc.Label);
cc.tween(i).call(function() {
n.string = o.toString();
o--;
}).delay(1).union().repeat(t).start();
}
}
};
t.prototype.getSkill = function(e) {
var t = this;
this.upgradeSkillArr[e]++;
this.setSkillImg(e);
switch (e) {
case s.整装待发:
c.gameMgr.playerTs && c.gameMgr.playerTs.curWeapon && (c.gameMgr.playerTs.curWeapon.bulletNum += 4);
break;

case s.瞄准:
c.gameMgr.playerTs && (c.gameMgr.playerTs.atkRate *= 1.25);
break;

case s.强化:
if (c.gameMgr.playerTs && c.gameMgr.playerTs.curWeapon) {
c.gameMgr.playerTs.curWeapon.bulletNum += 2;
c.gameMgr.playerTs.atkRate *= 1.1;
}
break;

case s.瞬斩:
break;

case s.强力射击:
c.gameMgr.playerTs && (c.gameMgr.playerTs.atkRate *= 1.2);
break;

case s.窃魂弹夹:
break;

case s.科技子弹:
c.gameMgr.playerTs && (c.gameMgr.playerTs.atkSpeedRate -= .1);
break;

case s.站姿射击:
var i = !0;
this.schedule(function() {
if (i && 0 == c.gameMgr.playerTs.moveDir.mag()) {
i = !1;
c.gameMgr.playerTs.atkRate *= 1.3;
} else if (!i && c.gameMgr.playerTs.moveDir.mag() > 0) {
i = !0;
c.gameMgr.playerTs.atkRate /= 1.3;
}
}, .1);
break;

case s.子弹碎片:
break;

case s.双发:
c.gameMgr.playerTs && (c.gameMgr.playerTs.atkBulletNum += 1);
break;

case s.谢幕:
break;

case s.枪林弹雨:
c.gameMgr.playerTs && (c.gameMgr.playerTs.atkBulletNum *= 2);
break;

case s.疾走:
c.gameMgr.playerTs && (c.gameMgr.playerTs.speedRate *= 1.1);
break;

case s.跑动射击:
var o = !0;
this.schedule(function() {
if (o && c.gameMgr.playerTs.isAtk) {
o = !1;
c.gameMgr.playerTs.speedRate *= 1.2;
} else if (!o && !c.gameMgr.playerTs.isAtk) {
o = !0;
c.gameMgr.playerTs.speedRate /= 1.2;
}
}, .1);
break;

case s.意气风发:
this.schedule(function() {
if (c.gameMgr.playerTs) {
var e = t.skill_14 + .1;
e > 1.4 ? e = 1.4 : e < 1 && (e = 1);
c.gameMgr.playerTs.atkRate *= e / t.skill_14;
c.gameMgr.playerTs.speedRate *= e / t.skill_14;
t.skill_14 = e;
}
}, 10);
break;

case s.护甲靴子:
break;

case s.磁场:
this.jingyanRange += 200;
break;

case s.灵能补给:
case s.容光焕发:
this.jingyanRange += 50;
break;

case s.鹰眼:
this.jingyanRange += 50;
cc.tween(c.gameMgr.mainCamera).to(1, {
zoomRatio: .6
}).start();
break;

case s.生命力:
if (c.gameMgr.playerTs) {
c.gameMgr.playerTs.totleHp += 1;
c.gameMgr.playerTs.HP = c.gameMgr.playerTs.totleHp;
this.scheduleOnce(function() {
c.gameMgr.playerTs.recoverEffect();
}, 1);
}
break;

case s.再生:
this.schedule(function() {
t._updateZaisheng();
}, 1);
break;

case s.进化:
if (c.gameMgr.playerTs) {
c.gameMgr.playerTs.atkRate *= 1.1;
c.gameMgr.playerTs.totleHp += 1;
c.gameMgr.playerTs.HP += 1;
this.scheduleOnce(function() {
c.gameMgr.playerTs.recoverEffect();
}, 1);
}
break;

case s.萃取:
case s.火焰精通:
case s.冰霜精通:
case s.双重附魔:
break;

case s.通灵匕首:
if ((n = a.cocosz.resMgr.getRes("zombieSkill_bishou", cc.Prefab)) && c.gameMgr && c.gameMgr.playerTs) {
this._bishou = cc.instantiate(n);
this._bishou.setParent(this.node);
this._bishou.zIndex = cc.macro.MAX_ZINDEX;
this._bishou.active = !1;
this.updateBishou();
}
break;

case s.神圣守护:
if ((n = a.cocosz.resMgr.getRes("zombieSkill_hudun", cc.Prefab)) && c.gameMgr && c.gameMgr.playerTs) {
this.hudun = cc.instantiate(n);
this.hudun.setParent(c.gameMgr.playerTs.node);
this.hudun.setPosition(0, 0);
this.hudun.zIndex = cc.macro.MAX_ZINDEX - 1;
break;
}

case s.飞轮:
var n;
if ((n = a.cocosz.resMgr.getRes("zombieSkill_feilun", cc.Prefab)) && c.gameMgr && c.gameMgr.playerTs) {
this._feilun && this._feilun.isValid && this._feilun.destroy();
this._feilun = cc.instantiate(n);
this._feilun.setParent(c.gameMgr.playerTs.node);
this._feilun.setPosition(cc.Vec2.ZERO);
this._feilun.active = !0;
this._feilun.zIndex = cc.macro.MAX_ZINDEX;
this.updateFeilun(this.upgradeSkillArr[s.飞轮]);
}
break;

case s.闪电:
1 == this.upgradeSkillArr[s.闪电] && this.schedule(this.updateShandian, 1);
break;

case s.燃烧瓶:
1 == this.upgradeSkillArr[s.燃烧瓶] && this.schedule(this.updateFire, 1);
}
};
t.prototype._onGameMessageHandler = function(e) {
var t = this;
switch (e.type) {
case r.default.E_Jingyan_Finish:
if (this.isHaveSkill(s.灵能补给)) c.gameMgr && c.gameMgr.playerTs && Math.random() < .01 && (c.gameMgr.playerTs.curWeapon.curBullet += 1); else if (this.isHaveSkill(s.容光焕发) && this.skill_18 < 3) {
0 == this.skill_18 && this.accelerate();
this.skill_18++;
}
break;

case r.default.E_Zombie_Hart:
if (e.node && e.node.isValid) if (this.isHaveSkill(s.瞬斩) && this.canAddMagic(e.node, s.瞬斩)) this.skill_effect_3(e.node); else {
var i = [];
this.isHaveSkill(s.火焰精通) && this.canAddMagic(e.node, s.火焰精通) && i.push(s.火焰精通);
this.isHaveSkill(s.冰霜精通) && this.canAddMagic(e.node, s.冰霜精通) && i.push(s.冰霜精通);
if (i.length) {
switch (i[Math.floor(Math.random() * i.length)]) {
case s.火焰精通:
this.skill_effect_24(e.node);
break;

case s.冰霜精通:
this.skill_effect_26(e.node);
}
}
}
break;

case r.default.E_Zombie_Death:
if (e.node) {
if (this.isHaveSkill(s.子弹碎片) && e.from) {
var o = 30 * Math.random();
this.createBullet(e.node, 30 + o, 40);
this.createBullet(e.node, 150 + o, 40);
this.createBullet(e.node, 270 + o, 40);
} else if (this.isHaveSkill(s.萃取) && c.gameMgr && c.gameMgr.playerTs && c.gameMgr.playerTs.HP < c.gameMgr.playerTs.totleHp && Math.random() < .05) {
c.gameMgr.playerTs.HP += 1;
c.gameMgr.playerTs.recoverEffect();
}
var n = e.node.getComponent(h.default);
if (n) {
this.zombieKillNum++;
if (n.isBoss) {
this.bossKillId.push(n.zombieId);
0 == c.gameMgr.bossArr.length && c.gameMgr.win();
}
}
}
break;

case r.default.E_Bullet_Last:
if (this.isHaveSkill(s.谢幕) && c.gameMgr.playerTs) {
this.createBullet(e.node, 36, 40);
this.createBullet(e.node, 108, 40);
this.createBullet(e.node, 180, 40);
this.createBullet(e.node, 252, 40);
this.createBullet(e.node, 324, 40);
this.scheduleOnce(function() {
t.createBullet(e.node, 72, 40);
t.createBullet(e.node, 144, 40);
t.createBullet(e.node, 216, 40);
t.createBullet(e.node, 288, 40);
t.createBullet(e.node, 360, 40);
}, 0);
}
break;

case r.default.E_Bullet_Reload:
if (this.isHaveSkill(s.窃魂弹夹) && c.gameMgr.playerTs) {
c.gameMgr.playerTs.atkRate *= 1.3;
this.scheduleOnce(function() {
c.gameMgr.playerTs.atkRate /= 1.3;
}, 1);
}
break;

case r.default.E_Player_Hart:
this.isHaveSkill(s.意气风发) && (this.skill_14 = 1);
break;

case r.default.E_Player_Death:
this.hudun && (this.hudun.opacity = 0);
}
};
t.prototype.createJingyan = function(e) {
if (this.jingyanPre && this.jingyanLayer) {
var t = c.gameMgr.nodeGet("jingyan", this.jingyanPre), i = t.getComponent(u.default);
i && i.init();
t.setPosition(e);
t.setParent(this.jingyanLayer);
}
};
t.prototype.createWeapon = function(e) {
if (!(this.createNum > this.createMaxNum)) {
var t = [ 1, 2, 6, 7, 8, 9, 10, 11, 20, 21 ], i = [ 12, 15, 16, 17, 18, 19, 22 ], o = Math.floor(-99 * Math.random() + 100), n = 0;
n = o >= 1 && o <= 60 || o >= 70 && o <= 80 || o >= 90 && o <= 100 ? d.default.rangeWeapon[Math.floor(Math.random() * t.length)] : d.default.rangeWeapon[Math.floor(Math.random() * i.length)];
var s = Math.floor(-99 * Math.random() + 100);
t.includes(n) && (s >= 1 && s <= 33 || s >= 44 && s <= 77 || s >= 87 && s <= 100) && this.createWeaponPre(e, n);
i.includes(n) && (s >= 33 && s <= 44 || s >= 77 && s <= 87) && this.createWeaponPre(e, n);
}
};
t.prototype.createWeaponPre = function(e, t) {
if (this.weaponPre && this.propLayer) {
var i = c.gameMgr.nodeGet("weaponPop", this.weaponPre);
i.setPosition(e);
i.setParent(this.propLayer);
i.getComponent(f.default).idx = t;
this.createNum++;
}
};
t.prototype.round = function(e, t) {
return Math.round(Math.random() * (t - e) + e);
};
t.prototype.upgradeEffect = function() {
if (c.gameMgr.playerTs && c.gameMgr.playerTs.isValid) {
var e = a.cocosz.resMgr.getRes("zombieSkill_sjgx", cc.Prefab);
if (e) {
var t = cc.instantiate(e);
t.setPosition(cc.Vec2.ZERO);
t.setParent(c.gameMgr.playerTs.node);
c.gameMgr.playEffect("LevelUp");
}
}
};
t.prototype.createBullet = function(e, t, i) {
if (this.bulletPrefab) {
var o = cc.v2(1, 0).rotateSelf(cc.misc.degreesToRadians(t)), n = cc.instantiate(this.bulletPrefab);
n.parent = this.node;
n.setPosition(e.getPosition());
n.angle = t;
var s = n.getPosition(), a = s.add(o.mul(1e3));
cc.tween(n).to(a.sub(s).mag() / 2500, {
position: cc.v3(a)
}).call(function() {
var e = n.getComponent(l.default);
if (e.boomEffect) {
var t = cc.instantiate(e.boomEffect);
t.parent = e.node.parent;
t.setPosition(e.node.getPosition());
t.zIndex = r.ZindexLayer.zindex_bomb;
var i = t.getComponent(l.default);
i.atk = e.atk;
i.atker = e.atker;
i.id = e.id;
c.gameMgr.playEffect("explo", t);
if (e.hitEffect) {
var o = n.getPosition(), s = cc.instantiate(e.hitEffect);
s.parent = n.parent;
s.setPosition(o);
s.zIndex = r.ZindexLayer.zindex_effect_hit;
}
}
n.destroy();
}).start();
var u = n.getComponent(l.default);
u.id = 1;
u.atker = null;
u.atk = i;
u.dir = o;
}
};
t.prototype.accelerate = function() {
var e = this;
if (0 == this.skill_18) {
if (!this._canAccelerate) {
this._canAccelerate = !0;
c.gameMgr.playerTs && (c.gameMgr.playerTs.speedRate /= 1.5);
return;
}
this._canAccelerate = !1;
c.gameMgr.playerTs && (c.gameMgr.playerTs.speedRate *= 1.5);
}
this.scheduleOnce(function() {
e.skill_18--;
e.accelerate();
}, 1);
};
t.prototype.magic_hart_rate = function() {
return this.isHaveSkill(s.双重附魔) && this.skill_magic > 1 ? 1.5 : 1;
};
t.prototype.canAddMagic = function(e, t) {
if (!e || !e.isValid) return !1;
var i = e.getComponent(h.default);
if (!i) return !1;
if (i.HP <= 0) return !1;
for (var o = 0; o < e.childrenCount; o++) if (e.children[o].name == "zombieSkill_" + s.瞬斩) return !1;
if (!(t >= 0)) return !1;
if (t == s.瞬斩) {
if (i.isBoss || i.totleHp > 0 && i.HP / i.totleHp > .4) return !1;
} else {
for (o = 0; o < e.childrenCount; o++) if (e.children[o].name.includes("zombieSkill")) return !1;
if (i.isBoss) {
if (t == s.火焰精通) return Math.random() < .2;
if (t == s.冰霜精通) return Math.random() < .2;
}
}
return !0;
};
t.prototype.skill_effect_3 = function(e) {
if (e && e.isValid) {
var t = e.getComponent(h.default);
if (t) {
var i = a.cocosz.resMgr.getRes("zombieSkill_3", cc.Prefab);
if (i) {
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.setParent(e);
t.moveDir = cc.Vec2.ZERO;
t.canMoveDir = !1;
t.updateMove();
cc.tween(t).delay(.5).call(function() {
t && t.isValid && t.hart(t.HP, null, null, !1, !1, cc.Color.RED);
}).delay(.5).call(function() {
o && o.isValid && o.destroy();
}).start();
}
}
}
};
t.prototype.skill_effect_24 = function(e) {
var t = this;
if (e && e.isValid) {
var i = e.getComponent(h.default);
if (i) {
var o = a.cocosz.resMgr.getRes("zombieSkill_24", cc.Prefab);
if (o) {
var n = cc.instantiate(o);
n.setPosition(0, 0);
n.setParent(e);
n.zIndex = cc.macro.MAX_ZINDEX;
i.fire_start();
cc.tween(n).delay(.2).call(function() {
i.isValid && i.HP > 0 ? i.hart(5 * t.magic_hart_rate(), null, null, !1, !1, cc.Color.RED) : n.destroy();
}).union().repeat(20).call(function() {
i.fire_end();
n.destroy();
}).start();
c.gameMgr.playEffect("ranshao", e, 1);
}
}
}
};
t.prototype.skill_effect_26 = function(e) {
if (e && e.isValid) {
var t = e.getComponent(h.default);
if (t) {
var i = a.cocosz.resMgr.getRes("zombieSkill_26", cc.Prefab);
if (i) {
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.setParent(e);
o.zIndex = cc.macro.MAX_ZINDEX;
t.zombieId >= 8 ? o.scale = 4 : o.scale = 2;
if (t.isValid) {
t.frozenStart();
var n = t.isBoss ? .5 : 2;
this.scheduleOnce(function() {
t && t.isValid && t.frozenEnd();
o && o.isValid && o.destroy();
}, n);
}
c.gameMgr.playEffect("bingdong", e, 1);
}
}
}
};
t.prototype.updateBishou = function() {
var e = this;
if (this._bishou && this._bishou.isValid && c.gameMgr && c.gameMgr.playerTs) if (c.gameMgr.playerTs.atkTarget && c.gameMgr.playerTs.atkTarget.isValid) {
var t = this._bishou.getComponent(l.default);
t.isHartMusic = !1;
t.hitAudio = "hurt";
t.atk = 50 * c.gameMgr.playerTs.atkRate;
t.atkedArr = [];
var i = c.gameMgr.playerTs.node.getPosition(), o = c.gameMgr.playerTs.atkTarget.getPosition().subSelf(i);
o.mag() < 400 && o.normalizeSelf().mulSelf(400);
var n = i.add(cc.v2(1, 0).mulSelf(400).rotateSelf(this._bishou.angle / 180 * Math.PI)), s = i.add(o), a = o.mag() / 800;
if (0 == this._bishou.active) {
this._bishou.active = !0;
this._bishou.setPosition(i);
}
cc.tween(this._bishou).bezierTo(a, i, n, s).call(function() {
e.updateBishou();
}).start();
} else {
this._bishou.active = !1;
this.scheduleOnce(function() {
e.updateBishou();
}, 1);
}
};
t.prototype.updateHudun = function() {
var e = this;
if (this.hudun && this.hudun.active) {
this.hudun.active = !1;
c.gameMgr.playEffect("ShieldDestroy");
this.setSkillCD(s.神圣守护, 60);
this.scheduleOnce(function() {
if (c.gameMgr && c.gameMgr.playerTs && c.gameMgr.playerTs.isValid) {
e.hudun.active = !0;
c.gameMgr.playerTs.HP ? e.hudun.opacity = 255 : e.hudun.opacity = 0;
}
}, 60);
}
};
t.prototype._updateZaisheng = function() {
if (this._zaishengCdTime > 0) this._zaishengCdTime--; else if (!a.cocosz.isPause && c.gameMgr.playerTs && !c.gameMgr.playerTs.isDeath && c.gameMgr.playerTs.HP < c.gameMgr.playerTs.totleHp) {
c.gameMgr.playerTs.HP += 1;
c.gameMgr.playerTs.recoverEffect();
this._zaishengCdTime = 90;
this.setSkillCD(s.再生, this._zaishengCdTime);
}
};
t.prototype.updateFeilun = function(e) {
if (this._feilun && this._feilun.isValid && c.gameMgr && c.gameMgr.playerTs) {
cc.tween(this._feilun).by(10, {
angle: -1800
}).repeatForever().start();
for (var t = [ 1, 2, 3, 4 ][e], i = function(i) {
var n = o._feilun.children[i];
if (n) if (i < t) {
n.active = !0;
if (3 == e) {
var s = o._feilun.getChildByName("back").getComponent(cc.Sprite).spriteFrame;
n.getComponent(cc.Sprite).spriteFrame = s;
}
n.setPosition(o._posArr[e][i][0], o._posArr[e][i][1]);
cc.tween(n).call(function() {
c.gameMgr.playEffect("chilunStart");
n.getComponent(cc.Collider).enabled = !0;
}).to(1, {
scale: 2.5
}).delay(8).to(1, {
scale: 0
}).call(function() {
n.getComponent(cc.Collider).enabled = !1;
}).delay(2).union().repeatForever().start();
var a = n.getComponent(l.default);
if (a) {
a.isHartMusic = !1;
a.hitAudio = "chilun";
a.atk = 80 + 20 * e * c.gameMgr.playerTs.atkRate;
}
} else n.active = !1;
}, o = this, n = 0; n < 4; n++) i(n);
}
};
t.prototype.updateShandian = function() {
if (this._shandiCdTime > 0) this._shandiCdTime--; else if (!a.cocosz.isPause) {
var e = this.upgradeSkillArr[s.闪电];
0 == this._shandianCount && (this._shandianCount = this._shandianNum[e]);
for (var t = [], i = function(e) {
var i = !0, o = c.gameMgr.playerTs.atkList[e];
o.children.forEach(function(e) {
"zombieSkill_shandian" == e.name && (i = !1);
});
i && t.push(o);
}, o = c.gameMgr.playerTs.atkList.length - 1; o >= 0; o--) i(o);
if (t.length) {
var n = a.cocosz.resMgr.getRes("zombieSkill_shandian", cc.Prefab);
if (n) {
var r = t.shift();
if (r && r.isValid) {
this._shandianCount--;
var l = cc.instantiate(n);
l.setPosition(0, -r.height / 2 * r.scaleY);
l.setParent(r);
l.zIndex = cc.macro.MAX_ZINDEX;
if (3 == e) {
var u = l.getComponent(sp.Skeleton);
u && u.setSkin("y");
}
this.schedule(function() {
l && l.isValid && l.destroy();
}, 1);
var d = r.getComponent(h.default);
d && d.isValid && d.HP > 0 && d.hart(200 * this.magic_hart_rate(), null, null, !1, !1, cc.Color.RED);
c.gameMgr.playEffect("LuoLei", r);
}
} else a.cocosz.resMgr.getRes("prefab_zombie_skill/zombieSkill_shandian", cc.Prefab);
}
if (0 == this._shandianCount) {
this._shandiCdTime = 3 + e;
this.setSkillCD(s.闪电, this._shandiCdTime);
}
}
};
t.prototype.updateFire = function() {
if (this._fireCdTime > 0) this._fireCdTime--; else if (!a.cocosz.isPause) {
var e = this.upgradeSkillArr[s.燃烧瓶];
this._fireCount = this._fireNum[e];
if (!a.cocosz.isPause && c.gameMgr && c.gameMgr.playerTs && c.gameMgr.playerTs.atkTarget && c.gameMgr.playerTs.atkTarget.isValid) {
var t = a.cocosz.resMgr.getRes("zombieSkill_fire", cc.Prefab);
if (t) {
var i = c.gameMgr.playerTs.atkTarget.getPosition().subSelf(c.gameMgr.playerTs.node.getPosition());
i.normalizeSelf().mulSelf(400);
for (var o = function(o) {
var s = ((n._fireCount - 1) / 2 - o) * (Math.PI / 2), a = c.gameMgr.playerTs.node.getPosition(), u = a.add(cc.v2(i).rotateSelf(s)), h = cc.v2((a.x + u.x) / 2, a.y + 900), d = cc.instantiate(t);
d.children[1].active = 3 != e;
d.children[2].active = 3 == e;
d.setPosition(a);
d.setParent(c.gameMgr.map);
d.zIndex = cc.macro.MAX_ZINDEX;
cc.tween(d).parallel(cc.tween().bezierTo(1, a, h, u), cc.tween().to(1, {
angle: 720 * (i.x > 0 ? 1 : -1)
})).call(function() {
d.zIndex = r.ZindexLayer.zinedx_floorSkill;
d.children[1].active = d.children[2].active = !1;
d.children[0].active = !0;
d.getComponent(cc.Collider).enabled = !0;
var t = d.getComponent(l.default);
t.isHartMusic = !1;
t.atk = 11;
t.hartInterval = .2;
var i = d.children[0].getComponent(sp.Skeleton);
i.setSkin(3 == e ? "l" : "h");
i.setAnimation(0, "k", !1);
i.setAnimation(0, "ranshao", !0);
c.gameMgr.playEffect("Ranshaopingposui", d);
c.gameMgr.playEffect("ranshao", d);
}).delay(3).to(.3, {
opacity: 50
}).call(function() {
d.destroy();
}).start();
}, n = this, u = 0; u < this._fireCount; u++) o(u);
}
this._fireCdTime = 4;
this.setSkillCD(s.燃烧瓶, 4);
}
}
};
n([ g(cc.Prefab) ], t.prototype, "bulletPrefab", void 0);
return t = n([ p ], t);
}(cc.Component);
i.default = m;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"./ZombieBase": "ZombieBase",
"./bullet": "bullet",
"./gameMgr": "gameMgr",
"./jingyan": "jingyan",
"./prop": "prop",
"./weapon": "weapon"
} ],
Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "30bc3m3g/hJ/5QMVAo/j0Cz", "Utils");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__spreadArrays || function() {
for (var e = 0, t = 0, i = arguments.length; t < i; t++) e += arguments[t].length;
var o = Array(e), n = 0;
for (t = 0; t < i; t++) for (var s = arguments[t], a = 0, r = s.length; a < r; a++, 
n++) o[n] = s[a];
return o;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.utils = void 0;
var a = e("./AdManager"), r = e("./CommonConfig"), l = e("./WechatTool"), c = e("./PlatUtils"), u = e("./YZ_Tool_Oppo"), h = e("./YZ_Tool_Baidu"), d = e("./YZ_Tool_Native"), f = e("./YZ_Tool_Vivo"), _ = e("./YZ_Tool_Douyin"), p = e("./YZ_Constant"), g = e("./YZ_Tool_QQ"), m = e("./YZ_Tool_QTT"), v = e("./YZ_Tool_Xiaomi"), y = e("./AldUtils"), w = e("./YZ_Tool_UC"), I = e("./YZ_Tool_Cocosplay"), b = e("./YZ_Tool_4399"), S = e("./YZ_Tool_IOS"), C = e("./YZ_Tool_Bili"), A = e("./YZ_Tool_Kwai"), L = e("./YZ_Tool_Broswer"), T = e("./YZ_Tool_Wifi"), P = e("./YZ_Tool_Hago"), B = e("./RedBagProgressWidget"), N = e("./CompatibleTool"), O = e("./YZ_Tool_HuaWei"), k = e("./OpenRedBagPanel"), R = e("./YZ_Tool_FaceBook"), M = e("./YzRealNameAuthPanel"), D = e("./YzUserPrivacyPanel"), E = e("./YZ_LocalStorage"), x = e("./YZ_Tool_GoogleWeb"), z = e("./Encrypt/CryptoJS"), G = cc._decorator, j = G.ccclass, U = G.property;
i.utils = null;
var V = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.DebugLoacalConfig = !1;
t.showLogView = !1;
t.config = null;
t.yzRedBagInfo = null;
t.adManager = null;
t._wechatTool = null;
t.currentLevel = 0;
t.isRecording = !1;
t.rewardCallFunc = null;
t.rewardCloseFunc = null;
t.rewardValue = 0;
t.luckBoxShowCount = -1;
t.nativeInsertShowCount = 0;
t.nativeInsertResizeCloseBtnShowCount = 0;
t.nativeBannerShowCount = 0;
t.nativeBannerResizeCloseBtnShowCount = 0;
t.turnTablePanelCloseFunc = null;
t.shareRecordPanelCloseFunc = null;
t.rewardBoxPanelCloseFunc = null;
t.rewardShortCutPanelCloseFunc = null;
t.rewardRecGamePanelCloseFunc = null;
t.rewardLuckBoxPanelCloseFunc = null;
t._bannerCloseTime = 0;
t._other_config = null;
t._oppoTool = null;
t._tool_Kwai = null;
t._tool_Wifi = null;
t._tool_Hago = null;
t._tool_Baidu = null;
t._tool_Native = null;
t._tool_Vivo = null;
t._tool_Douyin = null;
t._tool_QQ = null;
t._tool_XiaoMi = null;
t._tool_QTT = null;
t._tool_UC = null;
t._tool_Cocosplay = null;
t._tool_4399 = null;
t._tool_Ios = null;
t._tool_bili = null;
t._tool_Broswer = null;
t._tool_Huawei = null;
t._tool_Facebook = null;
t._tool_GoogleWeb = null;
t._isConfigInit = !1;
t._isServerInit = !1;
t._gameEntryTime = 0;
t._isServerLoadSuccess = !1;
t._recommendGamesBanner = null;
t._recommendGamesList = null;
t._tryGamesWidget = null;
t._moreGamesSidePanel = null;
t._moreGamesSidePanelBaidu = null;
t._recordWidget = null;
t._shortcutWidget = null;
t._gameBox = null;
t._nativeTryGameNode = null;
t.tryGameDate = [];
t.nativeNeedChange = !0;
t._cur_tool = null;
t.serverShowLog = !1;
t.showLogToConsole = !1;
t.overPageShowTime = 0;
t.overPageInsertAdIsTouch = !1;
t.recored_share_count = 0;
t.shareRecordPanel = null;
t._withdrawalWidget = null;
t._redBagProgressWidget = null;
t._withdrawalPanel = null;
t._openRedBagPanel = null;
t._rewardRedBagPanel = null;
t._rewardRedBagPanelShowCount = 0;
t._privacyWidget = null;
t._privacyPanel = null;
t.minScale = 1;
t.maxScale = 1.3;
t.runTime = .3;
t._lastReportAdTime = 0;
t._curVivoGamePortalLocation = "";
t._curGameDrawerAdLocation = "";
t._isRealNameAuth = !1;
t._yzRealNameAuthPanel = null;
t._yzLoginPanel = null;
return t;
}
Object.defineProperty(t.prototype, "utilsVersion", {
get: function() {
return "1.6.6";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "wechatTool", {
get: function() {
this._wechatTool || i.utils.showLog("wechat tool is null");
return this._wechatTool;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "oppoTool", {
get: function() {
this._oppoTool || i.utils.showLog("oppo tool is null");
return this._oppoTool;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "kwaiTool", {
get: function() {
this._tool_Kwai || i.utils.showLog("Kwai tool is null");
return this._tool_Kwai;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "wifiTool", {
get: function() {
this._tool_Wifi || i.utils.showLog("Wifi tool is null");
return this._tool_Wifi;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "hagoTool", {
get: function() {
this._tool_Hago || i.utils.showLog("Hago tool is null");
return this._tool_Hago;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Baidu", {
get: function() {
this._tool_Baidu || i.utils.showLog("tool baidu is null");
return this._tool_Baidu;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Native", {
get: function() {
this._tool_Native || i.utils.showLog("tool native is null");
return this._tool_Native;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Vivo", {
get: function() {
this._tool_Vivo || i.utils.showLog("tool vivo is null");
return this._tool_Vivo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Douyin", {
get: function() {
this._tool_Douyin || i.utils.showLog("tool douyin is null");
return this._tool_Douyin;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_QQ", {
get: function() {
this._tool_QQ || i.utils.showLog("tool qq is null");
return this._tool_QQ;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_XiaoMi", {
get: function() {
this._tool_XiaoMi || i.utils.showLog("tool xiaomi is null");
return this._tool_XiaoMi;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_QTT", {
get: function() {
this._tool_QTT || i.utils.showLog("tool qtt is null");
return this._tool_QTT;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_UC", {
get: function() {
this._tool_UC || i.utils.showLog("tool uc is null");
return this._tool_UC;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Cocosplay", {
get: function() {
this._tool_Cocosplay || i.utils.showLog("tool cocos is null");
return this._tool_Cocosplay;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_4399", {
get: function() {
this._tool_4399 || i.utils.showLog("tool 4399 is null");
return this._tool_4399;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_IOS", {
get: function() {
this._tool_Ios || i.utils.showLog("tool ios is null");
return this._tool_Ios;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Bili", {
get: function() {
this._tool_Ios || i.utils.showLog("tool ios is null");
return this._tool_bili;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Broswer", {
get: function() {
this._tool_Broswer;
return this._tool_Broswer;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Huawei", {
get: function() {
this._tool_Huawei || i.utils.showLog("huawei tool is null");
return this._tool_Huawei;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_Facebook", {
get: function() {
this._tool_Facebook || i.utils.showLog("facebook tool is null");
return this._tool_Facebook;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Tool_GoogleWeb", {
get: function() {
this._tool_GoogleWeb || i.utils.showLog("googleWeb tool is null");
return this._tool_GoogleWeb;
},
enumerable: !1,
configurable: !0
});
t.prototype._initConfig = function() {
var e = this;
if (this._isConfigInit) i.utils.showLog("warn:配置数据已经初始化，请勿重复初始化!"); else if (this.config.otherconfig.localConfig) {
var t = JSON.stringify(this.config.otherconfig.localConfig.json);
i.utils.showLog("本地数据：" + t);
if (t) {
if (c.default.IsNativeAndroid) {
this.initTools(t);
this._isConfigInit = this._initLoacalConfig(t);
this._isConfigInit && i.utils.Tool_Native.init();
} else {
this._isConfigInit = this._initLoacalConfig(t);
this.initTools(t);
}
this._other_config = this.config.otherconfig.localConfig.json.other;
this.adManager = new a.default();
this.adManager.Init();
this._oppoTool && this._oppoTool.hideDefaultLoadingPage();
c.default.IsKwai && kwaigame.readyGo();
i.utils.yzRedBagInfo = new r.YzRedBagInfo();
i.utils.registerServerInitEvent(function() {
if (i.utils.ServerConfig) {
e.serverShowLog = "true" == e.getConfigByKey("is_show_log_view");
e.showLogToConsole = "true" == e.getConfigByKey("show_log_to_console");
e.getConfigByKey("red_bag_total_progress") && (i.utils.yzRedBagInfo.totalProgress = e.getConfigByKey("red_bag_total_progress"));
e.getConfigByKey("red_bag_progress_infos") && (i.utils.yzRedBagInfo.progressInfos = e.getConfigByKey("red_bag_progress_infos"));
e.getConfigByKey("red_bag_moneys") && (i.utils.yzRedBagInfo.withdrawaMoneys = e.getConfigByKey("red_bag_moneys"));
}
c.default.IsHago && hg.gameLoadResult && hg.gameLoadResult({
code: 0
});
}, this);
} else i.utils.showLog("warn:本地配置文件不是合法的json文件！");
} else i.utils.showLog("warn:本地配置文件未找到，请检查 CommonUtils 组件上是否存在！");
};
t.prototype._initLoacalConfig = function(e) {
return !!this.config && this.config.init(e);
};
t.prototype.onLoad = function() {
cc.game.addPersistRootNode(this.node);
i.utils = this;
this.DebugLoacalConfig = !1;
this._gameEntryTime = new Date().getTime();
this._initConfig();
};
t.prototype.update = function(e) {
this._isConfigInit && this.adManager && this.adManager.OnUpdate(e);
};
t.prototype.initTools = function(e) {
if (this._isConfigInit || c.default.IsNativeAndroid) {
if (c.default.IsNativeAndroid) this._tool_Native = new d.default(); else if (c.default.IsWechat) {
this._wechatTool = new l.default();
this._wechatTool.init(e);
} else if (c.default.IsOPPO) {
this._oppoTool = new u.default();
this._oppoTool.init(e);
} else if (c.default.IsBaidu) {
this._tool_Baidu = new h.default();
this._tool_Baidu.init(e);
} else if (c.default.IsVIVO) {
this._tool_Vivo = new f.default();
this._tool_Vivo.init(e);
} else if (c.default.IsDouyin) {
this._tool_Douyin = new _.default();
this._tool_Douyin.init(e);
} else if (c.default.IsQQ) {
this._tool_QQ = new g.default();
this._tool_QQ.init(e);
} else if (c.default.IsQTT) {
this._tool_QTT = new m.default();
this._tool_QTT.init(e);
} else if (c.default.IsXiaoMi) {
this._tool_XiaoMi = new v.default();
this._tool_XiaoMi.init(e);
} else if (c.default.ISUC) {
this._tool_UC = new w.default();
this._tool_UC.init(e);
} else if (c.default.ISCocos) {
this._tool_Cocosplay = new I.default();
this._tool_Cocosplay.init(e);
} else if (c.default.Is4399) {
this._tool_4399 = new b.default();
this._tool_4399.init(e);
} else if (c.default.IsNativeIOS) {
this._tool_Ios = new S.default();
this._tool_Ios.init(e);
} else if (c.default.IsBili) {
this._tool_bili = new C.default();
this._tool_bili.init(e);
} else if (c.default.IsKwai) {
this._tool_Kwai = new A.default();
this._tool_Kwai.init(e);
} else if (c.default.IsWiFi) {
this._tool_Wifi = new T.default();
this._tool_Wifi.init(e);
} else if (c.default.IsHago) {
this._tool_Hago = new P.default();
this._tool_Hago.init(e);
} else if (c.default.IsHuaWei) {
this._tool_Huawei = new O.default();
this._tool_Huawei.init(e);
} else if (c.default.IsFaceBook) {
this._tool_Facebook = new R.default();
this._tool_Facebook.init(e);
} else if (c.default.IsGoogleWeb) {
this._tool_GoogleWeb = new x.default();
this._tool_GoogleWeb.init(e);
} else if (c.default.IsTest) {
this._tool_Broswer = new L.default();
this._tool_Broswer.init(e);
}
} else i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.delayCall = function(e, t) {
this.scheduleOnce(function() {
e && e();
}, t);
};
t.prototype.share = function(e) {
void 0 === e && (e = null);
this._isConfigInit ? this.cur_tool && this.cur_tool.share && this.cur_tool.share(e) : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.gameExitOff = function() {
this._isConfigInit ? c.default.IsNativeAndroid && cc.systemEvent.targetOff(this) : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.recordStart = function() {
this._isConfigInit ? this.cur_tool && this.cur_tool.recordStart && this.cur_tool.recordStart() : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.recordEnd = function() {
this._isConfigInit ? this.cur_tool && this.cur_tool.recordEnd && this.cur_tool.recordEnd() : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.getShareInfo = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:本地数据未初始化!");
return null;
}
if (this.config.otherconfig.shareTitle && this.config.otherconfig.shareImgUrl) return {
title: this.config.otherconfig.shareTitle,
imageUrl: this.config.otherconfig.shareImgUrl
};
i.utils.showLog("分享配置出错！");
return null;
};
t.prototype.getInnerRecommendData = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:本地数据未初始化!");
return null;
}
return this.ServerConfig && this.ServerConfig.jump_list && this.ServerConfig.jump_list.length > 0 ? {
jump_refresh_time: this.ServerConfig.icon_jump,
jump_list: this.ServerConfig.jump_list
} : null;
};
t.prototype.navigateToMiniGame = function(e, t) {
void 0 === t && (t = null);
if (this._isConfigInit) {
if (c.default.IsWechat) {
if (e) {
if (e.is_jump && "true" == e.is_jump && e.appid) {
this.wechatTool.navigateToMiniProgram(e.appid, t, e.path);
return;
}
if (e.is_jump && "false" == e.is_jump && e.qr_code) {
this.wechatTool.previewImage(e.qr_code);
t && t(!0);
return;
}
}
} else if (c.default.IsOPPO) if (e && e.appid) this.oppoTool.navigateToMiniGame(e.appid, t); else {
i.utils.showLog("data 或者 appid 为null!");
t && t(!1);
} else if (c.default.IsBaidu) if (e && e.appid) i.utils.Tool_Baidu.navigateToMiniGame(e.appid, t); else {
i.utils.showLog("data 或者 appid 为null!");
t && t(!1);
} else if (c.default.IsNativeAndroid) if (e) i.utils.Tool_Native.navigateToGame(JSON.stringify(e), t); else {
i.utils.showLog("data 或者 appid 为null!");
t && t(!1);
} else if (c.default.IsNativeIOS) if (e && e.appid) this.Tool_IOS.navigateToGame(e.appid, t); else {
i.utils.showLog("data 或者 appid 为null!");
t && t(!1);
}
} else i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.isSupportnavigateToMiniGame = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:本地数据未初始化!");
return !1;
}
return !!(c.default.IsWechat || c.default.IsNativeAndroid || c.default.IsNativeIOS || c.default.IsBaidu) || (c.default.IsOPPO ? this.oppoTool.isOverMiniVersion("1044") : c.default.IsDouyin ? this.Tool_Douyin.isShowMoreGamesModal() && "live_stream" != this.Tool_Douyin._sysInfo.appName : !!c.default.IsQQ && this._tool_QQ.isOverMinVersion("1.7.1"));
};
t.prototype.showMsg = function(e) {
i.utils.Tool_Broswer ? console.log(e) : this.cur_tool && this.cur_tool.showToast && this.cur_tool.showToast(e);
};
t.prototype.hasShortcutInstalled = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:本地数据未初始化!");
return !0;
}
return c.default.IsVIVO && this.Tool_Vivo ? this.Tool_Vivo.ShortcutCreated : !(!c.default.IsOPPO || !this.oppoTool) && this.oppoTool.ShortcutCreated;
};
t.prototype.canCreateShortcut = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:本地数据未初始化!");
return !1;
}
return !(!this.cur_tool || !this.cur_tool.canCreateShortcut) && this.cur_tool.canCreateShortcut();
};
t.prototype.createShortcut = function(e) {
this._isConfigInit ? this.cur_tool && this.cur_tool.createShortcut && this.cur_tool.createShortcut(e) : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.commomHttpRequest = function(e, t) {
var o = t, n = new XMLHttpRequest();
n.timeout = 6e3;
var s = e;
i.utils.showLog("服务器地址:" + s);
n.open("GET", s);
n.send();
n.onreadystatechange = function() {
i.utils.showLog("请求状态改变, reaedyState=", n.readyState, "; status=", n.status);
4 == n.readyState && (n.status >= 200 && n.status < 400 ? o && o(!0, n.responseText) : o && o(!1, ""));
};
n.ontimeout = function() {
i.utils.showLog("请求超时!");
o && o(!1, "");
};
n.onerror = function(e) {
i.utils.showLog("请求出错! err=", JSON.stringify(e));
o && o(!1, "");
};
};
t.prototype.aesEncrypt = function(e) {
var t = z.enc.Utf8.parse("youzhixx12345678"), i = z.enc.Utf8.parse(e);
return z.AES.encrypt(i, t, {
mode: z.mode.ECB,
padding: z.pad.Pkcs7
}).toString();
};
t.prototype.aesDecrypt = function(e) {
var t = z.enc.Utf8.parse("youzhixx12345678"), i = z.AES.decrypt(e, t, {
mode: z.mode.ECB,
padding: z.pad.Pkcs7
});
return z.enc.Utf8.stringify(i).toString();
};
t.prototype._buildServerUrl = function(e) {
c.default.IsOPPO ? e = e + "&kyx=true&app_id=" + i.utils.config.oppoconfig.packageName + "&channel=oppo&device_uid=" + i.utils.oppoTool.uid + "&uid=" + i.utils.oppoTool.serviceId + "&source=" + this.oppoTool._source + "&game_version=" + i.utils.config.oppoconfig.version + "&device_id=" + i.utils.oppoTool._device_id : c.default.IsXiaoMi ? e = e + "&kyx=true&app_id=" + i.utils.config.xiaomiConfig.appID + "&channel=xiaomi&device_uid=" + i.utils._tool_XiaoMi.uid + "&uid=" + i.utils._tool_XiaoMi.serviceId : c.default.IsWechat ? e = e + "&kyx=true&app_id=" + i.utils.config.wechatconfig.appID + "&channel=wechat&device_uid=" + i.utils.wechatTool.uid + "&uid=" + i.utils.wechatTool.serviceId + "&source=" + this.wechatTool._source_app_id + "&soure_type=" + this.wechatTool._luanchType + "&game_version=" + i.utils.config.wechatconfig.version : c.default.IsVIVO ? e = e + "&kyx=true&app_id=" + i.utils.config.vivoconfig.appID + "&channel=vivo&device_uid=" + i.utils._tool_Vivo.uid + "&uid=" + i.utils._tool_Vivo.serviceId + "&source=" + this._tool_Vivo._source + "&game_version=" + i.utils.config.vivoconfig.version : c.default.IsQTT ? e = e + "&kyx=true&app_id=" + i.utils.config.qttconfig.appID + "&channel=qutoutiao&device_uid=" + i.utils._tool_QTT.uid + "&uid=" + i.utils._tool_QTT.serviceId : c.default.IsDouyin ? e = e + "&kyx=true&app_id=" + i.utils.config.douyinconfig.appID + "&channel=toutiao&device_uid=" + i.utils.Tool_Douyin.uid + "&uid=" + i.utils.Tool_Douyin.serviceId + "&game_version=" + i.utils.config.douyinconfig.version : c.default.IsQQ ? e = e + "&kyx=true&app_id=" + i.utils.config.qqconfig.appID + "&channel=qq&device_uid=" + i.utils._tool_QQ.uid + "&uid=" + i.utils._tool_QQ.serviceId + "&game_version=" + i.utils.config.qqconfig.version : c.default.IsBaidu ? e = e + "&kyx=true&app_id=" + i.utils.config.baiduconfig.appID + "&channel=baidu&device_uid=" + i.utils._tool_Baidu.uid + "&uid=" + i.utils._tool_Baidu.serviceId + "&game_version=" + i.utils.config.baiduconfig.version : c.default.ISUC ? e = e + "&kyx=true&app_id=" + i.utils.config.ucConfig.appID + "&channel=uc&device_uid=" + i.utils._tool_UC.uid + "&uid=" + i.utils._tool_UC.serviceId + "&game_version=" + i.utils.config.ucConfig.version : c.default.ISCocos ? e = e + "&kyx=true&app_id=" + i.utils.config.cocosConfig.appID + "&channel=cocos&device_uid=" + i.utils._tool_Cocosplay.uid + "&uid=" + i.utils._tool_Cocosplay.serviceId : c.default.IsNativeAndroid ? e = e + "&kyx=false&app_id=" + i.utils.config.nativeAndroidConfig.appID + "&channel=" + i.utils.config.nativeAndroidConfig.channel + "&device_uid=" + i.utils.Tool_Native.uid + "&uid=" + i.utils.Tool_Native.serviceId + "&game_type=2&game_version=" + i.utils.config.nativeAndroidConfig.version : c.default.IsKwai ? e = e + "&kyx=true&app_id=" + i.utils.config.kwaiConfig.appID + "&channel=kuaishou&device_uid=" + i.utils._tool_Kwai.uid + "&uid=" + i.utils._tool_Kwai.serviceId + "&game_version=" + i.utils.config.kwaiConfig.version : c.default.IsNativeIOS ? e = e + "&kyx=false&app_id=" + i.utils.config.nativeIoSConfig.appID + "&channel=ios&device_uid=" + i.utils.Tool_IOS.uid + "&uid=" + i.utils.Tool_IOS.serviceId + "&game_type=2&game_version=" + i.utils.config.nativeIoSConfig.version : c.default.IsWiFi ? e = e + "&kyx=true&app_id=" + i.utils.config.wifiConfig.appID + "&channel=wifi&device_uid=" + i.utils._tool_Wifi.uid + "&uid=" + i.utils._tool_Wifi.serviceId + "&game_version=" + i.utils.config.wifiConfig.version : c.default.IsHago ? e = e + "&kyx=true&app_id=" + i.utils.config.hagoConfig.appID + "&channel=hago&device_uid=" + i.utils._tool_Hago.uid + "&uid=" + i.utils._tool_Hago.serviceId + "&game_version=" + i.utils.config.hagoConfig.version : c.default.IsHuaWei ? e = e + "&kyx=true&app_id=" + i.utils.config.huaweiConfig.appID + "&channel=huawei&device_uid=" + i.utils.Tool_Huawei.uid + "&uid=" + i.utils.Tool_Huawei.serviceId + "&game_version=" + i.utils.config.huaweiConfig.version : c.default.IsFaceBook && (e = e + "&kyx=true&app_id=" + i.utils.config.faceBookConfig.appID + "&channel=facebookxyx&device_uid=" + i.utils.Tool_Facebook.uid + "&uid=" + i.utils.Tool_Facebook.serviceId + "&game_version=" + i.utils.config.faceBookConfig.version);
return e;
};
t.prototype.postData = function(e) {
this._isConfigInit ? this.cur_tool && this.cur_tool.postData && this.cur_tool.postData(e) : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.registerServerInitEvent = function(e, t) {
this._isConfigInit ? this._isServerInit ? e && e() : cc.game.on(p.default.EC_ServerInit, e, t) : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.registerServerDataLoadSuccessEvent = function(e, t) {
this._isServerLoadSuccess ? e && e() : cc.game.on(p.default.EC_ServerDataLoadSuccess, e, t);
};
t.prototype.registerPrivacyCloseEvent = function(e, t) {
E.default.getItem(p.default.YZ_GAME_YSXY) ? e && e() : cc.game.on(p.default.YZ_PrivacyClose, e, t);
};
t.prototype.postDataByLocation = function(e, t, o) {
void 0 === o && (o = 0);
this._isConfigInit ? c.default.IsBaidu ? this.Tool_Baidu && this.Tool_Baidu.postData(e) : this.cur_tool && this.cur_tool.postDataByLocation && this.cur_tool.postDataByLocation(e, t, o) : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.postRecommentShowData = function(e) {
this._isConfigInit ? this.cur_tool && this.cur_tool.postRecommentShowData && this.cur_tool.postRecommentShowData(e) : i.utils.showLog("warn:本地数据未初始化!");
};
t.prototype.unregisterServerInitEvent = function(e) {
cc.game.targetOff(e);
};
t.prototype.emitServerInitEvent = function() {
var e = this;
if (this.isShowPrivacyPanel()) {
this._isServerLoadSuccess = !0;
cc.game.emit(p.default.EC_ServerDataLoadSuccess);
i.utils.registerPrivacyCloseEvent(function() {
e._isServerInit = !0;
cc.game.emit(p.default.EC_ServerInit);
cc.game.targetOff(p.default.EC_ServerDataLoadSuccess);
cc.game.targetOff(p.default.YZ_PrivacyClose);
}, this);
} else {
this._isServerInit = !0;
cc.game.emit(p.default.EC_ServerInit);
}
};
t.prototype.registerRealNameAuthCloseEvent = function(e, t) {
this._isServerLoadSuccess ? e && e() : cc.game.on(p.default.EC_RealNameAuthPanelClose, e, t);
};
t.prototype.emitRealNameAuthCloseEvent = function() {
cc.game.emit(p.default.EC_RealNameAuthPanelClose);
};
t.prototype.emitPrivacyCloseEvent = function() {
this._isServerInit = !0;
cc.game.emit(p.default.YZ_PrivacyClose);
};
t.prototype.getRecommondGameList = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:本地数据未初始化!");
return null;
}
return c.default.IsWechat ? this.wechatTool.getRecommondGameList() : c.default.IsOPPO ? this.oppoTool.getRecommondGameList() : c.default.IsBaidu ? this.Tool_Baidu.getRecommondGameList() : c.default.IsNativeAndroid ? this.Tool_Native.getRecommondGameList() : c.default.IsDouyin ? this.Tool_Douyin.getRecommondGameList() : this.Tool_Broswer ? this.Tool_Broswer.getRecommondGameList() : c.default.IsNativeIOS ? this.Tool_IOS.getRecommondGameList() : null;
};
t.prototype.isShowRecommondGamesBanner = function() {
if (!this._isConfigInit) {
i.utils.showLog("本地数据未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (i.utils.isSupportnavigateToMiniGame()) if (this.ServerConfig && this.ServerConfig.is_bottom_banner_list) {
if ("true" == this.ServerConfig.is_bottom_banner_list) return !0;
i.utils.showLog("is_bottom_banner_list 参数为false，底部更多游戏横幅组件不显示！");
} else i.utils.showLog("配置中没有 is_bottom_banner_list 参数，底部更多游戏横幅组件不显示！"); else i.utils.showLog("当前平台不支持游戏内跳转，底部更多游戏横幅组件不显示！");
return !1;
};
t.prototype.showRecommendGamesBanner = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return !1;
}
if (this.isShowRecommondGamesBanner()) {
i.utils.showLog("显示自定义banner!");
if (this.config.otherconfig.recommendGamesBanner) {
var t = cc.instantiate(this.config.otherconfig.recommendGamesBanner);
if (t) {
this._recommendGamesBanner && cc.isValid(this._recommendGamesBanner) && this._recommendGamesBanner.destroy();
this._recommendGamesBanner = t;
this._recommendGamesBanner.zIndex = 9999;
if (e) {
e.group && (t.group = e.group);
e.scale && (t.scale = e.scale);
}
cc.director.getScene().addChild(t, 1e3);
return !0;
}
} else i.utils.showLog("warn:未找到预制体 RecommendGamesBanner, 请查看CommonUtils组件上是否赋值!");
}
return !1;
};
t.prototype.hideRecommendGamesBanner = function() {
var e = cc.find("RecommendGamesBanner");
e && (e.active = !1);
};
t.prototype.isShowRecommondGamesList = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (i.utils.isSupportnavigateToMiniGame()) {
if (this.ServerConfig.is_banner_list && "true" == this.ServerConfig.is_banner_list && this.ServerConfig.jump_list && this.ServerConfig.jump_list.length > 0) return !0;
i.utils.showLog("请确认字段：is_banner_list、jump_list 是否达到显示自定义banner的要求!");
return !1;
}
i.utils.showLog("当前平台不支持游戏内跳转，更多游戏列表组件不显示！");
return !1;
};
t.prototype.showRecommendGamesList = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (this.config.otherconfig.recommendGamesBar) {
var t = cc.instantiate(this.config.otherconfig.recommendGamesBar);
if (t) {
this._recommendGamesList && cc.isValid(this._recommendGamesList) && this._recommendGamesList.destroy();
this._recommendGamesList = t;
this._recommendGamesList.zIndex = 9999;
var o = t.getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (t.parent = e.parent);
}
o.updateAlignment();
return t;
}
} else i.utils.showLog("warn:未找到预制体 RecommendGamesBar, 请查看CommonUtils组件上是否赋值 !");
return null;
};
t.prototype.hideRecommendGamesList = function() {
this._recommendGamesList && cc.isValid(this._recommendGamesList) && this._recommendGamesList.destroy();
};
t.prototype.isShowTryGamesWidget = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (c.default.IsWechat) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.wechatTool && i.utils.wechatTool.ServerConfig && i.utils.wechatTool.ServerConfig.icon_jump) {
if (i.utils.wechatTool.ServerConfig.icon_jump > 0) return !0;
i.utils.showLog("warn:icon_jump参数为false，试玩游戏挂件不显示！");
} else i.utils.showLog("warn:配置中没有icon_jump参数，试玩游戏挂件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，试玩游戏挂件不显示！"); else if (c.default.IsOPPO) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.oppoTool && i.utils.oppoTool.ServerConfig && i.utils.oppoTool.ServerConfig.icon_jump) {
if (parseInt(i.utils.oppoTool.ServerConfig.icon_jump) > 0) return !0;
i.utils.showLog("warn:icon_jump参数为false，试玩戏挂件不显示！");
} else i.utils.showLog("warn:配置中没有icon_jump参数，试玩游戏挂件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，试玩游戏挂件不显示！"); else if (c.default.IsBaidu) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.Tool_Baidu && i.utils.Tool_Baidu.ServerConfig && i.utils.Tool_Baidu.ServerConfig.icon_jump) {
if (i.utils.Tool_Baidu.ServerConfig.icon_jump > 0) return !0;
i.utils.showLog("warn:icon_jump参数为false，更多游戏挂件不显示！");
} else i.utils.showLog("warn:配置中没有icon_jump参数，试玩游戏挂件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，试玩游戏挂件不显示！"); else if (c.default.IsNativeAndroid) if (i.utils.Tool_Native && i.utils.Tool_Native.ServerConfig && i.utils.Tool_Native.ServerConfig.icon_jump) {
if (parseInt(i.utils.Tool_Native.ServerConfig.icon_jump) > 0) return !0;
} else i.utils.showLog("warn:配置中没有jumpList参数，试玩游戏挂件不显示！"); else if (c.default.IsDouyin) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.Tool_Douyin && i.utils.Tool_Douyin.isShowMoreGamesModal() && i.utils.Tool_Douyin.ServerConfig && i.utils.Tool_Douyin.ServerConfig.icon_jump) {
if (i.utils.Tool_Douyin.ServerConfig.icon_jump > 0) return !0;
i.utils.showLog("warn:icon_jump参数为false，试玩游戏挂件不显示！");
} else i.utils.showLog("warn:配置中没有icon_jump参数，试玩游戏挂件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，试玩游戏挂件不显示！"); else if (c.default.IsQQ) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.Tool_QQ && i.utils.Tool_QQ.ServerConfig && i.utils.Tool_QQ.ServerConfig.icon_jump) {
if (i.utils.Tool_QQ.ServerConfig.icon_jump > 0) return !0;
i.utils.showLog("warn:icon_jump参数为false，试玩游戏挂件不显示！");
} else i.utils.showLog("warn:配置中没有icon_jump参数，试玩游戏挂件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，试玩游戏挂件不显示！"); else if (c.default.IsNativeIOS) if (i.utils.Tool_IOS && i.utils.Tool_IOS.ServerConfig && i.utils.Tool_IOS.ServerConfig.icon_jump) {
if (i.utils.Tool_IOS.ServerConfig.icon_jump > 0) return !0;
i.utils.showLog("warn:icon_jump参数为false，试玩游戏挂件不显示！");
} else i.utils.showLog("warn:配置中没有icon_jump参数，试玩游戏挂件不显示！");
return !1;
};
t.prototype.showTryGamesWidget = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (i.utils.isShowTryGamesWidget()) {
if (e.location && this.getConfigByKey("try_game_widget_locations").indexOf(e.location) < 0) {
i.utils.showLog("当前位置服务器未配置显示试玩挂件！");
this._tryGamesWidget && cc.isValid(this._tryGamesWidget) && this._tryGamesWidget.destroy();
return null;
}
if (this.config.otherconfig.tryGamesWidget) {
var t = cc.instantiate(this.config.otherconfig.tryGamesWidget);
if (t) {
this._tryGamesWidget && cc.isValid(this._tryGamesWidget) && this._tryGamesWidget.destroy();
this._tryGamesWidget = t;
this._tryGamesWidget.zIndex = 9999;
var o = t.getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (t.parent = e.parent);
}
o.updateAlignment();
return t;
}
} else i.utils.showLog("warn:未找到预制体 TryGamesWidget, 请查看CommonUtils组件上是否赋值 !");
} else i.utils.showLog("warn:不支持跳转组件");
return null;
};
t.prototype.hideTryGamesWidget = function() {
this._tryGamesWidget && cc.isValid(this._tryGamesWidget) && this._tryGamesWidget.destroy();
};
t.prototype.isShowMoreGamesWidget = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (c.default.IsWechat) if (i.utils.isSupportnavigateToMiniGame()) {
if ("true" == this.getConfigByKey("is_more_game")) return !0;
i.utils.showLog("warn:配置中没有is_more_game参数，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else if (c.default.IsOPPO) if (i.utils.isSupportnavigateToMiniGame()) {
if ("true" == this.getConfigByKey("is_more_game")) {
if ("true" == i.utils.oppoTool.ServerConfig.show_oppo_rec && !i.utils.oppoTool.canShowRecommend()) {
i.utils.showLog("warn:当前平台不支持官方互推，更多游戏侧边栏组件不显示！");
return !1;
}
return !0;
}
i.utils.showLog("warn:配置中没有is_more_game参数，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else if (c.default.IsDouyin) if (c.default.IsAndroid && i.utils.isSupportnavigateToMiniGame()) {
if ("true" == this.getConfigByKey("is_more_game")) return !0;
i.utils.showLog("warn:配置中没有is_more_game参数，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else if (c.default.IsBaidu) if (i.utils.isSupportnavigateToMiniGame()) {
if ("true" == this.getConfigByKey("is_more_game")) return !0;
i.utils.showLog("warn:配置中没有is_more_game参数，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else if (c.default.IsQQ) if (i.utils.isSupportnavigateToMiniGame()) {
if ("true" == this.getConfigByKey("is_more_game")) return !0;
i.utils.showLog("warn:配置中没有is_more_game参数，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else {
if (c.default.Is4399) return !0;
if (c.default.IsNativeAndroid) {
if ("true" == this.getConfigByKey("is_more_game")) return !0;
i.utils.showLog("warn:配置中没有is_more_game参数，更多游戏侧边栏组件不显示！");
} else if (c.default.IsNativeIOS) {
if ("true" == this.getConfigByKey("is_more_game")) return !0;
i.utils.showLog("warn:配置中没有is_more_game参数，更多游戏侧边栏组件不显示！");
} else if (c.default.IsVIVO) {
if ("true" == this.getConfigByKey("is_more_game")) return !0;
i.utils.showLog("warn:配置中没有is_more_game参数，更多游戏侧边栏组件不显示！");
}
}
return !1;
};
t.prototype.showMoreGamesWidget = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (e.location && this.getConfigByKey("more_game_widget_locations").indexOf(e.location) < 0) {
i.utils.showLog("当前位置服务器未配置显示更多游戏挂件！");
this._moreGamesSidePanel && cc.isValid(this._moreGamesSidePanel) && this._moreGamesSidePanel.destroy();
return null;
}
if (c.default.IsDouyin) {
if (i.utils.Tool_Douyin) {
if (!i.utils.isShowMoreGamesWidget()) {
i.utils.showLog("当前平台版本不支持交叉推广, 更多游戏按钮不显示!");
return null;
}
if (!i.utils.Tool_Douyin.isShowMoreGamesModal()) {
var t = i.utils.Tool_Douyin.showMoreGamesButton(e);
if (t) {
this._moreGamesSidePanel && this._moreGamesSidePanel.destroy();
this._moreGamesSidePanel = t;
if (e) {
e.group && (t.group = e.group);
null != e.parent && (t.parent = e.parent);
}
return this._moreGamesSidePanel;
}
return null;
}
if (this.config.otherconfig.moreGamesWidget) {
if (n = cc.instantiate(this.config.otherconfig.moreGamesWidget)) {
this._moreGamesSidePanel && cc.isValid(this._moreGamesSidePanel) && this._moreGamesSidePanel.destroy();
this._moreGamesSidePanel = n;
this._moreGamesSidePanel.zIndex = 9999;
var o = n.getComponent(cc.Widget);
if (e) {
e.group && (n.group = e.group);
null != e.scale && (n.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (n.parent = e.parent);
}
o.updateAlignment();
return n;
}
} else i.utils.showLog("warn:未找到预制体 MoreGamesWidget, 请查看CommonUtils组件上是否赋值！");
}
} else if (i.utils.isShowMoreGamesWidget()) if (this.config.otherconfig.moreGamesWidget) {
var n;
if (n = cc.instantiate(this.config.otherconfig.moreGamesWidget)) {
this._moreGamesSidePanel && cc.isValid(this._moreGamesSidePanel) && this._moreGamesSidePanel.destroy();
this._moreGamesSidePanel = n;
this._moreGamesSidePanel.zIndex = 9999;
o = n.getComponent(cc.Widget);
if (e) {
e.group && (n.group = e.group);
null != e.scale && (n.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (n.parent = e.parent);
}
o.updateAlignment();
return n;
}
} else i.utils.showLog("warn:未找到预制体 MoreGamesWidget, 请查看CommonUtils组件上是否赋值！"); else i.utils.showLog("warn:不可显示更多游戏侧边栏");
return null;
};
t.prototype.hideMoreGamesWidget = function(e) {
if (c.default.IsDouyin) {
e && cc.isValid(e) && e.destroy();
this._moreGamesSidePanel && this._moreGamesSidePanel.destroy();
} else {
e && cc.isValid(e) && e.destroy();
this._moreGamesSidePanel && cc.isValid(this._moreGamesSidePanel) && this._moreGamesSidePanel.destroy();
}
c.default.IsVIVO && this.Tool_Vivo && this.Tool_Vivo.hideGamePortal();
};
t.prototype.showBaiduMoreGamesBtn = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
var t = !1;
c.default.IsBaidu && (i.utils.Tool_Baidu && i.utils.Tool_Baidu.canShowRecommendButton() ? t = !0 : i.utils.showLog("warn:当前平台不支持游戏内跳转，百度更多游戏侧边栏组件不显示！"));
if (c.default.IsBaidu && i.utils.Tool_Baidu) {
if (t) {
var o = i.utils.Tool_Baidu.showRecommendationButton(e);
if (o) {
this._moreGamesSidePanelBaidu && this._moreGamesSidePanelBaidu.destroy();
this._moreGamesSidePanelBaidu = o;
return this._moreGamesSidePanelBaidu;
}
return null;
}
i.utils.showLog("当前平台版本不支持交叉推广, 百度更多游戏按钮不显示!");
return null;
}
};
t.prototype.hideBaiduMoreGamesBtn = function(e) {
c.default.IsBaidu && e && null != e && e.destroy();
};
t.prototype.isShowRecordWidget = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (c.default.IsDouyin) {
if ("true" == this.getConfigByKey("show_record")) return !0;
i.utils.showLog("服务器配置不显示录屏按钮！");
} else if (c.default.IsKwai) {
if (i.utils.kwaiTool && i.utils.kwaiTool.checkCanShowRecored() && "true" == this.getConfigByKey("show_record")) return !0;
i.utils.showLog("服务器配置不显示录屏按钮！");
}
return !1;
};
t.prototype.hideRecordWidget = function() {
this._recordWidget && cc.isValid(this._recordWidget) && this._recordWidget.destroy();
};
t.prototype.showRecordWidget = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (!this.isShowRecordWidget()) return null;
if (this.config.otherconfig.recordWidget) {
var t = cc.instantiate(this.config.otherconfig.recordWidget);
if (t) {
this._recordWidget && cc.isValid(this._recordWidget) && this._recordWidget.destroy();
this._recordWidget = t;
this._recordWidget.zIndex = 9999;
var o = t.getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (t.parent = e.parent);
}
o.updateAlignment();
return t;
}
} else i.utils.showLog("warn:未找到预制体 RecordWidget, 请查看CommonUtils组件上是否赋值！");
return null;
};
t.prototype.isShowCreateShortcutWidget = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:本地数据未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (this.canCreateShortcut()) {
if ("true" == this.getConfigByKey("is_desktop")) return !0;
i.utils.showLog("配置数据中没有 is_desktop 字段， 创建快捷方式按钮不显示!");
} else i.utils.showLog("当前平台版本不支持创建桌面快捷方式, 创建快捷方式按钮不显示！");
return !1;
};
t.prototype.showCreateShortcutWidget = function(e, t) {
void 0 === e && (e = null);
void 0 === t && (t = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (i.utils.isShowCreateShortcutWidget()) if (this.config.otherconfig.shortcutWidget) {
var o = cc.instantiate(this.config.otherconfig.shortcutWidget);
if (o) {
this._shortcutWidget && cc.isValid(this._shortcutWidget) && this._shortcutWidget.destroy();
this._shortcutWidget = o;
this._shortcutWidget.zIndex = 9999;
var n = o.getComponent(cc.Widget), s = o.getComponent("YZ_ShortcutWidget");
s && (s.Callback = e);
if (t) {
t.group && (o.group = t.group);
null != t.scale && (o.scale = t.scale);
if (null != t.top) {
n.isAlignTop = !0;
n.isAlignBottom = !1;
n.top = t.top;
} else if (null != t.bottom) {
n.isAlignTop = !1;
n.isAlignBottom = !0;
n.bottom = t.bottom;
}
if (null != t.left) {
n.isAlignLeft = !0;
n.isAlignRight = !1;
n.left = t.left;
} else if (null != t.right) {
n.isAlignLeft = !1;
n.isAlignRight = !0;
n.right = t.right;
}
null != t.parent ? o.parent = t.parent : cc.director.getScene().addChild(o, 1e3);
}
n.updateAlignment();
return o;
}
} else i.utils.showLog("warn:未找到预制体 ShortcutWidge, 请查看CommonUtils组件上是否赋值！"); else i.utils.showLog("warn:不显示创建桌面图标");
return null;
};
t.prototype.hideCreateShortcutWidget = function(e) {
void 0 === e && (e = null);
this._shortcutWidget && cc.isValid(this._shortcutWidget) && this._shortcutWidget.destroy();
};
t.prototype.registerEvent = function(e, t, o) {
e ? t ? o ? cc.game.on(e, t, o) : i.utils.showLog("warn:[Utils.registerEvent] param target is null!") : i.utils.showLog("warn:[Utils.registerEvent] param callback is null!") : i.utils.showLog("warn:[Utils.registerEvent] param eventName is null!");
};
t.prototype.unregisterEvent = function(e) {
cc.game.off(e);
};
t.prototype.emitCommonEvent = function(e) {
cc.game.emit(e);
};
t.prototype.showGameBox = function(e) {
void 0 === e && (e = null);
if (c.default.IsWechat) {
var t = !1;
if (i.utils.wechatTool.ServerConfig && i.utils.wechatTool.ServerConfig.openBox) {
if ("true" != i.utils.wechatTool.ServerConfig.openBox) {
i.utils.showLog("服务器游戏盒子配置为关闭状态！");
return;
}
i.utils.showLog("服务器配置游戏盒子为打开状态");
t = !0;
} else {
if (new Date().getTime() - new Date("2019-10-23").getTime() > 0) {
t = !0;
i.utils.showLog("当前时间大于指定时间，可以显示游戏盒子");
}
}
if (!t) {
i.utils.showLog("warn:当前条件不满足要求，游戏盒子不显示！");
return;
}
var o = cc.instantiate(this.config.otherconfig.gameBox);
if (o) {
this._gameBox && cc.isValid(this._gameBox) && this._gameBox.destroy();
this._gameBox = o;
this._gameBox.zIndex = 9999;
null != e.parent && (o.parent = e.parent);
} else i.utils.showLog("warn:未找到预制体 GameBox, 请查看CommonUtils组件上是否赋值！");
}
};
t.prototype.isShowNativeTryGamesWidget = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (this.ServerConfig && this.ServerConfig.icon_jump_native && parseInt(this.ServerConfig.icon_jump_native) > 0) return !0;
i.utils.showLog("warn:配置中没有icon_jump_native参数，原生试玩游戏挂件不显示！");
return !1;
};
t.prototype.canShowCrossWidget6 = function() {
if (!this._isConfigInit) {
i.utils.showLog("组件配置未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (c.default.IsWechat || c.default.IsOPPO || c.default.IsBaidu || c.default.IsNativeAndroid || c.default.IsNativeIOS) if (i.utils.isSupportnavigateToMiniGame()) {
if ("true" == this.getConfigByKey("is_cross_game")) return !0;
i.utils.showLog("warn:配置中没有is_cross_game参数，6元素交叉推广组件不显示！");
} else i.utils.showLog("warn:当前平台不支持游戏内跳转，6元素交叉推广组件不显示！"); else if (c.default.IsDouyin) if (i.utils.isSupportnavigateToMiniGame() && i.utils.Tool_Douyin.isShowMoreGamesModal()) {
if ("true" == this.getConfigByKey("is_cross_game")) return !0;
i.utils.showLog("warn:is_cross_game参数为false，6元素交叉推广组件不显示！");
} else i.utils.showLog("warn:当前平台不支持游戏内跳转，6元素交叉推广组件不显示！");
return !1;
};
t.prototype.showCrossWidget6 = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (this.canShowCrossWidget6()) {
if (this.config.otherconfig.crossWidget6) return cc.instantiate(this.config.otherconfig.crossWidget6);
i.utils.showLog("warn:未找到预制体 CrossWidget6, 请查看CommonUtils组件上是否赋值！");
}
return null;
};
t.prototype.showFavoriteGuide = function(e) {
if (c.default.IsBaidu) if (i.utils._tool_Baidu.canShowFavoriteGuide()) {
swan.showFavoriteGuide({
type: e ? e.type : "tip",
content: "一键添加到我的小程序",
success: function(e) {
i.utils.showLog("添加成功：", e);
},
fail: function(e) {
i.utils.showLog("添加失败：", e);
}
});
i.utils.showLog("显示我的小程序引导成功！");
} else i.utils.showLog("当前平台不支持显示添加我的小程序引导");
};
t.prototype.checkAutoSign = function() {
return "true" == this.getConfigByKey("auto_sign");
};
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return this.cur_tool && this.cur_tool.ServerConfig ? this.cur_tool.ServerConfig : {};
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "cur_tool", {
get: function() {
if (this._cur_tool) return this._cur_tool;
c.default.IsWechat ? this._cur_tool = i.utils.wechatTool : c.default.IsOPPO ? this._cur_tool = i.utils.oppoTool : c.default.IsVIVO ? this._cur_tool = i.utils.Tool_Vivo : c.default.IsQQ ? this._cur_tool = i.utils.Tool_QQ : c.default.IsDouyin ? this._cur_tool = i.utils.Tool_Douyin : c.default.IsBaidu ? this._cur_tool = i.utils.Tool_Baidu : c.default.IsQTT ? this._cur_tool = i.utils.Tool_QTT : c.default.IsXiaoMi ? this._cur_tool = i.utils.Tool_XiaoMi : c.default.ISUC ? this._cur_tool = i.utils.Tool_UC : c.default.ISCocos ? this._cur_tool = i.utils.Tool_Cocosplay : c.default.IsNativeAndroid ? this._cur_tool = i.utils.Tool_Native : c.default.Is4399 ? this._cur_tool = i.utils.Tool_4399 : c.default.IsKwai ? this._cur_tool = i.utils._tool_Kwai : c.default.IsNativeIOS ? this._cur_tool = i.utils.Tool_IOS : c.default.IsWiFi ? this._cur_tool = i.utils._tool_Wifi : c.default.IsHago ? this._cur_tool = i.utils._tool_Hago : c.default.IsHuaWei ? this._cur_tool = i.utils.Tool_Huawei : c.default.IsFaceBook ? this._cur_tool = i.utils.Tool_Facebook : c.default.IsGoogleWeb ? this._cur_tool = i.utils.Tool_Facebook : this._cur_tool = i.utils._tool_Broswer;
return this._cur_tool;
},
enumerable: !1,
configurable: !0
});
t.prototype.showLog = function(e) {
var t;
void 0 === e && (e = "");
for (var o = [], n = 1; n < arguments.length; n++) o[n - 1] = arguments[n];
if (this.showLogView || this.serverShowLog) if (this.config.otherconfig.logoutView) {
if (cc.director.getScene()) {
var a = cc.director.getScene().getChildByName("LogoutView");
if (!a) {
a = cc.instantiate(this.config.otherconfig.logoutView);
cc.director.getScene().addChild(a, 1e3);
}
(t = a.getComponent("LogOutView")).addLog.apply(t, s([ e ], o));
}
} else i.utils.showLog("warn:未找到预制体 LogOutView, 请查看CommonUtils组件上是否赋值！"); else this.showLogToConsole ? console.log.apply(console, s([ e ], o)) : cc.log.apply(cc, s([ e ], o));
};
t.prototype.vibrate = function(e) {
void 0 === e && (e = p.VibrateType.Short);
c.default.IsWechat ? e == p.VibrateType.Short ? wx.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : wx.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : c.default.IsOPPO ? e == p.VibrateType.Short ? qg.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : qg.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : c.default.IsVIVO ? e == p.VibrateType.Short ? qg.vibrateShort() : qg.vibrateLong() : c.default.IsQQ ? e == p.VibrateType.Short ? qq.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : qq.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : c.default.IsDouyin ? e == p.VibrateType.Short ? tt.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : tt.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : c.default.IsBaidu ? e == p.VibrateType.Short ? swan.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : swan.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : c.default.IsWiFi ? e == p.VibrateType.Short ? wuji.vibrateShort({
success: function(e) {},
fail: function(e) {}
}) : wuji.vibrateLong({
success: function(e) {},
fail: function(e) {}
}) : c.default.IsNativeAndroid && (e == p.VibrateType.Short ? jsb.reflection.callStaticMethod(i.utils.Tool_Native.jniClassName, "vibrateShort", "()V") : jsb.reflection.callStaticMethod(i.utils.Tool_Native.jniClassName, "vibrateLong", "()V"));
};
t.prototype.StartGame = function(e, t) {
y.default.StartGame(e, t);
i.utils.cur_tool && i.utils.cur_tool.umaOnStart && i.utils.cur_tool.umaOnStart(e);
(c.default.IsDouyin || c.default.IsKwai) && this.AutoStartRecord(e);
};
t.prototype.GameWin = function(e, t, o, n) {
void 0 === t && (t = 0);
void 0 === n && (n = !0);
y.default.GameWin(e, t, o);
i.utils.cur_tool && i.utils.cur_tool.umaReportedLevel && i.utils.cur_tool.umaReportedLevel(e, p.LevelStatus.GameWin);
c.default.IsKwai && (i.utils.kwaiTool.isClickEnd = !1);
this.recordEnd();
return this.AutoShowStatement(e, !0, n);
};
t.prototype.GameFail = function(e, t, o) {
void 0 === o && (o = !0);
y.default.GameFail(e, t);
i.utils.cur_tool && i.utils.cur_tool.umaReportedLevel && i.utils.cur_tool.umaReportedLevel(e, p.LevelStatus.GameFail);
this.recordEnd();
return this.AutoShowStatement(e, !1, o);
};
t.prototype.GameSkip = function(e, t) {
y.default.GameSkip(e, t);
};
t.prototype.SendEvent = function(e) {
y.default.SendEvent(e);
};
t.prototype.umaEvent = function(e, t) {
i.utils.showLog("事件上报:" + e + "：" + t);
c.default.IsNativeAndroid ? i.utils.cur_tool && i.utils.cur_tool.umaTrackEvent && i.utils.cur_tool.umaTrackEvent("custom", e, t) : i.utils.cur_tool && i.utils.cur_tool.umaTrackEvent && i.utils.cur_tool.umaTrackEvent(e, t);
};
t.prototype.reportOverPageTouchEvent = function(e) {
var t = this;
i.utils.showLog("reportOverPageTouchEvent >>>>>>>");
this.overPageInsertAdIsTouch = !1;
this.overPageShowTime = new Date().getTime();
var o = new cc.Node();
o.width = 2 * e.width;
o.height = 2 * e.height;
o.on(cc.Node.EventType.TOUCH_START, function() {
var e = (new Date().getTime() - t.overPageShowTime) / 1e3, n = {};
n.data = e;
i.utils.SendEventNew("结算页面点击时间", "overPageTouch", JSON.stringify(n));
o.destroy();
o.removeFromParent();
}, e);
o._touchListener.swallowTouches = !1;
e.addChild(o, cc.macro.MAX_ZINDEX);
};
t.prototype.SendEventNew = function(e, t, o, n) {
void 0 === t && (t = "default");
void 0 === n && (n = !0);
i.utils.showLog("自定义事件上报:" + e + "，" + t + "," + o);
i.utils.cur_tool && i.utils.cur_tool.SendEventNew && i.utils.cur_tool.SendEventNew(e, t, o, n);
};
t.UseTool = function(e, t, i) {
y.default.UseTool(e, t, i);
};
t.prototype.checkResultShow = function(e) {
var t = i.utils.currentLevel, o = i.utils.isSuccess, n = i.utils.ServerConfig;
if (!n) {
i.utils.showLog("warn:服务器配置不存在,只显示结算广告");
return 3 == e;
}
if (c.default.IsDouyin && n.auto_record_share_count) {
var s = n.auto_record_share_count;
if (0 != s && i.utils.recored_share_count >= s) i.utils.showLog("服务器配置分享次数：" + s + " ,已到上限"); else {
var a = n.auto_record_interval, r = !1;
if (t > 0 && 0 != a) {
if (-1 == a.indexOf(",")) t % Number(a) == 0 && (r = !0); else {
i.utils.showLog("指定关卡" + n.auto_record_interval + "分享录屏，当前关卡为：" + t);
a.split(",").forEach(function(e) {
t == Number(e) && (r = !0);
});
}
if (r) {
if ("all" == n.auto_record_share_type) return 1 == e;
if ("success" == n.auto_record_share_type && 1 == i.utils.isSuccess) return 1 == e;
if ("fail" == n.auto_record_share_type && 0 == i.utils.isSuccess) return 1 == e;
}
}
}
}
i.utils.showLog("不能自动分享录屏 分享录屏间隔为：" + n.auto_record_interval + "  分享类型为：" + n.auto_record_share_type);
if (n.auto_video_interval && 0 != n.auto_video_interval) {
var l = n.auto_video_interval, u = n.auto_video_show_type;
if (t % l == 0) {
if ("all" == u) return 2 == e;
if ("success" == u && 1 == o) return 2 == e;
if ("fail" == u && 0 == o) return 2 == e;
}
}
i.utils.showLog("不能自动弹视频弹视频间隔为：" + n.auto_video_interval + " 弹视频类型为：" + n.auto_video_show_type);
if (n.auto_rec_insert_interval && 0 != n.auto_rec_insert_interval) {
l = n.auto_rec_insert_interval, u = n.auto_rec_insert_type;
if (t % l == 0) {
if ("all" == u) return 4 == e;
if ("success" == u && 1 == o) return 4 == e;
if ("fail" == u && 0 == o) return 4 == e;
}
}
i.utils.showLog("不能自动弹互推插屏间隔为：" + n.auto_rec_insert_interval + " 弹视频类型为：" + n.auto_rec_insert_type);
return 3 == e;
};
t.prototype.AutoShowStatement = function(e, t, o) {
i.utils.currentLevel = e;
i.utils.isSuccess = t;
var n = {
type: -1,
node: null
};
if (!o) {
i.utils.showLog("isShowAd为false，只上报不显示广告");
return n;
}
var s = !1;
if (this.checkResultShow(2)) {
if ("false" == this.getConfigByKey("result_auto_show_video")) return;
if (c.default.IsDouyin) {
i.utils.showLog("服务器版本：", i.utils.config.douyinconfig.version, "当前版本：", this.getConfigByKey("version"));
if (i.utils.config.douyinconfig.version != this.getConfigByKey("version")) {
i.utils.showLog("版本不一致，自动播放视频！");
i.utils.adManager.ShowVideo(function() {});
s = !0;
}
} else if (c.default.IsQQ) {
if (i.utils.config.qqconfig.version != this.getConfigByKey("version")) {
i.utils.showLog("版本不一致，自动播放视频！");
i.utils.adManager.ShowVideo(function() {});
s = !0;
}
} else if (c.default.IsWiFi) {
if (i.utils.config.wifiConfig.version != this.getConfigByKey("version")) {
i.utils.showLog("版本不一致，自动播放视频！");
i.utils.adManager.ShowVideo(function() {});
s = !0;
}
} else if (c.default.IsBaidu) {
if (i.utils.config.baiduconfig.version != this.getConfigByKey("version")) {
i.utils.showLog("版本不一致，自动播放视频！");
i.utils.adManager.ShowVideo(function() {});
s = !0;
}
} else if (c.default.IsKwai) {
if (i.utils.config.kwaiConfig.version != this.getConfigByKey("version")) {
i.utils.showLog("版本不一致，自动播放视频！");
i.utils.adManager.ShowVideo(function() {});
s = !0;
}
} else if (c.default.IsHago) {
if (i.utils.config.hagoConfig.version != this.getConfigByKey("version")) {
i.utils.showLog("版本不一致，自动播放视频！");
i.utils.adManager.ShowVideo(function() {});
s = !0;
}
} else if (c.default.IsNativeAndroid) if (i.utils.config.nativeAndroidConfig.version != this.getConfigByKey("version")) {
i.utils.showLog("版本不一致，自动播放视频！");
i.utils.ServerConfig && "reward_video" == this.getConfigByKey("auto_video_type") ? i.utils.adManager.ShowVideo(function() {}) : i.utils.adManager.showFullScreenVideo();
s = !0;
} else i.utils.showLog("与服务器版本一致，不自动播放视频！"); else if (c.default.IsNativeIOS) {
if (i.utils.config.nativeIoSConfig.version != this.getConfigByKey("version")) {
i.utils.showLog("版本不一致，自动播放视频！");
i.utils.ServerConfig && "reward_video" == this.getConfigByKey("auto_video_type") ? i.utils.adManager.ShowVideo(function() {}) : i.utils.adManager.showFullScreenVideo();
s = !0;
}
} else if (c.default.IsVIVO) {
i.utils.showLog("服务器配置当前显示强弹视频，但当前平台不支持。需修改服务器配置");
i.utils.adManager.showStatementAds();
} else {
s = !0;
i.utils.adManager.ShowVideo(function() {});
}
s && (c.default.IsDouyin || c.default.IsQQ || c.default.IsNativeAndroid || c.default.IsNativeIOS) ? i.utils.showLog("当前强弹了视频，不显示插屏！") : n = i.utils.adManager.showStatementAds();
}
this.checkResultShow(3) && (n = i.utils.adManager.showStatementAds());
if (c.default.IsDouyin || c.default.IsNativeIOS || c.default.IsBaidu || c.default.IsNativeAndroid) {
n.type = 1;
n.node = i.utils.showCrossWidget6();
}
return n;
};
t.prototype.addRedBagCount = function(e) {
this.yzRedBagInfo.freeRedBagCount++;
e && (this.rewardCloseFunc = e);
this.showOpenRedBagPanel({
showType: 3
});
i.utils.showLog("获得一个现金红包");
};
t.prototype.AutoStartRecord = function(e) {
this.getConfigByKey("auto_record_interval") > 0 ? i.utils.recordStart() : i.utils.showLog("warn:服务器配置不存在auto_record_interva");
};
t.prototype.showShareRecordPanel = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (this.config.otherconfig.shareRecordPanel) {
var t = cc.instantiate(this.config.otherconfig.shareRecordPanel);
if (t) {
this.shareRecordPanel && cc.isValid(this.shareRecordPanel) && this.shareRecordPanel.destroy();
this.shareRecordPanel = t;
this.shareRecordPanel.zIndex = 9999;
var o = t.getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent ? t.parent = e.parent : cc.director.getScene().addChild(this.shareRecordPanel, 1e3);
} else cc.director.getScene().addChild(this.shareRecordPanel, 1e3);
o.updateAlignment();
return t;
}
} else i.utils.showLog("未找到预制体 ShareRecordPanel, 请查看CommonUtils组件上是否赋值！");
return null;
};
Object.defineProperty(t.prototype, "otherConfig", {
get: function() {
this._other_config || (this._other_config = this.config.otherconfig.localConfig.json.other);
return this._other_config;
},
enumerable: !1,
configurable: !0
});
t.prototype.isShowTrySkin = function(e) {
var t = 5;
i.utils.ServerConfig && this.getConfigByKey("try_skin_level_count") && (t = this.getConfigByKey("try_skin_level_count"));
if (e % t == 0) {
if (i.utils.ServerConfig && void 0 != this.getConfigByKey("try_skin_show_ad_interval") && e % this.getConfigByKey("try_skin_show_ad_interval") == 0) {
i.utils.showLog("服务器配置间隔" + this.getConfigByKey("try_skin_show_ad_interval") + "关试用皮肤展示插屏！");
i.utils.adManager.ShowInterstitial();
}
return !0;
}
return !1;
};
t.prototype.showSkipBtn = function(e, t, i) {
void 0 === t && (t = !1);
void 0 === i && (i = p.BannerLocation.None);
if (e) {
var o = c.default.IsNativeAndroid ? 3 : 0;
this.getConfigByKey("skip_btn_show_delay") && (o = this.getConfigByKey("skip_btn_show_delay"));
t && this.getConfigByKey("special_skip_btn_show_delay") && (o = this.getConfigByKey("special_skip_btn_show_delay"));
c.default.IsTest && (this.ServerConfig.over_page_skip_btn_show_delay = 3);
i == p.BannerLocation.Over && this.getConfigByKey("over_page_skip_btn_show_delay") && (o = this.getConfigByKey("over_page_skip_btn_show_delay"));
if (o > 0) {
e.opacity = 0;
e.active = !1;
this.scheduleOnce(function() {
if (e && cc.isValid(e)) {
e.active = !0;
e.runAction(cc.fadeIn(.3));
}
}, o);
} else e.active || (e.active = !0);
}
};
t.prototype.delayShowNode = function(e) {
if (e) {
e.opacity = 0;
e.active = !0;
var t = 0;
this.getConfigByKey("next_btn_show_delay") && (t = this.getConfigByKey("next_btn_show_delay"));
this.scheduleOnce(function() {
e && cc.isValid(e) && e.runAction(cc.fadeIn(.3));
}, t);
}
};
t.prototype.isBoxAutoSelectToggle = function() {
var e = 0, t = i.utils.currentLevel;
this.getConfigByKey("box_auto_select_level") ? e = Number(this.getConfigByKey("box_auto_select_level")) : i.utils.showLog("服务器配置不存在，不自动勾选");
return 0 != e && t % e == 0;
};
t.prototype.isResultAutoSelectToggle = function() {
var e = 0, t = i.utils.currentLevel;
this.getConfigByKey("result_auto_select_level") ? e = Number(this.getConfigByKey("result_auto_select_level")) : i.utils.showLog("服务器配置不存在，不自动勾选");
return 0 != e && t % e == 0;
};
t.prototype.isTrySkinAutoSelectToggle = function() {
var e = 0, t = i.utils.currentLevel;
this.getConfigByKey("skin_auto_select_level") ? e = Number(this.getConfigByKey("skin_auto_select_level")) : i.utils.showLog("服务器配置不存在，不自动勾选");
return 0 != e && t % e == 0;
};
t.prototype.changePic = function(e, t, i) {
var o = this;
if (e && cc.isValid(e) && e.getComponent(cc.Sprite)) {
if (e.picurl != this.nodeName(t)) {
var n = cc.resources.get(t, cc.SpriteFrame);
if (n) {
e.picurl = o.nodeName(t);
e.getComponent(cc.Sprite).spriteFrame = n;
i && i(n);
} else {
e.getComponent(cc.Sprite).spriteFrame = null;
cc.resources.load(t, cc.SpriteFrame, null, function(n, s) {
if (e && cc.isValid(e) && e.getComponent(cc.Sprite)) {
if (s) {
e.picurl = o.nodeName(t);
e.getComponent(cc.Sprite).spriteFrame = s;
} else e.picurl = "";
i && i(s);
}
});
}
}
} else cc.warn("UiUtil.changePic node null");
};
t.prototype.nodeName = function(e) {
return e.replace(/\//g, "-").replace(/;/g, "-");
};
Object.defineProperty(t.prototype, "gameVersion", {
get: function() {
return this.cur_tool && this.cur_tool.gameVersion ? this.cur_tool.gameVersion() : "-1";
},
enumerable: !1,
configurable: !0
});
t.prototype.controView = function(e) {
var t, o, n = {
isSelect: !0,
msg: "观看视频获得奖励",
btnType: !0,
is_open: !1
};
if (!i.utils.ServerConfig) {
i.utils.showLog("服务器配置不存在");
return n;
}
if ("false" == this.getConfigByKey("open_check_btn")) {
i.utils.showLog("服务器配置不开启勾选！");
return n;
}
n.is_open = !0;
switch (e) {
case p.ViewLocation.sign:
o = this.getConfigByKey("sign_auto_select_level") ? this.getConfigByKey("sign_auto_select_level") : 0;
t = "true" != this.getConfigByKey("ad_tip_sign_random") || Math.random() >= .5;
n.msg = t ? "查看视频获得双倍奖励" : "不需要视频奖励";
break;

case p.ViewLocation.trySkin:
o = this.getConfigByKey("tryskin_auto_select_level") ? this.getConfigByKey("tryskin_auto_select_level") : 0;
t = "true" != this.getConfigByKey("ad_tip_tryskin_random") || Math.random() >= .5;
n.msg = t ? "查看视频试用皮肤" : "不需要视频试用皮肤";
break;

case p.ViewLocation.box:
o = this.getConfigByKey("box_auto_select_level") ? this.getConfigByKey("box_auto_select_level") : 0;
t = "true" != this.getConfigByKey("ad_tip_box_random") || Math.random() >= .5;
n.msg = t ? "查看视频获得五倍奖励" : "不需要视频奖励";
break;

case p.ViewLocation.successBox:
o = this.getConfigByKey("success_box_auto_select_level") ? this.getConfigByKey("success_box_auto_select_level") : 0;
break;

case p.ViewLocation.failBox:
o = this.getConfigByKey("fail_box_auto_select_level") ? this.getConfigByKey("fail_box_auto_select_level") : 0;
break;

case p.ViewLocation.winPanel:
o = this.getConfigByKey("win_panel_auto_select_level") ? this.getConfigByKey("win_panel_auto_select_level") : 0;
break;

case p.ViewLocation.turntable:
o = this.getConfigByKey("turntable_auto_select_level") ? this.getConfigByKey("turntable_auto_select_level") : 0;
}
0 == o ? n.isSelect = !1 : 1 == o ? n.isSelect = !0 : 2 == o && (n.isSelect = Math.random() >= .5);
n.btnType = t == n.isSelect;
return n;
};
t.prototype.canShowNextVideo = function(e) {
if (i.utils.ServerConfig && this.getConfigByKey("next_auto_video_interval")) {
var t = Number(this.getConfigByKey("next_auto_video_interval"));
if (t && 0 != t) if (e % t == 0) if (c.default.IsDouyin) {
if (this.getConfigByKey("version") != i.utils.config.douyinconfig.version) return !0;
} else if (c.default.IsBaidu) {
if (this.getConfigByKey("version") != i.utils.config.baiduconfig.version) return !0;
} else {
if (!c.default.ISUC) return !0;
if (this.getConfigByKey("version") != i.utils.config.ucConfig.version) return !0;
} else if (c.default.Is4399 && 0 != (t = 3) && e % t == 0) return this.true;
}
return !1;
};
t.prototype.canShowRedBag = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (this.ServerConfig && this.yzRedBagInfo && this.ServerConfig.show_red_bag && "true" == this.ServerConfig.show_red_bag) return !0;
i.utils.showLog("服务器配置不显示红包组件！");
return !1;
};
t.prototype.hideWithdrawalWidget = function() {
this._withdrawalWidget && cc.isValid(this._withdrawalWidget) && this._withdrawalWidget.destroy();
};
t.prototype.showWithdrawalWidget = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (!this.canShowRedBag()) return null;
if (this.config.otherconfig.withdrawalWidget) {
var t = cc.instantiate(this.config.otherconfig.withdrawalWidget);
if (t) {
this._withdrawalWidget && cc.isValid(this._withdrawalWidget) && this._withdrawalWidget.destroy();
this._withdrawalWidget = t;
this._withdrawalWidget.zIndex = 9999;
var o = t.getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (t.parent = e.parent);
}
o.updateAlignment();
return t;
}
} else i.utils.showLog("warn:未找到预制体 WithdrawalWidget, 请查看CommonUtils组件上是否赋值！");
return null;
};
t.prototype.hideRedBagProgressWidget = function() {
this._redBagProgressWidget && cc.isValid(this._redBagProgressWidget) && this._redBagProgressWidget.destroy();
};
t.prototype.showRedBagProgressWidget = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (!this.canShowRedBag()) return null;
if (this.config.otherconfig.redBagProgressWidget) {
var t = cc.instantiate(this.config.otherconfig.redBagProgressWidget);
if (t) {
this._redBagProgressWidget && cc.isValid(this._redBagProgressWidget) && this._redBagProgressWidget.destroy();
this._redBagProgressWidget = t;
this._redBagProgressWidget.zIndex = 9999;
var o = t.getComponent(cc.Widget);
if (e) {
e.location && t.getComponent(B.default).init(e);
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (t.parent = e.parent);
}
o.updateAlignment();
return t;
}
} else i.utils.showLog("warn:未找到预制体 RedBagProgressWidget, 请查看CommonUtils组件上是否赋值！");
return null;
};
t.prototype.showWithdrawalPanel = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (!this.canShowRedBag()) return null;
if (this.config.otherconfig.withdrawalPanel) {
var t = cc.instantiate(this.config.otherconfig.withdrawalPanel);
if (t) {
this._withdrawalPanel && cc.isValid(this._withdrawalPanel) && this._withdrawalPanel.destroy();
this._withdrawalPanel = t;
cc.director.getScene().addChild(this._withdrawalPanel, 9999);
} else i.utils.showLog("warn:未找到预制体 WithdrawalPanel, 请查看CommonUtils组件上是否赋值！");
return null;
}
};
t.prototype.showOpenRedBagPanel = function(e) {
void 0 === e && (e = null);
e && e.closeCallFunc && (this.rewardCloseFunc = e.closeCallFunc);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
this.rewardCloseFunc && this.rewardCloseFunc();
return null;
}
if (!this.canShowRedBag()) {
this.rewardCloseFunc && this.rewardCloseFunc();
return null;
}
if (e && e.location && e.location === p.BannerLocation.Home) {
if (this.yzRedBagInfo.progress < this.yzRedBagInfo.totalProgress && !this.yzRedBagInfo.isFreeRedBag) {
i.utils.showLog("当前红包进度不满足条件且没有免费红包领取，首页不显示拆红包窗口");
this.rewardCloseFunc && this.rewardCloseFunc();
return null;
}
this.yzRedBagInfo.isFreeRedBag || (e.showType = 2);
}
if (this.config.otherconfig.openRedBagPanel) {
var t = cc.instantiate(this.config.otherconfig.openRedBagPanel);
if (t) {
this._openRedBagPanel && cc.isValid(this._openRedBagPanel) && this._openRedBagPanel.destroy();
this._openRedBagPanel = t;
e && e.showType && this._openRedBagPanel.getComponent(k.default).initData(e.showType);
cc.director.getScene().addChild(t, 9999);
} else i.utils.showLog("warn:未找到预制体 OpenRedBagPanel, 请查看CommonUtils组件上是否赋值！");
return null;
}
};
t.prototype.showRewardRedBagPanel = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (!this.canShowRedBag()) return null;
this._rewardRedBagPanelShowCount++;
if (this._rewardRedBagPanelShowCount % 3 == 0) {
if (this.config.otherconfig.rewardRedBagPanel) {
var t = cc.instantiate(this.config.otherconfig.rewardRedBagPanel);
if (t) {
this._rewardRedBagPanel && cc.isValid(this._rewardRedBagPanel) && this._rewardRedBagPanel.destroy();
this._rewardRedBagPanel = t;
cc.director.getScene().addChild(this._rewardRedBagPanel, 9999);
} else i.utils.showLog("warn:未找到预制体 OpenRedBagPanel, 请查看CommonUtils组件上是否赋值！");
return null;
}
} else i.utils.showLog("获得红包弹窗未达到服务器配置的间隔限制！");
};
t.prototype.isVerticalRecommentPanel = function() {
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return !1;
}
if (this.Tool_Broswer) return !0;
if (c.default.IsWechat) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.wechatTool && i.utils.wechatTool.ServerConfig && i.utils.wechatTool.ServerConfig.is_vertical_game) {
if ("true" == i.utils.wechatTool.ServerConfig.is_vertical_game) return !0;
i.utils.showLog("warn:is_vertical_game参数为false，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:配置中没有is_vertical_game参数，更多游戏侧边栏组件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else if (c.default.IsOPPO) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.oppoTool && i.utils.oppoTool.ServerConfig && i.utils.oppoTool.ServerConfig.is_vertical_game) {
if ("true" == i.utils.oppoTool.ServerConfig.is_vertical_game) return !0;
i.utils.showLog("warn:is_vertical_game参数为false，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:配置中没有is_vertical_game参数，更多游戏侧边栏组件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else if (c.default.IsDouyin) if (c.default.IsAndroid && i.utils.isSupportnavigateToMiniGame()) if (i.utils.Tool_Douyin && i.utils.Tool_Douyin.ServerConfig && i.utils.Tool_Douyin.ServerConfig.is_vertical_game) {
if ("true" == i.utils.Tool_Douyin.ServerConfig.is_vertical_game) return !0;
i.utils.showLog("warn:is_vertical_game参数为false，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:配置中没有is_vertical_game参数，更多游戏侧边栏组件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else if (c.default.IsBaidu) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.Tool_Baidu && i.utils.Tool_Baidu.ServerConfig && i.utils.Tool_Baidu.ServerConfig.is_vertical_game) {
if ("true" == i.utils.Tool_Baidu.ServerConfig.is_vertical_game) return !0;
i.utils.showLog("warn:is_vertical_game参数为false，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:配置中没有is_vertical_game参数，更多游戏侧边栏组件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else if (c.default.IsQQ) if (i.utils.isSupportnavigateToMiniGame()) if (i.utils.Tool_QQ && i.utils.Tool_QQ.ServerConfig && i.utils.Tool_QQ.ServerConfig.is_vertical_game) {
if ("true" == i.utils.Tool_QQ.ServerConfig.is_vertical_game) return !0;
i.utils.showLog("warn:is_vertical_game参数为false，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:配置中没有is_vertical_game参数，更多游戏侧边栏组件不显示！"); else i.utils.showLog("warn:当前平台不支持游戏内跳转，更多游戏侧边栏组件不显示！"); else {
if (c.default.Is4399) return !0;
if (c.default.IsNativeAndroid) if (i.utils.Tool_Native && i.utils.Tool_Native.ServerConfig && i.utils.Tool_Native.ServerConfig.is_vertical_game) {
if ("true" == i.utils.Tool_Native.ServerConfig.is_vertical_game) return !0;
i.utils.showLog("warn:is_vertical_game参数为false，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:配置中没有is_vertical_game参数，更多游戏侧边栏组件不显示！"); else if (c.default.IsNativeIOS) if (i.utils.Tool_IOS && i.utils.Tool_IOS.ServerConfig && i.utils.Tool_IOS.ServerConfig.is_vertical_game) {
if ("true" == i.utils.Tool_IOS.ServerConfig.is_vertical_game) return !0;
i.utils.showLog("warn:is_vertical_game参数为false，更多游戏侧边栏组件不显示！");
} else i.utils.showLog("warn:配置中没有is_vertical_game参数，更多游戏侧边栏组件不显示！");
}
return !1;
};
t.prototype.showVerticalRecommentPanel = function(e) {
void 0 === e && (e = null);
if (!this._isConfigInit) {
i.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (!this.isVerticalRecommentPanel()) return null;
if (this.config.otherconfig.verticalRecommentPanel) {
var t = cc.instantiate(this.config.otherconfig.verticalRecommentPanel);
if (t) {
t.zIndex = 9999;
var o = t.getComponent(cc.Widget);
if (e) {
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (t.parent = e.parent);
null != e.position && t.setPosition(N.default.position(e.position.x, e.position.y));
}
o.updateAlignment();
return t;
}
} else i.utils.showLog("warn:未找到预制体 verticalRecommentPanel, 请查看CommonUtils组件上是否赋值！");
return null;
};
t.prototype.isShowPrivacyWidget = function() {
if (this.Tool_Broswer) return !0;
if ("true" == this.getConfigByKey("is_privacy")) return !0;
i.utils.showLog("warn:配置中没有is_privacy参数，更用户协议挂件组件不显示！");
return !1;
};
t.prototype.showPrivacyWidget = function(e) {
void 0 === e && (e = null);
if (i.utils.isShowPrivacyWidget()) {
if (this.config.otherconfig.privacyWidget) {
this._privacyWidget && cc.isValid(this._privacyWidget) && this._privacyWidget.destroy();
var t = cc.instantiate(this.config.otherconfig.privacyWidget);
this._privacyWidget = t;
this._privacyWidget.zIndex = 9999;
var o = t.getComponent(cc.Widget);
if (e) {
e.color && (t.children[0].color = e.color);
e.group && (t.group = e.group);
null != e.scale && (t.scale = e.scale);
if (null != e.top) {
o.isAlignTop = !0;
o.isAlignBottom = !1;
o.top = e.top;
} else if (null != e.bottom) {
o.isAlignTop = !1;
o.isAlignBottom = !0;
o.bottom = e.bottom;
}
if (null != e.left) {
o.isAlignLeft = !0;
o.isAlignRight = !1;
o.left = e.left;
} else if (null != e.right) {
o.isAlignLeft = !1;
o.isAlignRight = !0;
o.right = e.right;
}
null != e.parent && (t.parent = e.parent);
}
o.updateAlignment();
t.on(cc.Node.EventType.TOUCH_END, function() {
c.default.IsNativeAndroid ? i.utils.Tool_Native && i.utils.Tool_Native.showPrivacyAgreement() : i.utils.showPrivacyPanel({
is_widget_click: "true",
group: t.group
});
}, this);
return t;
}
i.utils.showLog("warn:隐私政策挂件预制体不存在！");
} else i.utils.showLog("warn:不可显示更多游戏侧边栏");
return null;
};
t.prototype.hidePrivacyWidget = function() {
this._privacyWidget && cc.isValid(this._privacyWidget) && this._privacyWidget.destroy();
};
t.prototype.isShowPrivacyPanel = function() {
if (c.default.IsHuaWei || c.default.IsXiaoMi) return !0;
if (this.getConfigByKey("is_privacy_panel")) {
if ("true" == this.getConfigByKey("is_privacy_panel")) return !0;
i.utils.showLog("warn:is_privacy_panel参数为false，用户隐私政策弹窗组件不显示！");
}
return !1;
};
t.prototype.showPrivacyPanel = function(e) {
var t = this;
void 0 === e && (e = null);
i.utils.showLog("showPrivacyPanel>>>");
var o = function(o) {
if (t.config.otherconfig.privacyPanel) {
t._privacyPanel && cc.isValid(t._privacyPanel) && t._privacyPanel.destroy();
var n = cc.instantiate(t.config.otherconfig.privacyPanel);
n.getComponent(D.default).showDesc = o;
t._privacyPanel = n;
t._privacyPanel.zIndex = 9999;
var s = n.getComponent(cc.Widget), a = "深圳市优智信息技术有限公司";
e && e.subject && (a = e.subject);
var r = cc.find("Panel/subject", n).getComponent(cc.Label).string;
r = r.replace("subject", a);
cc.find("Panel/subject", n).getComponent(cc.Label).string = r;
if (e) {
e.group && (n.group = e.group);
null != e.scale && (n.scale = e.scale);
if (null != e.top) {
s.isAlignTop = !0;
s.isAlignBottom = !1;
s.top = e.top;
} else if (null != e.bottom) {
s.isAlignTop = !1;
s.isAlignBottom = !0;
s.bottom = e.bottom;
}
if (null != e.left) {
s.isAlignLeft = !0;
s.isAlignRight = !1;
s.left = e.left;
} else if (null != e.right) {
s.isAlignLeft = !1;
s.isAlignRight = !0;
s.right = e.right;
}
null != e.parent ? n.parent = e.parent : cc.find("Canvas").addChild(n, cc.macro.MAX_ZINDEX);
} else cc.find("Canvas").addChild(n, cc.macro.MAX_ZINDEX);
s.updateAlignment();
} else i.utils.showLog("warn:隐私政策弹窗预制体不存在！");
};
if (e && e.is_widget_click) o(!0); else {
if (E.default.getItem(p.default.YZ_GAME_YSXY)) {
i.utils.emitPrivacyCloseEvent();
i.utils.showLog("已经同意过隐私协议，不显示隐私协议弹窗！");
return;
}
i.utils.registerServerDataLoadSuccessEvent(function() {
o();
}, this);
}
};
t.prototype.showScaleAction = function(e, t, o, n, s) {
void 0 === t && (t = null);
void 0 === o && (o = !0);
void 0 === n && (n = !0);
void 0 === s && (s = p.BannerLocation.None);
if (o) {
if (!cc.isValid(t) || !cc.isValid(e)) return;
} else if (!cc.isValid(e)) return;
0;
var a = e;
if ("true" == this.getConfigByKey("change_btn_position") && 1 == o) {
var r = !0;
if (s == p.BannerLocation.Over && "false" == this.getConfigByKey("over_page_change_btn")) {
r = !1;
i.utils.showLog("结算页面按钮配置不切换位置！");
}
if (r) {
var l = Math.floor(2 * Math.random() + 1), c = e.position, u = t.position;
if (l % 2 == 0) {
t.position = c;
e.position = u;
} else {
a = e;
t.position = u;
e.position = c;
}
a = t.position.y > e.position.y ? t : e;
}
}
if ("true" == this.getConfigByKey("btn_show_scale")) {
if (s == p.BannerLocation.Over && "false" == this.getConfigByKey("over_page_scale_btn")) {
i.utils.showLog("结算页面按钮配置不缩放按钮！");
return;
}
if (e) {
e.stopAllActions();
e.scale = 1;
}
if (t) {
t.stopAllActions();
t.scale = 1;
}
var h = cc.sequence(cc.scaleTo(this.runTime, this.maxScale), cc.scaleTo(this.runTime, this.minScale));
a.runAction(h.repeatForever());
if (n) {
if (e) {
if (d = e.parent.getChildByName("hand")) {
d.destroy();
d.removeFromParent();
}
}
if (t) {
var d;
if (d = t.parent.getChildByName("hand")) {
d.destroy();
d.removeFromParent();
}
}
if (this.config.otherconfig.handPrefab) {
var f = cc.instantiate(this.config.otherconfig.handPrefab);
f.x = a.x + a.width / 2;
f.y = a.y - 135;
a.parent.addChild(f, cc.macro.MAX_ZINDEX + 1, "hand");
}
}
}
};
t.prototype.reportNativeAdClick = function() {
if ((new Date().getTime() - this._lastReportAdTime) / 1e3 > 3) {
this._lastReportAdTime = new Date().getTime();
cc.game.emit(p.default.YZ_NativeAdClick);
this.showLog("上报原生广告点击！");
} else this.showLog("上报原生广告点击间隔时间小于3秒！");
};
t.prototype.canShowOverPageAdBtn = function() {
return !(!this.ServerConfig || !this.ServerConfig.show_over_page_ad_btn || "true" != this.ServerConfig.show_over_page_ad_btn);
};
t.prototype.showRecBanner = function() {
i.utils.adManager.checkShowAdTime() ? this.cur_tool && this.cur_tool.showRecBanner && this.cur_tool.showRecBanner() : i.utils.showLog("显示广告条时间未达限制！");
};
t.prototype.showGamePortal = function() {
i.utils.adManager.checkShowAdTime() ? this.cur_tool && this.cur_tool.showGamePortal && this.cur_tool.showGamePortal() : i.utils.showLog("显示广告条时间未达限制！");
};
t.prototype.showVivoGamePortalWidget = function(e) {
void 0 === e && (e = null);
if (this._isConfigInit) {
if (c.default.IsVIVO) if (i.utils.adManager.checkShowAdTime()) if ("true" === this.getConfigByKey("vivo_game_protal")) {
if (e && e.location && this.getConfigByKey("vivo_game_protal_locations").indexOf(e.location) < 0) {
i.utils.showLog("当前位置服务器未配置显示VIVO九宫格挂件！");
this.Tool_Vivo && this.Tool_Vivo.hideGamePortal();
return;
}
this.Tool_Vivo && this.Tool_Vivo.showGamePortal(e.top);
} else i.utils.showLog("服务器未配置显示VIVO九宫格挂件！"); else i.utils.showLog("显示广告条时间未达限制！");
} else i.utils.showLog("warn:组件配置未初始化!");
};
t.prototype.hideVivoGamePortalWidget = function() {
this.Tool_Vivo && this.Tool_Vivo.hideGamePortal();
};
t.prototype.showOppoGameDrawerAdWidget = function(e) {
void 0 === e && (e = null);
if (this._isConfigInit) {
if (c.default.IsOPPO) if (i.utils.adManager.checkShowAdTime()) {
0;
if ("true" === this.getConfigByKey("oppo_game_drawer")) {
if (e && e.location && this.getConfigByKey("oppo_game_drawer_locations").indexOf(e.location) < 0) {
i.utils.showLog("当前位置服务器未配置显示OPPO互推抽屉盒子！");
this.oppoTool && this.oppoTool.hideGameDrawerAd();
return;
}
this.oppoTool && this.oppoTool.showGameDrawerAd(e);
} else i.utils.showLog("服务器未配置显示OPPO互推抽屉盒子！");
} else i.utils.showLog("显示广告条时间未达限制！");
} else i.utils.showLog("warn:组件配置未初始化!");
};
t.prototype.hideOppoGameDrawerAdWidget = function() {
this.oppoTool && this.oppoTool.hideGameDrawerAd();
};
t.prototype.showOppoRecBanner = function(e) {
void 0 === e && (e = null);
if (this._isConfigInit) {
if (c.default.IsOPPO) if (i.utils.adManager.checkShowAdTime()) {
0;
if ("true" === this.getConfigByKey("oppo_rec_banner")) {
if (e && e.location && this.getConfigByKey("oppo_rec_banner_locations").indexOf(e.location) < 0) {
i.utils.showLog("当前位置服务器未配置显示OPPO互推Banner！");
this.oppoTool && this.oppoTool.hideOppoRecBanner();
return;
}
this.oppoTool && this.oppoTool.showOppoNewRecBanner(e);
} else i.utils.showLog("服务器未配置显示OPPO互推Banner！");
} else i.utils.showLog("显示广告条时间未达限制！");
} else i.utils.showLog("warn:组件配置未初始化!");
};
t.prototype.hideOppoRecBanner = function() {
this.oppoTool && this.oppoTool.hideOppoRecBanner();
};
t.prototype.realNameAuth = function(e, t, o) {
i.utils.showLog("进行实名制认证：#code=" + e + " #name=" + t);
i.utils.cur_tool && i.utils.cur_tool.realNameAuth && i.utils.cur_tool.realNameAuth(e, t, o);
};
t.prototype.GameExit = function() {
this.cur_tool && this.cur_tool.GameExit && this.cur_tool.GameExit();
};
t.prototype.showYzRealNameAuthPanel = function(e) {
void 0 === e && (e = null);
i.utils.showLog("显示实名制认证弹窗!");
if (this._isConfigInit) {
this.getRealNameAuthLocalData() && "1" == this.getRealNameAuthLocalData() && (this._isRealNameAuth = !0);
if (this._isRealNameAuth) {
i.utils.showLog("已经进行过实名制认证,不显示弹窗！");
this.emitRealNameAuthCloseEvent();
} else {
var t = -1;
(c.default.IsNativeAndroid || c.default.IsNativeIOS) && (t = 0);
this.getConfigByKey("show_real_name_auth") && (t = parseInt(this.getConfigByKey("show_real_name_auth")));
if (-1 != t) {
if (!c.default.IsNativeAndroid) {
if (this.config.otherconfig.yzRealNameAuthPanel) {
this._yzRealNameAuthPanel && cc.isValid(this._yzRealNameAuthPanel) && this._yzRealNameAuthPanel.destroy();
var o = cc.instantiate(this.config.otherconfig.yzRealNameAuthPanel);
if (-2 == t) {
o.getComponent(M.default)._isOffLine = !0;
t = 0;
}
this._yzRealNameAuthPanel = o;
this._yzRealNameAuthPanel.zIndex = 9999;
if (e) {
e.group && (o.group = e.group);
null != e.scale && (o.scale = e.scale);
this.scheduleOnce(function() {
null != e.parent ? o.parent = e.parent : cc.find("Canvas").addChild(o);
}, 1e3 * t);
} else this.scheduleOnce(function() {
cc.find("Canvas").addChild(o);
}, 1e3 * t);
return o;
}
i.utils.showLog("warn:实名制认证弹窗预制体不存在！");
return null;
}
this.scheduleOnce(function() {
i.utils.Tool_Native.showRealNameAuthPanel(t + "");
}, t);
} else {
i.utils.showLog("服务器控制不显示实名制弹窗！");
this.emitRealNameAuthCloseEvent();
}
}
} else i.utils.showLog("warn:组件配置未初始化!");
};
t.prototype.setRealNameAuthLocalData = function(e) {
E.default.setItem("yz_game_real_name", "" + e);
};
t.prototype.getRealNameAuthLocalData = function() {
var e = E.default.getItem("yz_game_real_name");
e || (e = 0);
return e;
};
t.prototype.getConfigByKey = function(e) {
if (!this._isConfigInit) {
i.utils.showLog("warn:本地数据未初始化!");
return "";
}
if (e && this.ServerConfig && e in this.ServerConfig) return this.ServerConfig[e];
this.showLog("warn:字段：" + e + " 未配置！");
return "";
};
t.prototype.login = function(e, t) {
var i = this;
this.showLog("=====login====");
if (e) {
c.default.IsDouyin;
cc.game.targetOff(p.default.ST_LOGIN_SUCCESS);
cc.game.on(p.default.ST_LOGIN_SUCCESS, e, this);
}
if (t) {
var o = function() {
t();
i.showLoginPanel();
};
cc.game.targetOff(p.default.ST_LOGIN_FAIL);
cc.game.on(p.default.ST_LOGIN_FAIL, o, this);
} else {
o = function() {
i.showLoginPanel();
};
cc.game.targetOff(p.default.ST_LOGIN_FAIL);
cc.game.on(p.default.ST_LOGIN_FAIL, o, this);
}
if (this.cur_tool && this.cur_tool.login) this.cur_tool.login(); else {
cc.game.targetOff(p.default.ST_LOGIN_SUCCESS);
cc.game.targetOff(p.default.ST_LOGIN_FAIL);
e && e();
}
};
t.prototype.showLoginPanel = function() {
if (this.config.otherconfig.yzLoginPanel) {
var e = cc.instantiate(this.config.otherconfig.yzLoginPanel);
if (e) {
this._yzLoginPanel && cc.isValid(this._yzLoginPanel) && this._yzLoginPanel.destroy();
this._yzLoginPanel = e;
cc.find("Canvas").addChild(e, cc.macro.MAX_ZINDEX);
return e;
}
} else i.utils.showLog("warn:未找到预制体 YzLoginPanel, 请查看CommonUtils组件上是否赋值！");
};
t.prototype.generateUUID = function() {
var e = new Date().getTime();
window.performance && "function" == typeof window.performance.now && (e += performance.now());
return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, function(t) {
var i = (e + 16 * Math.random()) % 16 | 0;
e = Math.floor(e / 16);
return ("x" == t ? i : 3 & i | 8).toString(16);
});
};
t.prototype.checkOneDay = function(e) {
var t = parseInt(e), i = new Date(t), o = i.getFullYear(), n = i.getMonth(), s = i.getDay(), a = new Date(), r = a.getFullYear(), l = a.getMonth(), c = a.getDay();
return o == r && n == l && s == c;
};
t.prototype.checkWeeHours = function(e) {
console.log("检查是否过了记录时间的凌晨:");
var t = parseInt(e), i = !1, o = this.checkOneDay(e), n = new Date(t), s = t + 1e3 * (60 * (24 - n.getHours()) * 60 - 60 * n.getMinutes() - n.getSeconds()), a = Date.now();
if (!o) {
i = a > s;
console.log("检查是否过了记录时间的凌晨:" + i);
}
return i;
};
n([ U({
displayName: "组件版本",
readonly: !0
}) ], t.prototype, "utilsVersion", null);
n([ U({
displayName: "测试本地数据",
tooltip: "勾选此选项则使用本地配置，否则会请求服务器配置!"
}) ], t.prototype, "DebugLoacalConfig", void 0);
n([ U({
displayName: "显示日志框",
tooltip: "勾选此选项则会显示日志框，用于调试!"
}) ], t.prototype, "showLogView", void 0);
n([ U({
type: r.default,
displayName: "配置信息"
}) ], t.prototype, "config", void 0);
return t = n([ j ], t);
}(cc.Component);
i.default = V;
cc._RF.pop();
}, {
"./AdManager": "AdManager",
"./AldUtils": "AldUtils",
"./CommonConfig": "CommonConfig",
"./CompatibleTool": "CompatibleTool",
"./Encrypt/CryptoJS": "CryptoJS",
"./OpenRedBagPanel": "OpenRedBagPanel",
"./PlatUtils": "PlatUtils",
"./RedBagProgressWidget": "RedBagProgressWidget",
"./WechatTool": "WechatTool",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage",
"./YZ_Tool_4399": "YZ_Tool_4399",
"./YZ_Tool_Baidu": "YZ_Tool_Baidu",
"./YZ_Tool_Bili": "YZ_Tool_Bili",
"./YZ_Tool_Broswer": "YZ_Tool_Broswer",
"./YZ_Tool_Cocosplay": "YZ_Tool_Cocosplay",
"./YZ_Tool_Douyin": "YZ_Tool_Douyin",
"./YZ_Tool_FaceBook": "YZ_Tool_FaceBook",
"./YZ_Tool_GoogleWeb": "YZ_Tool_GoogleWeb",
"./YZ_Tool_Hago": "YZ_Tool_Hago",
"./YZ_Tool_HuaWei": "YZ_Tool_HuaWei",
"./YZ_Tool_IOS": "YZ_Tool_IOS",
"./YZ_Tool_Kwai": "YZ_Tool_Kwai",
"./YZ_Tool_Native": "YZ_Tool_Native",
"./YZ_Tool_Oppo": "YZ_Tool_Oppo",
"./YZ_Tool_QQ": "YZ_Tool_QQ",
"./YZ_Tool_QTT": "YZ_Tool_QTT",
"./YZ_Tool_UC": "YZ_Tool_UC",
"./YZ_Tool_Vivo": "YZ_Tool_Vivo",
"./YZ_Tool_Wifi": "YZ_Tool_Wifi",
"./YZ_Tool_Xiaomi": "YZ_Tool_Xiaomi",
"./YzRealNameAuthPanel": "YzRealNameAuthPanel",
"./YzUserPrivacyPanel": "YzUserPrivacyPanel"
} ],
VerticalRecommentPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e9374miWaFPkomPvJdFnlTk", "VerticalRecommentPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./PlatUtils"), l = e("./CompatibleTool"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._recommendNode = null;
t._isInit = !1;
t._gameList = [];
t._data = null;
t._curIndex = 0;
return t;
}
i = t;
t.prototype.onLoad = function() {
this._recommendNode = cc.find("Panel/RecommendGamesNode", this.node);
this._recommendNode.active = !1;
for (var e = 0; e < this._recommendNode.childrenCount; e++) {
var t = this._recommendNode.children[e].getComponent("GameItem");
this._gameList.push(t);
}
};
t.prototype.onEnable = function() {
var e = this;
s.utils.registerServerInitEvent(function() {
e._initWidget();
}, this);
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
};
t.prototype._initWidget = function() {
if (!this._isInit) {
var e = !0;
if (s.utils.isVerticalRecommentPanel()) {
r.default.IsDouyin && (s.utils.Tool_Douyin.isShowMoreGamesModal() || this.node.destroy());
this._data = s.utils.getRecommondGameList();
if (this.node.parent.getComponentsInChildren(i).length > 1) {
for (var t = [], o = this._data.length - 1; o >= 0; o--) t.push(this._data[o]);
this._data = t;
}
if (this._data) if (this._data.length > 0) {
this._isInit = !0;
this._initData();
this._recommendNode.active = !0;
this.schedule(this._initData, 3);
} else {
console.warn("交叉推广数据长度为0");
e = !1;
} else {
console.warn("交叉推广数据为null!");
e = !1;
}
}
e || this.node.destroy();
}
};
t.prototype._initData = function() {
var e = this;
this._gameList.forEach(function(t) {
e._curIndex > e._data.length - 1 && (e._curIndex = 0);
t.init(e._data[e._curIndex], a.SubLocation.isVerticalPanel);
if (l.default.engineVersion >= 220) cc.tween(t.node).repeat(5, cc.tween().to(.03, {
angle: 85
}).to(.03, {
angle: 90
}).to(.03, {
angle: 95
}).to(.03, {
angle: 90
})).start(); else {
var i = cc.repeat(cc.sequence(cc.rotateTo(.03, -85), cc.rotateTo(.03, -90), cc.rotateTo(.03, -95), cc.rotateTo(.03, -90)), 5);
t.node.runAction(i);
}
e._curIndex++;
});
};
var i;
return t = i = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
WechatTool: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6f2a5wLPkNFZ7hhnEj8fY4B", "WechatTool");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
"https://apps.youlesp.com/gss?"), f = "", _ = "", p = function() {
function e() {
this._serverConfig = null;
this._gameBoxServerConfig = null;
this._uid = "0";
this._service_uid = "0";
this._sysInfo = null;
this._shareCallback = null;
this._isShare = !1;
this._lastUpdateTime = 0;
this._appIdList = [];
this._jumpIds = "";
this._luanchType = "";
this.clue_token = "";
this.wx_code = "";
this._source_app_id = "";
this._luanchData = "";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this.isReportActive = !1;
this.passCount = 0;
this.playCount = 0;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "gameBoxServerConfig", {
get: function() {
return this._gameBoxServerConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
if ("0" != this._uid) return this._uid;
this._login();
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this._login();
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function(e) {
var t = this;
if (a.default.IsWechat) {
try {
this._sysInfo = wx.getSystemInfoSync();
r.utils.showLog("微信小游戏平台信息: " + JSON.stringify(this.SysInfo));
} catch (e) {}
try {
this._luanchData = c.default.getItem(l.default.ST_LUANCH_DATA);
this._luanchType = c.default.getItem(l.default.ST_LUANCH_TYPE);
var i = wx.getLaunchOptionsSync();
i && r.utils.showLog(">>获取到小程序启动参数：" + JSON.stringify(i));
if (this._luanchData && this._luanchType) {
r.utils.showLog("获取到本地缓存数据启动类型：" + this._luanchType);
r.utils.showLog("获取到本地缓存数据启动参数：" + this._luanchData);
} else if (i) {
if (i.scene) {
r.utils.showLog("获取到启动场景值：" + i.scene);
this._luanchType = i.scene;
c.default.setItem(l.default.ST_LUANCH_TYPE, this._luanchType);
}
if (i.query) {
var o = JSON.stringify(i.query);
this._luanchData = o;
c.default.setItem(l.default.ST_LUANCH_DATA, this._luanchData);
r.utils.showLog("获取到小程序启动参数：" + o);
}
if (i.referrerInfo && "{}" != JSON.stringify(i.referrerInfo)) {
r.utils.showLog("获取到小程序来源信息：" + JSON.stringify(i.referrerInfo));
if (i.referrerInfo.appId) {
r.utils.showLog("获取到小程序启动来源的appId：" + i.referrerInfo.appId);
this._source_app_id = i.referrerInfo.appId;
}
}
}
} catch (e) {
r.utils.showLog("获取到小程序启动参数异常");
}
if (e) {
var n = JSON.parse(e);
n && n.wechat && (f = JSON.stringify(n.wechat));
n && n.gamebox && (_ = JSON.stringify(n.gamebox));
}
this._loadConfig();
wx.showShareMenu();
wx.onShareAppMessage(this._getShareInfo.bind(this));
wx.onShow(function(e) {
cc.log("OnShow");
if (t._isShare) {
t._isShare = !1;
t._shareCallback && t._shareCallback(!0, "分享成功!");
}
t._checkForUpdate();
r.utils.emitCommonEvent(l.default.EC_OnShow);
});
wx.onHide(function() {
cc.log("onHide");
r.utils.emitCommonEvent(l.default.EC_OnHide);
});
this._checkForUpdate();
}
};
e.prototype._checkForUpdate = function() {
if (a.default.IsWechat) {
if (new Date().getTime() - this._lastUpdateTime < 5e3) {
cc.log("检查更新太频繁!");
return;
}
this._lastUpdateTime = new Date().getTime();
if (this.isOverMinVersion("1.9.90")) {
cc.log("检查更新......");
var e = wx.getUpdateManager();
e.onCheckForUpdate(function(e) {
e.hasUpdate ? cc.log("有新版本需要更新!") : cc.log("没有新版本！");
});
e.onUpdateReady(function() {
wx.showModal({
title: "更新提示",
content: "新版本已经准备好，是否重启应用？",
success: function(t) {
t.confirm && e.applyUpdate();
}
});
});
e.onUpdateFailed(function() {
cc.log("新版本下载失败！");
});
}
}
};
e.prototype._buildServerUrl = function() {
var e = "";
if (r.utils.config.wechatconfig && r.utils.config.wechatconfig.appID) {
var t = r.utils.config.wechatconfig.appID, i = this._jumpIds ? this._jumpIds : r.utils.config.wechatconfig.jumpId;
e = d + "kyx=true&app_id=" + t + "&channel=wechat&jump_id=" + i;
} else cc.log("微信 APPID配置出错！");
return e;
};
e.prototype._buildGameBoxServerUrl = function() {
return "https://apps.youlesp.com/gbs?m=ghome&index=0&type=1";
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsWechat) {
cc.log("加载服务器配置.......");
var t = d + "m=g";
r.utils.commomHttpRequest(t, function(i, o) {
if (i) {
cc.log("微信服务器配置数据获取成功: data = ", o);
if (o) {
var n = JSON.parse(o);
n ? r.utils.DebugLoacalConfig ? cc.warn("开启了本地数据测试，使用本地配置!") : e._serverConfig = n : cc.log("微信服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else cc.log("微信服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) {
e._serverConfig.shares && e._serverConfig.shares.sy_title && (r.utils.config.otherconfig.shareTitle = e._serverConfig.shares.sy_title);
e._serverConfig.shares && e._serverConfig.shares.sy_img && (r.utils.config.otherconfig.shareImgUrl = e._serverConfig.shares.sy_img);
if ("false" == e._serverConfig.is_local_pos_id) {
cc.log("使用服务器下发的广告ID");
r.utils.config.wechatconfig.insertId = e.ServerConfig.intersititia_pos_id || r.utils.config.wechatconfig.insertId;
r.utils.config.wechatconfig.videoId = e.ServerConfig.video_pos_id || r.utils.config.wechatconfig.videoId;
r.utils.config.wechatconfig.boxId = e._serverConfig.box_pos_id || r.utils.config.wechatconfig.boxId;
r.utils.config.wechatconfig.bannerBoxId = e._serverConfig.banner_box_pos_id || r.utils.config.wechatconfig.bannerBoxId;
r.utils.config.wechatconfig.nativeBannerId = e._serverConfig.native_banner_pos_id || r.utils.config.wechatconfig.nativeBannerId;
r.utils.config.wechatconfig.nativeInsertIds = e._serverConfig.native_intersititial_pos_id || r.utils.config.wechatconfig.nativeInsertIds;
for (var s = [ "home", "game", "level", "skin", "pause", "over" ], a = 0; a < s.length; a++) e.ServerConfig.banner_pos_id[s[a]] && r.utils.config.wechatconfig.setBannerId(l.BannerLocationToEnum(s[a]), e.ServerConfig.banner_pos_id[s[a]]);
if (e.ServerConfig.native_customad_configs) for (a = 0; a < e.ServerConfig.native_customad_configs.length; a++) {
r.utils.showLog("获取到原生模版广告配置:" + e.ServerConfig.native_customad_configs[a].location, ">>>>", JSON.stringify(e.ServerConfig.native_customad_configs[a]));
r.utils.config.wechatconfig.setCustomAdInfo(e.ServerConfig.native_customad_configs[a].location, e.ServerConfig.native_customad_configs[a]);
}
} else cc.log("使用本地配置的广告ID");
} else e._serverConfig = JSON.parse(f);
r.utils.emitServerInitEvent();
if (e._serverConfig && e._serverConfig.openBox) {
if ("true" != e._serverConfig.openBox) {
cc.log("服务器游戏盒子配置为关闭状态！");
return;
}
t = e._buildGameBoxServerUrl();
r.utils.commomHttpRequest(t, function(t, i) {
if (t) {
cc.log("微信游戏盒子服务器配置数据获取成功: data = ", i);
if (i) {
var o = JSON.parse(i);
o ? r.utils.DebugLoacalConfig ? cc.warn("开启了本地数据测试，使用本地配置!") : e._gameBoxServerConfig = o : cc.log("微信游戏盒子微信服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else cc.log("微信游戏盒子服务器配置数据获取失败, 使用本地配置!");
e._gameBoxServerConfig || (e._gameBoxServerConfig = JSON.parse(_));
});
}
});
}
};
e.prototype.navigateToMiniProgram = function(e, t, i) {
if (a.default.IsWechat) {
var o = t;
wx.navigateToMiniProgram({
appId: e.indexOf(":") > -1 ? e.split(":")[0] : e,
path: i || "",
success: function(e) {
o && o(!0);
},
fail: function(t) {
cc.log("跳转失败! id=" + e + "; res=" + JSON.stringify(t));
o && o(!1);
}
});
}
};
e.prototype.getSystemInfo = function() {
if (a.default.IsWechat) return wx.getSystemInfoSync();
};
e.prototype.previewImage = function(e) {
a.default.IsWechat && wx.previewImage({
urls: [ e ]
});
};
e.prototype.share = function(e) {
void 0 === e && (e = null);
if (a.default.IsWechat) {
this._shareCallback = e;
this._isShare = !0;
wx.shareAppMessage(this._getShareInfo());
}
};
e.prototype.postData = function(e) {
if (a.default.IsWechat) {
var t = d + "m=rjump&jump_app_id=" + e;
cc.log("上报数据, url=", t);
r.utils.commomHttpRequest(t, function(e, t) {
e ? cc.log("数据上报成功！") : cc.log("数据上报失败！");
});
}
};
e.prototype.postDataByLocation = function(e, t, i) {
void 0 === i && (i = 0);
if (a.default.IsWechat) {
var o = d + "m=rjump&jump_app_id=" + e + "&location=" + t + "&status=" + i;
r.utils.commomHttpRequest(o, function(e, t) {
e ? cc.log("数据上报成功！") : cc.log("数据上报失败！");
});
}
};
e.prototype.postRecommentShowData = function(e) {
if (a.default.IsWechat) {
var t = d + "m=rjumpshow&location=" + e;
r.utils.commomHttpRequest(t, function(e, t) {
e ? cc.log("数据上报成功！") : cc.log("数据上报失败！");
}.bind(this));
}
};
e.prototype._getShareInfo = function() {
return a.default.IsWechat ? {
title: r.utils.config.otherconfig.shareTitle,
imageUrl: r.utils.config.otherconfig.shareImgUrl
} : {};
};
e.prototype.isOverMinVersion = function(e) {
var t = wx.getSystemInfoSync().SDKVersion;
return this._compareVersion(t, e) >= 0;
};
e.prototype._compareVersion = function(e, t) {
e = e.split(".");
t = t.split(".");
for (var i = Math.max(e.length, t.length); e.length < i; ) e.push("0");
for (;t.length < i; ) t.push("0");
for (var o = 0; o < i; o++) {
var n = parseInt(e[o]), s = parseInt(t[o]);
if (n > s) return 1;
if (n < s) return -1;
}
return 0;
};
e.prototype.getRecommondGameList = function() {
return a.default.IsWechat && r.utils.wechatTool && r.utils.wechatTool.ServerConfig ? r.utils.wechatTool.ServerConfig.jump_list : null;
};
e.prototype.checkAppId = function(e) {
if (r.utils.config.wechatconfig.jumpId.indexOf(e) > -1) return !0;
cc.log("appId :", e, "不再配置列表中!");
return !1;
};
e.prototype._login = function() {
var e = new Date().getTime(), t = (e - this._loginTime) / 1e3;
if (t > 0 && t < this._loginInterval) r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒"); else {
this._loginTime = e;
var i = this;
this._uid = c.default.getItem(l.default.ST_UID);
this._uid = this._uid ? this._uid : "0";
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
r.utils.showLog("获取本地保存的uid=" + this._uid + "，服务器UID=" + this._service_uid);
"0" == this._uid && wx.login({
success: function(e) {
if (e.code) {
i.wx_code = e.code;
i.reportLogin(e.code);
} else r.utils.showLog("登录失败！" + e.errMsg);
},
fail: function() {},
complete: function() {
i.reportLogin();
}
});
}
};
e.prototype.reportLogin = function(e) {
void 0 === e && (e = "");
return n(this, void 0, void 0, function() {
var t, i, o, n, a = this;
return s(this, function(s) {
if (this.isReport) return [ 2 ];
this.isReport = !0;
t = this;
i = new Date().getTime();
if ((o = (i - this._reportLoginTime) / 1e3) > 0 && o < this._reportLoginInterval) {
r.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒");
return [ 2 ];
}
this._reportLoginTime = i;
n = d + "m=login" + "&device_data=" + encodeURI(JSON.stringify(this._sysInfo)) + "&code=" + e;
r.utils.commomHttpRequest(n, function(e, i) {
if (e && i) {
r.utils.showLog("#data=" + i);
var o = JSON.parse(i);
if (o.uid) {
t._service_uid = "" + o.uid;
if (!t.isReportActive) {
t.isReportActive = !0;
a.reportAttributedEvent(l.AttributedType.Active, l.AttributedKey.Active, l.AttributedValue.Active);
}
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
if (o.device_uid) {
t._uid = "" + o.device_uid;
c.default.setItem(l.default.ST_UID, t._uid);
}
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid + " #device_id=" + t._uid);
}
a.isReport = !1;
});
return [ 2 ];
});
});
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsWechat) {
if (t == l.LevelStatus.GameWin) {
this.passCount++;
this.passCount === r.utils.getConfigByKey("pass_level_count_active") && this.reportAttributedEvent(l.AttributedType.GameAddiction, l.AttributedKey.GameAddiction, l.AttributedValue.PassLevelCountAction);
} else if (t === l.LevelStatus.GameStart) {
this.playCount++;
this.playCount == r.utils.getConfigByKey("play_level_count_active") && this.reportAttributedEvent(l.AttributedType.GameAddiction, l.AttributedKey.GameAddiction, l.AttributedValue.PlayLevelCountAction);
}
var o = d + "m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsWechat) {
var t = d + "m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showToast = function(e) {
a.default.IsWechat && wx.showToast({
title: e,
icon: "none",
duration: 2e3,
success: function(e) {
console.log("" + e);
},
fail: function(e) {
console.log("showToast调用失败");
}
});
};
e.prototype.reportAttributedEvent = function(e, t, i) {
if ("1069" == this._luanchType || "1036" == this._luanchType || "1065" == this._luanchType) {
r.utils.showLog("上报归因事件：  #eventType=" + e + "#eventKey=" + t + "#eventValue=" + i);
if (e == l.AttributedType.Active && c.default.getItem(l.default.ST_IS_REPORT_USER_ACTIVE)) r.utils.showLog("用户已经上报过激活，不再进行激活上报！"); else if (e == l.AttributedType.GameAddiction && c.default.getItem(l.default.ST_IS_REPORT_GAME_ADDICTION)) r.utils.showLog("用户已经上报过关键行为，不再进行激活上报！"); else {
var o = new XMLHttpRequest();
o.timeout = 15e3;
var n = {};
n.app_id = r.utils.config.wechatconfig.appID;
n.channel = "wechat_kyx";
n.uid = this._service_uid;
n.event_type = e;
n.event_key = t;
n.event_value = i;
n.app_version = r.utils.config.wechatconfig.version;
n.code = this.wx_code;
n.luanchDate = encodeURI(this._luanchData);
r.utils.showLog("归因请求参数:" + JSON.stringify(n));
var s = JSON.stringify(n);
r.utils.showLog("归因 > json_data=" + r.utils.aesEncrypt(s));
var a = "https://track.youletd.com/wechatcounterpart/dockingreturn?json=" + r.utils.aesEncrypt(s) + "&time_stamp=" + new Date().getTime();
r.utils.showLog("归因服务器地址:" + a);
o.open("GET", a);
o.send();
o.onreadystatechange = function() {
r.utils.showLog("请求状态改变, reaedyState=", o.readyState, "; status=", o.status);
if (4 == o.readyState) if (200 == o.status) {
e == l.AttributedType.Active && c.default.setItem(l.default.ST_IS_REPORT_USER_ACTIVE, "true");
e == l.AttributedType.GameAddiction && c.default.setItem(l.default.ST_IS_REPORT_GAME_ADDICTION, "true");
r.utils.showLog("归因上报成功：", o.responseText);
} else r.utils.showLog("归因上报失败！");
};
o.ontimeout = function() {
r.utils.showLog("归因请求超时!");
};
o.onerror = function(e) {
r.utils.showLog("归因请求失败!");
};
}
} else r.utils.showLog("luanchType=" + this._luanchType + ",不进行归因上报");
};
e.prototype.umaOnStart = function(e) {
this.checkUmeng() && wx.uma.stage.onStart({
stageId: e,
stageName: "第" + e + "关"
});
};
e.prototype.checkUmeng = function() {
if (!wx.uma) {
r.utils.showLog("未对接友盟SDK");
return !1;
}
return !0;
};
e.prototype.umaReportedLevel = function(e, t) {
this.checkUmeng() && wx.uma.stage.onEnd({
stageId: e,
stageName: "第" + e + "关",
event: t
});
};
e.prototype.umaTrackEvent = function(e, t) {
this.checkUmeng() && wx.uma.trackEvent(e, t);
};
return e = o([ h ], e);
}();
i.default = p;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
WithdrawalNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ba4b6OkUPVGs6rVbTzptHpa", "WithdrawalNode");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.balanceLbl = null;
return t;
}
t.prototype.onLoad = function() {
this.balanceLbl = this.node.getComponentInChildren(cc.Label);
};
t.prototype.init = function(e) {
s.utils.yzRedBagInfo.balance > 0 ? this.balanceLbl.string = "¥" + s.utils.yzRedBagInfo.balance : this.balanceLbl.string = "¥0.00";
};
t.prototype.showWithdrawalPanel = function() {
s.utils.SendEvent("红包提现框-点击提现按钮！");
s.utils.showWithdrawalPanel();
};
t.prototype.onEnable = function() {
var e = this;
s.utils.SendEvent("红包提现框-展示成功！");
this.init();
cc.game.on("YZ_RED_BAG_BALANCE_CHANGE", function() {
e.init();
}, this);
};
t.prototype.onDisable = function() {
this.unscheduleAllCallbacks();
this.node.targetOff(this);
cc.game.targetOff(this);
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
WithdrawalPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4495aojZMBHxqGZ7aIISklf", "WithdrawalPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = cc._decorator, l = r.ccclass, c = (r.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._closeBtn = null;
t._withdrawalBtn = null;
t._moneyItemNodes = null;
t._panel = null;
t._balanceLbl = null;
t._redBagInfo = null;
t._location = a.SubLocation.isMoreGame;
t._selectedMoneyItemIndex = -1;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
this._panel = this.node.getChildByName("Panel");
this._moneyItemNodes = this._panel.getChildByName("WithdrawalPriceNodes").children;
this._balanceLbl = this._panel.getChildByName("balanceLabel").getComponent(cc.Label);
this._redBagInfo = s.utils.yzRedBagInfo;
var e = 1;
e = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .5 : cc.winSize.width / 1080;
this._panel.scale = e;
this._initWidget();
};
t.prototype._initWidget = function() {
var e = this;
this._redBagInfo.balance > 0 && (this._balanceLbl.string = this._redBagInfo.balance + "元");
for (var t = function(t) {
var o = s.utils.yzRedBagInfo.withdrawaMoneys[t];
if (o) {
i._moneyItemNodes[t].getChildByName("PriceLbl").getComponent(cc.Label).string = o + "元";
i._moneyItemNodes[t].on(cc.Node.EventType.TOUCH_START, function() {
e.selectedMoneyNode(t);
}, i);
}
}, i = this, o = 0; o < 4; o++) t(o);
};
t.prototype.selectedMoneyNode = function(e) {
var t = this;
if (this._redBagInfo.balance >= s.utils.yzRedBagInfo.withdrawaMoneys[e]) {
this._selectedMoneyItemIndex = e;
this._moneyItemNodes.forEach(function(i, o) {
e != o && (t._moneyItemNodes[o].getChildByName("selectedBg").active = !1);
});
this._moneyItemNodes[e].getChildByName("selectedBg").active = !0;
} else s.utils.showMsg("当前余额不足！");
};
t.prototype.withDrawalMoney = function() {
console.log("money");
this._selectedMoneyItemIndex > -1 || s.utils.showMsg("请选择要提现的金额！");
};
t.prototype._updatePanel = function() {
s.utils.postRecommentShowData(this._location);
this._initWidget();
};
t.prototype.init = function(e) {};
t.prototype.show = function() {
this.node.active = !0;
};
t.prototype.hide = function() {
this.node.active = !1;
};
t.prototype.onCloseBtnHandler = function(e, t) {
this.hide();
};
return t = n([ l ], t);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
WithdrawalWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eb1bdqkx91OqbOB6rlUrN5w", "WithdrawalWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = a.property, c = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.withdrawalPanel = null;
t._withdrawalNode = null;
t._isInit = !1;
return t;
}
t.prototype.onLoad = function() {
this._withdrawalNode = this.getComponentInChildren("WithdrawalNode");
this._withdrawalNode.node.active = !1;
};
t.prototype.onEnable = function() {
var e = this;
s.utils.registerServerInitEvent(function() {
e._initWidget();
}, this);
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
};
t.prototype._initWidget = function() {
this._withdrawalNode.node.active = !0;
};
n([ l(cc.Prefab) ], t.prototype, "withdrawalPanel", void 0);
return t = n([ r ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
YZ_ActionScale: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8ecccKnp/lLRYK/tCxltDQL", "YZ_ActionScale");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, r = (s.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRunAction = !0;
return t;
}
t.prototype.onLoad = function() {
this.isRunAction && this.node.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, 1), cc.scaleTo(1, .5))));
};
return t = n([ a ], t);
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {} ],
YZ_BaiduRecommendWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "898daN/0uRPRqRybYS4LfhK", "YZ_BaiduRecommendWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./PlatUtils"), a = e("./Utils"), r = e("./CompatibleTool"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._widget = null;
return t;
}
t.prototype.onLoad = function() {
this._widget = this.getComponent(cc.Widget);
};
t.prototype.onEnable = function() {
this.getComponent(cc.Sprite).enabled = !1;
if (s.default.IsBaidu && (s.default.IsBaidu && a.utils.Tool_Baidu && a.utils.Tool_Baidu.canShowRecommendButton())) s.default.IsBaidu && a.utils.Tool_Baidu && a.utils.Tool_Baidu.canShowRecommendButton() && (this._widget ? a.utils.Tool_Baidu.showRecommendationButton(r.default.position(this._widget.left, this._widget.top)) : a.utils.showLog("baidu recommend button widget component is null")); else {
a.utils.showLog("不支持交叉推广组件!");
this.node.destroy();
}
};
t.prototype.onDisable = function() {
s.default.IsBaidu && a.utils.Tool_Baidu && a.utils.Tool_Baidu.canShowRecommendButton();
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
YZ_Constant: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ca28dw/QkVP9IpkNRINo1+D", "YZ_Constant");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.BannerLocationToEnum = i.BannerLocationToString = i.AttributedValue = i.AttributedKey = i.AttributedType = i.AldEventType = i.AldStageType = i.ViewLocation = i.BannerLocation = i.VibrateType = i.SubLocation = i.LevelStatus = i.YZ_Reward = i.RewardType = i.BeForGameOverAdId = void 0;
var n, s = cc._decorator, a = s.ccclass;
s.property;
(function(e) {
e.None = "none";
e.SharePanel = "share_panel";
e.GoldBox = "gold_box";
e.Turntable = "turntable";
e.CreateShortCut = "create_short_cut";
e.RecGame = "rec_game";
e.LuckBox = "luck_box";
e.SyncShow = "sync_show";
e.CustomAd = "custom_ad";
})(i.BeForGameOverAdId || (i.BeForGameOverAdId = {}));
(function(e) {
e.Gold = "gold";
e.Skin = "Skin";
})(n = i.RewardType || (i.RewardType = {}));
var r, l = function() {
function e() {
this.rewardType = n.Gold;
this.rewardValue = 0;
}
return e = o([ a("YZ_Reward") ], e);
}();
i.YZ_Reward = l;
(function(e) {
e.GameStart = "start";
e.GameWin = "complete";
e.GameFail = "fail";
e.GameSkip = "skip";
})(i.LevelStatus || (i.LevelStatus = {}));
(function(e) {
e.isReward = "isReward";
e.isQCross = "isQCross";
e.isMoreGame = "isMoreGame";
e.isStatement = "isStatement";
e.isTryGame = "isTryGame";
e.isYzBanner = "isYzBanner";
e.isScrollbar = "isScrollbar";
e.isGameExitDialog = "isGameExitDialog";
e.isBoxInsertAd = "isBoxInsertAd";
e.isBeforGameOverAd = "isBeforGameOverAd";
e.isVerticalPanel = "isVerticalPanel";
})(i.SubLocation || (i.SubLocation = {}));
(function(e) {
e.Short = "short";
e.Long = "long";
})(i.VibrateType || (i.VibrateType = {}));
(function(e) {
e[e.None = 0] = "None";
e[e.Home = 1] = "Home";
e[e.Level = 2] = "Level";
e[e.Skin = 3] = "Skin";
e[e.Game = 4] = "Game";
e[e.Pause = 5] = "Pause";
e[e.Over = 6] = "Over";
})(r = i.BannerLocation || (i.BannerLocation = {}));
(function(e) {
e[e.None = 0] = "None";
e[e.sign = 1] = "sign";
e[e.trySkin = 2] = "trySkin";
e[e.box = 3] = "box";
e[e.over = 4] = "over";
e[e.failBox = 5] = "failBox";
e[e.successBox = 6] = "successBox";
e[e.winPanel = 7] = "winPanel";
e[e.turntable = 8] = "turntable";
})(i.ViewLocation || (i.ViewLocation = {}));
(function(e) {
e.Start = "StartGame";
e.Running = "Running";
e.GameWin = "GameWin";
e.GameFail = "GameFail";
})(i.AldStageType || (i.AldStageType = {}));
(function(e) {
e.TrailSkinClick = "皮肤试用点击";
e.TrailSkinSuccess = "皮肤试用成功";
e.TrailSkinFail = "皮肤试用失败";
e.SkipLevelClick = "点击跳过关卡";
e.SkipLevelSuccess = "跳过关卡成功";
e.SkipLevelFail = "跳过关卡失败";
e.GameOverDoubleGoldClick = "点击游戏结束双倍获取金币";
e.GameOverDoubleGoldSuccess = "游戏结束双倍获取金币成功";
e.GameOverDoubleGoldFail = "游戏结束双倍获取金币失败";
e.SignDoubleGoldClick = "点击签到双倍领取";
e.SignDoubleGoldSuccess = "签到双倍领取成功";
e.SignDoubleGoldFail = "签到双倍领取失败";
e.GameOverDoubleStarClick = "点击游戏结束晋级三星";
e.GameOverDoubleStarSuccess = "游戏结束晋级三星成功";
e.GameOverDoubleStarFail = "游戏结束晋级三星失败";
e.GameVersion = "游戏版本";
e.LoadSkinScene = "进入皮肤场景";
e.PaySkin = "购买皮肤成功";
})(i.AldEventType || (i.AldEventType = {}));
(function(e) {
e[e.Active = 0] = "Active";
e[e.GameAddiction = 25] = "GameAddiction";
})(i.AttributedType || (i.AttributedType = {}));
(function(e) {
e.Active = "active";
e.GameAddiction = "game_addiction";
})(i.AttributedKey || (i.AttributedKey = {}));
(function(e) {
e.Active = "active";
e.UserClickInsertAdAction = "user_click_insert_ad_action";
e.PlayLevelCountAction = "play_level_count_action";
e.PassLevelCountAction = "pass_level_count_action";
e.InsertAdFirstShowAction = "insert_ad_first_show_action";
e.GameTimeAction = "game_time_action";
})(i.AttributedValue || (i.AttributedValue = {}));
i.BannerLocationToString = function(e) {
return [ "none", "home", "level", "skin", "game", "pause", "over" ][e];
};
i.BannerLocationToEnum = function(e) {
for (var t = [ "none", "home", "level", "skin", "game", "pause", "over" ], i = 0; i < t.length; i++) if (t[i] == e) return i;
return r.None;
};
var c = function() {
function e() {}
e.SERVER_VERSION = "v1";
e.ST_UID = "UID";
e.ST_SERVICE_UID = "SERVICE_UID";
e.ST_SOURCE = "SOURCE";
e.ST_RED_BAG_PROGRESS = "YZ_RED_BAG_PROGRESS";
e.ST_RED_BAG_TOTAL_PROGRESS = "YZ_RED_BAG_TOTAL_PROGRESS";
e.ST_RED_BAG_BALANCE = "YZ_RED_BAG_BALANCE";
e.ST_RED_BAG_TOTAL_MONEY = "YZ_RED_BAG_TOTAL_MONEY";
e.ST_FREE_RED_BAG_TIME = "YZ_ST_FREE_RED_BAG_TIME";
e.ST_LAST_OPEN_LEVEL = "YZ_ST_LAST_OPEN_LEVEL";
e.ST_GET_BOX_REWARD_COUNT = "YZ_GET_BOX_REWARD_COUNT";
e.YZ_EventCommon = "YZ_EventCommon";
e.YZ_PrivacyClose = "YZ_PrivacyClose";
e.EC_ServerInit = "ServerInit";
e.EC_RealNameAuthPanelClose = "RealNameAuthPanelClose";
e.EC_ServerDataLoadSuccess = "ServerDataLoadSuccess";
e.YZ_NativeAdClick = "YZ_NativeAdClick";
e.EC_OnHide = "EventOnHide";
e.EC_OnShow = "EventOnShow";
e.YZ_GAME_YSXY = "YZ_GAME_YSXY";
e.ST_IS_REPORT_USER_ACTIVE = "ST_IS_REPORT_USER_ACTIVE";
e.ST_IS_REPORT_GAME_ADDICTION = "ST_IS_REPORT_GAME_ADDICTION";
e.ST_LUANCH_TYPE = "ST_LUANCH_TYPE";
e.ST_LUANCH_DATA = "ST_LUANCH_DATA";
e.ST_LOGIN_SUCCESS = "ST_LOGIN_SUCCESS";
e.ST_LOGIN_FAIL = "ST_LOGIN_FAIL";
e.ST_DEVICE_ID = "ST_DEVICE_ID";
e.ST_UUID = "ST_UUID";
e.ST_YOUWAN_UID = "ST_YOUWAN_UID";
e.ST_GET_DEVICE_ID = "ST_GET_DEVICE_ID";
return e = o([ a ], e);
}();
i.default = c;
cc._RF.pop();
}, {} ],
YZ_EventManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "39336BNY/5OsrydQVP6dfn3", "YZ_EventManager");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./YZ_Constant"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.registerEvent = function(e, t, i) {
cc.game.on(e, t, i);
};
t.unregisterEvent = function(e) {
cc.game.targetOff(e);
};
t.emitCommonEvent = function(e) {
cc.game.emit(s.default.YZ_EventCommon, e);
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./YZ_Constant": "YZ_Constant"
} ],
YZ_GameExitDialog: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7baa9fWodJKboupAtfBvLnG", "YZ_GameExitDialog");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = cc._decorator, l = r.ccclass, c = (r.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._jumpList = null;
t._items = [];
t._pageView = null;
t._pageItem = null;
t._pageRecItem = null;
t._btnCanel = null;
t._btnOk = null;
t._panel = null;
t.nativeData = null;
t._nativeIsShow = !1;
return t;
}
t.prototype.onLoad = function() {
this._panel = this.node.getChildByName("Panel");
this._pageView = this._panel.getChildByName("PageView").getComponent(cc.PageView);
this._pageItem = this._pageView.content.getChildByName("Panel");
this._pageRecItem = this._pageItem.children[0];
this._pageView.content.removeAllChildren();
this._btnCanel = this._panel.getChildByName("btnCancel");
this._btnOk = this._panel.getChildByName("btnOk");
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
var e = 1;
e = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .7 : cc.winSize.width / 1080;
this._panel.scale = e;
};
t.prototype.start = function() {
this._jumpList = s.utils.getRecommondGameList();
this._jumpList && this._jumpList.length > 0 && this._initWidget();
};
t.prototype.hideLastNode = function() {
for (var e = 5; e > 2; e--) this._items[e].node.active = !1;
};
t.prototype.onBtnCanelHandler = function(e, t) {
s.utils.showLog("点击取消按钮！");
this.node.destroy();
};
t.prototype.onBtnOkHandler = function(e, t) {
s.utils.showLog("点击确定按钮！");
s.utils.Tool_Native.GameExit();
};
t.prototype._initWidget = function() {
s.utils.postRecommentShowData(a.SubLocation.isGameExitDialog);
var e = Math.floor(this._jumpList.length / 6);
s.utils.showLog("qcrosswidget >>> totalPage = " + e);
for (var t = 0, i = 0; i < e; i++) {
var o = cc.instantiate(this._pageItem);
o.removeAllChildren();
this._pageView.addPage(o);
for (var n = 0; n < 6 && this._jumpList[t]; n++) {
var r = cc.instantiate(this._pageRecItem);
o.addChild(r);
r.getComponent("QCrossWidgetItem")._location = a.SubLocation.isStatement;
var l = this._jumpList[t];
r.getComponent("QCrossWidgetItem").init(l);
t++;
}
}
this.autoRefrshPageView();
};
t.prototype.autoRefrshPageView = function() {
var e = this;
this.unscheduleAllCallbacks();
var t = 3;
s.utils.ServerConfig && s.utils.ServerConfig.statement_auto_refresh && (t = s.utils.ServerConfig.statement_auto_refresh);
s.utils.showLog("退出弹窗组件" + t + "秒自动刷新");
this.schedule(function() {
var t = e._pageView.getPages().length, i = e._pageView.getCurrentPageIndex();
0 == (i = i < t && i + 1 !== t ? i + 1 : 0) ? e._pageView.scrollToPage(i, 0) : e._pageView.scrollToPage(i, 2);
}, t);
};
return t = n([ l ], t);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
YZ_ListView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ab5e3FTZ+ZMjIuRaK60SQz/", "YZ_ListView");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./YZ_Constant"), a = e("./CompatibleTool"), r = cc._decorator, l = r.ccclass, c = (r.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._scrollView = null;
t._content = null;
t._itemObj = null;
t._visibleCount = 5;
t._totalCount = 0;
t._itemSize = cc.size(0, 0);
t._spaceX = 0;
t._bannerSize = cc.size(0, 0);
t._itemArray = [];
t._curOffsetX = 0;
t._minOffsetX = 0;
t._maxOffsetX = 0;
t._startIndex = 0;
t._scrollDir = 0;
t._recommendData = null;
t._dataDirty = !1;
t._isInit = !1;
t._isScorllBar = !1;
t._location = null;
t._itemPosX = 0;
t._itemtmp = null;
t._itemToCenterLength = 0;
t._percent = 1;
t._canAutoScroll = !0;
t._autoScrollInterval = 2.5;
t._timeTmp = 0;
return t;
}
t.prototype.onLoad = function() {
this._scrollView = this.getComponent(cc.ScrollView);
this._content = this._scrollView.content;
this._itemObj = cc.find("GamePage", this._content);
this._itemSize = this._itemObj.getContentSize();
this._startIndex = 0;
this._bannerSize = this.node.getContentSize();
};
t.prototype.onEnable = function() {
this._scrollView.node.on("scrolling", this.OnScroll, this);
this._scrollView.node.on("scroll-ended", this.onScrollEnded, this);
};
t.prototype.onDisable = function() {
this._scrollView.node.targetOff(this);
};
t.prototype.update = function(e) {
if (this._isInit) {
if (this._scrollView && this._scrollView.isScrolling) for (var t = 0; t < this._itemArray.length; t++) {
this._itemtmp = this._itemArray[t];
this._itemToCenterLength = Math.abs(this._itemtmp.x + this._content.x - .5 * this._bannerSize.width);
this._itemSize.width - this._itemToCenterLength > 0 ? this._percent = (this._itemSize.width - this._itemToCenterLength) / this._itemSize.width : this._isScorllBar || (this._itemtmp.scale = 1);
}
this.autoScroll(e);
}
if (this._dataDirty) {
this._dataDirty = !1;
this._updateContent();
}
};
t.prototype.init = function(e, t) {
void 0 === t && (t = !1);
if (e) {
this._recommendData = e;
this._totalCount = e.length;
this._dataDirty = !0;
this._isScorllBar = t;
if (this._isScorllBar) {
this._location = s.SubLocation.isScrollbar;
this._autoScrollInterval = .3;
} else this._location = s.SubLocation.isYzBanner;
}
};
t.prototype._updateContent = function() {
var e = this._recommendData.length;
this._content.setContentSize(cc.size(this._itemSize.width * e, this._itemSize.height));
this.InitObjs();
};
t.prototype.InitObjs = function() {
for (var e = null, t = 0; t < this._totalCount; t++) {
(e = cc.instantiate(this._itemObj)).x = .5 * this._spaceX + .5 * this._itemSize.width + this._itemSize.width * t + this._spaceX * t;
e.y = 0;
e.getComponentInChildren("GameItem").init(this._recommendData[t], this._location);
this._content.addChild(e);
this._itemArray.push(e);
}
var i = this._totalCount - this._visibleCount;
this._maxOffsetX = (this._spaceX + this._itemSize.width) * i * -1;
this._itemObj.destroy();
this._isInit = !0;
};
t.prototype.OnScroll = function(e, t, i) {
this._content.stopAllActions();
this._canAutoScroll = !1;
this._scrollView.getScrollOffset().x < this._curOffsetX ? this._scrollDir = -1 : this._scrollDir = 1;
this._curOffsetX = this._scrollView.getScrollOffset().x;
0 == this._scrollView.getScrollOffset().x ? this._arriveLeft() : this._scrollView.getScrollOffset().x == this._maxOffsetX && this._arriveRight();
};
t.prototype.onScrollEnded = function(e, t, i) {
var o = 0;
o = Math.abs(this._curOffsetX) % (this._itemSize.width + this._spaceX) > .5 * (this._itemSize.width + this._spaceX) ? Math.ceil(Math.abs(this._curOffsetX) / (this._itemSize.width + this._spaceX)) : Math.floor(Math.abs(this._curOffsetX) / (this._itemSize.width + this._spaceX));
var n = (this._itemSize.width + this._spaceX) * o * -1;
this._curOffsetX = n;
this.scroll(n, .3);
};
t.prototype._arriveLeft = function() {
this._scrollView.setContentPosition(a.default.position(this._maxOffsetX, 0));
this._curOffsetX = this._maxOffsetX;
this._startIndex = (this._visibleCount + this._startIndex) % this._totalCount;
this.refreshItem();
};
t.prototype._arriveRight = function() {
this._scrollView.setContentPosition(a.default.position(0, 0));
this._curOffsetX = 0;
this._startIndex = (this._startIndex + this._totalCount - this._visibleCount) % this._totalCount;
this.refreshItem();
};
t.prototype.refreshItem = function() {
for (var e = 0, t = 0; t < this._totalCount; t++) {
e = (this._totalCount - this._startIndex + t) % this._totalCount;
this._itemArray[t].x = .5 * this._spaceX + .5 * this._itemSize.width + this._spaceX * e + this._itemSize.width * e;
}
};
t.prototype.autoScroll = function(e) {
if (this._canAutoScroll) {
this._timeTmp += e;
if (this._timeTmp >= this._autoScrollInterval) {
this._timeTmp = 0;
var t = this._curOffsetX - this._itemSize.width - this._spaceX;
this._curOffsetX = t;
this._scrollDir = -1;
this._isScorllBar ? this.scroll(t, 0) : this.scroll(t, .5);
}
} else this._timeTmp = 0;
};
t.prototype.scroll = function(e, t) {
var i = this;
this._content.runAction(cc.sequence(cc.moveTo(t, a.default.position(e, 0)), cc.callFunc(function() {
i._canAutoScroll = !0;
1 == i._scrollDir && 0 == i._curOffsetX ? i._arriveLeft() : -1 == i._scrollDir && i._curOffsetX == i._maxOffsetX && i._arriveRight();
})));
};
return t = n([ l ], t);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./YZ_Constant": "YZ_Constant"
} ],
YZ_LocalStorage: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "78cbbcjXnpBU6Z8VJIEcJdY", "YZ_LocalStorage");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, s = n.ccclass, a = (n.property, function() {
function e() {}
e.getItem = function(e, t) {
var i = cc.sys.localStorage.getItem(e);
return i || (t || null);
};
e.setItem = function(e, t) {
cc.sys.localStorage.setItem(e, t);
};
e.clearItems = function() {
cc.sys.localStorage.clear();
};
return e = o([ s ], e);
}());
i.default = a;
cc._RF.pop();
}, {} ],
YZ_NativeAdObject: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "88f79Gj1WdPsIy+Pm6Ss9ar", "YZ_NativeAdObject");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./PlatUtils"), s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, 
function() {
function e() {
this._nativeObj = null;
this._nativeAdData = null;
this.is_reportClick = !1;
this.is_reportShow = !1;
}
Object.defineProperty(e.prototype, "data", {
get: function() {
return this._nativeAdData;
},
set: function(e) {
this._nativeAdData = e;
},
enumerable: !1,
configurable: !0
});
e.prototype.reportAdShow = function() {
if (this._nativeAdData && !this.is_reportShow) {
this.is_reportShow = !0;
s.utils.showLog("上报原生广告展示! adId:", this._nativeAdData.adId);
this._nativeObj && this._nativeObj.reportAdShow({
adId: this._nativeAdData.adId
});
}
};
e.prototype.reportAdClick = function(e) {
void 0 === e && (e = 2);
this.is_reportClick = !0;
if (this._nativeAdData) {
s.utils.showLog("上报原生广告点击! adId:", this._nativeAdData.adId);
if (this._nativeObj) {
this._nativeObj.reportAdClick({
adId: this._nativeAdData.adId
});
2 == e && (n.default.IsOPPO ? s.utils.oppoTool.countNativeInserClick() : n.default.IsVIVO && s.utils.Tool_Vivo.countNativeInserClick());
}
}
};
return e = o([ r ], e);
}());
i.default = l;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
YZ_NativeBanner: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a2a680a5EJDfKlZKlM8P3Vv", "YZ_NativeBanner");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./PlatUtils"), a = e("./Utils"), r = e("./YZ_Constant"), l = e("./CompatibleTool"), c = e("./YouWanSDK/EventAdInfo"), u = e("./YouWanSDK/YouWanAnalytics"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._icon = null;
t._hW_icon = null;
t._sourceLable = null;
t._titleLabel = null;
t._desLabel = null;
t._btnLabel = null;
t._widget = null;
t._closeBtn = null;
t._nativeAd = null;
t._data = null;
t._dataDirty = !1;
t._panel_widget = null;
t._closeBtn_widget = null;
t._mask_widget = null;
t._st_Panel = null;
t._st_Icon = null;
t._st_TitleLabel = null;
t._st_DesLabel = null;
t._st_BtnLabel = null;
t._st_Widget = null;
t._st_Img = null;
t._st_CloseBtn = null;
t._st_BtnDown = null;
t._st_adMask = null;
t._st_down_btn_default_img = null;
t.nativeBannerInfo = null;
t._st_TitleLabel_Widget = null;
t._st_DesLabel_Widget = null;
t._st_Img_Widget = null;
t._st_CloseBtn_Widget = null;
t._st_BtnDown_Widget = null;
t._st_adMask_Widget = null;
t._st_Icon_widget = null;
t._bg_mask = null;
t._alignType = "";
t._xmMask = null;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return a.utils.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
a.utils.otherConfig && a.utils.otherConfig.group && (this.node.group = a.utils.otherConfig.group);
cc.game.addPersistRootNode(this.node);
this._panel = this.node.getChildByName("Panel");
this._icon = this._panel.getChildByName("Icon").getComponent(cc.Sprite);
this._hW_icon = this._panel.getChildByName("HuaweiIcon").getComponent(cc.Sprite);
this._titleLabel = this._panel.getChildByName("TitleLabel").getComponent(cc.Label);
this._desLabel = this._panel.getChildByName("DesLabel").getComponent(cc.Label);
this._sourceLable = this._panel.getChildByName("source").getComponent(cc.Label);
var e = this._panel.getChildByName("Btn_Download");
this._btnLabel = e.getComponentInChildren(cc.Label);
this._widget = this.getComponent(cc.Widget);
this._panel_widget = this._panel.getComponent(cc.Widget);
this._closeBtn = this._panel.getChildByName("Btn_Close");
this._closeBtn_widget = this._closeBtn.getComponent(cc.Widget);
this._mask_widget = this._panel.getChildByName("Mask").getComponent(cc.Widget);
this._widget.left = 0;
this._widget.right = 0;
this._widget.bottom = 0;
this._st_Panel = this.node.getChildByName("Panel_Statement");
this._st_Widget = this._st_Panel.getComponent(cc.Widget);
this._bg_mask = this.node.getChildByName("bgMask");
this._st_Icon = this._st_Panel.getChildByName("IconMask").getChildByName("Icon").getComponent(cc.Sprite);
this._st_TitleLabel = this._st_Panel.getChildByName("TitleLabel").getComponent(cc.Label);
this._st_DesLabel = this._st_Panel.getChildByName("DesLabel").getComponent(cc.Label);
this._st_BtnDown = this._st_Panel.getChildByName("Btn_Download");
this._st_Img = this._st_Panel.getChildByName("adImage").getComponent(cc.Sprite);
this._st_CloseBtn = this._st_Panel.getChildByName("Btn_Close");
this._st_adMask = this._st_Panel.getChildByName("Mask");
this._st_down_btn_default_img = this._st_BtnDown.getComponent(cc.Sprite).spriteFrame;
this._st_TitleLabel_Widget = this._st_TitleLabel.getComponent(cc.Widget);
this._st_DesLabel_Widget = this._st_DesLabel.getComponent(cc.Widget);
this._st_Img_Widget = this._st_Img.getComponent(cc.Widget);
this._st_CloseBtn_Widget = this._st_CloseBtn.getComponent(cc.Widget);
this._st_BtnDown_Widget = this._st_BtnDown.getComponent(cc.Widget);
this._st_adMask_Widget = this._st_adMask.getComponent(cc.Widget);
this._st_Icon_widget = this._st_Panel.getChildByName("IconMask").getComponent(cc.Widget);
if (s.default.IsXiaoMi) {
this._panel.getChildByName("Xm_Mark").active = !0;
this._mask_widget.node.active = !1;
}
var t = 1;
if (cc.winSize.height < cc.winSize.width) {
this._widget.left = .25 * cc.winSize.width;
this._widget.right = .25 * cc.winSize.width;
this._titleLabel.node.width = 400;
t = cc.winSize.width / 1920;
} else t = cc.winSize.width / 1080;
this.node.scale = t;
};
t.prototype.onShow = function() {
cc.game.emit("HuaWeiOnShow");
};
t.prototype.onEnable = function() {
var e = this;
this._st_Panel.targetOff(this);
this._panel.targetOff(this);
cc.game.targetOff(this);
if (s.default.IsHuaWei) {
console.log("注册监听事件 >>>>>.");
cc.game.on(cc.game.EVENT_SHOW, function() {
console.log("HuaWeiOnShow >>>>>>");
e._reportAdShow();
}, this);
}
if (s.default.IsOPPO || s.default.IsVIVO || s.default.IsHuaWei || s.default.IsXiaoMi) {
this._st_Panel.on(cc.Node.EventType.TOUCH_START, function(t) {
e._reportAdClick();
}, this);
this._panel.on(cc.Node.EventType.TOUCH_START, function(t) {
e._reportAdClick();
}, this);
cc.game.on(r.default.YZ_NativeAdClick, function() {
e._reportAdClick();
}, this);
}
};
t.prototype.onDisable = function() {
if (s.default.IsOPPO || s.default.IsVIVO || s.default.IsHuaWei || s.default.IsXiaoMi) {
this._st_Panel.targetOff(this);
this._panel.targetOff(this);
}
cc.game.targetOff(this);
};
t.prototype.init = function(e, t, i) {
this._nativeAd = e;
this._data = t;
this._dataDirty = !0;
this.nativeBannerInfo = i;
if ("true" == this.nativeBannerInfo.show_st_banner) if (this.nativeBannerInfo.st_banner_style > -1) if (this._data.imgUrlList && this._data.imgUrlList.length > 0) {
this._panel.active = !1;
this._st_Panel.active = !0;
} else {
this._panel.active = !1;
this._st_Panel.active = !1;
} else {
this._panel.active = !1;
this._st_Panel.active = !0;
} else {
this._panel.active = !0;
this._st_Panel.active = !1;
}
};
t.prototype.update = function(e) {
if (this._data && this._dataDirty) {
this._dataDirty = !1;
this._updateContent();
}
if (!this._data) {
this._st_Panel.active = !1;
this._panel.active = !1;
}
};
t.prototype._updateContent = function() {
var e = this;
if (this._data) {
this._reportAdShow();
s.default.IsHuaWei && (this._data.icon = "");
a.utils.nativeBannerShowCount++;
if ("true" == this.nativeBannerInfo.show_st_banner && this.nativeBannerInfo.st_banner_style > -1) {
if (1 == this.nativeBannerInfo.st_banner_style || 2 == this.nativeBannerInfo.st_banner_style) {
this.nativeBannerInfo.st_banner_width > -1 ? this._st_Panel.width = this.nativeBannerInfo.st_banner_width : this._st_Panel.width = 821.4;
this.nativeBannerInfo.st_banner_height > -1 ? this._st_Panel.height = this.nativeBannerInfo.st_banner_height : this._st_Panel.height = 589;
this._st_Widget.updateAlignment();
this._st_adMask_Widget.updateAlignment();
this._st_CloseBtn_Widget.updateAlignment();
this._st_BtnDown_Widget.updateAlignment();
this._st_Icon_widget.updateAlignment();
} else {
this._st_Panel.width = 821.4;
this._st_Panel.height = 589;
this._st_Widget.updateAlignment();
this._st_adMask_Widget.updateAlignment();
this._st_CloseBtn_Widget.updateAlignment();
this._st_BtnDown_Widget.updateAlignment();
this._st_Icon_widget.updateAlignment();
}
if (0 == this.nativeBannerInfo.st_banner_style || 1 == this.nativeBannerInfo.st_banner_style) {
a.utils.showLog("//单图片样式，拉伸图片，并且隐藏标题和描述");
this._st_Img_Widget.top = 0;
this._st_Img_Widget.bottom = 0;
this._st_Img_Widget.isAlignTop = !0;
this._st_Img_Widget.isAlignBottom = !0;
this._st_Img_Widget.updateAlignment();
this._st_DesLabel.node.active = !1;
this._st_TitleLabel.node.active = !1;
this._st_Icon_widget.updateAlignment();
} else if (2 == this.nativeBannerInfo.st_banner_style) {
a.utils.showLog("默认样式自定义宽高:展示标题和描述");
this._st_DesLabel.node.active = !0;
this._st_TitleLabel.node.active = !0;
this._st_DesLabel_Widget.updateAlignment();
this._st_TitleLabel_Widget.updateAlignment();
this._st_Img_Widget.isAlignTop = !0;
this._st_Img_Widget.isAlignBottom = !0;
this._st_Img_Widget.top = this._st_TitleLabel.node.height + this._st_TitleLabel_Widget.top;
this._st_Img_Widget.bottom = this._st_DesLabel_Widget.node.height + this._st_DesLabel_Widget.bottom;
this._st_Img_Widget.updateAlignment();
this._st_Icon_widget.updateAlignment();
} else {
this._st_Img_Widget.isAlignTop = !0;
this._st_Img_Widget.isAlignBottom = !0;
this._st_Img_Widget.updateAlignment();
this._st_DesLabel.node.active = !0;
this._st_TitleLabel.node.active = !0;
this._st_Icon_widget.updateAlignment();
}
} else if ("true" == this.nativeBannerInfo.show_st_banner) {
a.utils.showLog("结算banner使用默认样式！");
this._st_Panel.width = 821.4;
this._st_Panel.height = 589;
this._st_Img_Widget.isAlignTop = !1;
this._st_Img_Widget.isAlignBottom = !1;
this._st_Img_Widget.updateAlignment();
this._st_DesLabel.node.active = !0;
this._st_TitleLabel.node.active = !0;
this._st_Widget.updateAlignment();
this._st_adMask_Widget.updateAlignment();
this._st_CloseBtn_Widget.updateAlignment();
this._st_BtnDown_Widget.updateAlignment();
this._st_Icon_widget.updateAlignment();
}
this._st_CloseBtn.scale = this.nativeBannerInfo.st_banner_scale < 1 ? this._st_CloseBtn.scale * this.nativeBannerInfo.st_banner_scale : 1;
this._st_adMask.scale = this.nativeBannerInfo.st_banner_scale < 1 ? this._st_adMask.scale * this.nativeBannerInfo.st_banner_scale : 1;
this._st_CloseBtn.active = "true" == this.nativeBannerInfo.st_banner_close_but_show;
this._st_CloseBtn.opacity = this.nativeBannerInfo.st_banner_close_but_alpha;
if (this.ServerConfig.first_native_banner_delayed_count_close) {
if (a.utils.nativeBannerShowCount > 3 && this.ServerConfig.first_native_banner_delayed_count_close) {
a.utils.nativeBannerResizeCloseBtnShowCount++;
if (a.utils.nativeBannerResizeCloseBtnShowCount % this.ServerConfig.native_banner_delayed_count_close == 0) {
a.utils.showLog("原生banner关闭按钮设置服务器配置大小" + this.ServerConfig.intersititia_close_but_size);
if (this.nativeBannerInfo.st_banner_close_but_range) {
this._st_CloseBtn.setContentSize(cc.size(this.nativeBannerInfo.st_banner_close_but_range, this.nativeBannerInfo.st_banner_close_but_range));
this._st_CloseBtn.getChildByName("Background").setContentSize(cc.size(this.nativeBannerInfo.st_banner_close_but_size, this.nativeBannerInfo.st_banner_close_but_size));
}
}
}
} else if (this.nativeBannerInfo.st_banner_close_but_range) {
this._st_CloseBtn.setContentSize(cc.size(this.nativeBannerInfo.st_banner_close_but_range, this.nativeBannerInfo.st_banner_close_but_range));
this._st_CloseBtn.getChildByName("Background").setContentSize(cc.size(this.nativeBannerInfo.st_banner_close_but_size, this.nativeBannerInfo.st_banner_close_but_size));
}
if (this.nativeBannerInfo.st_banner_down_but_show) {
this._st_BtnDown.active = !0;
if (this.nativeBannerInfo.st_banner_down_btn_image) {
a.utils.showLog("this.nativeBannerInfo.st_banner_down_btn_image", this.nativeBannerInfo.st_banner_down_btn_image);
l.default.LoadRes(this.nativeBannerInfo.st_banner_down_btn_image, function(t, i) {
if (!t && cc.isValid(e) && e._st_BtnDown) {
e._st_BtnDown.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(i);
if (e.nativeBannerInfo.st_banner_down_but_margin_top) {
e._st_BtnDown_Widget.top = -(e._st_BtnDown.getContentSize().height + e.nativeBannerInfo.st_banner_down_but_margin_top);
e._st_BtnDown_Widget.updateAlignment();
} else {
e._st_BtnDown_Widget.top = -e._st_BtnDown.getContentSize().height;
e._st_BtnDown_Widget.updateAlignment();
}
}
});
} else {
this._st_BtnDown.getComponent(cc.Sprite).spriteFrame = this._st_down_btn_default_img;
if (this.nativeBannerInfo.st_banner_down_but_margin_top) {
this._st_BtnDown_Widget.top -= this.nativeBannerInfo.st_banner_down_but_margin_top;
this._st_BtnDown_Widget.updateAlignment();
}
}
2 == this.nativeBannerInfo.st_banner_down_but_show ? this._st_BtnDown.runAction(cc.sequence(cc.scaleTo(.3, 1.2), cc.scaleTo(.3, 1)).repeatForever()) : this._st_BtnDown.stopAllActions();
this._st_BtnDown.scale = this.node.scale;
} else {
this._st_BtnDown.active = !1;
this._st_BtnDown.stopAllActions();
}
this._closeBtn.active = "true" == this.nativeBannerInfo.banner_close_but_show;
this._closeBtn.opacity = this.nativeBannerInfo.banner_close_but_alpha;
if (this.ServerConfig.first_native_banner_delayed_count_close) {
if (a.utils.nativeBannerShowCount > 3 && this.ServerConfig.first_native_banner_delayed_count_close && a.utils.nativeBannerResizeCloseBtnShowCount % this.ServerConfig.native_banner_delayed_count_close == 0) {
a.utils.showLog("原生banner关闭按钮设置服务器配置大小" + this.ServerConfig.intersititia_close_but_size);
this._closeBtn.setContentSize(cc.size(this.nativeBannerInfo.banner_close_but_range, this.nativeBannerInfo.banner_close_but_range));
this._closeBtn.getChildByName("Background").setContentSize(cc.size(this.nativeBannerInfo.banner_close_but_size, this.nativeBannerInfo.banner_close_but_size));
}
} else {
this._closeBtn.setContentSize(cc.size(this.nativeBannerInfo.banner_close_but_range, this.nativeBannerInfo.banner_close_but_range));
this._closeBtn.getChildByName("Background").setContentSize(cc.size(this.nativeBannerInfo.banner_close_but_size, this.nativeBannerInfo.banner_close_but_size));
}
if ("false" == this.nativeBannerInfo.show_st_banner) {
this._panel_widget.isAlignTop = !1;
this._panel_widget.bottom = 0;
this._panel.setContentSize(cc.size(this.node.getContentSize().width, this.nativeBannerInfo.banner_show_height < 160 ? 160 : this.nativeBannerInfo.banner_show_height));
this._panel_widget.updateAlignment();
this._closeBtn_widget.updateAlignment();
this._mask_widget.updateAlignment();
} else {
this._st_Panel.scale = this.nativeBannerInfo.st_banner_scale ? this.nativeBannerInfo.st_banner_scale : 1;
this._st_Widget.bottom = this.nativeBannerInfo.st_banner_bottom ? this.nativeBannerInfo.st_banner_bottom : 0;
this._st_Widget.updateAlignment();
}
if ("top" === this.nativeBannerInfo._alignType) {
if ("true" == this.nativeBannerInfo.show_st_banner) {
this.node.height = this._st_Panel.height;
this.node.width = this._st_Panel.width;
this._st_CloseBtn_Widget.updateAlignment();
this._st_adMask_Widget.updateAlignment();
} else {
this.node.height = this.nativeBannerInfo.banner_show_height < 160 ? 160 : this.nativeBannerInfo.banner_show_height;
this._panel_widget.updateAlignment();
this._closeBtn_widget.updateAlignment();
this._mask_widget.updateAlignment();
}
this._widget.isAlignTop = !0;
this._widget.isAlignBottom = !1;
this._widget.updateAlignment();
}
if ("true" == this.nativeBannerInfo.show_st_banner) {
a.utils.showLog("服务器配置显示为结算banner >>>>>");
if (this.nativeBannerInfo.st_banner_bg_mask_opacity > 0) {
this._bg_mask.opacity = this.nativeBannerInfo.st_banner_bg_mask_opacity;
this._bg_mask.setContentSize(cc.size(this.node.getContentSize().width, this._st_Panel.height));
this._st_adMask.active = !1;
} else this._bg_mask.active = !1;
this._st_TitleLabel.string = this._data.title ? this._data.title : "";
this._st_DesLabel.string = this._data.desc ? this._data.desc : "";
if (this._data.imgUrlList && this._data.imgUrlList.length > 0) {
this._st_Icon.node.active = !1;
this._st_Img.node.active = !0;
l.default.LoadRes(this._data.imgUrlList[0], function(t, i) {
!t && cc.isValid(e) && e._st_Img && (e._st_Img.spriteFrame = new cc.SpriteFrame(i));
});
} else if (s.default.IsOPPO && this._data.iconUrlList && this._data.iconUrlList.length > 0) {
this._st_Icon.node.active = !0;
this._st_Img.node.active = !1;
if (0 == this.nativeBannerInfo.st_banner_style || 1 == this.nativeBannerInfo.st_banner_style) {
a.utils.showLog("单图片样式-没有大图，显示默认原生样式banner");
this._titleLabel.string = this._data.title;
this._desLabel.string = this._data.desc;
this._btnLabel.string = this._data.clickBtnTxt ? this._data.clickBtnTxt : "查看详情";
var t = s.default.IsOPPO ? this._data.iconUrlList[0] : this._data.icon;
l.default.LoadRes(t, function(t, i) {
!t && cc.isValid(e) && e._icon && (e._icon.spriteFrame = new cc.SpriteFrame(i));
});
this._st_Panel.active = !1;
this._panel.active = !0;
} else l.default.LoadRes(this._data.iconUrlList[0], function(t, i) {
!t && cc.isValid(e) && e._st_Icon && (e._st_Icon.spriteFrame = new cc.SpriteFrame(i));
});
} else if ((s.default.IsVIVO || s.default.IsHuaWei) && this._data.icon) {
this._st_Icon.node.active = !0;
this._st_Img.node.active = !1;
l.default.LoadRes(this._data.icon, function(t, i) {
!t && cc.isValid(e) && e._st_Icon && (e._st_Icon.spriteFrame = new cc.SpriteFrame(i));
});
}
} else {
this._titleLabel.string = this._data.title ? this._data.title : "";
this._desLabel.string = this._data.desc ? this._data.desc : "";
this._btnLabel.string = this._data.clickBtnTxt ? this._data.clickBtnTxt : "查看详情";
if (s.default.IsHuaWei) {
this._sourceLable.string = this._data.source ? this._data.source : "";
this._panel.getChildByName("Hw_Mark").active = !0;
this._mask_widget.node.active = !1;
}
t = "";
(t = s.default.IsOPPO ? this._data.iconUrlList[0] : this._data.icon) ? l.default.LoadRes(t, function(t, i) {
!t && cc.isValid(e) && e._icon && (e._icon.spriteFrame = new cc.SpriteFrame(i));
}) : this._data.imgUrlList && this._data.imgUrlList.length > 0 && l.default.LoadRes(this._data.imgUrlList[0], function(t, i) {
if (!t && cc.isValid(e) && e._icon) if (s.default.IsHuaWei) {
e._icon.node.active = !1;
e._hW_icon.node.active = !0;
e._hW_icon.spriteFrame = new cc.SpriteFrame(i);
} else e._icon.spriteFrame = new cc.SpriteFrame(i);
});
}
if (s.default.IsHuaWei) {
this._closeBtn.setContentSize(cc.size(this.nativeBannerInfo.banner_close_but_range, this.nativeBannerInfo.banner_close_but_range));
this._closeBtn.getChildByName("Background").setContentSize(cc.size(this.nativeBannerInfo.banner_close_but_size, this.nativeBannerInfo.banner_close_but_size));
}
if (0 != this.nativeBannerInfo.st_banner_down_but_margin_top) {
this._st_BtnDown_Widget.top = this.nativeBannerInfo.st_banner_down_but_margin_top;
this._st_BtnDown_Widget.updateAlignment();
}
if (this.nativeBannerInfo.st_banner_down_but_show > 0) {
this._st_BtnDown.active = !0;
2 === this.nativeBannerInfo.st_banner_down_but_show ? this._st_BtnDown.runAction(cc.sequence(cc.scaleTo(.3, 1.3), cc.scaleTo(.3, 1)).repeatForever()) : this._st_BtnDown.stopAllActions();
} else {
this._st_BtnDown.active = !1;
this._st_BtnDown.stopAllActions();
}
}
};
t.prototype.onBtnClickHandler = function(e, t) {
switch (e.target.name) {
case "Btn_Close":
this.node.active = !1;
s.default.IsOPPO && a.utils.oppoTool.countBannerCloseCount();
a.utils._bannerCloseTime = new Date().getTime();
break;

case "Btn_Download":
case "bgMask":
this._reportAdClick();
}
};
t.prototype._reportAdShow = function() {
if (this._data && this._nativeAd) if (!this._data.isReportShow || s.default.IsHuaWei) {
u.default.EventAdWithObj(c.YwAdType.NATIVE_BANNER, c.YwAdStatus.SHOW_SUCCESS, new c.AdEventParameter(this._data.adId));
this._data.isReportShow = !0;
a.utils.showLog("上报原生广告条展示！adId:" + this._data.adId);
this._nativeAd.reportAdShow({
adId: this._data.adId
});
a.utils.SendEvent("上报原生Banner广告展示,位置:" + this.nativeBannerInfo.location);
} else a.utils.showLog("当前广告已经过上报展示！adId:" + this._data.adId, "，当前不做上报");
};
t.prototype._reportAdClick = function() {
if (this._data) {
a.utils.showLog("上报原生广告条点击! adId:" + this._data.adId);
if (this._nativeAd) {
if (!this._data.isReportClick || s.default.IsHuaWei) {
u.default.EventAdWithObj(c.YwAdType.NATIVE_BANNER, c.YwAdStatus.CLICK, new c.AdEventParameter(this._data.adId));
this._data.isReportClick = !0;
this._nativeAd.reportAdClick({
adId: this._data.adId,
isAutoDownload: !0
});
s.default.IsHuaWei && this.downLoadAd();
}
this._data = null;
if ("true" != this.nativeBannerInfo.banner_click_refresh || s.default.IsHuaWei) {
cc.game.targetOff(this);
this.node.active = !1;
} else {
a.utils.showLog("点击之后-先隐藏广告-再刷新广告条！");
a.utils.adManager.HideBanner(this.nativeBannerInfo.location);
a.utils.adManager.ShowBanner(this.nativeBannerInfo.location, {
isRefresh: !0
});
}
}
}
};
t.prototype.downLoadAd = function() {};
return t = n([ d ], t);
}(cc.Component));
i.default = f;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YouWanSDK/EventAdInfo": "EventAdInfo",
"./YouWanSDK/YouWanAnalytics": "YouWanAnalytics"
} ],
YZ_NativeInsert: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1d5251l+dNFU5/8GQ0IW26S", "YZ_NativeInsert");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./PlatUtils"), a = e("./Utils"), r = e("./CompatibleTool"), l = e("./YZ_Constant"), c = e("./YouWanSDK/EventAdInfo"), u = e("./YouWanSDK/YouWanAnalytics"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._sourceLable = null;
t._titleLabel = null;
t._desLabel = null;
t._icon = null;
t._mask = null;
t._btnLabel = null;
t._closeBtn = null;
t._img = null;
t._hideInstallBtn = null;
t._nativeAd = null;
t._data = null;
t._dataDirty = !1;
t._btnDownLoad = null;
t._defaultCloseSize = 60;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return a.utils.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
a.utils.otherConfig && a.utils.otherConfig.group && (this.node.group = a.utils.otherConfig.group);
cc.game.addPersistRootNode(this.node);
this._panel = this.node.getChildByName("Panel");
this._icon = this._panel.getChildByName("Icon").getComponent(cc.Sprite);
this._img = this._panel.getChildByName("Img").getComponent(cc.Sprite);
this._titleLabel = this._panel.getChildByName("TitleLabel").getComponent(cc.Label);
this._desLabel = this._panel.getChildByName("DesLabel").getComponent(cc.Label);
this._mask = this.node.getChildByName("Mask");
this._sourceLable = this._panel.getChildByName("Img").getChildByName("source").getComponent(cc.Label);
this._btnDownLoad = this._panel.getChildByName("Btn_Download");
this._btnLabel = this._btnDownLoad.getComponentInChildren(cc.Label);
this._hideInstallBtn = this._panel.getChildByName("Btn_HideInstall");
this._closeBtn = this._hideInstallBtn.getChildByName("Btn_Close");
var e = this, t = this._panel.getChildByName("bg").getComponent(cc.Sprite), i = a.utils.ServerConfig.native_intersititial_bg_img;
i && !this.bgTexture && r.default.LoadRes(i, function(i, o) {
if (!i && cc.isValid(e) && e._panel) {
var n = e._panel.getChildByName("bg").getContentSize();
e.bgTexture = new cc.SpriteFrame(o);
t.spriteFrame = e.bgTexture;
e._panel.getChildByName("bg").setContentSize(n);
}
});
var o = this._panel.getChildByName("Btn_Install").getChildByName("Background").getComponent(cc.Sprite), n = a.utils.ServerConfig.native_intersititial_btn_img;
n && !this.btnTexture && r.default.LoadRes(n, function(t, i) {
if (!t && cc.isValid(e) && e._panel) {
var n = e._panel.getChildByName("Btn_Install").getContentSize();
e.btnTexture = new cc.SpriteFrame(i);
o.spriteFrame = e.btnTexture;
e._panel.getChildByName("Btn_Install").setContentSize(n);
}
});
var l = 1;
if (cc.winSize.height < cc.winSize.width) {
l = cc.winSize.width / 1920 * .7;
this._panel.scale = l;
} else {
this._panel.getComponent(cc.Widget).isAlignBottom = !0;
this._panel.getComponent(cc.Widget).bottom = 378;
this._panel.getComponent(cc.Widget).updateAlignment();
l = cc.winSize.width / 1080;
this._panel.scale = l;
}
s.default.IsXiaoMi && (this._panel.getChildByName("Xm_Mask").active = !0);
};
t.prototype.onEnable = function() {
var e = this;
if (s.default.IsHuaWei) {
a.utils.showLog("注册原生插屏监听事件 >>>>>.");
cc.game.targetOff(this);
cc.game.on(cc.game.EVENT_SHOW, function() {
console.log("HuaWeiOnShow >>>>>>");
e._reportAdShow();
}, this);
}
if (s.default.IsOPPO || s.default.IsVIVO || s.default.IsHuaWei || s.default.IsXiaoMi) {
this._panel.on(cc.Node.EventType.TOUCH_START, function(t) {
e._reportAdClick();
}, this);
cc.game.on(l.default.YZ_NativeAdClick, function() {
e._reportAdClick();
}, this);
}
};
t.prototype.onDestroy = function() {
if (s.default.IsHuaWei) {
cc.game.targetOff(this);
a.utils.adManager.ShowBanner();
}
};
t.prototype.init = function(e, t) {
this._nativeAd = e;
this._data = t;
this._dataDirty = !0;
};
t.prototype.update = function(e) {
if (this._data && this._dataDirty) {
this._panel.active = !0;
this._mask.active = !0;
this._dataDirty = !1;
this._updateContent();
}
if (!this._data) {
this._panel.active = !1;
this._mask.active = !1;
}
};
t.prototype._updateContent = function() {
var e = this;
if (this._data) {
this._reportAdShow();
a.utils.nativeInsertShowCount++;
if (this.ServerConfig.first_interstitial_delayed_level_close) if (a.utils.nativeInsertShowCount > 3 && this.ServerConfig.interstitial_delayed_level_close) {
a.utils.nativeInsertResizeCloseBtnShowCount++;
if (a.utils.nativeInsertResizeCloseBtnShowCount % this.ServerConfig.interstitial_delayed_level_close == 0) {
a.utils.showLog("原生插屏关闭按钮设置服务器配置大小" + this.ServerConfig.intersititia_close_but_size);
var t = this.ServerConfig.intersititia_close_but_size ? this.ServerConfig.intersititia_close_but_size : this._defaultCloseSize;
this._hideInstallBtn.setContentSize(cc.size(t, t));
}
} else {
a.utils.showLog("原生插屏关闭按钮,不满足服务器条件，设置为默认大小！");
this._hideInstallBtn.setContentSize(cc.size(this._defaultCloseSize, this._defaultCloseSize));
} else {
t = this.ServerConfig.intersititia_close_but_size ? this.ServerConfig.intersititia_close_but_size : this._defaultCloseSize;
this._hideInstallBtn.setContentSize(cc.size(t, t));
}
this._closeBtn.getChildByName("Background").opacity = 0;
this._hideInstallBtn.opacity = this.ServerConfig.intersititia_close_but_alpha ? this.ServerConfig.intersititia_close_but_alpha : 255;
var i = this.ServerConfig.intersititia_close_but_range ? this.ServerConfig.intersititia_close_but_range : this._defaultCloseSize;
this._closeBtn.setContentSize(cc.size(i, i));
this._titleLabel.string = this._data.title ? this._data.title : "";
this._desLabel.string = this._data.desc ? this._data.desc : "";
this._btnLabel.string = this._data.clickBtnTxt ? this._data.clickBtnTxt : "查看详情";
if (this._data.imgUrlList && this._data.imgUrlList.length > 0) {
this._titleLabel.node.active = !0;
this._icon.node.active = !1;
this._img.node.active = !0;
this._desLabel.node.active = !0;
r.default.LoadRes(this._data.imgUrlList[0], function(t, i) {
a.utils.showLog("加载图片信息 ...." + t);
!t && cc.isValid(e) && e._img && (e._img.spriteFrame = new cc.SpriteFrame(i));
});
} else if (s.default.IsOPPO && this._data.iconUrlList && this._data.iconUrlList.length > 0) {
this._titleLabel.node.active = !0;
this._icon.node.active = !0;
this._img.node.active = !1;
this._desLabel.node.active = !0;
r.default.LoadRes(this._data.iconUrlList[0], function(t, i) {
!t && cc.isValid(e) && e._icon && (e._icon.spriteFrame = new cc.SpriteFrame(i));
});
} else if ((s.default.IsVIVO || s.default.IsHuaWei) && this._data.icon) {
this._titleLabel.node.active = !0;
this._icon.node.active = !0;
this._img.node.active = !1;
this._desLabel.node.active = !0;
r.default.LoadRes(this._data.icon, function(t, i) {
!t && cc.isValid(e) && e._icon && (e._icon.spriteFrame = new cc.SpriteFrame(i));
});
}
this._hideInstallBtn.active = !1;
this._closeBtn.active = !1;
this.scheduleOnce(function() {
e._closeBtn.active = !0;
e._hideInstallBtn.active = !0;
}, this.ServerConfig.intersititia_close_delay_time || 0);
s.default.IsHuaWei && (this._sourceLable.string = this._data.source ? this._data.source : "");
}
};
t.prototype.onBtnClickHandler = function(e, t) {
console.log("event.target.name:", e.target.name);
switch (e.target.name) {
case "Btn_Close":
this._panel.active = !1;
this._mask.active = !1;
break;

case "Btn_HideInstall":
case "Img":
case "Btn_Install":
this._reportAdClick();
break;

case "Btn_Download":
if (a.utils.ServerConfig.native_intersititial_click_range && 2 == a.utils.ServerConfig.native_intersititial_click_range) {
a.utils.showLog("服务器native_intersititial_click_range配置为2，只能点击安装按钮算安装");
return;
}
this._reportAdClick();
}
};
t.prototype._reportAdShow = function() {
if (this._data && this._nativeAd && this._panel.active) {
u.default.EventAdWithObj(c.YwAdType.NATIVE_INTERSITITIAL, c.YwAdStatus.SHOW_SUCCESS, new c.AdEventParameter(this._data.adId));
a.utils.showLog("上报原生插屏广告展示! adId:" + this._data.adId + " #active=" + this.node.active);
this._nativeAd.reportAdShow({
adId: this._data.adId
});
}
};
t.prototype._reportAdClick = function() {
if (this._data) {
a.utils.showLog("上报原生插屏广告点击! adId:" + this._data.adId);
if (this._nativeAd) {
u.default.EventAdWithObj(c.YwAdType.NATIVE_INTERSITITIAL, c.YwAdStatus.CLICK, new c.AdEventParameter(this._data.adId));
this._nativeAd.reportAdClick({
adId: this._data.adId
});
if (!this.ServerConfig.intersititial_click_close || "true" == this.ServerConfig.intersititial_click_close) {
this._panel.active = !1;
this._mask.active = !1;
}
this._closeBtn.active = !0;
this._hideInstallBtn.active = !0;
this._closeBtn.setContentSize(cc.size(this.ServerConfig.intersititia_close_but_range, this.ServerConfig.intersititia_close_but_range));
s.default.IsOPPO ? a.utils.oppoTool.countNativeInserClick() : s.default.IsVIVO && a.utils.Tool_Vivo.countNativeInserClick();
if (s.default.IsHuaWei) {
this.node.destroy();
this.downLoadAd();
}
}
}
};
t.prototype.downLoadAd = function() {};
return t = n([ d ], t);
}(cc.Component));
i.default = f;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YouWanSDK/EventAdInfo": "EventAdInfo",
"./YouWanSDK/YouWanAnalytics": "YouWanAnalytics"
} ],
YZ_NativeItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4d6dayccIRMgY+T3fKuAWmH", "YZ_NativeItem");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./PlatUtils"), a = e("./Utils"), r = e("./YZ_Constant"), l = e("./CompatibleTool"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._nativeAdTiltle = null;
t._nativeAdIcon = null;
t._nativeAdDesc = null;
t._nativeAdImg = null;
t._closeBtn = null;
t._downBtn = null;
t._noImageView = null;
t._nativeAd = null;
t.isShow = !1;
t.showType = 1;
t.params = null;
t.content = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.content = this.node.children[0];
this._noImageView = this.content.getChildByName("NoImageView");
this._nativeAdTiltle = this._noImageView.getChildByName("title").getComponent(cc.Label);
this._nativeAdIcon = this._noImageView.getChildByName("icon").getComponent(cc.Sprite);
this._nativeAdDesc = this._noImageView.getChildByName("desc").getComponent(cc.Label);
this._nativeAdImg = this.content.getChildByName("image").getComponent(cc.Sprite);
this._closeBtn = this.content.getChildByName("closeBtn");
if (this.params) {
if (this.params.parent) {
this.node.width = this.node.parent.width;
this.node.height = this.node.parent.height;
}
} else a.utils.ServerConfig.st_native_ad_height && (this.node.height = a.utils.ServerConfig.st_native_ad_height);
this.content.active = !1;
cc.game.on(r.default.YZ_NativeAdClick, function() {
e.reportAdClick();
}, this);
};
t.prototype.onDisable = function() {
cc.game.targetOff(this);
this.node.destroy();
};
t.prototype.update = function() {
if (this._nativeAd && !this.isShow) {
this.isShow = !0;
this.showNativeAd();
}
};
t.prototype.init = function(e) {
a.utils.showLog("初始化单个原生广告>>>");
this._nativeAd = e;
};
t.prototype.showNativeAd = function() {
var e = this;
if (a.utils.ServerConfig.st_native_ad_is_hide_banner && "true" == a.utils.ServerConfig.st_native_ad_is_hide_banner) {
a.utils.showLog("服务器配置显示结算原生广告后隐藏banner >>>");
a.utils.adManager.HideBanner(r.BannerLocation.Game);
}
a.utils.ServerConfig.st_native_ad_show_rec_banner && "true" == a.utils.ServerConfig.st_native_ad_show_rec_banner && a.utils.showRecBanner();
var t = this._nativeAd.data, i = t.title, o = t.desc;
if (i.length > 6) {
i = i.slice(0, 6);
i += "...";
}
if (o.length > 18) {
o = o.slice(0, 17);
o += "...";
}
this._nativeAdTiltle.string = i;
this._nativeAdDesc.string = o;
if (t.imgUrlList && t.imgUrlList.length > 0) {
this._noImageView.active = !1;
this._nativeAdImg.node.active = !0;
l.default.LoadRes(t.imgUrlList[0], function(t, i) {
if (!t && cc.isValid(e) && e._nativeAdImg) {
e._nativeAdImg.spriteFrame = new cc.SpriteFrame(i);
e._nativeAdImg.node.active = !0;
e.content.active = !0;
}
});
} else if (s.default.IsOPPO && t.iconUrlList && t.iconUrlList.length > 0) {
this._nativeAdImg.node.active = !1;
this._noImageView.active = !0;
l.default.LoadRes(t.iconUrlList[0], function(t, i) {
if (!t && cc.isValid(e) && e._nativeAdIcon) {
e._nativeAdIcon.spriteFrame = new cc.SpriteFrame(i);
e.content.active = !0;
}
});
} else if (s.default.IsVIVO && t.icon) {
this._nativeAdImg.node.active = !1;
this._noImageView.active = !0;
l.default.LoadRes(t.icon, function(t, i) {
if (!t && cc.isValid(e) && e._nativeAdIcon) {
e._nativeAdIcon.spriteFrame = new cc.SpriteFrame(i);
e.content.active = !0;
}
});
}
this.node.active = !0;
this.reportAdShow();
this.params && this.params.callBack && this.params.callBack();
};
t.prototype.onBtnClickHandler = function(e, t) {
switch (e.target.name) {
case "closeBtn":
this.node.active = !1;
break;

case "Btn_Download":
this.reportAdClick();
}
};
t.prototype.reportAdShow = function() {
a.utils.showLog("reportAdShow");
this._nativeAd && this._nativeAd.reportAdShow();
};
t.prototype.reportAdClick = function() {
this._nativeAd ? this._nativeAd.reportAdClick() : a.utils.showLog("广告加载失败！");
};
return t = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
YZ_NativeSplashView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7c993lt1o1ElLWwtSylDE9T", "YZ_NativeSplashView");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./CompatibleTool"), a = e("./PlatUtils"), r = e("./Utils"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._sourceLable = null;
t._titleLabel = null;
t._desLabel = null;
t._icon = null;
t._btnLabel = null;
t._img = null;
t._timeLabel = null;
t._nativeAd = null;
t._data = null;
t._dataDirty = !1;
t._btnDownLoad = null;
t.ratio = 1;
t.canSkip = !0;
return t;
}
Object.defineProperty(t.prototype, "ServerConfig", {
get: function() {
return r.utils.ServerConfig;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
r.utils.otherConfig && r.utils.otherConfig.group && (this.node.group = r.utils.otherConfig.group);
if (cc.winSize.height < cc.winSize.width) {
this.ratio = cc.winSize.width / 1920 * .75;
this._panel = this.node.getChildByName("LandscapePanel");
} else {
this.ratio = cc.winSize.width / 1080;
this._panel = this.node.getChildByName("PortraitPanel");
}
this._panel.active = !0;
"false" == r.utils.getConfigByKey("native_splash_can_skip") && (this.canSkip = !1);
this._panel.scale = this.ratio;
this._icon = this._panel.getChildByName("Icon").getComponent(cc.Sprite);
this._img = this._panel.getChildByName("Img").getComponent(cc.Sprite);
this._titleLabel = this._panel.getChildByName("TitleLabel").getComponent(cc.Label);
this._desLabel = this._panel.getChildByName("DesLabel").getComponent(cc.Label);
this._sourceLable = this._img.node.getChildByName("source").getComponent(cc.Label);
this._btnDownLoad = this._panel.getChildByName("Btn_Download");
this._btnLabel = this._btnDownLoad.getComponentInChildren(cc.Label);
this._timeLabel = this._panel.getChildByName("time").children[0].getComponent(cc.Label);
a.default.IsHuaWei && qg.onShow(this._reportAdShow.bind(this));
"true" == r.utils.getConfigByKey("native_splash_full_cilck") && (this._btnDownLoad.active = !0);
};
t.prototype.onDestroy = function() {
if (a.default.IsHuaWei) {
qg.offShow(this._reportAdShow);
this._nativeAd.destroy();
cc.director.emit("SplashViewOff");
}
};
t.prototype.init = function(e, t) {
this._nativeAd = e;
this._data = t;
this._dataDirty = !0;
};
t.prototype.update = function(e) {
if (this._data && this._dataDirty) {
this._panel.active = !0;
this._dataDirty = !1;
this._updateContent();
}
this._data || (this._panel.active = !1);
};
t.prototype._updateContent = function() {
var e = this;
if (this._data) {
this._reportAdShow();
a.default.IsHuaWei && (this._data.icon = "");
r.utils.showLog("data:", JSON.stringify(this._data));
this._titleLabel.string = this._data.title ? this._data.title : "";
this._desLabel.string = this._data.desc ? this._data.desc : "";
this._panel.getChildByName("Btn_Install").getComponentInChildren(cc.Label).string = this._data.clickBtnTxt ? this._data.clickBtnTxt : "查看详情";
if (this._data.imgUrlList && this._data.imgUrlList.length > 0) {
this._titleLabel.node.active = !0;
this._icon.node.active = !1;
this._img.node.active = !0;
this._desLabel.node.active = !0;
var t = 5, i = setInterval(function() {
if (0 == --t) e._timeLabel.string = "跳过"; else if (-1 == t) {
clearInterval(i);
e.node.destroy();
} else e._timeLabel.string = "点击跳过" + t + "s";
}, 1e3);
r.utils.showLog("有图片，优先显示图片");
s.default.LoadRes(this._data.imgUrlList[0], function(t, i) {
r.utils.showLog("加载图片信息 ...." + t);
!t && cc.isValid(e) && e._img && (e._img.spriteFrame = new cc.SpriteFrame(i));
});
} else if (a.default.IsHuaWei && this._data.icon) {
r.utils.showLog("没有图片，显示icon");
this._titleLabel.node.active = !0;
this._icon.node.active = !0;
this._img.node.active = !1;
this._desLabel.node.active = !0;
s.default.LoadRes(this._data.icon, function(t, i) {
!t && cc.isValid(e) && e._icon && (e._icon.spriteFrame = new cc.SpriteFrame(i));
});
} else r.utils.showLog("什么都没有!!!");
a.default.IsHuaWei && (this._sourceLable.string = this._data.source ? this._data.source : "");
}
};
t.prototype.onBtnClickHandler = function(e, t) {
switch (e.target.name) {
case "time":
this.canSkip ? this.node.destroy() : "跳过" == this._timeLabel.string && this.node.destroy();
break;

case "Btn_Close":
this.node.destroy();
break;

case "Img":
case "Icon":
case "Btn_Install":
case "Btn_Download":
this._reportAdClick();
}
};
t.prototype._reportAdShow = function() {
if (this._data && this._nativeAd && this._panel.active) {
r.utils.showLog("上报原生插屏广告展示! adId:" + this._data.adId + " #active=" + this.node.active);
this._nativeAd.reportAdShow({
adId: this._data.adId
});
}
};
t.prototype._reportAdClick = function() {
if (this._data) {
r.utils.showLog("上报原生开屏广告点击! adId:" + this._data.adId);
if (this._nativeAd) {
this._nativeAd.reportAdClick({
adId: this._data.adId
});
this._panel.active = !1;
a.default.IsOPPO ? r.utils.oppoTool.countNativeInserClick() : a.default.IsVIVO && r.utils.Tool_Vivo.countNativeInserClick();
if (a.default.IsHuaWei) {
this.node.destroy();
this.downLoadAd();
}
}
}
};
t.prototype.downLoadAd = function() {};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
YZ_RecommendGamesBanner: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "32806+THFFPQKdtQ7WAonI9", "YZ_RecommendGamesBanner");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./PlatUtils"), r = e("./YZ_Constant"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._listView = null;
t._isInit = !1;
t.closeBtn = null;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
this._listView = this.getComponentInChildren("YZ_ListView");
this._listView.node.active = !1;
this.closeBtn = cc.find("bg/close", this.node);
};
t.prototype.onEnable = function() {
var e = this;
s.utils.registerServerInitEvent(function() {
e._initWidget();
e.closeBtn.on(cc.Node.EventType.TOUCH_START, function(t) {
e.node.destroy();
});
}, this);
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
this.closeBtn.targetOff(this);
};
t.prototype._initWidget = function() {
if (!this._isInit) if (s.utils.isShowRecommondGamesBanner()) {
var e = s.utils.getRecommondGameList();
if (e) if (e.length > 0) if (e.length >= 6) {
this._isInit = !0;
this._listView.init(e);
this._listView.node.active = !0;
s.utils.postRecommentShowData(r.SubLocation.isYzBanner);
if (a.default.IsOPPO) {
s.utils.oppoTool.countYzBannerShowCount();
s.utils.adManager.hideKyxBanner();
}
} else cc.warn("交叉推广数据长度小于6"); else cc.warn("交叉推广数据长度为0"); else cc.warn("交叉推广数据为null!");
} else this.node.destroy();
};
return t = n([ c ], t);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
YZ_RecordWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "70e24eWKbRDM7QiZpIr5ChZ", "YZ_RecordWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._normalBtn = null;
t._actionBtn = null;
t._isRecording = !1;
t._originScale = 1;
return t;
}
t.prototype.onLoad = function() {
this._panel = this.node.getChildByName("Panel");
this._panel.active = !1;
var e = this._panel.getChildByName("Background");
this._normalBtn = e.getChildByName("normalBtn");
this._actionBtn = e.getChildByName("actionBtn");
this._originScale = this._actionBtn.scale;
};
t.prototype._onGameMessage = function(e) {
switch (e.type) {
case "YZ_RecordStart":
case "YZ_RecordEnd":
this._updateState();
}
};
t.prototype.onEnable = function() {
var e = this;
cc.game.on("YZ_CommonMessage", this._onGameMessage, this);
s.utils.registerServerInitEvent(function() {
e._panel.on(cc.Node.EventType.TOUCH_END, function(e) {
e.stopPropagation();
if (s.utils.isRecording) {
s.utils.isSuccess = void 0;
s.utils.cur_tool && void 0 != s.utils.cur_tool.isClickEnd && (s.utils.cur_tool.isClickEnd = !0);
s.utils.recordEnd();
} else s.utils.recordStart();
}, e);
e._updateState();
if (s.utils.isShowRecordWidget()) e._panel.active = !0; else {
s.utils.showLog("不支持录屏!");
e.node.destroy();
}
}, this);
s.utils.cur_tool && void 0 != s.utils.cur_tool.isAutoShare && (s.utils.cur_tool.isAutoShare = !0);
};
t.prototype.onDisable = function() {
cc.game.targetOff(this);
};
t.prototype._updateState = function() {
if (s.utils.isRecording) {
this._normalBtn.active = !1;
this._actionBtn.active = !0;
this._actionBtn.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.3, .8 * this._originScale), cc.scaleTo(.3, this._originScale))));
} else {
this._normalBtn.active = !0;
this._actionBtn.stopAllActions();
this._actionBtn.active = !1;
}
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
YZ_ShakeNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e2425kaMhpN4aU6KcM8BiLX", "YZ_ShakeNode");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, r = (s.property, function(e) {
o(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {
this.schedule(this.shake, 3);
};
t.prototype.shake = function() {
var e = cc.repeat(cc.sequence(cc.rotateTo(.03, 5), cc.rotateTo(.03, 0), cc.rotateTo(.03, -5), cc.rotateTo(.03, 0)), 5);
this.node.runAction(e);
};
return t = n([ a ], t);
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {} ],
YZ_ShortcutWidget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8491fv6UfpAeK3G0lwwfFJo", "YZ_ShortcutWidget");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./CompatibleTool"), r = cc._decorator, l = r.ccclass, c = (r.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._panel = null;
t._handImg = null;
t._callback = null;
return t;
}
Object.defineProperty(t.prototype, "Callback", {
set: function(e) {
this._callback = e;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this._panel = this.node.getChildByName("Panel");
this._panel.active = !1;
this._handImg = cc.find("Panel/handImg", this.node);
this._handImg.runAction(cc.repeatForever(cc.sequence(cc.moveBy(.5, a.default.position(0, -50)), cc.moveBy(.5, a.default.position(0, 50)))));
};
t.prototype.onEnable = function() {
var e = this;
s.utils.registerServerInitEvent(function() {
s.utils.isShowCreateShortcutWidget() ? e._panel.active = !0 : e.node.destroy();
}, this);
};
t.prototype.onDisable = function() {
s.utils.unregisterServerInitEvent(this);
};
t.prototype.onBtnClickHandler = function(e, t) {
var i = this;
switch (e.target.name) {
case "Btn_Shortcut":
s.utils.canCreateShortcut() && s.utils.createShortcut(function(e) {
if (e) {
s.utils.showLog("快捷方式创建成功！");
i._callback && i._callback(!0);
} else {
s.utils.showLog("快捷方式创建失败！");
i._callback && i._callback(!1);
}
});
}
};
return t = n([ l ], t);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./Utils": "Utils"
} ],
YZ_StatementRecommentAd: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a1f40rCFtlOVJUTsMlC9yMj", "YZ_StatementRecommentAd");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./AldUtils"), r = e("./YZ_Constant"), l = e("./List"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._jumpList = null;
t._items = [];
t.listView = null;
t._pageItem = null;
t._pageRecItem = null;
t._recListNode = null;
t.nativeData = null;
t._nativeAd = null;
t.showNativeAd = !0;
t.yzItem = null;
t._nativeIsShow = !1;
t.autoScorll = !1;
return t;
}
t.prototype.onLoad = function() {
this._recListNode = this.node.getChildByName("RecList");
this.listView = this._recListNode.getChildByName("ScrollView").getComponent(l.default);
this._nativeAd = this.node.getChildByName("nativeAd");
a.default.SendEvent("显示结算\b推荐组件");
};
t.prototype.start = function() {
if (this.showNativeAd) {
this._recListNode.active = !1;
this.yzItem = this._nativeAd.getComponent("YZ_NativeItem");
this.yzItem.showType = 1;
s.utils.adManager.createNativeAd(null, this.yzItem);
s.utils.showLog("交叉推广调用原生广告《《《《《《《");
} else {
this._recListNode.active = !0;
this._jumpList = s.utils.getRecommondGameList();
if (this._jumpList && this._jumpList.length > 0) {
this._initWidget();
this.listView.numItems = this._jumpList.length;
} else {
cc.warn("交叉推广数据为null, 6元素交叉推广组件不显示!");
this.node.destroy();
}
}
};
t.prototype.hideLastNode = function() {
for (var e = 5; e > 2; e--) this._items[e].node.active = !1;
};
t.prototype.update = function(e) {
if (this.yzItem && this.yzItem.content && this.yzItem.content.active && !this._nativeIsShow) {
this._nativeIsShow = !1;
this._recListNode.active = !1;
}
if (this.autoScorll && !this.listView.scrollView.isScrolling()) {
this.listView.content.y += 150 * e;
this.listView._onScrolling();
}
};
t.prototype.onListRender = function(e, t) {
var i = e.getComponent("QCrossWidgetItem");
i._location = r.SubLocation.isStatement;
i.getComponent("QCrossWidgetItem").init(this._jumpList[t]);
};
t.prototype._initWidget = function() {
var e = this;
if (s.utils.ServerConfig.st_recomment_is_hide_banner && "true" == s.utils.ServerConfig.st_recomment_is_hide_banner) {
s.utils.showLog("服务器配置显示结算互推后隐藏banner >>>");
s.utils.adManager.HideBanner(r.BannerLocation.Game);
s.utils.adManager.HideBanner(r.BannerLocation.Over);
}
this.scheduleOnce(function() {
e.autoScorll = !0;
}, 1);
s.utils.postRecommentShowData(r.SubLocation.isStatement);
};
return t = n([ u ], t);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"./AldUtils": "AldUtils",
"./List": "List",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
YZ_Tool_4399: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e9a1c/LeeFGVaaFV6tot5cB", "YZ_Tool_4399");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./PlatUtils"), s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, 
function() {
function e() {
this._4399 = window.h5api;
this._sysInfo = {};
this._serverConfig = null;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function(e) {
if (n.default.Is4399) {
s.utils.showLog("4399 h5 平台初始化完成 >>");
s.utils.emitServerInitEvent();
}
};
e.prototype.share = function(e) {
this._4399.share();
e && e(!0, "");
};
e.prototype.showRecommend = function() {
this._4399.showRecommend();
};
return e = o([ r ], e);
}());
i.default = l;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
YZ_Tool_Baidu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d56dd0lh79AeZGOtNmRUU2Q", "YZ_Tool_Baidu");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
"https://report.youletd.com/gss?"), f = "", _ = function() {
function e() {
this._recorder = null;
this._recommendationButton = null;
this._videoPath = null;
this._serverConfig = null;
this._shareCallback = null;
this.swan = window.swan;
this._sysInfo = {};
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.baiduconfig.version;
};
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < 30) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("baidu暂时不获取uid，uid全部为0");
this._uid = "0";
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - t._reportLoginTime) / 1e3;
console.log(i, i - t._reportLoginTime, o);
if (o > 0 && o < 30) r.utils.showLog("上报登录获取UID小于：" + t._reportLoginInterval + "秒"); else {
t._reportLoginTime = i;
r.utils.commomHttpRequest("https://apps.youlesp.com/gss?m=login&device_data=0", function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
console.log("self._service_uid:" + t._service_uid);
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
var t = this;
if (a.default.IsBaidu) {
if (e) {
var i = JSON.parse(e);
i && i.baidu && (f = JSON.stringify(i.baidu));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._sysInfo = this.swan.getSystemInfoSync();
this._sysInfo ? r.utils.showLog("百度小游戏平台信息: ", JSON.stringify(this._sysInfo)) : r.utils.showLog("系统信息获取失败!");
this._loadConfig();
if (this.canRecord()) {
this._recorder = this.swan.getVideoRecorderManager();
if (this._recorder) {
this._recorder.onStart(function(e) {
r.utils.showLog("开始录屏回调: ", e);
r.utils.isRecording = !0;
cc.game.emit("YZ_CommonMessage", {
type: "YZ_RecordStart"
});
});
this._recorder.onStop(function(e) {
r.utils.showLog("结束录屏回调: ", e.videoPath);
r.utils.isRecording = !1;
t._videoPath = e.videoPath;
cc.game.emit("YZ_CommonMessage", {
type: "YZ_RecordEnd"
});
});
this._recorder.onError(function(e) {
r.utils.isRecording = !1;
if (e) {
r.utils.showLog("录屏出错 : ", e.errCode, e.errMsg);
cc.game.emit("YZ_CommonMessage", {
type: "YZ_RecordEnd"
});
}
});
}
}
this.swan.showShareMenu();
this.swan.onShareAppMessage(function() {
return t._getShareInfo();
});
}
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsBaidu) {
r.utils.commomHttpRequest("https://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("百度服务器配置数据获取成功: data = ", i);
if (i) {
var o = JSON.parse(i);
o ? r.utils.DebugLoacalConfig ? cc.warn("开启了本地数据测试，使用本地配置!") : e._serverConfig = o : r.utils.showLog("百度服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("百度服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.baiduconfig.bannerId = e._serverConfig.banner_pos_id;
r.utils.config.baiduconfig.videoId = e._serverConfig.video_pos_id;
} else r.utils.showLog("使用本地配置的广告ID"); else e._serverConfig = JSON.parse(f);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.showRecommendationButton = function(e) {
var t = this, i = e;
if (a.default.IsBaidu && this.canShowRecommendButton()) {
r.utils.showLog("创建并显示");
this._recommendationButton = this.swan.createRecommendationButton({
type: "list",
style: {
left: -300,
top: -300
}
});
if (this._recommendationButton) {
this._recommendationButton.onLoad(function() {
t._recommendationButton.show();
t._setRecommendBtnStyle(t._recommendationButton, i);
});
this._recommendationButton.onError(function(e) {
e && r.utils.showLog("交叉推广按钮出错 : ", e.errCode, e.errMsg);
});
this._recommendationButton.load();
}
return this._recommendationButton;
}
return null;
};
e.prototype._setRecommendBtnStyle = function(e, t) {
if (e) {
var i = 0, o = 0;
if (t) {
r.utils.showLog("params:", t);
t.left ? i = t.left / cc.view.getDesignResolutionSize().width * this._sysInfo.screenWidth : t.right && (i = this._sysInfo.screenWidth - t.right / cc.view.getDesignResolutionSize().width * this._sysInfo.screenWidth - e.style.width);
t.top ? o = t.top / cc.view.getDesignResolutionSize().height * this._sysInfo.screenHeight : t.bottom && (o = this._sysInfo.screenHeight - t.bottom / cc.view.getDesignResolutionSize().height * this._sysInfo.screenHeight - e.style.height);
}
r.utils.showLog("top:" + o + "; left:" + i);
e.style.top = o;
e.style.left = i;
}
};
e.prototype.hideRecommendationButton = function() {
a.default.IsBaidu && this.canShowRecommendButton() && this._recommendationButton && this._recommendationButton.hide();
};
e.prototype.recordStart = function() {
if (a.default.IsBaidu && this.canRecord()) {
r.utils.showLog("开始录屏");
this._recorder && this._recorder.start({
duration: 120
});
}
};
e.prototype.recordEnd = function() {
if (a.default.IsBaidu && this.canRecord()) {
r.utils.showLog("结束录屏");
this._recorder && this._recorder.stop();
}
};
e.prototype.shareVideo = function() {
if (a.default.IsBaidu && this._videoPath) {
var e = this;
this.swan.shareVideo({
videoPath: this._videoPath,
success: function() {
r.utils.showLog("分享成功");
e._videoPath = "";
e._shareCallback && e._shareCallback(!0);
},
fail: function(t) {
e._videoPath = "";
r.utils.showLog("分享失败");
e._shareCallback && e._shareCallback(!1, "分享失败!");
}
});
}
};
e.prototype.shareImage = function() {
a.default.IsBaidu && this.swan.shareAppMessage(this._getShareInfo());
};
e.prototype.share = function(e) {
if (a.default.IsBaidu) {
this._shareCallback = e;
this._videoPath ? this.shareVideo() : this.shareImage();
}
};
e.prototype._getShareInfo = function() {
if (a.default.IsBaidu) {
var e = r.utils.getShareInfo(), t = this;
if (e) return {
title: e.title,
imageUrl: e.imageUrl,
success: function(e) {
t._shareCallback && t._shareCallback(!0);
r.utils.showLog("分享成功!");
},
fail: function(e) {
t._shareCallback && t._shareCallback(!1, "分享失败!");
r.utils.showLog("分享失败!");
}
};
}
return {};
};
e.prototype.canRecord = function() {
return !!a.default.IsBaidu && (!!this._sysInfo && (this._compareVersion(this._sysInfo.SDKVersion, "1.4.1") && a.default.IsAndroid));
};
e.prototype.canShowRecommendButton = function() {
return !!a.default.IsBaidu && (!!this._sysInfo && (this._compareVersion(this._sysInfo.SDKVersion, "1.5.2") && a.default.IsAndroid));
};
e.prototype.canShowFavoriteGuide = function() {
return !!a.default.IsBaidu && (!!this._sysInfo && this._compareVersion(this._sysInfo.SDKVersion, "1.7.2"));
};
e.prototype._compareVersion = function(e, t) {
return parseInt(e.split(".").join("")) >= parseInt(t.split(".").join(""));
};
e.prototype.navigateToMiniGame = function(e, t) {
if (a.default.IsBaidu) {
var i = t;
if (!e) {
r.utils.showLog("跳转ID为null");
i && i(!1);
return;
}
this.swan.navigateToMiniProgram({
appKey: e,
path: "",
extraData: {},
success: function(e) {
r.utils.showLog("跳转成功！");
i && i(!0);
},
fail: function(e) {
r.utils.showLog("跳转失败!");
i && i(!1);
}
});
}
};
e.prototype.postData = function(e) {
if (a.default.IsBaidu) {
var t = r.utils.config.baiduconfig.appID, i = d + " + m=jump + &app_id=" + t + "&uid=0&channel=baidu&jump_app_id=" + e;
r.utils.showLog("上报数据, url=", i);
r.utils.commomHttpRequest(i, function(e, t) {
e ? r.utils.showLog("数据上报成功！") : r.utils.showLog("数据上报失败！");
});
}
};
e.prototype.getRecommondGameList = function() {
return a.default.IsBaidu && r.utils.Tool_Baidu && r.utils.Tool_Baidu.ServerConfig ? r.utils.Tool_Baidu.ServerConfig.jump_list : null;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsBaidu) {
var o = d + "m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsBaidu) {
var t = d + "m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showToast = function(e) {
a.default.IsBaidu && swan.showToast({
title: e,
icon: "none",
duration: 2e3,
success: function(e) {
console.log("" + e);
},
fail: function(e) {
console.log("showToast调用失败");
}
});
};
return e = o([ h ], e);
}();
i.default = _;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_Bili: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "31682EOkrNLt67Wx9gIkGHK", "YZ_Tool_Bili");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./PlatUtils"), s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, 
function() {
function e() {
this._sysInfo = {};
this._serverConfig = null;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function(e) {
if (n.default.IsBili) {
s.utils.showLog("哔哩 平台初始化完成 >>");
this.initSystemInfo();
s.utils.emitServerInitEvent();
}
};
e.prototype.share = function(e) {
void 0 === e && (e = null);
bl.shareAppMessage({
title: s.utils.config.otherconfig.shareTitle,
imageUrl: s.utils.config.otherconfig.shareImgUrl,
success: function() {
s.utils.showLog("bili 分享成功！");
e && e(!0);
},
fail: function() {
s.utils.showLog("bili 分享失败！");
e && e(!1, "分享失败！");
}
});
};
e.prototype.initSystemInfo = function() {
n.default.IsBili && (this._sysInfo = bl.getSystemInfoSync());
};
return e = o([ r ], e);
}());
i.default = l;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
YZ_Tool_Broswer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "50a6elLlt5J/6iLrubWYrAU", "YZ_Tool_Broswer");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./PlatUtils"), n = e("./Utils"), s = "", a = function() {
function e() {
this._serverConfig = null;
this._nativeInsertAdClickTimes = 0;
this._img_url = "app/editor/static/img/logo-with-text.png";
this._shortcutCreated = !1;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "NativeInsertAdClickTimes", {
get: function() {
return this._nativeInsertAdClickTimes;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ShortcutCreated", {
get: function() {
return this._shortcutCreated;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "img_url", {
get: function() {
return window.location.href + this._img_url;
},
enumerable: !1,
configurable: !0
});
e.prototype.getRecommondGameList = function() {
return [ {
id: "30213731",
name: "测试一",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试二",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试三",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试四",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试五",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试六",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试七",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试八",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试九",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试10",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试11",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试12",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试13",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
}, {
id: "30213731",
name: "测试14",
appid: "com.yzxx.hcrttt.kyx.nearme.gamecenter",
logo: this.img_url,
icon: this.img_url
} ];
};
e.prototype.init = function(e) {
if (e) {
var t = JSON.parse(e);
t && t.oppo && (s = JSON.stringify(t.oppo));
}
var i = this, o = new XMLHttpRequest();
o.open("GET", this.img_url);
o.send();
o.onreadystatechange = function() {
if (4 == o.readyState && 200 == o.status) {
console.log("测试图片路径正常");
i._loadConfig();
}
if (4 == o.readyState && 404 == o.status) {
console.log("测试图片路径不存在切换图片路径");
i._img_url = "app/editor/static/preview-templates/splash.png";
i._loadConfig();
}
};
o.ontimeout = function() {
console.log("测试图片加载超时切换图片路径");
i._img_url = "app/editor/static/preview-templates/splash.png";
i._loadConfig();
};
o.onerror = function(e) {
console.log("测试图片路径异常：" + e + "切换图片路径");
i._img_url = "app/editor/static/preview-templates/splash.png";
i._loadConfig();
};
};
e.prototype._loadConfig = function() {
this._serverConfig = JSON.parse(s);
this._serverConfig.icon_jump = 5;
this._serverConfig.jump_list = this.getRecommondGameList();
n.utils.emitServerInitEvent();
};
e.prototype.sendEvent = function(e) {
o.default.IsTest && n.utils.showLog("上报自定义事件 " + e);
};
e.prototype.postLevel = function(e, t, i) {
o.default.IsTest && n.utils.showLog("关卡" + e + "," + t);
};
e.prototype.realNameAuth = function(e, t, i) {
if (n.utils._isConfigInit) {
var o = i, s = new XMLHttpRequest();
s.timeout = 6e3;
var a = {
kyx: !1,
app_id: "6103b73b864a9558e6d65af8",
channel: "m233",
device_uid: 0,
uid: "482501611",
game_type: 2,
device_data: "",
game_version: "1.0.0",
reqv: "",
app_list: ""
};
a.id_card = e;
a.real_name = t;
var r = JSON.stringify(a), l = "https://apps.youlesp.com/gss?m=realNameAuth&time_stamp=" + new Date().getTime() + "&json_data=" + n.utils.aesEncrypt(r);
n.utils.showLog("服务器地址:" + l);
s.open("GET", l);
s.send();
s.onreadystatechange = function() {
n.utils.showLog("请求状态改变, reaedyState=", s.readyState, "; status=", s.status);
4 == s.readyState && (200 == s.status ? o && o(!0, n.utils.aesDecrypt(s.responseText)) : o && o(!1, ""));
s.status;
};
s.ontimeout = function() {
n.utils.showLog("请求超时!");
o && o(!1, "");
};
s.onerror = function(e) {
o && o(!1, "");
};
} else n.utils.showLog("warn:本地数据未初始化!");
};
return e;
}();
i.default = a;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils"
} ],
YZ_Tool_Cocosplay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "78b0a0l4K9L7IdiXn8LR/YS", "YZ_Tool_Cocosplay");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this._sysInfo = {};
this._serverConfig = null;
this._shareCallback = null;
this._isShare = !1;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this.nickName = "";
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < 30) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("cocos暂时不获取uid，uid全部为0");
this._uid = "0";
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - t._reportLoginTime) / 1e3;
if (o > 0 && o < 30) r.utils.showLog("上报登录获取UID小于：" + t._reportLoginInterval + "秒"); else {
t._reportLoginTime = i;
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=login&device_data=0", function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
console.log("self._service_uid:" + t._service_uid);
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
var t = this;
if (a.default.ISCocos) {
GameSDK.setOnInitCB(function(e) {
if (0 == e.error) {
r.utils.showLog("初始化成功");
t._uid = e.userId;
t.nickName = e.nickName;
}
});
r.utils.showLog("utils.config.cocosConfig.appID:" + r.utils.config.cocosConfig.appID);
GameSDK.init(r.utils.config.cocosConfig.appID);
AdSDK.init();
if (e) {
var i = JSON.parse(e);
i && i.cocos && (d = JSON.stringify(i.cocos));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
try {
this._sysInfo = GameSDK.getSystemInfoSync();
r.utils.showLog("cocos 小游戏平台信息: " + JSON.stringify(this.SysInfo));
} catch (e) {
r.utils.showLog("cocos 小游戏平台数据获取失败!");
}
this._loadConfig();
}
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.ISCocos) {
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("cocos服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
o ? r.utils.DebugLoacalConfig ? cc.warn("开启了本地数据测试，使用本地配置!") : e._serverConfig = o : r.utils.showLog("cocos服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("cocos服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) {
if (e._serverConfig.shares) {
e._serverConfig.shares.sy_title && (r.utils.config.otherconfig.shareTitle = e._serverConfig.shares.sy_title);
e._serverConfig.shares.sy_img && (r.utils.config.otherconfig.shareImgUrl = e._serverConfig.shares.sy_img);
}
e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id ? r.utils.showLog("使用服务器下发的广告id") : r.utils.showLog("使用本地配置的广告ID");
} else e._serverConfig = JSON.parse(d);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.getSystemInfo = function() {
if (a.default.ISCocos) return this._sysInfo;
};
e.prototype.share = function(e) {
void 0 === e && (e = null);
};
e.prototype.isOverMinVersion = function(e) {
var t = this._sysInfo.SDKVersion;
return this._compareVersion(t, e) >= 0;
};
e.prototype._compareVersion = function(e, t) {
if (!e || !t) return -1;
e = e.split(".");
t = t.split(".");
for (var i = Math.max(e.length, t.length); e.length < i; ) e.push("0");
for (;t.length < i; ) t.push("0");
for (var o = 0; o < i; o++) {
var n = parseInt(e[o]), s = parseInt(t[o]);
if (n > s) return 1;
if (n < s) return -1;
}
return 0;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.ISCocos) {
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_Douyin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "89709ZaetdOYJH13/E/pJCv", "YZ_Tool_Douyin");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this._recorder = null;
this._videoPath = null;
this._shareCallback = null;
this.recorderStarTime = 0;
this.isAutoShare = !0;
this.isClickEnd = !1;
this.isNewsArticleLite = !1;
this.tt = window.tt;
this._serverConfig = null;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this._jumpIds = "";
this._sysInfo = null;
this.is_auto_share_video = !1;
this.recored_share_count = 0;
this.appLaunchOptions = [];
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.douyinconfig.version;
};
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < 30) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("douying暂时不获取uid，uid全部为0");
this._uid = "0";
return [ 2 ];
});
});
};
e.prototype.login = function() {
var e = this;
r.utils.showLog("douying login");
tt.login({
withRealNameAuthenticationInfo: !0,
success: function(t) {
r.utils.showLog("登录成功");
tt.getUserInfo({
withRealNameAuthenticationInfo: !0,
success: function(t) {
r.utils.showLog("getUserInfo 调用成功", t.userInfo);
if (t.userInfo) if (t.userInfo.realNameAuthenticationStatus && "uncertified" == t.userInfo.realNameAuthenticationStatus) {
r.utils.showLog("getUserInfo 用户未进行实名制！");
e.realNameAuth();
} else if (t.userInfo.realNameAuthenticationStatus && "certified" == t.userInfo.realNameAuthenticationStatus) {
r.utils.showLog("getUserInfo 用户已实名制！");
cc.game.emit(l.default.ST_LOGIN_SUCCESS);
} else cc.game.emit(l.default.ST_LOGIN_FAIL);
},
fail: function(e) {
r.utils.showLog("getUserInfo 调用失败", e.errMsg);
}
});
},
fail: function() {
cc.game.emit(l.default.ST_LOGIN_FAIL);
e.showToast("登录失败！");
}
});
};
e.prototype.realNameAuth = function() {
var e = this;
r.utils.showLog("douying realNameAuth");
tt.authenticateRealName({
success: function(e) {
r.utils.showLog("用户实名认证成功");
cc.game.emit(l.default.ST_LOGIN_SUCCESS);
},
fail: function(t) {
e.showToast("实名制认证失败，请稍后重试！");
cc.game.emit(l.default.ST_LOGIN_FAIL);
r.utils.showLog("用户实名认证失败", t.errMsg);
}
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - t._reportLoginTime) / 1e3;
if (o > 0 && o < 30) r.utils.showLog("上报登录获取UID小于：" + t._reportLoginInterval + "秒"); else {
t._reportLoginTime = i;
r.utils.commomHttpRequest("https://apps.youlesp.com/gss?m=login&device_data=0", function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
var t = this;
if (a.default.IsDouyin) {
if (e) {
var i = JSON.parse(e);
if (i && i.toutiao) {
r.utils.showLog("本地配置数据:" + JSON.stringify(i.toutiao));
d = JSON.stringify(i.toutiao);
}
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._sysInfo = this.tt.getSystemInfoSync();
r.utils.showLog("抖音平台信息：" + JSON.stringify(this._sysInfo));
this._sysInfo && this._sysInfo.appName && "news_article_lite" == this._sysInfo.appName && (this.isNewsArticleLite = !0);
this._loadConfig();
var o = this;
this._recorder = this.tt.getGameRecorderManager();
if (this._recorder) {
this._recorder.onStart(function(e) {
o._videoPath = "";
t.isClickEnd = !1;
t.is_auto_share_video = !1;
r.utils.isRecording = !0;
console.log("录屏开始>>>");
r.utils.showLog("录屏开始");
t.recorderStarTime = new Date().getTime();
cc.game.emit("YZ_CommonMessage", {
type: "YZ_RecordStart"
});
});
this._recorder.onStop(function(e) {
r.utils.showLog("录屏结束 :" + e.videoPath);
r.utils.isRecording = !1;
cc.game.emit("YZ_CommonMessage", {
type: "YZ_RecordEnd"
});
var i = (new Date().getTime() - t.recorderStarTime) / 1e3;
if (i > 3) {
o._videoPath = e.videoPath;
r.utils.showLog("录屏时间大于3秒", i);
if (t.isAutoShare) {
if (t.isClickEnd) {
t.shareVideo();
t._shareCallback = null;
t.is_auto_share_video = !0;
} else if (r.utils.checkResultShow(1)) {
r.utils.showLog("满足自动分享条件，弹出分享窗口！");
if (null == r.utils.rewardCloseFunc) {
r.utils.rewardValue = 0;
r.utils.showShareRecordPanel();
}
} else if (i > 100 && null == r.utils.rewardCloseFunc) {
r.utils.rewardValue = 0;
r.utils.showShareRecordPanel();
}
} else t.isAutoShare = !0;
} else {
t.isClickEnd && t.tt.showToast({
title: "录屏时间小于3秒!",
icon: "fail",
duration: 2e3,
success: function(e) {
console.log("" + e);
},
fail: function(e) {
console.log("showToast调用失败");
}
});
o._videoPath = "";
r.utils.showLog("录屏时间小于3秒，录录屏地址置空！");
}
});
}
this.tt.showShareMenu({
withShareTicket: !1
});
this.tt.onShareAppMessage(function(e) {
return o._getShareInfo();
});
r.utils.registerServerInitEvent(function() {
t.ServerConfig.add_favorite && setTimeout(function() {
r.utils.showLog("延迟调用添加搜藏!!");
t.showFavoriteGuide();
}, 1e3 * t.ServerConfig.add_favorite);
}, this);
}
};
e.prototype.showFavoriteGuide = function() {
this.tt.showFavoriteGuide ? this.tt.showFavoriteGuide({
type: "bar",
content: "一键添加到我的小程序",
position: this.ServerConfig.favorite_type ? this.ServerConfig.favorite_type : "bottom",
success: function(e) {
r.utils.showLog("引导组件展示成功");
},
fail: function(e) {
r.utils.showLog("引导组件展示失败:ero=" + JSON.stringify(e));
}
}) : r.utils.showLog("当前头条版本不支持添加收藏！");
};
e.prototype.loadJumpIds = function() {
var e = this;
return new Promise(function(t, i) {
cc.loader.load("game.json", function(o, n) {
if (!o) {
n.ttNavigateToMiniGameAppIdList.forEach(function(t) {
e._jumpIds += t + ",";
});
e._jumpIds.substring(0, e._jumpIds.lastIndexOf(","));
t();
}
i(o);
});
});
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsDouyin) {
r.utils.commomHttpRequest("https://apps.youlesp.com/gss?m=g&jump_id=" + this._jumpIds, function(t, i) {
if (t && i) {
r.utils.showLog("抖音服务器配置数据获取成功: data = " + i);
var o = JSON.parse(i);
r.utils.DebugLoacalConfig ? r.utils.showLog("调试模式，使用本地配置!") : e._serverConfig = o;
} else r.utils.showLog("抖音服务器配置数据获取失败, 使用本地配置!");
if (e.ServerConfig) {
if ("false" == e.ServerConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告ID");
r.utils.config.douyinconfig.bannerId = e.ServerConfig.banner_pos_id;
r.utils.config.douyinconfig.insertId = e.ServerConfig.intersititia_pos_id;
r.utils.config.douyinconfig.videoId = e.ServerConfig.video_pos_id;
}
e._serverConfig.shares && e._serverConfig.shares.sy_title && (r.utils.config.otherconfig.shareTitle = e._serverConfig.shares.sy_title);
e._serverConfig.shares && e._serverConfig.shares.sy_img && (r.utils.config.otherconfig.shareImgUrl = e._serverConfig.shares.sy_img);
} else e._serverConfig = JSON.parse(d);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.recordStart = function() {
a.default.IsDouyin && this._recorder && this._recorder.start({
duration: this.ServerConfig.record_duration ? this.ServerConfig.record_duration : 120
});
};
e.prototype.recordEnd = function() {
a.default.IsDouyin && this._recorder.stop();
};
e.prototype.share = function(e) {
if (a.default.IsDouyin) {
this._shareCallback = e;
this._videoPath && !r.utils.isRecording ? this.shareVideo() : this.shareImage();
}
};
e.prototype.shareVideo = function() {
if (a.default.IsDouyin && this._videoPath) {
var e = this;
this.tt.shareAppMessage({
channel: "video",
extra: {
videoPath: e._videoPath
},
success: function() {
cc.log("视频分享成功!");
e._shareCallback && e._shareCallback(!0);
},
fail: function(t) {
cc.log("视频分享失败!", JSON.stringify(t));
e._videoPath = "";
var i = "分享失败!";
if (t && t.errMsg) if (-1 != (i = t.errMsg).indexOf("fail")) {
console.log(e._sysInfo);
i = "XiGua" == e._sysInfo.appName ? "分享失败!" : "分享失败，录屏时间太短！";
} else i = "分享失败!";
e._shareCallback && e._shareCallback(!1, i);
if (e.is_auto_share_video) {
e.is_auto_share_video = !1;
e.tt.showToast({
title: i,
icon: "fail",
duration: 2e3,
success: function(e) {
console.log("" + e);
},
fail: function(e) {
console.log("showToast调用失败");
}
});
}
}
});
}
};
e.prototype.shareImage = function() {
if (a.default.IsDouyin) {
var e = r.utils.getShareInfo();
r.utils.showLog("分享图片：title:" + e.title + "; imageUrl:" + e.imageUrl);
if (e) {
var t = this;
this.tt.shareAppMessage({
title: e.title,
imageUrl: e.imageUrl,
success: function() {
r.utils.showLog("图片分享成功!");
t._shareCallback && t._shareCallback(!0);
},
fail: function(e) {
r.utils.showLog("图片分享失败!" + JSON.stringify(e));
t._shareCallback && t._shareCallback(!1);
}
});
}
}
};
e.prototype.showMoreGamesButton = function(e) {
if (a.default.IsDouyin) {
var t = 0, i = 0, o = 0, n = 0;
if (cc.view.getDesignResolutionSize().width < 1080) {
o = 188 / 1080 * this._sysInfo.screenWidth;
n = 223 / 1080 * this._sysInfo.screenWidth;
} else {
o = 188 / cc.view.getDesignResolutionSize().width * this._sysInfo.screenWidth;
n = 223 / cc.view.getDesignResolutionSize().width * this._sysInfo.screenWidth;
}
if (e) {
e.left ? t = e.left / cc.view.getDesignResolutionSize().width * this._sysInfo.screenWidth : e.right && (t = this._sysInfo.screenWidth - e.right / cc.view.getDesignResolutionSize().width * this._sysInfo.screenWidth - o);
e.top ? i = e.top / cc.view.getDesignResolutionSize().height * this._sysInfo.screenHeight : e.bottom && (i = this._sysInfo.screenHeight - e.bottom / cc.view.getDesignResolutionSize().height * this._sysInfo.screenHeight - n);
}
r.utils.showLog("更多游戏按钮参数：left:" + t + "; top:" + i + "; width:" + o + "; height:" + n);
return this.tt.createMoreGamesButton({
type: "image",
image: "img/more_game.png",
style: {
left: t,
top: i,
width: o,
height: n,
lineHeight: 40,
backgroundColor: "#ff0000",
textColor: "#ffffff",
textAlign: "center",
fontSize: 16,
borderRadius: 4,
borderWidth: 0,
borderColor: "#ff0000"
},
appLaunchOptions: [],
onNavigateToMiniGame: function(e) {
r.utils.showLog("跳转其他小游戏" + e);
e && e.errCode;
}
});
}
};
e.prototype._getShareInfo = function() {
if (a.default.IsDouyin) {
var e = r.utils.getShareInfo();
if (e) return {
title: e.title,
imageUrl: e.imageUrl,
success: function(e) {
r.utils.showLog("分享成功!");
},
fail: function(e) {
r.utils.showLog("分享失败!");
}
};
}
return {};
};
e.prototype.isOverMiniVersion = function(e) {
return !(!a.default.IsDouyin || !this._sysInfo || null == e) && this._compareVersion(this._sysInfo.SDKVersion, e);
};
e.prototype._compareVersion = function(e, t) {
return parseInt(e.split(".").join("")) >= parseInt(t.split(".").join(""));
};
e.prototype.isShowMoreGamesModal = function() {
if (a.default.IsAndroid && this.tt.showMoreGamesModal) return !0;
r.utils.showLog("当前版本不支持显示抖音更多游戏弹窗！");
return !1;
};
e.prototype.showMoreGamesModal = function() {
a.default.IsAndroid ? this.tt.showMoreGamesModal({
appLaunchOptions: [],
success: function(e) {
console.log("success", e.errMsg);
},
fail: function(e) {
console.log("fail", e.errMsg);
}
}) : r.utils.showMsg("当前平台暂时不支持跳转");
};
e.prototype.getRecommondGameList = function() {
return a.default.IsDouyin && this.ServerConfig ? this.ServerConfig.jump_list : null;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsDouyin) {
var o = "https://report.youletd.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsDouyin) {
var t = "https://report.youletd.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showToast = function(e) {
a.default.IsDouyin && tt.showToast({
title: e,
icon: "none",
duration: 2e3,
success: function(e) {
console.log("" + e);
},
fail: function(e) {
console.log("showToast调用失败");
}
});
};
e.prototype.GameExit = function() {
tt.exitMiniProgram({
success: function(e) {
console.log("调用成功", e.data);
},
fail: function(e) {
console.log("调用失败", e.errMsg);
}
});
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_FaceBook: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "789d3SaOtJD+5GQDhT0yUOx", "YZ_Tool_FaceBook");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this._sysInfo = null;
this._serverConfig = null;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.faceBookConfig.version;
};
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < this._loginInterval) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("facebook暂时不获取uid，uid全部为0");
this._uid = "0";
this.reportLogin();
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - this._reportLoginTime) / 1e3;
if (o > 0 && o < this._reportLoginInterval) r.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒"); else {
this._reportLoginTime = i;
var n = "https://apps.youlesp.com/gss?m=login&device_data=" + encodeURI(JSON.stringify(this._sysInfo));
r.utils.commomHttpRequest(n, function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
r.utils.showLog("init faceBook");
if (a.default.IsFaceBook) {
if (e) {
var t = JSON.parse(e);
t && t.facebook && (d = JSON.stringify(t.facebook));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._loadConfig();
}
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsFaceBook) {
r.utils.commomHttpRequest("https://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("faceBook服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
if (o) if (r.utils.DebugLoacalConfig) r.utils.showLog("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = o;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (r.utils.showLogView = !0);
} else r.utils.showLog("faceBook服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("facebook服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.faceBookConfig.videoId = e._serverConfig.video_pos_id || r.utils.config.faceBookConfig.videoId;
r.utils.config.faceBookConfig.insertId = e._serverConfig.intersititia_pos_id || r.utils.config.faceBookConfig.insertId;
r.utils.config.faceBookConfig.bannerId = e._serverConfig.banner_pos_id || r.utils.config.faceBookConfig.bannerId;
} else r.utils.showLog("使用本地配置的广告ID"); else e._serverConfig = JSON.parse(d);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.isOverMiniVersion = function(e) {
return !!(a.default.IsFaceBook && this._sysInfo && this._sysInfo.platformVersionCode) && this._sysInfo.platformVersionCode >= e;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsFaceBook) {
var o = "https://report.youletd.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsFaceBook) {
var t = "https://report.youletd.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_GoogleWeb: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d1a1e6qqmtF8b2CiqXLnmdD", "YZ_Tool_GoogleWeb");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./Utils"), n = function() {
function e() {
this._serverConfig = null;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function(e) {
this._loadConfig();
};
e.prototype._loadConfig = function() {
o.utils.emitServerInitEvent();
};
e.prototype.sendEvent = function(e) {};
e.prototype.postLevel = function(e, t, i) {};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
YZ_Tool_Hago: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4ad1bMIfxJE77RoQPrXJJW4", "YZ_Tool_Hago");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this.hg = hg;
this._sysInfo = null;
this._serverConfig = null;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.hagoConfig.version;
};
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < this._loginInterval) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("vivo暂时不获取uid，uid全部为0");
this._uid = "0";
this.reportLogin();
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - this._reportLoginTime) / 1e3;
if (o > 0 && o < this._reportLoginInterval) r.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒"); else {
this._reportLoginTime = i;
var n = "http://apps.youlesp.com/gss?m=login&device_data=" + encodeURI(JSON.stringify(this._sysInfo));
r.utils.commomHttpRequest(n, function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
r.utils.showLog("init hago");
if (a.default.IsHago) {
if (e) {
var t = JSON.parse(e);
t && t.hago && (d = JSON.stringify(t.hago));
}
0;
this._sysInfo = this.hg.getSystemInfoSync();
if (this._sysInfo) {
r.utils.showLog("Hago 小游戏平台信息: " + JSON.stringify(this.SysInfo));
"en-us" == this._sysInfo.language ? i18n.init("en") : "pt-br" == this._sysInfo.language ? i18n.init("pt") : i18n.init(this._sysInfo.language);
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._loadConfig();
}
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsHago) {
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("Hago服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
if (o) if (r.utils.DebugLoacalConfig) r.utils.showLog("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = o;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (r.utils.showLogView = !0);
} else r.utils.showLog("Hago服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("Hago服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.hagoConfig.videoId = e._serverConfig.video_pos_id;
} else r.utils.showLog("使用本地配置的广告ID"); else e._serverConfig = JSON.parse(d);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.isOverMiniVersion = function(e) {
return !!(a.default.IsHago && this._sysInfo && this._sysInfo.platformVersionCode) && this._sysInfo.platformVersionCode >= e;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsHago) {
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsHago) {
var t = "http://report.youlesp.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_HuaWei: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7a4893Gs+9OpLSK3fRFXNCD", "YZ_Tool_HuaWei");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = e("./UMengSDK/quickGame/uma.min.js"), h = cc._decorator, d = h.ccclass, f = (h.property, 
""), _ = function() {
function e() {
this.qg = window.qg;
this._sysInfo = null;
this._serverConfig = null;
this._nativeInsertAdClickTimes = 0;
this._shortcutCreated = !1;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this._source = "";
this._luanchType = "";
this._luanchData = "";
this.isReportActive = !1;
this.yz_conversion_type = "";
this.passCount = 0;
this.playCount = 0;
this._is_login = !1;
this._isShowLogin = !1;
this._loging = !1;
this.isRequestLogin = !1;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "NativeInsertAdClickTimes", {
get: function() {
return this._nativeInsertAdClickTimes;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ShortcutCreated", {
get: function() {
return this._shortcutCreated;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < this._loginInterval) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
this._uid = "0";
this.reportLogin();
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - this._reportLoginTime) / 1e3;
if (o > 0 && o < this._reportLoginInterval) r.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒"); else {
this._reportLoginTime = i;
var n = "http://apps.youlesp.com/gss?m=login&device_data=" + encodeURI(JSON.stringify(this._sysInfo));
r.utils.commomHttpRequest(n, function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
"activate" == e.yz_conversion_type && t.reportUserActive();
if ("login" == e.yz_conversion_type && e._is_login) {
r.utils.showLog("用户完成登陆行为!");
e.reportUserActive();
}
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.reportUserActive = function() {
r.utils.showLog("上报用户激活！！");
if (!this.isReportActive) {
this.isReportActive = !0;
this.reportAttributedEvent(l.AttributedType.Active, l.AttributedKey.Active, l.AttributedValue.Active);
}
};
e.prototype.init = function(e) {
if (a.default.IsHuaWei) {
this.umaInit();
if (e) {
var t = JSON.parse(e);
t && t.huawei && (f = JSON.stringify(t.huawei));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._sysInfo = this.qg.getSystemInfoSync();
this._sysInfo && r.utils.showLog("huawei 小游戏平台信息: " + JSON.stringify(this.SysInfo));
var i = this.qg.getLaunchOptionsSync();
this._luanchData = c.default.getItem(l.default.ST_LUANCH_DATA);
this._luanchType = c.default.getItem(l.default.ST_LUANCH_TYPE);
if (this._luanchData && this._luanchType) {
r.utils.showLog("获取到本地缓存数据启动类型：" + this._luanchType);
r.utils.showLog("获取到本地缓存数据启动参数：" + this._luanchData);
} else if (i) try {
if (i.referrerInfo && "{}" != JSON.stringify(i.referrerInfo)) {
var o = i.referrerInfo;
r.utils.showLog("获取到小程序启动来源信息：" + JSON.stringify(o));
this._luanchType = o.type;
c.default.setItem(l.default.ST_LUANCH_TYPE, this._luanchType);
}
if (i.query && "{}" != JSON.stringify(i.query)) {
var n = JSON.parse(i.query), s = JSON.stringify(n);
this._luanchData = s;
this.yz_conversion_type = n.yz_conversion_type;
c.default.setItem(l.default.ST_LUANCH_DATA, this._luanchData);
r.utils.showLog("获取到小程序启动参数：" + s + " 回传类型：" + this.yz_conversion_type);
}
} catch (e) {
r.utils.showLog("获取到小程序启动参数异常");
}
this._loadConfig();
this._nativeInsertAdClickTimes = c.default.getItem("NativeInsertAdClickTimes");
if (c.default.getItem("LastDateTime") != new Date().toDateString()) {
this._nativeInsertAdClickTimes = 0;
c.default.setItem("NativeInsertAdClickTimes", 0);
}
}
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsHuaWei) {
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("Huawei服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
if (o) if (r.utils.DebugLoacalConfig) r.utils.showLog("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = o;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (r.utils.showLogView = !0);
} else r.utils.showLog("Huawei服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("Huawei服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) {
if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.huaweiConfig.bannerId = e._serverConfig.banner_pos_id;
r.utils.config.huaweiConfig.insertId = e._serverConfig.intersititia_pos_id;
r.utils.config.huaweiConfig.videoId = e._serverConfig.video_pos_id;
r.utils.config.huaweiConfig.nativeInsertIds = e.ServerConfig.native_intersititial_pos_id;
r.utils.config.huaweiConfig.nativeBannerIds = e.ServerConfig.native_banner_pos_id;
r.utils.config.huaweiConfig.nativeTryGameIds = e.ServerConfig.native_trygame_pos_id;
r.utils.config.huaweiConfig.nativeSplashId = e.ServerConfig.native_splash_id;
} else r.utils.showLog("使用本地配置的广告ID");
if (e.ServerConfig.native_banner_configs) for (var n = 0; n < e.ServerConfig.native_banner_configs.length; n++) {
r.utils.showLog("获取到原生广告配置:" + e.ServerConfig.native_banner_configs[n].location, ">>>>", JSON.stringify(e.ServerConfig.native_banner_configs[n]));
r.utils.config.huaweiConfig.setNativeBannerInfo(e.ServerConfig.native_banner_configs[n].location, e.ServerConfig.native_banner_configs[n]);
}
if (e.ServerConfig.yz_conversion_type) {
e.yz_conversion_type = e.ServerConfig.yz_conversion_type;
r.utils.showLog("回传类型：" + e.yz_conversion_type);
}
e.ServerConfig.is_login && "false" == e.ServerConfig.is_login && (e._is_login = !0);
e._isShowLogin = !0;
e.isRequestLogin && e.login();
} else e._serverConfig = JSON.parse(f);
cc.director.emit("IsDataInit");
r.utils.emitServerInitEvent();
});
}
};
e.prototype.isOverMiniVersion = function(e) {
return !!(a.default.IsHuaWei && this._sysInfo && this._sysInfo.platformVersionCode) && this._sysInfo.platformVersionCode >= e;
};
e.prototype.createShortcut = function(e) {
var t = e;
if (a.default.IsHuaWei && this.canCreateShortcut()) {
var i = this;
i.qg.installShortcut({
success: function() {
r.utils.showLog("桌面图标创建成功！");
i._shortcutCreated = !0;
t && t(!0);
},
fail: function(e) {
i._shortcutCreated = !0;
cc.log("vivo创建失败err" + e);
t && t(!1);
},
complete: function() {}
});
} else {
cc.log("不能创建");
t && t(!1);
}
};
e.prototype.canCreateShortcut = function() {
return !!a.default.IsHuaWei && this.isOverMiniVersion("1041");
};
e.prototype.countNativeInserClick = function() {
this._nativeInsertAdClickTimes++;
c.default.setItem("NativeInsertAdClickTimes", this._nativeInsertAdClickTimes);
};
e.prototype.share = function(e) {
if (this.isOverMiniVersion("1052")) {
this.qg.share();
e && e(!0);
} else e && e(!1, "当前平台不支持");
};
e.prototype.checkHasShortCut = function(e) {
var t = this;
this.qg.hasShortcutInstalled({
success: function(i) {
r.utils.showLog("检测桌面快捷方式是否已经创建过: result=", i);
if (0 == i) {
t._shortcutCreated = !1;
e && e(!1);
} else {
t._shortcutCreated = !0;
e && e(!0);
}
},
fail: function() {
r.utils.showLog("检测失败！");
},
complete: function() {
r.utils.showLog("检测完成！");
}
});
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsHuaWei) {
if ("subscribe" == this.yz_conversion_type) {
r.utils.showLog("用户完成某项服务/频道订阅行为");
this.reportUserActive();
}
if (t == l.LevelStatus.GameWin) {
this.passCount++;
this.passCount === r.utils.getConfigByKey("pass_level_count_active") && this.reportAttributedEvent(l.AttributedType.GameAddiction, l.AttributedKey.GameAddiction, l.AttributedValue.PassLevelCountAction);
} else if (t === l.LevelStatus.GameStart) {
this.playCount++;
this.playCount == r.utils.getConfigByKey("play_level_count_active") && this.reportAttributedEvent(l.AttributedType.GameAddiction, l.AttributedKey.GameAddiction, l.AttributedValue.PlayLevelCountAction);
}
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsHuaWei) {
var t = "http://report.youlesp.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showToast = function(e) {
a.default.IsHuaWei && qg.showToast({
message: e,
duration: 2e3
});
};
e.prototype.reportAttributedEvent = function(e, t, i) {
if ("deeplink" == this._luanchType) {
r.utils.showLog("上报归因事件：  #eventType=" + e + "#eventKey=" + t + "#eventValue=" + i);
if (e == l.AttributedType.Active && c.default.getItem(l.default.ST_IS_REPORT_USER_ACTIVE)) r.utils.showLog("用户已经上报过激活，不再进行激活上报！"); else if (e == l.AttributedType.GameAddiction && c.default.getItem(l.default.ST_IS_REPORT_GAME_ADDICTION)) r.utils.showLog("用户已经上报过关键行为，不再进行激活上报！"); else {
var o = new XMLHttpRequest();
o.timeout = 15e3;
var n = {};
n.app_id = r.utils.config.huaweiConfig.appID;
n.channel = "huawei_kyx";
n.uid = this._service_uid;
n.event_type = e;
n.event_key = t;
n.event_value = i;
n.app_version = r.utils.config.huaweiConfig.version;
n.luanchDate = encodeURI(this._luanchData);
r.utils.showLog("归因请求参数:" + JSON.stringify(n));
var s = JSON.stringify(n);
r.utils.showLog("归因 > json_data=" + r.utils.aesEncrypt(s));
var a = "https://track.youletd.com/wechatcounterpart/dockingreturn?json=" + r.utils.aesEncrypt(s) + "&time_stamp=" + new Date().getTime();
r.utils.showLog("归因服务器地址:" + a);
o.open("GET", a);
o.send();
o.onreadystatechange = function() {
r.utils.showLog("请求状态改变, reaedyState=", o.readyState, "; status=", o.status);
if (4 == o.readyState) if (200 == o.status) {
e == l.AttributedType.Active && c.default.setItem(l.default.ST_IS_REPORT_USER_ACTIVE, "true");
e == l.AttributedType.GameAddiction && c.default.setItem(l.default.ST_IS_REPORT_GAME_ADDICTION, "true");
r.utils.showLog("归因上报成功：", o.responseText);
} else r.utils.showLog("归因上报失败！");
};
o.ontimeout = function() {
r.utils.showLog("归因请求超时!");
};
o.onerror = function(e) {
r.utils.showLog("归因请求失败!");
};
}
} else r.utils.showLog("luanchType=" + this._luanchType + ",不进行归因上报");
};
e.prototype.GameExit = function() {
if (a.default.IsHuaWei) {
r.utils.showLog("GameExit");
try {
qg.exitApplication({
success: function() {
console.log("exitApplication success");
},
fail: function() {
console.log("exitApplication fail");
},
complete: function() {
console.log("exitApplication complete");
}
});
} catch (e) {
cc.log(e);
}
}
};
e.prototype.login = function() {
var e = this;
r.utils.showLog("huawei login");
this.isRequestLogin = !0;
if (this._isShowLogin && !this._loging) {
this._loging = !0;
if (this._is_login) {
this._loging = !1;
this.showToast("登录成功！");
cc.game.emit(l.default.ST_LOGIN_SUCCESS);
r.utils.showLog("已经登录过不再重新登录！");
"login" == this.yz_conversion_type && this.reportUserActive();
} else {
this.qg.gameLogin({
forceLogin: 1,
appid: r.utils.config.huaweiConfig.appID,
success: function(t) {
e._loging = !1;
e.showToast("登录成功！");
cc.game.emit(l.default.ST_LOGIN_SUCCESS);
r.utils.showLog("Game login success:" + t);
e._is_login = !0;
if ("login" == e.yz_conversion_type) {
r.utils.showLog("用户完成登陆行为!");
e.reportUserActive();
}
},
fail: function(t, i) {
e._loging = !1;
e.showToast("登录失败！");
cc.game.emit(l.default.ST_LOGIN_FAIL);
r.utils.showLog("Game login fail:" + t + ", code:" + i);
}
});
this.isRequestLogin = !1;
}
}
};
e.prototype.umaInit = function() {
if (this.checkUmeng()) {
r.utils.showLog("umeng init #id=" + r.utils.config.huaweiConfig.umengId);
u.init({
appKey: r.utils.config.huaweiConfig.umengId,
useOpenid: !1,
debug: !0
});
} else r.utils.showLog("友盟ID未配置，不执行友盟初始化>>>>");
};
e.prototype.umaOnStart = function(e) {
this.checkUmeng() && qg.uma.stage.onStart({
stageId: e,
stageName: "第" + e + "关"
});
};
e.prototype.checkUmeng = function() {
return !!r.utils.config.huaweiConfig.umengId;
};
e.prototype.umaReportedLevel = function(e, t) {
this.checkUmeng() && qg.uma.stage.onEnd({
stageId: e,
stageName: "第" + e + "关",
event: t
});
};
e.prototype.umaTrackEvent = function(e, t) {
this.checkUmeng() && qg.uma.trackEvent(e, t);
};
return e = o([ d ], e);
}();
i.default = _;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./UMengSDK/quickGame/uma.min.js": "uma.min",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_IOS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b78fctBdVZLkqQe7msmCH01", "YZ_Tool_IOS");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./PlatUtils"), s = e("./Utils"), a = e("./YZ_Constant"), r = e("./YZ_LocalStorage"), l = cc._decorator, c = l.ccclass, u = (l.property, 
""), h = function() {
function e() {
this.className = "JNIHelper";
this._serverConfig = null;
this._uid = "0";
this._service_uid = "0";
this.moreGameShowType = 0;
this.showGameExitDialogType = 0;
this.appList = "";
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this._gameExitDialogNode = null;
this.deviceInfo = "";
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return s.utils.config.nativeIoSConfig.version;
};
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - this._reportLoginTime) / 1e3;
if (o > 0 && o < this._reportLoginInterval) s.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒"); else {
this._reportLoginTime = i;
var n = "https://apps.youlesp.com/gss?m=login&device_data=" + encodeURI(this.deviceInfo);
s.utils.commomHttpRequest(n, function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
s.utils.showLog("data=" + o);
s.utils.showLog("result=" + n);
s.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
s.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
r.default.setItem(a.default.ST_SERVICE_UID, t._service_uid);
}
}
} else s.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
if (n.default.IsNativeIOS) {
if (e) {
var t = JSON.parse(e);
if (t && t.ios) {
s.utils.showLog("本地配置数据:" + JSON.stringify(t.ios));
u = JSON.stringify(t.ios);
}
}
this._service_uid = r.default.getItem(a.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._loadConfig();
}
};
e.prototype.showGameExitDialog = function() {
if (!s.utils._isConfigInit) {
s.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (this._gameExitDialogNode && cc.isValid(this._gameExitDialogNode)) s.utils.showLog("退出窗口还在。"); else if (s.utils.config.otherconfig.gameExitDialog) {
var e = cc.instantiate(s.utils.config.otherconfig.gameExitDialog);
if (e) {
this._gameExitDialogNode && cc.isValid(this._gameExitDialogNode) && this._gameExitDialogNode.destroy();
this._gameExitDialogNode = e;
this._gameExitDialogNode.group = "default";
cc.director.getScene().addChild(this._gameExitDialogNode, 9999);
}
} else s.utils.showLog("warn:未找到预制体 GameExitDialog, 请查看CommonUtils组件上是否赋值 !");
};
e.prototype.GameExit = function() {
if (n.default.IsNativeIOS) {
cc.log("AdAgentNative GameExit");
try {
jsb.reflection.callStaticMethod(this.className, "gameExit");
} catch (e) {
cc.log(e);
}
}
};
e.prototype.getMoreGameShowType = function() {
try {
this.moreGameShowType = jsb.reflection.callStaticMethod(this.className, "getMoreGameShowType", "()I");
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.getDeviceInfo = function() {
try {
this.deviceInfo = jsb.reflection.callStaticMethod(this.className, "getDeviceInfo", "()Ljava/lang/String;");
s.utils.showLog("获取原生平台手机设备信息：" + this.deviceInfo);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.showMoreGames = function() {
if (n.default.IsNativeIOS) {
s.utils.showLog("AdAgentNative showMoreGame");
try {
jsb.reflection.callStaticMethod(this.className, "showNativeMoreGame", "()V");
} catch (e) {
cc.log(e);
}
}
};
e.prototype._loadConfig = function() {
var e = this;
if (n.default.IsNativeIOS) {
s.utils.commomHttpRequest("https://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
s.utils.showLog("原生IOS服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
if (o) if (s.utils.DebugLoacalConfig) s.utils.showLog("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = o;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (s.utils.showLogView = !0);
} else s.utils.showLog("原生安卓服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else s.utils.showLog("原生安卓服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
s.utils.showLog("使用服务器下发的广告id");
s.utils.config.nativeIoSConfig.bannerId = e._serverConfig.banner_pos_id;
s.utils.config.nativeIoSConfig.insertId = e._serverConfig.intersititia_pos_id;
s.utils.config.nativeIoSConfig.videoId = e._serverConfig.video_pos_id;
} else {
e._serverConfig.video_pos_id = s.utils.config.nativeIoSConfig.videoId;
e._serverConfig.banner_pos_id = s.utils.config.nativeIoSConfig.bannerId;
e._serverConfig.intersititia_pos_id = s.utils.config.nativeIoSConfig.insertId;
s.utils.showLog("使用本地配置的广告ID");
} else e._serverConfig = JSON.parse(u);
s.utils.showLog("执行IOS >>> 初始化");
jsb.reflection.callStaticMethod(e.className, "init:", JSON.stringify(e._serverConfig));
s.utils.emitServerInitEvent();
});
}
};
e.prototype.commomHttpRequest = function(e, t) {
if (s.utils._isConfigInit) {
var i = t, o = new XMLHttpRequest();
o.timeout = 6e3;
var n = e + "&kyx=false&app_id=" + s.utils.config.nativeAndroidConfig.appID + "&channel=" + s.utils.config.nativeAndroidConfig.channel + "&device_uid=" + s.utils.Tool_Native.uid + "&uid=" + s.utils.Tool_Native.serviceId + "&game_type=2&time_stamp=" + new Date().getTime();
s.utils.showLog("服务器地址:" + n);
o.open("POST", n);
o.send("app_list=" + this.appList);
o.onreadystatechange = function() {
s.utils.showLog("请求状态改变, reaedyState=", o.readyState, "; status=", o.status);
4 == o.readyState && 200 == o.status && i && i(!0, o.responseText);
200 != o.status && i && i(!1, "");
};
o.ontimeout = function() {
s.utils.showLog("请求超时!");
i && i(!1, "");
};
o.onerror = function(e) {
i && i(!1, "");
};
} else s.utils.showLog("warn:本地数据未初始化!");
};
e.prototype.setLocalConfig = function(e) {
try {
s.utils.showLog("设置原生客户端数据数据" + e);
jsb.reflection.callStaticMethod(this.className, "setLocalConfig", "(Ljava/lang/String;)V", e);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.getNativeData = function() {
var e = "";
try {
e = jsb.reflection.callStaticMethod(this.className, "getLocalConfig");
s.utils.showLog("获取原生客户端数据数据 : " + e);
} catch (e) {
s.utils.showLog(e);
}
return e;
};
e.prototype.navigateToGame = function(e, t, i) {
if (n.default.IsNativeIOS) try {
jsb.reflection.callStaticMethod(this.className, "navigateToGame:", e);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.getRecommondGameList = function() {
return n.default.IsNativeIOS && s.utils.Tool_IOS && s.utils.Tool_IOS.ServerConfig ? s.utils.Tool_IOS.ServerConfig.jump_list : null;
};
e.prototype.postLevel = function(e, t, i) {
if (n.default.IsNativeIOS) {
var o = "https://report.youletd.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
s.utils.commomHttpRequest(o, function(e, t) {
e ? s.utils.showLog("关卡数据上报成功！") : s.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (n.default.IsNativeIOS) {
var t = "https://report.youletd.com/gss?m=revent&event=" + encodeURI(e);
s.utils.commomHttpRequest(t, function(e, t) {
e ? s.utils.showLog("上报自定义事件成功！") : s.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showToast = function(e) {
if (n.default.IsNativeIOS) {
console.log("showToast >>>>>");
jsb.reflection.callStaticMethod(this.className, "showToast:", e);
}
};
e.prototype.realNameAuth = function(e, t, i) {
if (s.utils._isConfigInit) {
var o = i, n = new XMLHttpRequest();
n.timeout = 15e3;
var r = "https://apps.youlesp.com/gss?m=realNameAuth&time_stamp=" + new Date().getTime(), l = {
kyx: !1
};
l.app_id = s.utils.config.nativeIoSConfig.appID;
l.channel = "ios";
l.device_uid = this.uid;
l.uid = this.serviceId;
l.game_type = 2;
l.device_data = this.deviceInfo;
l.game_version = s.utils.config.nativeIoSConfig.version;
l.reqv = a.default.SERVER_VERSION;
l.app_list = this.appList;
l.id_card = e;
l.real_name = t;
s.utils.showLog("服务器地址:" + r);
s.utils.showLog("请求参数:" + JSON.stringify(l));
var c = JSON.stringify(l);
n.open("POST", r);
n.send("json_data=" + s.utils.aesEncrypt(c));
s.utils.showLog("json_data=:" + s.utils.aesEncrypt(c));
n.onreadystatechange = function() {
s.utils.showLog("请求状态改变, reaedyState=", n.readyState, "; status=", n.status);
4 == n.readyState && (200 == n.status ? o && o(!0, s.utils.aesDecrypt(n.responseText)) : o && o(!1, ""));
n.status;
};
n.ontimeout = function() {
s.utils.showLog("请求超时!");
o && o(!1, "");
};
n.onerror = function(e) {
o && o(!1, "");
};
} else s.utils.showLog("warn:本地数据未初始化!");
};
return e = o([ c ], e);
}();
i.default = h;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_Kwai: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8a530Okg5dP5L+U8tqkTRVh", "YZ_Tool_Kwai");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this._recorder = null;
this._videoPath = null;
this._shareCallback = null;
this.recorderStarTime = 0;
this.isAutoShare = !0;
this.isClickEnd = !1;
this._serverConfig = null;
this._sysInfo = {};
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this.kwaigame = kwaigame;
this._canShowRecord = !1;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.kwaiConfig.version;
};
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < 30) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("baidu暂时不获取uid，uid全部为0");
this._uid = "0";
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - t._reportLoginTime) / 1e3;
if (o > 0 && o < 30) r.utils.showLog("上报登录获取UID小于：" + t._reportLoginInterval + "秒"); else {
t._reportLoginTime = i;
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=login&device_data=0", function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
if (a.default.IsKwai) {
if (e) {
var t = JSON.parse(e);
if (t && t.kwai) {
r.utils.showLog("本地配置数据:" + JSON.stringify(t.kwai));
d = JSON.stringify(t.kwai);
}
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._loadConfig();
this.initRecord();
}
};
e.prototype.readyGo = function() {
this.kwaigame.readyGo();
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsKwai) {
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("快手服务器配置数据获取成功: data = ", i);
if (i) {
var o = JSON.parse(i);
o ? r.utils.DebugLoacalConfig ? cc.warn("开启了本地数据测试，使用本地配置!") : e._serverConfig = o : r.utils.showLog("快手服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("快手服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) {
e._serverConfig.shares && e._serverConfig.shares.sy_title && (r.utils.config.otherconfig.shareTitle = e._serverConfig.shares.sy_title);
e._serverConfig.shares && e._serverConfig.shares.sy_img && (r.utils.config.otherconfig.shareImgUrl = e._serverConfig.shares.sy_img);
if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.kwaiConfig.videoId = e._serverConfig.video_pos_id;
r.utils.config.kwaiConfig.insertId = e._serverConfig.intersititia_pos_id || r.utils.config.kwaiConfig.insertId;
} else r.utils.showLog("使用本地配置的广告ID");
} else e._serverConfig = JSON.parse(d);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.initRecord = function() {
var e = this;
if (this.checkCanShowRecored()) {
this._recorder = this.kwaigame.createMediaRecorder();
if (this._recorder) {
this._recorder.init({
callback: function(t) {
if (t) {
r.utils.showLog("录屏初始化失败: " + JSON.stringify(t));
e._recorder = null;
} else r.utils.showLog("录屏初始化成功");
}
});
this._recorder.onError({
listener: function(e) {
r.utils.isRecording = !1;
cc.game.emit("YZ_CommonMessage", {
type: "YZ_RecordEnd"
});
r.utils.showLog("录屏终止: " + JSON.stringify(e));
}
});
}
} else r.utils.showLog("当前平台不支持录屏组件！");
};
e.prototype.share = function(e) {
if (a.default.IsKwai) {
this._shareCallback = e;
this.recorderStarTime > 0 ? this.shareVideo() : this.shareImage();
}
};
e.prototype.checkCanShowRecored = function() {
return this.kwaigame.isSupport(this.kwaigame.Support.features.Recorder);
};
e.prototype.shareVideo = function() {
var e = this;
if (this._recorder) {
if (!this._canShowRecord) {
this._shareCallback && this._shareCallback(!1, "录屏时间不足!");
return;
}
this._recorder.publishVideo({
callback: function(t) {
if (t) {
r.utils.showLog("分享录屏失败: " + JSON.stringify(t));
e._shareCallback && e._shareCallback(!1, "分享录屏失败!");
} else {
e._canShowRecord = !1;
r.utils.showLog("分享录屏成功");
e._shareCallback && e._shareCallback(!0, "分享录屏成功!");
}
}
});
} else {
this.checkCanShowRecored() ? r.utils.showLog("当前平台不支持录屏组件！") : r.utils.showLog("录屏初始化失败！");
this._shareCallback && this._shareCallback(!1, "分享录屏失败!");
}
};
e.prototype.recordStart = function() {
var e = this;
this._recorder && this._recorder.start({
callback: function(t) {
if (t) {
r.utils.isRecording = !1;
r.utils.showLog("开始录屏失败: " + JSON.stringify(t));
} else {
e._canShowRecord = !1;
r.utils.isRecording = !0;
e.recorderStarTime = new Date().getTime();
cc.game.emit("YZ_CommonMessage", {
type: "YZ_RecordStart"
});
r.utils.showLog("开始录屏成功");
}
}
});
};
e.prototype.recordEnd = function() {
var e = this;
this._recorder && this._recorder.stop({
callback: function(t) {
r.utils.isRecording = !1;
cc.game.emit("YZ_CommonMessage", {
type: "YZ_RecordEnd"
});
e._canShowRecord = !1;
if (t) r.utils.showLog("停止录屏失败: " + JSON.stringify(t)); else {
r.utils.showLog("停止录屏成功");
var i = (new Date().getTime() - e.recorderStarTime) / 1e3;
if (i > 3) {
e._canShowRecord = !0;
r.utils.showLog("录屏时间大于3秒", i, " isClickEnd=", e.isClickEnd);
if (e.isAutoShare) {
if (e.isClickEnd) {
e.shareVideo();
e._shareCallback = null;
} else if (r.utils.checkResultShow(1)) {
r.utils.showLog("满足自动分享条件，弹出分享窗口！");
if (null == r.utils.rewardCloseFunc) {
r.utils.rewardValue = 0;
r.utils.showShareRecordPanel();
}
} else if (i > 100 && null == r.utils.rewardCloseFunc) {
r.utils.rewardValue = 0;
r.utils.showShareRecordPanel();
}
} else e.isAutoShare = !0;
} else {
e.isClickEnd;
r.utils.showLog("录屏时间小于3秒，录录屏地址置空！");
}
}
}
});
};
e.prototype.shareImage = function() {
this.kwaigame.shareToMsg(this._getShareInfo());
};
e.prototype._getShareInfo = function() {
var e = this, t = {};
t.title = r.utils.config.otherconfig.shareTitle;
t.desc = r.utils.config.otherconfig.shareDesc ? r.utils.config.otherconfig.shareDesc : r.utils.config.otherconfig.shareTitle;
t.iconUrl = r.utils.config.otherconfig.shareIcon ? r.utils.config.otherconfig.shareIcon : r.utils.config.otherconfig.shareImgUrl;
t.imageUrl = r.utils.config.otherconfig.shareImgUrl;
t.extension = {
isShare: "share"
};
t.response = function(t) {
r.utils.showLog("分享完成: " + JSON.stringify(t));
e._shareCallback && e._shareCallback(!0, "分享成功!");
};
return t;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsKwai) {
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsKwai) {
var t = "http://report.youlesp.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype._compareVersion = function(e, t) {
return parseInt(e.split(".").join("")) >= parseInt(t.split(".").join(""));
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_Native: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "60a05J5l1dBI6a10/Es1IiB", "YZ_Tool_Native");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./PlatUtils"), s = e("./Utils"), a = e("./YZ_Constant"), r = e("./YZ_LocalStorage"), l = cc._decorator, c = l.ccclass, u = (l.property, 
""), h = "http://apps.youlesp.com/gss?", d = "http://report.youlesp.com/gss?", f = function() {
function e() {
this.className = "";
this._serverConfig = null;
this._uid = "0";
this._service_uid = "0";
this.moreGameShowType = 0;
this.showGameExitDialogType = 0;
this.appList = "";
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this._gameExitDialogNode = null;
this.deviceInfo = "";
this._reloadTimes = 6;
this._curloadTimes = 0;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return s.utils.config.nativeAndroidConfig.version;
};
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - this._reportLoginTime) / 1e3;
if (o > 0 && o < this._reportLoginInterval) s.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒"); else {
this._reportLoginTime = i;
var n = h + "m=loginv2&device_data=" + encodeURI(this.deviceInfo);
s.utils.commomHttpRequest(n, function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
s.utils.showLog(n);
if (n.uid) {
t._service_uid = "" + n.uid;
s.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
r.default.setItem(a.default.ST_SERVICE_UID, t._service_uid);
}
if (n.config) {
e._serverConfig = s.utils.aesDecrypt(n.config);
e.setLocalConfig(JSON.stringify(e._serverConfig));
}
}
} else s.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function() {
var e = this;
if (n.default.IsNativeAndroid) {
if (!(u = this.getNativeData())) {
s.utils.showLog("没有获取到本地数据，组件初始化失败！");
return;
}
var t = JSON.parse(u);
this.deviceInfo = t.device_info;
this.moreGameShowType = t.more_game_type;
this.showGameExitDialogType = t.show_game_exit_dialog;
this.appList = t.app_list;
this._service_uid = r.default.getItem(a.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._loadConfig();
n.default.IsNativeAndroid && cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function(t) {
t.keyCode != cc.macro.KEY.escape && t.keyCode != cc.macro.KEY.back || n.default.IsNativeAndroid && (1 == e.showGameExitDialogType ? e.showGameExitDialog() : e.GameExit());
}, this);
}
};
e.prototype.showGameExitDialog = function() {
if (!s.utils._isConfigInit) {
s.utils.showLog("warn:组件配置未初始化!");
return null;
}
if (this._gameExitDialogNode && cc.isValid(this._gameExitDialogNode)) s.utils.showLog("退出窗口还在。"); else if (s.utils.config.otherconfig.gameExitDialog) {
var e = cc.instantiate(s.utils.config.otherconfig.gameExitDialog);
if (e) {
this._gameExitDialogNode && cc.isValid(this._gameExitDialogNode) && this._gameExitDialogNode.destroy();
this._gameExitDialogNode = e;
this._gameExitDialogNode.group = "default";
cc.director.getScene().addChild(this._gameExitDialogNode, 9999);
}
} else s.utils.showLog("warn:未找到预制体 GameExitDialog, 请查看CommonUtils组件上是否赋值 !");
};
e.prototype.GameExit = function() {
if (n.default.IsNativeAndroid) {
cc.log("AdAgentNative GameExit");
try {
jsb.reflection.callStaticMethod(this.jniClassName, "gameExit", "()V");
} catch (e) {
cc.log(e);
}
}
};
e.prototype.getMoreGameShowType = function() {
try {
this.moreGameShowType = jsb.reflection.callStaticMethod(this.jniClassName, "getMoreGameShowType", "()I");
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.getDeviceInfo = function() {
try {
this.deviceInfo = jsb.reflection.callStaticMethod(this.jniClassName, "getDeviceInfo", "()Ljava/lang/String;");
s.utils.showLog("获取原生平台手机设备信息：" + this.deviceInfo);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.showMoreGames = function() {
if (n.default.IsNativeAndroid) {
s.utils.showLog("AdAgentNative showMoreGame");
try {
jsb.reflection.callStaticMethod(this.jniClassName, "showNativeMoreGame", "()V");
} catch (e) {
cc.log(e);
}
}
};
e.prototype._loadConfig = function() {
var e = this;
if (n.default.IsNativeAndroid) {
var t = "m=g&device_data=" + encodeURI(this.deviceInfo) + "&real_name_auth=" + s.utils.getRealNameAuthLocalData();
this.commomHttpRequest(h + t, function(t, i) {
e._curloadTimes++;
var o = !1;
if (t) {
s.utils.showLog("原生安卓服务器配置数据获取成功: data = " + i);
if (i) {
var n = JSON.parse(i);
if (n) if (s.utils.DebugLoacalConfig) s.utils.showLog("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = n;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (s.utils.showLogView = !0);
n.more_game_type && (e.moreGameShowType = n.more_game_type);
n.show_game_exit_dialog && (e.showGameExitDialogType = n.show_game_exit_dialog);
} else s.utils.showLog("原生安卓服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else {
s.utils.showLog("原生安卓服务器配置数据获取失败！");
if (e._curloadTimes < e._reloadTimes) {
s.utils.showLog("请求异常，重新拉取配置!");
o = !0;
}
}
e._serverConfig ? e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id ? s.utils.showLog("使用服务器下发的广告id") : s.utils.showLog("使用本地配置的广告ID") : e._serverConfig = JSON.parse(u);
if (o) e._loadConfig(); else if (!o || e._curloadTimes >= e._reloadTimes) {
e.setLocalConfig(JSON.stringify(e._serverConfig));
s.utils.emitServerInitEvent();
}
});
}
};
e.prototype.commomHttpRequest = function(e, t) {
if (s.utils._isConfigInit) {
var i = t, o = new XMLHttpRequest();
o.timeout = 6e3;
var n = e + "&kyx=false&app_id=" + s.utils.config.nativeAndroidConfig.appID + "&channel=" + s.utils.config.nativeAndroidConfig.channel + "&device_uid=" + s.utils.Tool_Native.uid + "&uid=" + s.utils.Tool_Native.serviceId + "&game_type=2&time_stamp=" + new Date().getTime() + "&game_version=" + s.utils.config.nativeAndroidConfig.version + "&reqv=" + a.default.SERVER_VERSION;
s.utils.showLog("服务器地址:" + n);
o.open("POST", n);
o.send("app_list=" + this.appList);
o.onreadystatechange = function() {
s.utils.showLog("请求状态改变, reaedyState=", o.readyState, "; status=", o.status);
4 == o.readyState && (200 == o.status ? i && i(!0, s.utils.aesDecrypt(o.responseText)) : i && i(!1, ""));
o.status;
};
o.ontimeout = function() {
s.utils.showLog("请求超时!");
i && i(!1, "");
};
o.onerror = function(e) {
i && i(!1, "");
};
} else s.utils.showLog("warn:本地数据未初始化!");
};
e.prototype.setLocalConfig = function(e) {
try {
s.utils.showLog("设置原生客户端数据数据" + e);
jsb.reflection.callStaticMethod(this.jniClassName, "setLocalConfig", "(Ljava/lang/String;)V", e);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.getNativeData = function() {
var e = "";
try {
e = jsb.reflection.callStaticMethod(this.jniClassName, "getLocalConfig", "()Ljava/lang/String;");
s.utils.showLog("获取原生客户端数据数据 : " + e);
} catch (e) {
s.utils.showLog(e);
}
return e;
};
e.prototype.navigateToGame = function(e, t, i) {
if (n.default.IsNativeAndroid) try {
jsb.reflection.callStaticMethod(this.jniClassName, "navigateToGame", "(Ljava/lang/String;)V", e);
} catch (e) {
s.utils.showLog(e);
}
};
Object.defineProperty(e.prototype, "jniClassName", {
get: function() {
if (this.className) return this.className;
try {
this.className = jsb.reflection.callStaticMethod("aa.b.c.a", "a", "()Ljava/lang/String;");
} catch (e) {}
return this.className;
},
enumerable: !1,
configurable: !0
});
e.prototype.getRecommondGameList = function() {
return n.default.IsNativeAndroid && s.utils.Tool_Native && s.utils.Tool_Native.ServerConfig ? s.utils.Tool_Native.ServerConfig.jump_list : null;
};
e.prototype.postLevel = function(e, t, i) {
if (n.default.IsNativeAndroid) {
var o = d + "m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
s.utils.commomHttpRequest(o, function(e, t) {
e ? s.utils.showLog("关卡数据上报成功！") : s.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.postRecommentShowData = function(e) {
if (n.default.IsNativeAndroid) {
var t = h + "m=rjumpshow&location=" + e;
s.utils.commomHttpRequest(t, function(e, t) {
e ? s.utils.showLog("上报互推组件显示位置成功！") : s.utils.showLog("上报互推组件显示位置失败！");
}.bind(this));
}
};
e.prototype.postDataByLocation = function(e, t, i) {
void 0 === i && (i = 0);
if (n.default.IsNativeAndroid) {
var o = d + "m=rjump&jump_app_id=" + e + "&location=" + t + "&status=" + i;
s.utils.commomHttpRequest(o, function(e, t) {
e ? s.utils.showLog("数据上报成功") : s.utils.showLog("数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (n.default.IsNativeAndroid) {
var t = d + "m=revent&event=" + encodeURI(e);
s.utils.commomHttpRequest(t, function(e, t) {
e ? s.utils.showLog("上报自定义事件成功！") : s.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.sendEventNew = function(e, t, i, o) {
var a = this;
void 0 === t && (t = "default");
void 0 === o && (o = !0);
if (n.default.IsNativeAndroid) {
var r = d + "m=reventv2&event=" + encodeURI(e) + "&event_id=" + t;
i && (r += "&event_data=" + encodeURI(i));
s.utils.showLog("自定义事件上报URL：" + r);
s.utils.commomHttpRequest(r, function(e, t) {
if (e) {
s.utils.showLog("上报自定义事件成功！");
o && a.callBackToEvent(t);
} else {
s.utils.showLog("上报自定义事件失败！");
o && a.callBackToEvent("false");
}
});
}
};
e.prototype.sendEventV3 = function(e, t, i) {
var o = this;
void 0 === t && (t = "default");
if (n.default.IsNativeAndroid) {
var a = d + "m=reventv2&event=" + encodeURI(e) + "&event_id=" + t;
i && (a += "&event_data=" + encodeURI(i));
s.utils.commomHttpRequest(a, function(e, t) {
if (e) {
s.utils.showLog("上报自定义事件成功！");
o.callBackToEvent(t);
} else {
s.utils.showLog("上报自定义事件失败！");
o.callBackToEvent("false");
}
});
}
};
e.prototype.callBackToEvent = function(e) {
if (n.default.IsNativeAndroid) try {
jsb.reflection.callStaticMethod(this.jniClassName, "callBackToEvent", "(Ljava/lang/String;)V", e);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.showToast = function(e) {
if (n.default.IsNativeAndroid) try {
jsb.reflection.callStaticMethod(this.jniClassName, "showToast", "(Ljava/lang/String;)V", e);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.showPrivacyAgreement = function() {
try {
jsb.reflection.callStaticMethod(this.jniClassName, "showPrivacyAgreement", "()V");
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.showRealNameAuthPanel = function(e) {
try {
jsb.reflection.callStaticMethod(this.jniClassName, "showRealNameAuthPanel", "(Ljava/lang/String;)V", e);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.realNameAuthResult = function(e) {
try {
jsb.reflection.callStaticMethod(this.jniClassName, "realNameAuthResult", "(Ljava/lang/String;)V", e);
} catch (e) {
s.utils.showLog(e);
}
};
e.prototype.realNameAuth = function(e, t, i) {
if (s.utils._isConfigInit) {
var o = i, n = new XMLHttpRequest();
n.timeout = 15e3;
var r = "https://apps.youlesp.com/gss?m=realNameAuth&time_stamp=" + new Date().getTime(), l = {
kyx: !1
};
l.app_id = s.utils.config.nativeAndroidConfig.appID;
l.channel = s.utils.config.nativeAndroidConfig.channel;
l.device_uid = s.utils.Tool_Native.uid;
l.uid = s.utils.Tool_Native.serviceId;
l.game_type = 2;
l.device_data = this.deviceInfo;
l.game_version = s.utils.config.nativeAndroidConfig.version;
l.reqv = a.default.SERVER_VERSION;
l.app_list = this.appList;
l.id_card = e;
l.real_name = t;
s.utils.showLog("服务器地址:" + r);
s.utils.showLog("请求参数:" + JSON.stringify(l));
var c = JSON.stringify(l);
n.open("POST", r);
n.send("json_data=" + s.utils.aesEncrypt(c));
s.utils.showLog("json_data=:" + s.utils.aesEncrypt(c));
n.onreadystatechange = function() {
s.utils.showLog("请求状态改变, reaedyState=", n.readyState, "; status=", n.status);
4 == n.readyState && (200 == n.status ? o && o(!0, s.utils.aesDecrypt(n.responseText)) : o && o(!1, ""));
n.status;
};
n.ontimeout = function() {
s.utils.showLog("请求超时!");
o && o(!1, "");
};
n.onerror = function(e) {
o && o(!1, "");
};
} else s.utils.showLog("warn:本地数据未初始化!");
};
e.prototype.umaOnStart = function(e) {
this.checkUmeng() && this.umaTrackEvent("level", "um_plus_game_level", {
game_level: e,
game_states: "0"
});
};
e.prototype.checkUmeng = function() {
return !0;
};
e.prototype.umaReportedLevel = function(e, t) {
if (this.checkUmeng()) {
var i = 1;
t == a.LevelStatus.GameFail && (i = -1);
this.umaTrackEvent("level", "um_plus_game_level", {
game_level: e,
game_states: "" + i
});
}
};
e.prototype.umaTrackEvent = function(e, t, i) {
void 0 === e && (e = "custom");
if (this.checkUmeng()) try {
i && (i = JSON.stringify(i));
jsb.reflection.callStaticMethod(this.jniClassName, "umaTrackEvent", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", e, t, i);
} catch (e) {
s.utils.showLog(e);
}
};
return e = o([ c ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_Oppo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "45157YJvkRH65MMXKEo3sat", "YZ_Tool_Oppo");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YouWanSDK/YouWanAnalytics"), c = e("./YZ_Constant"), u = e("./YZ_LocalStorage"), h = e("./UMengSDK/quickGame/uma.min.js"), d = cc._decorator, f = d.ccclass, _ = (d.property, 
"http://report.youlesp.com/gss?"), p = "", g = function() {
function e() {
this.qg = qg;
this._sysInfo = null;
this._source = "";
this._serverConfig = null;
this._nativeInsertAdClickTimes = 0;
this._insertAdShowCounts = 0;
this._bannerAdCloseCounts = 0;
this._yzBannerShowCounts = 0;
this._shortcutCreated = !1;
this._uid = "0";
this._service_uid = 0;
this._device_id = "";
this._uuid = "";
this._yw_uid = -1;
this._reloadTimes = 6;
this._curloadTimes = 0;
this._loginTime = 0;
this._loginInterval = 30;
this.isGetDeviceId = !0;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this._rec_is_banner = !1;
this._rec_game_banner = null;
this._rec_game_portal = null;
this._gameDrawerAd = null;
this.isReportDevice = !1;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.oppoconfig.version;
};
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "NativeInsertAdClickTimes", {
get: function() {
return this._nativeInsertAdClickTimes;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "insertAdShowCounts", {
get: function() {
return this._insertAdShowCounts;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "bannerAdCloseCounts", {
get: function() {
return this._bannerAdCloseCounts;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "yzBannerShowCounts", {
get: function() {
return this._yzBannerShowCounts;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ShortcutCreated", {
get: function() {
return this._shortcutCreated;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
if ("0" != this._uid) return this._uid;
this._login();
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if (0 != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function(e) {
var t = this;
if (a.default.IsOPPO) {
this.umaInit();
this._sysInfo = qg.getSystemInfoSync();
this.SysInfo && r.utils.showLog("OPPO 小游戏平台信息: " + JSON.stringify(this.SysInfo));
if (e) {
var i = JSON.parse(e);
i && i.oppo && (p = JSON.stringify(i.oppo));
}
this._yw_uid = parseInt(u.default.getItem(c.default.ST_YOUWAN_UID, "-1"));
this._device_id = u.default.getItem(c.default.ST_DEVICE_ID);
this._device_id || cc.game.on(c.default.YZ_PrivacyClose, function() {
t.initDeviceId();
}, this);
if (this.isOverMiniVersion("1050")) {
var o = qg.getLaunchOptionsSync();
o && console.log("options>>>", JSON.stringify(o));
if (o && o.referrerInfo && o.referrerInfo.package) {
r.utils.showLog("获取到小程序启动来源：" + o.referrerInfo.package);
this._source = o.referrerInfo.package;
}
} else r.utils.showLog("小程序版本低于1050，获取不到小程序启动来源！");
this._login();
var n = r.utils.config.oppoconfig.appID + "_";
this._nativeInsertAdClickTimes = u.default.getItem(n + "NativeInsertAdClickTimes");
this._insertAdShowCounts = u.default.getItem(n + "NativeInsertAdShowCount");
this._bannerAdCloseCounts = u.default.getItem(n + "ST_BannerAdCloseCounts");
this._yzBannerShowCounts = u.default.getItem(n + "YZBannerShowCounts");
var s = u.default.getItem(n + "LastDateTime"), l = new Date();
if (s != l.toDateString()) {
this._nativeInsertAdClickTimes = 0;
this._insertAdShowCounts = 0;
this._bannerAdCloseCounts = 0;
this._yzBannerShowCounts = 0;
u.default.setItem(n + "YZBannerShowCounts", 0);
u.default.setItem(n + "NativeInsertAdClickTimes", 0);
u.default.setItem(n + "NativeInsertAdShowCount", 0);
u.default.setItem(n + "LastDateTime", l.toDateString());
u.default.setItem(c.default.ST_GET_DEVICE_ID, "0");
}
r.utils.registerServerInitEvent(function() {
t.isOverMiniVersion("1044") && t.checkHasShortCut(function(e) {
if (!e && r.utils.ServerConfig && r.utils.ServerConfig.start_auto_create_short_cut_time) {
r.utils.showLog("组件初始化成功，" + r.utils.ServerConfig.start_auto_create_short_cut_time + "秒后弹出自动创建桌面！");
r.utils.SendEvent("组件初始化成功，弹出自动创建桌面！");
setTimeout(function() {
t.createShortcut(function(e) {
e ? r.utils.showLog("自动创建桌面成功！") : r.utils.showLog("自动创建桌面失败！");
});
}, 1e3 * r.utils.ServerConfig.start_auto_create_short_cut_time);
}
});
}, this);
}
this._loadConfig();
};
e.prototype._saveConfig = function(e) {};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsOPPO) {
var t = "m=g&device_data=" + encodeURI(JSON.stringify(this._sysInfo));
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?" + t, function(t, i) {
e._curloadTimes++;
var o = !1;
r.utils.showLog("第" + e._curloadTimes + "次拉取服务器配置!");
if (t) {
r.utils.showLog("OPPO服务器配置数据获取成功: data = " + i);
if (i) {
var n = JSON.parse(i);
if (n) if (r.utils.DebugLoacalConfig) cc.warn("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = n;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (r.utils.showLogView = !0);
} else r.utils.showLog("OPPO服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else {
r.utils.showLog("OPPO服务器配置数据获取失败, 使用本地配置!");
if (e._curloadTimes < e._reloadTimes) {
r.utils.showLog("重新拉取配置!");
o = !0;
}
}
if (e._serverConfig) {
if (1 == e._curloadTimes) {
if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.oppoconfig.bannerId = e.ServerConfig.banner_pos_id;
r.utils.config.oppoconfig.insertId = e.ServerConfig.intersititia_pos_id;
r.utils.config.oppoconfig.videoId = e.ServerConfig.video_pos_id;
r.utils.config.oppoconfig.nativeInsertIds = e.ServerConfig.native_intersititial_pos_id;
r.utils.config.oppoconfig.nativeBannerIds = e.ServerConfig.native_banner_pos_id;
r.utils.config.oppoconfig.nativeTryGameIds = e.ServerConfig.native_trygame_pos_id;
r.utils.config.oppoconfig.recGameBannerId = e.ServerConfig.rec_game_banner_id;
r.utils.config.oppoconfig.recPortalId = e.ServerConfig.rec_portal_id;
r.utils.config.oppoconfig.recGameDrawerId = e.ServerConfig.rec_game_drawer_id || r.utils.config.oppoconfig.recGameDrawerId;
r.utils.config.oppoconfig.nativeSingleAdIds = e.ServerConfig.native_single_pos_id || r.utils.config.oppoconfig.nativeSingleAdIds;
r.utils.config.oppoconfig.intersitialAdConfigs = e.ServerConfig.intersitial_configs || r.utils.config.oppoconfig.intersitialAdConfigs;
r.utils.config.oppoconfig.bannerAdConfigs = e.ServerConfig.banner_configs || r.utils.config.oppoconfig.bannerAdConfigs;
} else r.utils.showLog("使用本地配置的广告ID");
e.ServerConfig.get_device_id && "false" == e.ServerConfig.get_device_id && (e.isGetDeviceId = !1);
if (e.ServerConfig.native_banner_configs) for (var s = 0; s < e.ServerConfig.native_banner_configs.length; s++) {
r.utils.showLog("获取到原生广告配置:" + e.ServerConfig.native_banner_configs[s].location, ">>>>", JSON.stringify(e.ServerConfig.native_banner_configs[s]));
r.utils.config.oppoconfig.setNativeBannerInfo(e.ServerConfig.native_banner_configs[s].location, e.ServerConfig.native_banner_configs[s]);
}
}
} else e._serverConfig = JSON.parse(p);
1 == e._curloadTimes && r.utils.emitServerInitEvent();
o && e._loadConfig();
});
}
};
e.prototype.isOverMiniVersion = function(e) {
if (a.default.IsOPPO && this._sysInfo) {
r.utils.showLog("curPlatVersion = " + this._sysInfo.platformVersion + "miniVersion = " + e + (this._sysInfo.platformVersion >= e));
return this._sysInfo.platformVersion >= e;
}
return !1;
};
e.prototype.checkHasShortCut = function(e) {
var t = this;
this.qg.hasShortcutInstalled({
success: function(i) {
r.utils.showLog("检测桌面快捷方式是否已经创建过: result=", i);
if (0 == i) {
t._shortcutCreated = !1;
e && e(!1);
} else {
t._shortcutCreated = !0;
e && e(!0);
}
},
fail: function() {
r.utils.showLog("检测失败！");
},
complete: function() {
r.utils.showLog("检测完成！");
}
});
};
e.prototype.hideDefaultLoadingPage = function() {
a.default.IsOPPO && qg.loadingComplete({
complete: function(e) {}
});
};
e.prototype.countNativeInserClick = function() {
this._nativeInsertAdClickTimes++;
u.default.setItem(r.utils.config.oppoconfig.appID + "_NativeInsertAdClickTimes", this._nativeInsertAdClickTimes);
};
e.prototype.countInserShowCount = function() {
this._insertAdShowCounts++;
u.default.setItem(r.utils.config.oppoconfig.appID + "_NativeInsertAdShowCount", this._insertAdShowCounts);
};
e.prototype.countBannerCloseCount = function() {
this._bannerAdCloseCounts++;
u.default.setItem(r.utils.config.oppoconfig.appID + "_ST_BannerAdCloseCounts", this._bannerAdCloseCounts);
};
e.prototype.countYzBannerShowCount = function() {
this._yzBannerShowCounts++;
u.default.setItem(r.utils.config.oppoconfig.appID + "_YZBannerShowCounts", this._yzBannerShowCounts);
};
e.prototype.navigateToMiniGame = function(e, t) {
if (a.default.IsOPPO) {
var i = t;
qg.navigateToMiniGame({
pkgName: e,
success: function() {
r.utils.showLog("跳转成功！");
i && i(!0);
},
fail: function(e) {
r.utils.showLog("跳转失败！");
i && i(!1);
}
});
}
};
e.prototype.canCreateShortcut = function() {
return !!a.default.IsOPPO && this.isOverMiniVersion("1040");
};
e.prototype.createShortcut = function(e) {
if (a.default.IsOPPO) {
var t = e, i = this;
qg.installShortcut({
success: function() {
r.utils.showLog("桌面图标创建成功！");
i._shortcutCreated = !0;
t && t(!0);
},
fail: function(e) {
r.utils.showLog("createShortcut >>>fail");
t && t(!1);
},
complete: function() {
r.utils.showLog("createShortcut >>>complete");
}
});
}
};
e.prototype.postData = function(e) {
if (a.default.IsOPPO) {
var t = _ + "m=rjump&jump_app_id=" + e;
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("数据上报成功！") : r.utils.showLog("数据上报失败！");
}.bind(this));
}
};
e.prototype.postGameSourece = function(e) {
if (a.default.IsOPPO) {
var t = r.utils.config.oppoconfig.appID, i = (this._uid, r.utils.config.oppoconfig.channel ? r.utils.config.oppoconfig.channel.toLowerCase() : "oppo"), o = _ + "kyx=true&app_id=" + t + "&channel=" + i + "&uid=" + this._uid + "&source=" + e;
r.utils.showLog("上报游戏来源数据, url=" + o);
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("数据上报成功！") : r.utils.showLog("数据上报失败！");
}.bind(this));
}
};
e.prototype._login = function() {
var e = this, t = new Date().getTime(), i = (t - this._loginTime) / 1e3;
if (i > 0 && i < this._loginInterval) r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒"); else {
this._loginTime = t;
var o = this;
this._uid = u.default.getItem(c.default.ST_UID);
this._uid = this._uid ? this._uid : "0";
this._service_uid = u.default.getItem(c.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : 0;
r.utils.showLog("获取本地保存的uid=" + this._uid + "，服务器UID=" + this._service_uid);
if ("0" == this._uid) if (this.isOverMiniVersion("1040")) qg.login({
success: function(e) {
if (e.data.uid) {
o._uid = "" + e.data.uid;
r.utils.showLog("登录成功! uid=" + o._uid);
u.default.setItem(c.default.ST_UID, o._uid);
}
},
fail: function(e) {
r.utils.showLog("登录失败!");
},
complete: function() {
e.reportLogin();
}
}); else {
r.utils.showLog("快游戏平台版本低于1040，无法登录取UID，直接获取服务器ID");
this.reportLogin();
} else {
u.default.getItem(c.default.YZ_GAME_YSXY) && this.initDeviceId();
}
}
};
e.prototype.initDeviceId = function() {
var e = this;
r.utils.showLog("oppo initDeviceId!  #isGetDeviceId=" + this.isGetDeviceId);
var t = u.default.getItem(c.default.ST_GET_DEVICE_ID, "0");
if (this.isGetDeviceId && qg.getDeviceId && 0 == t) {
u.default.setItem(c.default.ST_GET_DEVICE_ID, "1");
qg.getDeviceId({
success: function(t) {
r.utils.showLog("getDeviceId success: deviceId=" + t.deviceId);
e._device_id = t.deviceId;
u.default.setItem(c.default.ST_DEVICE_ID, t.deviceId);
e.reportDevice();
},
fail: function(e, t) {
r.utils.showLog("getDeviceId fail, code = " + t);
}
});
} else this.reportDevice();
};
e.prototype.reportLogin = function() {
return n(this, void 0, void 0, function() {
var e, t, i, o, n = this;
return s(this, function(s) {
r.utils.showLog("reportLogin >>>>>>>>>>>");
if (this.isReport) return [ 2 ];
this.isReport = !0;
e = this;
t = new Date().getTime();
if ((i = (t - this._reportLoginTime) / 1e3) > 0 && i < this._reportLoginInterval) {
r.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒");
return [ 2 ];
}
this._reportLoginTime = t;
o = "http://apps.youlesp.com/gss?" + "m=login" + "&device_data=" + encodeURI(JSON.stringify(this._sysInfo));
r.utils.commomHttpRequest(o, function(t, i) {
if (t && i) {
var o = JSON.parse(i);
if (o.uid) {
e._service_uid = o.uid;
r.utils.showLog("服务器请求登录成功! _service_uid=" + e._service_uid);
u.default.setItem(c.default.ST_SERVICE_UID, e._service_uid);
}
}
n.isReport = !1;
});
return [ 2 ];
});
});
};
e.prototype.getRecommondGameList = function() {
return a.default.IsOPPO && r.utils.oppoTool && r.utils.oppoTool.ServerConfig ? r.utils.oppoTool.ServerConfig.jump_list : null;
};
e.prototype.showMsg = function(e) {
a.default.IsOPPO && qg.showToast({
title: "" + e,
icon: "none",
duration: 2e3
});
};
e.prototype.showToast = function(e) {
a.default.IsOPPO && qg.showToast({
title: e,
icon: "none",
duration: 2e3
});
};
e.prototype.postDataByLocation = function(e, t, i) {
void 0 === i && (i = 0);
if (a.default.IsOPPO) {
var o = _ + "m=rjump&jump_app_id=" + e + "&location=" + t + "&status=" + i;
r.utils.commomHttpRequest(o, function(e, t) {
if (e) {
var i = JSON.parse(t);
r.utils.showLog("数据上报成功");
i && i.jump_list && i.jump_list.length > 0 && (r.utils.oppoTool.ServerConfig.jump_list = i.jump_list);
} else r.utils.showLog("数据上报失败！");
}.bind(this));
}
};
e.prototype.postRecommentShowData = function(e) {
if (a.default.IsOPPO) {
var t = _ + "m=rjumpshow&location=" + e;
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("数据上报成功！") : r.utils.showLog("数据上报失败！");
}.bind(this));
}
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsOPPO) {
var o = _ + "m=rlevelv3&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
t == c.LevelStatus.GameStart && (o += "&device_data=" + encodeURI(JSON.stringify(this._sysInfo)));
r.utils.commomHttpRequest(o, function(e, i) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
if (e && t == c.LevelStatus.GameStart) {
if (e && t == c.LevelStatus.GameStart) {
r.utils.showLog("OPPO服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
if (o) if (r.utils.DebugLoacalConfig) cc.warn("开启了本地数据测试，使用本地配置!"); else {
this._serverConfig = o;
this._serverConfig.is_show_log_view && "true" == this._serverConfig.is_show_log_view && (r.utils.showLogView = !0);
} else r.utils.showLog("OPPO服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("OPPO服务器配置数据获取失败, 使用本地配置!");
if (this._serverConfig) {
if (1 == this._curloadTimes) {
if (this._serverConfig.is_local_pos_id && "false" == this._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id 22");
r.utils.config.oppoconfig.bannerId = this.ServerConfig.banner_pos_id;
r.utils.config.oppoconfig.insertId = this.ServerConfig.intersititia_pos_id;
r.utils.config.oppoconfig.videoId = this.ServerConfig.video_pos_id;
r.utils.config.oppoconfig.nativeInsertIds = this.ServerConfig.native_intersititial_pos_id;
r.utils.config.oppoconfig.nativeBannerIds = this.ServerConfig.native_banner_pos_id;
r.utils.config.oppoconfig.nativeTryGameIds = this.ServerConfig.native_trygame_pos_id;
r.utils.config.oppoconfig.recGameBannerId = this.ServerConfig.rec_game_banner_id;
r.utils.config.oppoconfig.recPortalId = this.ServerConfig.rec_portal_id;
r.utils.config.oppoconfig.intersitialAdConfigs = this.ServerConfig.intersitial_configs || r.utils.config.oppoconfig.intersitialAdConfigs;
r.utils.config.oppoconfig.bannerAdConfigs = this.ServerConfig.banner_configs || r.utils.config.oppoconfig.bannerAdConfigs;
} else r.utils.showLog("使用本地配置的广告ID");
if (this.ServerConfig.native_banner_configs) {
r.utils.config.oppoconfig.nativeBannerInfos.length = 0;
for (var n = 0; n < this.ServerConfig.native_banner_configs.length; n++) {
r.utils.showLog("获取到原生广告配置:" + this.ServerConfig.native_banner_configs[n].location, ">>>>", JSON.stringify(this.ServerConfig.native_banner_configs[n]));
r.utils.config.oppoconfig.setNativeBannerInfo(this.ServerConfig.native_banner_configs[n].location, this.ServerConfig.native_banner_configs[n]);
}
}
}
} else this._serverConfig = JSON.parse(p);
}
}.bind(this));
}
};
e.prototype.canShowRecommend = function() {
return !!this.isOverMiniVersion("1076");
};
e.prototype.canShowNewRecommend = function() {
return !!this.isOverMiniVersion("1090");
};
e.prototype.showOppoRecBanner = function(e) {
var t = this;
if (!this.canShowRecommend()) {
r.utils.showLog("当前版本不支持显示官方互推！");
return !1;
}
if (r.utils.config.oppoconfig.recGameBannerId) {
this._rec_is_banner = !0;
this._rec_game_banner && this.hideOppoRecBanner();
this._rec_game_banner = this.qg.createGameBannerAd({
adUnitId: r.utils.config.oppoconfig.recGameBannerId
});
this._rec_game_banner.onLoad(function() {
r.utils.showLog("互推banner加载成功!");
});
this._rec_game_banner.onError(function(e) {
r.utils.showLog("互推banner加载异常!", e.errCode + "," + e.errMsg);
t._rec_game_banner.destroy();
t._rec_game_banner = null;
});
this._rec_game_banner.show().then(function() {
t.showRecHideNativeAd();
r.utils.showLog("互推banner展示成功！");
e && r.utils.SendEvent("互推Banner展示成功，位置：" + e);
}).catch(function(e) {
r.utils.showLog("互推banner展示失败:" + e.errCode + "," + e.errMsg);
});
} else r.utils.showLog("OPPO 互推banner ID未配置！");
};
e.prototype.showRecHideNativeAd = function() {
if (this.ServerConfig && this.ServerConfig.show_rec_hide_native_ad && "false" == this.ServerConfig.show_rec_hide_native_ad) r.utils.showLog("互推展示成功之后不执行隐藏原生广告"); else {
r.utils.adManager.HideBanner(0);
r.utils.adManager.HideSingleNativeAd();
r.utils.adManager.hideNativeTryGameWidget();
r.utils.showLog("互推展示成功之后隐藏原生广告");
}
};
e.prototype.showOppoNewRecBanner = function(e) {
var t = this;
void 0 === e && (e = null);
if (!this.canShowNewRecommend()) {
r.utils.showLog("当前版本不支持显示官方新互推Banner！");
return !1;
}
if (r.utils.config.oppoconfig.recGameBannerId) {
this._rec_is_banner = !1;
this._rec_game_banner && this.hideOppoRecBanner();
var i = {};
if (e) if ("vertical" === e.orientation) {
void 0 != e.left ? i.left = e.left / cc.winSize.width * this.SysInfo.screenWidth : void 0 != e.right && (i.left = this.SysInfo.screenWidth - 155 - e.right / cc.winSize.width * this.SysInfo.screenWidth);
void 0 != e.bottom ? i.top = this.SysInfo.screenHeight - 720 - e.bottom / cc.winSize.height * this.SysInfo.screenHeight : i.top = e.top / cc.winSize.height * this.SysInfo.screenHeight;
} else {
void 0 != e.left ? i.left = e.left / cc.winSize.width * this.SysInfo.screenWidth : void 0 != e.right && (i.left = this.SysInfo.screenWidth - 720 - e.right / cc.winSize.width * this.SysInfo.screenWidth);
void 0 != e.bottom ? i.top = this.SysInfo.screenHeight - 200 - e.bottom / cc.winSize.height * this.SysInfo.screenHeight : i.top = e.top / cc.winSize.height * this.SysInfo.screenHeight;
}
i.orientation = e.orientation ? e.orientation : "horizontal";
r.utils.showLog("rec banner style>>>>>", JSON.stringify(i));
this._rec_game_banner = this.qg.createGameBannerAd({
adUnitId: r.utils.config.oppoconfig.recGameBannerId,
style: i
});
this._rec_game_banner.onLoad(function() {
r.utils.showLog("互推banner加载成功!");
});
this._rec_game_banner.onError(function(e) {
r.utils.showLog("互推banner加载异常!", e.errCode + "," + e.errMsg);
t._rec_game_banner.destroy();
t._rec_game_banner = null;
});
this._rec_game_banner.show().then(function() {
t.showRecHideNativeAd();
r.utils.showLog("互推banner展示成功！");
location && r.utils.SendEvent("互推Banner展示成功，位置：" + location);
}).catch(function(e) {
r.utils.showLog("互推banner展示失败:" + e.errCode + "," + e.errMsg);
});
} else r.utils.showLog("OPPO 互推banner ID未配置！");
};
e.prototype.hideOppoRecBanner = function(e) {
var t = this;
if (this._rec_game_banner) {
this._rec_game_banner.destroy().then(function() {
e && e();
r.utils.showLog("OPPO 互推banner 隐藏成功！");
}).catch(function(e) {
r.utils.showLog("OPPO 互推banner 隐藏失败:" + e.errCode + "," + e.errMsg);
t._rec_game_banner.hide();
});
this._rec_game_banner = null;
}
};
e.prototype.showOppoGamePortal = function() {
var e = this;
if (!this.canShowRecommend()) {
r.utils.showLog("当前版本不支持显示官方互推！");
return !1;
}
if (r.utils.adManager.checkShowAdTime()) if (r.utils.config.oppoconfig.recPortalId) if (this._rec_game_portal) this._rec_game_portal.load().then(function() {
e.showRecHideNativeAd();
r.utils.showLog("九宫格互推加载成功！");
}).catch(function(t) {
e._rec_game_portal.destroy();
e._rec_game_portal = null;
r.utils.showLog("九宫格互推加载失败:" + t.errCode + "," + t.errMsg);
}); else {
this._rec_game_portal = this.qg.createGamePortalAd({
adUnitId: r.utils.config.oppoconfig.recPortalId
});
this._rec_game_portal.load().then(function() {
e.showRecHideNativeAd();
r.utils.showLog("九宫格互推加载成功！");
}).catch(function(t) {
e._rec_game_portal.destroy();
e._rec_game_portal = null;
r.utils.showLog("九宫格互推加载失败:" + t.errCode + "," + t.errMsg);
});
this._rec_game_portal.onLoad(function() {
r.utils.showLog("互推盒子九宫格广告加载成功");
e._rec_game_portal.show().then(function() {
r.utils.showLog("互推盒子九宫格广告-显示成功！");
}).catch(function(t) {
e._rec_game_portal.destroy();
e._rec_game_portal = null;
r.utils.showLog("互推盒子九宫格广告-显示失败:" + t.errCode + "," + t.errMsg);
});
});
this._rec_game_portal.onClose(function() {
r.utils.showLog("互推盒子九宫格广告关闭");
});
} else r.utils.showLog("OPPO 互推九宫格 ID未配置！"); else r.utils.showLog("显示广告条时间未达限制！");
};
e.prototype.sendEvent = function(e) {
if (a.default.IsOPPO) {
var t = _ + "m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showGameDrawerAd = function(e) {
var t = this;
if (r.utils.config.oppoconfig.recGameDrawerId) if (this.canShowNewRecommend()) {
this._gameDrawerAd && this.hideGameDrawerAd();
var i = {};
void 0 != e.bottom ? i.top = this.SysInfo.screenHeight - 490 - e.bottom / cc.winSize.height * this.SysInfo.screenHeight : i.top = e.top / cc.winSize.height * this.SysInfo.screenHeight;
r.utils.showLog(" rec game drawer style >>>" + JSON.stringify(i));
this._gameDrawerAd = this.qg.createGameDrawerAd({
adUnitId: r.utils.config.oppoconfig.recGameDrawerId,
style: i
});
this._gameDrawerAd.onShow(function() {
r.utils.showLog("showGameDrawerAd success");
this.showRecHideNativeAd();
});
this._gameDrawerAd.show().then(function() {
r.utils.showLog("showGameDrawerAd success");
t.showRecHideNativeAd();
}).catch(function(e) {
r.utils.showLog("showGameDrawerAd fail with:" + e.errCode + "," + e.errMsg);
});
} else r.utils.showLog("快应用平台版本号低于1090，暂不支持互推盒子相关 API"); else r.utils.showLog("服务器没有配置互推抽屉样式的ID，请反馈给运营！");
};
e.prototype.hideGameDrawerAd = function(e) {
if (this._gameDrawerAd) {
this._gameDrawerAd.destroy().then(function() {
e && e();
r.utils.showLog("hideGameDrawerAd success");
}).catch(function(e) {
r.utils.showLog("hideGameDrawerAd fail with:" + e.errCode + "," + e.errMsg);
this._gameDrawerAd.hide();
});
this._gameDrawerAd = null;
}
};
e.prototype.umaInit = function() {
this.checkUmeng() ? h.init({
appKey: r.utils.config.oppoconfig.umengId,
useOpenid: !1,
debug: !1
}) : r.utils.showLog("友盟ID未配置，不执行友盟初始化>>>>");
};
e.prototype.umaOnStart = function(e) {
this.checkUmeng() && qg.uma.stage.onStart({
stageId: e,
stageName: "第" + e + "关"
});
};
e.prototype.checkUmeng = function() {
return !!r.utils.config.oppoconfig.umengId;
};
e.prototype.umaReportedLevel = function(e, t) {
this.checkUmeng() && qg.uma.stage.onEnd({
stageId: e,
stageName: "第" + e + "关",
event: t
});
};
e.prototype.umaTrackEvent = function(e, t) {
this.checkUmeng() && qg.uma.trackEvent(e, t);
};
e.prototype.GameExit = function() {
if (a.default.IsOPPO) {
r.utils.showLog("tool oppo GameExit");
try {
qg.exitApplication({
success: function() {
console.log("退出成功！");
},
fail: function() {
console.log("退出失败！");
},
complete: function() {
console.log("退出执行完成！");
}
});
} catch (e) {
cc.log("GameExit erro:", JSON.stringify(e));
}
}
};
e.prototype.reportDevice = function() {
var e = this;
if (!this.isReportDevice) {
this.isReportDevice = !0;
l.default.login(function(t) {
e.isReportDevice = !1;
});
}
};
return e = o([ f ], e);
}();
i.default = g;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./UMengSDK/quickGame/uma.min.js": "uma.min",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage",
"./YouWanSDK/YouWanAnalytics": "YouWanAnalytics"
} ],
YZ_Tool_QQ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a73e9wwNNVCyra8sZ9EPiRC", "YZ_Tool_QQ");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this._serverConfig = null;
this._sysInfo = {};
this._shortcutCreated = !1;
this._shareCallback = null;
this._isShare = !1;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ShortcutCreated", {
get: function() {
return this._shortcutCreated;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.qqconfig.version;
};
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < 30) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("qq暂时不获取uid，uid全部为0");
this._uid = "0";
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - t._reportLoginTime) / 1e3;
if (o > 0 && o < 30) r.utils.showLog("上报登录获取UID小于：" + t._reportLoginInterval + "秒"); else {
t._reportLoginTime = i;
r.utils.commomHttpRequest("https://apps.youlesp.com/gss?m=login&device_data=0", function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
console.log("self._service_uid:" + t._service_uid);
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
var t = this;
if (a.default.IsQQ) {
if (e) {
var i = JSON.parse(e);
i && i.qq && (d = JSON.stringify(i.qq));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
try {
this._sysInfo = qq.getSystemInfoSync();
r.utils.showLog("QQ 小游戏平台信息: ", JSON.stringify(this.SysInfo));
} catch (e) {
r.utils.showLog("QQ 小游戏平台数据获取失败!");
}
this._loadConfig();
qq.showShareMenu();
qq.onShareAppMessage(this._getShareInfo.bind(this));
qq.onShow(function(e) {
r.utils.showLog("OnShow: ", e);
if (t._isShare) {
t._isShare = !1;
t._shareCallback && t._shareCallback(!0, "分享成功!");
}
});
r.utils.registerServerInitEvent(function() {
if (t.canCreateShortcut() && r.utils.ServerConfig && r.utils.ServerConfig.start_auto_create_short_cut_time) {
r.utils.SendEvent("组件初始化成功，弹出自动创建桌面！");
r.utils.showLog("组件初始化成功，" + r.utils.ServerConfig.start_auto_create_short_cut_time + "秒后弹出自动创建桌面！");
setTimeout(function() {
t.createShortcut(function(e) {
e ? r.utils.showLog("自动创建桌面成功！") : r.utils.showLog("自动创建桌面失败！");
});
}, 1e3 * r.utils.ServerConfig.start_auto_create_short_cut_time);
}
if (r.utils.ServerConfig && r.utils.ServerConfig.auto_add_favorites && "true" == r.utils.ServerConfig.auto_add_favorites) {
r.utils.showLog("自动添加到搜藏");
t.addFavorites();
}
r.utils.showLog("组件初始化完成,验证是否登陆！", r.utils.ServerConfig.add_recent_color_sign);
r.utils.ServerConfig && r.utils.ServerConfig.add_recent_color_sign && (1 == r.utils.ServerConfig.add_recent_color_sign ? t.addColorSign() : qq.checkSession({
success: function() {
r.utils.showLog("session_key 未过期，并且在本生命周期一直有效");
t.addRecentColorSign();
},
fail: function() {
qq.login({
success: function(e) {
if (e.code) {
r.utils.showLog("登录成功！");
t.addRecentColorSign();
} else r.utils.showLog("登录失败！" + e.errMsg);
}
});
}
}));
}, this);
}
};
e.prototype.addRecentColorSign = function() {
r.utils.showLog("调用添加彩签>>>>>>>");
qq.addRecentColorSign({
query: "a=1&b=2",
success: function(e) {
r.utils.showLog("addRecentColorSign success: ", e);
},
fail: function(e) {
r.utils.showLog("addRecentColorSign fail: ", e);
},
complete: function(e) {
r.utils.showLog("addRecentColorSign complete: ", e);
}
});
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsQQ) {
r.utils.commomHttpRequest("https://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("QQ服务器配置数据获取成功: data = ", i);
if (i) {
var o = JSON.parse(i);
o ? r.utils.DebugLoacalConfig ? cc.warn("开启了本地数据测试，使用本地配置!") : e._serverConfig = o : r.utils.showLog("QQ服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("QQ服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) {
if (e._serverConfig.shares) {
e._serverConfig.shares.sy_title && (r.utils.config.otherconfig.shareTitle = e._serverConfig.shares.sy_title);
e._serverConfig.shares.sy_img && (r.utils.config.otherconfig.shareImgUrl = e._serverConfig.shares.sy_img);
}
if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.qqconfig.bannerId = e._serverConfig.banner_pos_id;
r.utils.config.qqconfig.insertId = e._serverConfig.intersititia_pos_id;
r.utils.config.qqconfig.videoId = e._serverConfig.video_pos_id;
r.utils.config.qqconfig.boxId = e._serverConfig.box_pos_id;
r.utils.config.qqconfig.bannerBoxId = e._serverConfig.banner_box_pos_id;
} else r.utils.showLog("使用本地配置的广告ID");
} else e._serverConfig = JSON.parse(d);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.getSystemInfo = function() {
if (a.default.IsQQ) return this._sysInfo;
};
e.prototype.share = function(e) {
void 0 === e && (e = null);
if (a.default.IsQQ) {
this._shareCallback = e;
this._isShare = !0;
qq.shareAppMessage(this._getShareInfo());
}
};
e.prototype.postData = function(e) {
if (a.default.IsQQ) {
var t = "https://apps.youlesp.com/gs?m=jump&app_id=" + r.utils.config.qqconfig.appID + "&uid=0&channel=qq&jump_app_id=" + e;
r.utils.showLog("上报数据, url=", t);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("数据上报成功！") : r.utils.showLog("数据上报失败！");
});
}
};
e.prototype._getShareInfo = function() {
return a.default.IsQQ ? {
title: r.utils.config.otherconfig.shareTitle,
imageUrl: r.utils.config.otherconfig.shareImgUrl
} : {};
};
e.prototype.isOverMinVersion = function(e) {
var t = this._sysInfo.SDKVersion;
return this._compareVersion(t, e) >= 0;
};
e.prototype._compareVersion = function(e, t) {
if (!e || !t) return -1;
e = e.split(".");
t = t.split(".");
for (var i = Math.max(e.length, t.length); e.length < i; ) e.push("0");
for (;t.length < i; ) t.push("0");
for (var o = 0; o < i; o++) {
var n = parseInt(e[o]), s = parseInt(t[o]);
if (n > s) return 1;
if (n < s) return -1;
}
return 0;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsQQ) {
if (t == l.LevelStatus.GameWin) {
if (this.ServerConfig.rankey) {
var o = this.ServerConfig.rankey ? this.ServerConfig.rankey : "ranklevel", n = e;
qq.setUserCloudStorage({
KVDataList: [ {
key: o,
value: n
} ],
success: function(e) {
r.utils.showLog("关卡记录成功");
},
fail: function(e) {
r.utils.showLog("关卡记录失败");
},
complete: function(e) {
r.utils.showLog("关卡记录调用完成");
}
});
}
var s = this.ServerConfig.subscribe_interval;
if (s) try {
parseInt(e) % s == 0 && qq.subscribeAppMsg({
subscribe: !0,
success: function(e) {
r.utils.showLog("----添加订阅消息----成功", e);
},
fail: function(e) {
r.utils.showLog("----添加订阅消息----失败", e);
}
});
} catch (e) {
r.utils.showLog("----添加订阅消息----异常");
}
}
var c = "https://report.youletd.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(c, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsQQ) {
var t = "https://report.youletd.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showToast = function(e) {
a.default.IsQQ && qq.showToast({
title: e,
icon: "none",
duration: 2e3
});
};
e.prototype.canCreateShortcut = function() {
console.log("canCreateShortcut ", this.isOverMinVersion("1.7.1"));
return !(!a.default.IsQQ || !a.default.IsAndroid) && this.isOverMinVersion("1.7.1");
};
e.prototype.createShortcut = function(e) {
var t = this, i = e;
if (a.default.IsQQ && this.canCreateShortcut()) qq.saveAppToDesktop({
success: function() {
r.utils.showLog("桌面图标创建成功！");
t._shortcutCreated = !0;
i && i(!0);
},
fail: function(e) {
r.utils.showLog("qq创建桌面失败err" + e);
i && i(!1);
},
complete: function() {}
}); else {
r.utils.showLog("当前平台版本不支持创建桌面");
i && i(!1);
}
};
e.prototype.addFavorites = function() {
r.utils.showLog("addFavorites >>>>");
if ("1" != c.default.getItem("qq_favorites")) {
var e = "好游戏哦", t = "";
if (r.utils.config.otherconfig) {
r.utils.config.otherconfig.shareTitle && (e = r.utils.config.otherconfig.shareTitle);
r.utils.config.otherconfig.shareImgUrl && (t = r.utils.config.otherconfig.shareImgUrl);
}
qq.addToFavorites({
title: e,
imageUrl: t,
query: "a=1&b=2",
success: function(e) {
r.utils.showLog("addToFavorites success", e);
c.default.setItem("qq_favorites", "1");
},
fail: function(e) {
r.utils.showLog("addToFavorites fail", e);
},
complete: function(e) {
r.utils.showLog("addToFavorites info", e);
}
});
} else r.utils.showLog("had addToFavorites");
};
e.prototype.addColorSign = function() {
qq.addColorSign({
success: function(e) {
r.utils.showLog("addColorSign success", e);
},
fail: function(e) {
r.utils.showLog("addColorSign fail", e);
},
complete: function(e) {
r.utils.showLog("addColorSign info", e);
}
});
};
e.prototype.GameExit = function() {
if (a.default.IsQQ) {
r.utils.showLog("tool qq GameExit");
try {
qq.exitMiniProgram();
} catch (e) {
cc.log(e);
}
}
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_QTT: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "22febPJ0XROobrXFFsoOvDe", "YZ_Tool_QTT");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.QTT_REPORT_TYPE = void 0;
var a, r = e("./PlatUtils"), l = e("./Utils"), c = e("./YZ_Constant"), u = e("./YZ_LocalStorage"), h = cc._decorator, d = h.ccclass, f = (h.property, 
""), _ = e("./md5.js"), p = function() {
function e() {
this.platForm = "";
this.qttGame = window.qttGame;
this._serverConfig = null;
this.ticket = "";
this._ip = "192.168.0.1";
this._sign = "";
this.serverPath = "http://apps.youlesp.com/gss?";
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this.iframe = null;
this.form = null;
this._isReady = !1;
this._isLogin = !1;
this._isLoad = !1;
this._isStart = !1;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
if ("0" != this._service_uid) return this._uid;
this._login();
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t, i, o, n;
return s(this, function(s) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < 30) {
l.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
i = this;
l.utils.showLog("qtt暂时不获取uid，uid全部为0");
this._uid = "0";
o = this.getUrl();
console.log("qtt获取用户的地址为：" + o);
(n = new XMLHttpRequest()).timeout = 6e3;
n.open("get", o);
n.send();
n.onreadystatechange = function() {
l.utils.showLog("请求状态改变, reaedyState=", n.readyState, "; status=", n.status);
if (4 == n.readyState && 200 == n.status) {
console.log("请求成功");
console.log(n.responseText);
var e = n.responseText, t = JSON.parse(e);
console.log(t);
l.utils.showLog("获取数据成功1");
i._uid = t.data.open_id;
i.postServerData(a.ready);
u.default.setItem(c.default.ST_UID, i._uid);
console.log(i._uid);
}
n.status;
};
n.ontimeout = function() {
l.utils.showLog("请求超时!");
};
n.onerror = function(e) {
l.utils.showLog("请求出错! err=", JSON.stringify(e));
};
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - t._reportLoginTime) / 1e3;
if (o > 0 && o < 30) l.utils.showLog("上报登录获取UID小于：" + t._reportLoginInterval + "秒"); else {
t._reportLoginTime = i;
l.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=login&device_data=0", function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
l.utils.showLog("data=" + o);
l.utils.showLog("result=" + n);
l.utils.showLog("result.uid=" + n.uid);
n.ip && (e._ip = n.ip);
if (n.uid) {
t._service_uid = "" + n.uid;
l.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
u.default.setItem(c.default.ST_SERVICE_UID, t._service_uid);
}
}
} else l.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
var t = this;
l.utils.showLog("qtt 初始化>>", e);
if (e) {
var i = JSON.parse(e);
i && i.qutoutiao && (f = JSON.stringify(i.qutoutiao));
}
cc.game.on(a.ready, function() {
t.postServerData(a.login);
}, this);
cc.game.on(a.login, function() {
t.postServerData(a.load);
}, this);
this._uid = u.default.getItem(c.default.ST_UID);
this._uid = this._uid ? this._uid : "0";
this.postServerData(a.ready);
this._service_uid = u.default.getItem(c.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this.platForm = this.GetRequest("platform");
this.ticket = this.GetRequest("ticket");
this.ticket && this.platForm;
this.loadServerData();
};
e.prototype.postGameOverData = function(e) {
if (r.default.IsQTT) {
this.qttGame.completeTask();
this.qttGame.userInfo({
role: "趣头条",
region: "区域1",
level: e,
ce: "1000000",
round: "1",
revenue: "100000",
extend_info: {
age: "18"
}
});
}
var t = Math.floor(new Date().getTime() / 1e3), i = {
app_id: l.utils.config.qttconfig.appID,
open_id: this.uid,
ip: this._ip,
round: e,
game_time: t
};
this.getSign(i);
var o = new FormData();
o.append("app_id", i.app_id);
o.append("open_id", i.open_id);
o.append("ip", i.ip);
o.append("round", i.round);
o.append("game_time", i.game_time);
o.append("sign", this._sign);
this.post(i);
};
e.prototype.post = function(e) {
this.form ? this.form.innerHTML = "" : this.form = document.createElement("form");
this.iframe || (this.iframe = document.createElement("iframe"));
this.form.action = "https://newidea4-gamecenter-backend.1sapp.com/x/open/report/round";
this.form.enctype = "application/x-www-form-urlencoded";
this.form.method = "post";
this.iframe.name = "form";
this.iframe.id = "form";
this.form.target = "form";
for (var t in e) {
var i = document.createElement("textarea");
i.name = t;
i.value = e[t];
this.form.appendChild(i);
}
document.body.appendChild(this.iframe);
this.iframe.appendChild(this.form);
this.form.submit();
};
e.prototype.getUserInfo = function() {
this.qttGame.getUserInfo(l.utils.config.qttconfig.appKey, l.utils.config.qttconfig.appID, this.ticket, this.platForm).then(function(e) {
l.utils.showLog("获取用户信息成功 #userInfo=", JSON.stringify(e));
}).catch(function(e) {});
};
e.prototype.GetRequest = function(e) {
var t = location.search, i = new Object();
if (-1 != t.indexOf("?")) for (var o = t.substr(1).split("&"), n = 0; n < o.length; n++) i[o[n].split("=")[0]] = unescape(o[n].split("=")[1]);
return i[e];
};
e.prototype.loadServerData = function() {
var e = this;
if (!this.uid) {
cc.error("用户ID为空>>>");
this._uid = "0";
}
l.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=g", function(t, i) {
l.utils.showLog("loadServerUserdate #ret=", t, " #data=", i);
if (t) if (i) {
l.utils.showLog("qtt服务器配置数据获取成功: data = ", i);
var o = JSON.parse(i);
if (o) if (l.utils.DebugLoacalConfig) cc.warn("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = o;
if (e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view) {
l.utils.showLogView = !0;
l.utils.showLog();
}
} else l.utils.showLog("qtt服务器配置数据不是合法的JSON数据, 使用本地配置!");
} else l.utils.showLog("qtt服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
l.utils.showLog("使用服务器下发的广告id");
l.utils.showLog("趣头条没有广告id");
} else l.utils.showLog("使用本地配置的广告ID"); else e._serverConfig = JSON.parse(f);
l.utils.emitServerInitEvent();
});
};
e.prototype.postLevel = function(e, t, i) {
if (r.default.IsQTT) {
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
l.utils.commomHttpRequest(o, function(e, t) {
e ? l.utils.showLog("关卡数据上报成功！") : l.utils.showLog("关卡数据上报失败！");
}.bind(this));
t == c.LevelStatus.GameStart && this.postServerData(a.start);
t == c.LevelStatus.GameWin && this.postGameOverData(Number(e));
}
};
e.prototype.getSign = function(e) {
var t = this.sign(e);
e.sign = t;
this.checkSign(e);
this._sign = t;
};
e.prototype.getUrl = function() {
var e = this.getParams(), t = {
app_id: l.utils.config.qttconfig.appID,
platform: e.platform,
ticket: e.ticket,
time: Math.floor(new Date().getTime() / 1e3)
}, i = this.sign(t);
t.sign = i;
this._sign = i;
return "https://newidea4-gamecenter-backend.1sapp.com/x/open/user/ticket?app_id=" + t.app_id + "&platform=" + e.platform + "&ticket=" + e.ticket + "&time=" + t.time + "&sign=" + t.sign;
};
e.prototype.getParams = function() {
var e, t;
window.location.href.split("&").forEach(function(i) {
-1 != i.indexOf("platform") && (e = i.split("=")[1]);
-1 != i.indexOf("ticket") && (t = i.split("=")[1]);
});
return {
platform: e,
ticket: t
};
};
e.prototype.sign = function(e) {
delete e.sign;
e.app_key = l.utils.config.qttconfig.appKey;
var t = [];
for (var i in e) t.push(i);
t.sort();
var o = "";
t.forEach(function(t) {
o += t;
o += e[t];
});
console.log("原串：" + o);
delete e.app_key;
return _(o);
};
e.prototype.checkSign = function(e) {
var t = e.sign;
if (!t) {
console.log("sign error");
return !1;
}
if (t !== this.sign(e)) {
console.log("sign error");
return !1;
}
console.log("ok");
return !0;
};
e.prototype.postServerData = function(e, t) {
console.log("趣头条数据上报：" + e, this._uid);
if (this.uid || "0" == this._uid) {
switch (e) {
case a.ready:
if (this._isReady) {
console.log("已经上传过资源加载完毕事件");
return;
}
break;

case a.login:
if (this._isLogin) {
console.log("以及上传过资源加载完毕事件");
return;
}
break;

case a.load:
if (this._isLoad) {
console.log("以及上传过资源加载完毕事件");
return;
}
break;

case a.start:
if (this._isStart) {
console.log("以及上传过资源加载完毕事件");
return;
}
}
var i = l.utils.config.qttconfig.appID, o = l.utils.config.qttconfig.gamename, n = t || {};
if (this.qttGame && this.qttGame.reportData) {
switch (e) {
case a.ready:
this._isReady = !0;
break;

case a.login:
this._isLogin = !0;
break;

case a.load:
this._isLoad = !0;
break;

case a.start:
this._isStart = !0;
}
this.qttGame.reportData({
type: e,
open_id: this.uid,
app_id: i,
game_name: o,
extend_info: n
});
console.log("趣头条成功发送事件：" + e);
cc.game.emit(e);
} else {
var s = this;
console.log("趣头条发送：" + e + "失败");
setTimeout(function() {
s.postServerData(e, t);
}, 100);
}
} else cc.error("用户ID不存在 ,不上报数据>>>");
};
e.prototype.sendEvent = function(e) {
if (r.default.IsQTT) {
var t = "http://report.youlesp.com/gss?m=revent&event=" + encodeURI(e);
l.utils.commomHttpRequest(t, function(e, t) {
e ? l.utils.showLog("上报自定义事件成功！") : l.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
return e = o([ d ], e);
}();
i.default = p;
(function(e) {
e.ready = "ready";
e.login = "login";
e.load = "load";
e.start = "start";
e.newRole = "newRole";
e.newUser = "newUser";
e.upgrade = "upgrade";
e.userInfo = "userInfo";
e.abnormal = "abnormal";
})(a = i.QTT_REPORT_TYPE || (i.QTT_REPORT_TYPE = {}));
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage",
"./md5.js": "md5"
} ],
YZ_Tool_UC: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "908fa2v3cZJL7agUZVt0aZX", "YZ_Tool_UC");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this.uc = window.uc;
this._sysInfo = {};
this._serverConfig = null;
this._shareCallback = null;
this._isShare = !1;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.ucConfig.version;
};
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < 30) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("uc暂时不获取uid，uid全部为0");
this._uid = "0";
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - t._reportLoginTime) / 1e3;
if (o > 0 && o < 30) r.utils.showLog("上报登录获取UID小于：" + t._reportLoginInterval + "秒"); else {
t._reportLoginTime = i;
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=login&device_data=0", function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
console.log("self._service_uid:" + t._service_uid);
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
if (a.default.ISUC) {
if (e) {
var t = JSON.parse(e);
t && t.uc && (d = JSON.stringify(t.uc));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
try {
this._sysInfo = this.uc.getSystemInfoSync();
if ("string" == typeof this._sysInfo) try {
this._sysInfo = JSON.parse(this._sysInfo);
} catch (e) {}
r.utils.showLog("uc 小游戏平台信息: " + JSON.stringify(this.SysInfo));
} catch (e) {
r.utils.showLog("uc 小游戏平台数据获取失败!");
}
this._loadConfig();
}
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.ISUC) {
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("uc服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
if (o) if (r.utils.DebugLoacalConfig) cc.warn("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = o;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (r.utils.showLogView = !0);
} else r.utils.showLog("uc服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("uc服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) {
if (e._serverConfig.shares) {
e._serverConfig.shares.sy_title && (r.utils.config.otherconfig.shareTitle = e._serverConfig.shares.sy_title);
e._serverConfig.shares.sy_img && (r.utils.config.otherconfig.shareImgUrl = e._serverConfig.shares.sy_img);
}
} else e._serverConfig = JSON.parse(d);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.getSystemInfo = function() {
if (a.default.ISUC) return this._sysInfo;
};
e.prototype.share = function(e) {
void 0 === e && (e = null);
if (a.default.ISUC) {
this._shareCallback = e;
this._isShare = !0;
var t = {
title: r.utils.config.otherconfig.shareTitle,
imageUrl: r.utils.config.otherconfig.shareImgUrl,
success: this._shareCallback,
fail: this._shareCallback
};
this.uc.shareAppMessage(t);
}
};
e.prototype.isOverMinVersion = function(e) {
var t = this._sysInfo.SDKVersion;
return this._compareVersion(t, e) >= 0;
};
e.prototype._compareVersion = function(e, t) {
if (!e || !t) return -1;
e = e.split(".");
t = t.split(".");
for (var i = Math.max(e.length, t.length); e.length < i; ) e.push("0");
for (;t.length < i; ) t.push("0");
for (var o = 0; o < i; o++) {
var n = parseInt(e[o]), s = parseInt(t[o]);
if (n > s) return 1;
if (n < s) return -1;
}
return 0;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.ISUC) {
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.ISUC) {
var t = "http://report.youlesp.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_Vivo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1dff8tBGB9Mvb2SYUr4tUpV", "YZ_Tool_Vivo");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = e("./UMengSDK/quickGame/uma.min.js"), h = cc._decorator, d = h.ccclass, f = (h.property, 
""), _ = "http://apps.youlesp.com/gss?", p = function() {
function e() {
this.qg = window.qg;
this._sysInfo = null;
this._serverConfig = null;
this._nativeInsertAdClickTimes = 0;
this._shortcutCreated = !1;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
this._source = "";
this._rec_game_banner = null;
this._rec_game_portal = null;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "NativeInsertAdClickTimes", {
get: function() {
return this._nativeInsertAdClickTimes;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ShortcutCreated", {
get: function() {
return this._shortcutCreated;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < this._loginInterval) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("vivo暂时不获取uid，uid全部为0");
this._uid = "0";
this.reportLogin();
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - this._reportLoginTime) / 1e3;
if (o > 0 && o < this._reportLoginInterval) r.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒"); else {
this._reportLoginTime = i;
var n = _ + "m=login&device_data=" + encodeURI(JSON.stringify(this._sysInfo));
r.utils.commomHttpRequest(n, function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
var t = this;
if (a.default.IsVIVO) {
this.umaInit();
qg.isStartupByShortcut({
success: function(e) {
if (e) {
r.utils.showLog("通过桌面图标启动应用");
t._source = "shortCut";
} else r.utils.showLog("不是通过桌面图标启动应用");
}
});
if (e) {
var i = JSON.parse(e);
i && i.vivo && (f = JSON.stringify(i.vivo));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
this._sysInfo = this.qg.getSystemInfoSync();
this._sysInfo && r.utils.showLog("VIVO 小游戏平台信息: " + JSON.stringify(this.SysInfo));
this._loadConfig();
this._nativeInsertAdClickTimes = c.default.getItem("NativeInsertAdClickTimes");
if (c.default.getItem("LastDateTime") != new Date().toDateString()) {
this._nativeInsertAdClickTimes = 0;
c.default.setItem("NativeInsertAdClickTimes", 0);
}
this.isOverMiniVersion("1041") && r.utils.registerServerInitEvent(function() {
t.checkHasShortCut(function(e) {
if (!e && r.utils.ServerConfig && r.utils.ServerConfig.start_auto_create_short_cut_time) {
r.utils.SendEvent("组件初始化成功，弹出自动创建桌面！");
r.utils.showLog("组件初始化成功，" + r.utils.ServerConfig.start_auto_create_short_cut_time + "秒后弹出自动创建桌面！");
setTimeout(function() {
t.createShortcut(function(e) {
e ? r.utils.showLog("自动创建桌面成功！") : r.utils.showLog("自动创建桌面失败！");
});
}, 1e3 * r.utils.ServerConfig.start_auto_create_short_cut_time);
}
});
}, this);
}
};
e.prototype._buildServerUrl = function() {
if (a.default.IsVIVO) {
var e = "";
r.utils.config.vivoconfig && r.utils.config.vivoconfig.appID ? e = _ + "kyx=true&app_id=" + r.utils.config.vivoconfig.appID.trim() + "&channel=vivo" : r.utils.showLog("VIVO APPID配置出错！");
return e;
}
return null;
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsVIVO) {
r.utils.commomHttpRequest(_ + "m=g", function(t, i) {
if (t) {
r.utils.showLog("VIVO服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
if (o) if (r.utils.DebugLoacalConfig) r.utils.showLog("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = o;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (r.utils.showLogView = !0);
} else r.utils.showLog("VIVO服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("VIVO服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) {
if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.vivoconfig.bannerId = e._serverConfig.banner_pos_id;
r.utils.config.vivoconfig.insertId = e._serverConfig.intersititia_pos_id;
r.utils.config.vivoconfig.videoId = e._serverConfig.video_pos_id;
r.utils.config.vivoconfig.nativeInsertIds = e.ServerConfig.native_intersititial_pos_id;
r.utils.config.vivoconfig.nativeBannerIds = e.ServerConfig.native_banner_pos_id;
r.utils.config.vivoconfig.nativeTryGameIds = e.ServerConfig.native_trygame_pos_id;
r.utils.config.vivoconfig.recGameBannerId = e.ServerConfig.rec_game_banner_id;
r.utils.config.vivoconfig.recPortalId = e.ServerConfig.rec_portal_id;
r.utils.config.vivoconfig.nativeSingleAdIds = e.ServerConfig.native_single_pos_id || r.utils.config.vivoconfig.nativeSingleAdIds;
} else r.utils.showLog("使用本地配置的广告ID");
if (e.ServerConfig.native_banner_configs) for (var n = 0; n < e.ServerConfig.native_banner_configs.length; n++) {
r.utils.showLog("获取到原生广告配置:" + e.ServerConfig.native_banner_configs[n].location, ">>>>", JSON.stringify(e.ServerConfig.native_banner_configs[n]));
r.utils.config.vivoconfig.setNativeBannerInfo(e.ServerConfig.native_banner_configs[n].location, e.ServerConfig.native_banner_configs[n]);
}
if (e.ServerConfig.native_customad_configs) for (n = 0; n < e.ServerConfig.native_customad_configs.length; n++) {
r.utils.showLog("获取到原生模版广告配置:" + e.ServerConfig.native_customad_configs[n].location, ">>>>", JSON.stringify(e.ServerConfig.native_customad_configs[n]));
r.utils.config.vivoconfig.setCustomAdInfo(e.ServerConfig.native_customad_configs[n].location, e.ServerConfig.native_customad_configs[n]);
}
} else e._serverConfig = JSON.parse(f);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.isOverMiniVersion = function(e) {
return !!(a.default.IsVIVO && this._sysInfo && this._sysInfo.platformVersionCode) && this._sysInfo.platformVersionCode >= e;
};
e.prototype.createShortcut = function(e) {
var t = e;
if (a.default.IsVIVO && this.canCreateShortcut()) {
var i = this;
i.qg.installShortcut({
success: function() {
r.utils.showLog("桌面图标创建成功！");
i._shortcutCreated = !0;
t && t(!0);
},
fail: function(e) {
i._shortcutCreated = !0;
cc.log("vivo创建失败err" + e);
t && t(!1);
},
complete: function() {}
});
} else {
cc.log("不能创建");
t && t(!1);
}
};
e.prototype.canCreateShortcut = function() {
return !!a.default.IsVIVO && this.isOverMiniVersion("1041");
};
e.prototype.countNativeInserClick = function() {
this._nativeInsertAdClickTimes++;
c.default.setItem("NativeInsertAdClickTimes", this._nativeInsertAdClickTimes);
};
e.prototype.share = function(e) {
if (this.isOverMiniVersion("1052")) {
this.qg.share();
e && e(!0);
} else e && e(!1, "当前平台不支持");
};
e.prototype.checkHasShortCut = function(e) {
var t = this;
this.qg.hasShortcutInstalled({
success: function(i) {
r.utils.showLog("检测桌面快捷方式是否已经创建过: result=", i);
if (0 == i) {
t._shortcutCreated = !1;
e && e(!1);
} else {
t._shortcutCreated = !0;
e && e(!0);
}
},
fail: function() {
r.utils.showLog("检测失败！");
},
complete: function() {
r.utils.showLog("检测完成！");
}
});
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsVIVO) {
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsVIVO) {
var t = "http://report.youlesp.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showToast = function(e) {
a.default.IsVIVO && qg.showToast({
message: e,
duration: 2e3
});
};
e.prototype.canShowRecommend = function() {
return !(!this.qg.createBoxBannerAd || !this.qg.createBoxPortalAd);
};
e.prototype.showRecBanner = function(e) {
var t = this;
if (!this.canShowRecommend()) {
r.utils.showLog("当前版本不支持显示官方互推！");
return !1;
}
if (r.utils.config.vivoconfig.recGameBannerId) if (this._rec_game_banner) this._rec_game_banner.show().then(function() {
r.utils.showLog("互推banner展示成功！");
e && r.utils.SendEvent("互推Banner展示成功，位置：" + e);
}).catch(function(e) {
r.utils.showLog("互推banner展示失败:" + e.errCode + "," + e.errMsg);
}); else {
this._rec_game_banner = this.qg.createBoxBannerAd({
adUnitId: r.utils.config.vivoconfig.recGameBannerId
});
this._rec_game_banner.onLoad(function() {
r.utils.showLog("互推banner加载成功!");
});
this._rec_game_banner.show().then(function() {
r.utils.showLog("互推banner展示成功！");
}).catch(function(e) {
r.utils.showLog("互推banner展示失败:" + e.errCode + "," + e.errMsg);
});
this._rec_game_banner.onError(function(e) {
r.utils.showLog("互推banner加载异常!", e.errCode + "," + e.errMsg);
t._rec_game_banner.destroy();
t._rec_game_banner = null;
});
} else r.utils.showLog("VIVO 互推banner ID未配置！");
};
e.prototype.hideRecBanner = function() {
var e = this;
this._rec_game_banner && this._rec_game_banner.hide().then(function() {
r.utils.showLog("VIVO 互推banner 隐藏成功！");
}).catch(function(t) {
r.utils.showLog("VIVO 互推banner 隐藏失败:" + t.errCode + "," + t.errMsg);
e._rec_game_banner.destroy();
e._rec_game_banner = null;
});
};
e.prototype.showGamePortal = function(e) {
var t = this;
void 0 === e && (e = 200);
if (!this.canShowRecommend()) {
r.utils.showLog("当前版本不支持显示官方互推！");
return !1;
}
if (r.utils.config.vivoconfig.recPortalId) {
this._rec_game_portal && this.hideGamePortal();
this._rec_game_portal = this.qg.createBoxPortalAd({
posId: r.utils.config.vivoconfig.recPortalId,
image: "",
marginTop: e / cc.winSize.height * this.SysInfo.screenHeight
});
this._rec_game_portal.onError(function(e) {
r.utils.showLog("盒子九宫格广告加载失败", JSON.stringify(e));
});
this._rec_game_portal.onClose(function() {
r.utils.showLog("close _rec_game_portal");
t._rec_game_portal.isDestroyed || t._rec_game_portal.show();
});
this._rec_game_portal.show().then(function() {
r.utils.showLog("show success _rec_game_portal");
});
} else r.utils.showLog("VIVO 互推九宫格 ID未配置！");
};
e.prototype.hideGamePortal = function() {
this._rec_game_portal && this._rec_game_portal.hide().then(function() {
r.utils.showLog("hideGamePortal success");
}).catch(function(e) {
r.utils.showLog("hideGamePortal fail with:" + e.errCode + "," + e.errMsg);
});
};
e.prototype.umaInit = function() {
this.checkUmeng() ? u.init({
appKey: r.utils.config.vivoconfig.umengId,
useOpenid: !1,
debug: !1
}) : r.utils.showLog("友盟ID未配置，不执行友盟初始化>>>>");
};
e.prototype.umaOnStart = function(e) {
this.checkUmeng() && qg.uma.stage.onStart({
stageId: e,
stageName: "第" + e + "关"
});
};
e.prototype.checkUmeng = function() {
return !!r.utils.config.vivoconfig.umengId;
};
e.prototype.umaReportedLevel = function(e, t) {
this.checkUmeng() && qg.uma.stage.onEnd({
stageId: e,
stageName: "第" + e + "关",
event: t
});
};
e.prototype.umaTrackEvent = function(e, t) {
this.checkUmeng() && qg.uma.trackEvent(e, t);
};
return e = o([ d ], e);
}();
i.default = p;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./UMengSDK/quickGame/uma.min.js": "uma.min",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_Wifi: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "63487/lBO1JVpZpP8G/P+T8", "YZ_Tool_Wifi");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this._serverConfig = null;
this._sysInfo = {};
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
}
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype.gameVersion = function() {
return r.utils.config.wifiConfig.version;
};
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < 30) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("qq暂时不获取uid，uid全部为0");
this._uid = "0";
return [ 2 ];
});
});
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - t._reportLoginTime) / 1e3;
if (o > 0 && o < 30) r.utils.showLog("上报登录获取UID小于：" + t._reportLoginInterval + "秒"); else {
t._reportLoginTime = i;
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=login&device_data=0", function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
console.log("self._service_uid:" + t._service_uid);
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
if (a.default.IsWiFi) {
if (e) {
var t = JSON.parse(e);
t && t.wifi && (d = JSON.stringify(t.wifi));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
try {
this._sysInfo = wuji.getSystemInfoSync();
r.utils.showLog("连尚 小游戏平台信息: ", JSON.stringify(this.SysInfo));
} catch (e) {
r.utils.showLog("连尚 小游戏平台数据获取失败!");
}
this._loadConfig();
}
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsWiFi) {
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("连尚服务器配置数据获取成功: data = ", i);
if (i) {
var o = JSON.parse(i);
o ? r.utils.DebugLoacalConfig ? cc.warn("开启了本地数据测试，使用本地配置!") : e._serverConfig = o : r.utils.showLog("连尚服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("连尚服务器配置数据获取失败, 使用本地配置!");
e._serverConfig || (e._serverConfig = JSON.parse(d));
r.utils.emitServerInitEvent();
});
}
};
e.prototype.getSystemInfo = function() {
if (a.default.IsWiFi) return this._sysInfo;
};
e.prototype.postData = function(e) {
if (a.default.IsWiFi) {
var t = "http://apps.youlesp.com/gs?m=jump&app_id=" + r.utils.config.wifiConfig.appID + "&uid=0&channel=qq&jump_app_id=" + e;
r.utils.showLog("上报数据, url=", t);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("数据上报成功！") : r.utils.showLog("数据上报失败！");
});
}
};
e.prototype.isOverMinVersion = function(e) {
var t = this._sysInfo.SDKVersion;
return this._compareVersion(t, e) >= 0;
};
e.prototype._compareVersion = function(e, t) {
if (!e || !t) return -1;
e = e.split(".");
t = t.split(".");
for (var i = Math.max(e.length, t.length); e.length < i; ) e.push("0");
for (;t.length < i; ) t.push("0");
for (var o = 0; o < i; o++) {
var n = parseInt(e[o]), s = parseInt(t[o]);
if (n > s) return 1;
if (n < s) return -1;
}
return 0;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsWiFi) {
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsWiFi) {
var t = "http://report.youlesp.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.showToast = function(e) {
a.default.IsWiFi && wuji.showToast({
title: e,
icon: "none",
duration: 2e3
});
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Tool_Xiaomi: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6d424x/eXlC8Je3WUcyH/u4", "YZ_Tool_Xiaomi");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, n = this && this.__awaiter || function(e, t, i, o) {
function n(e) {
return e instanceof i ? e : new i(function(t) {
t(e);
});
}
return new (i || (i = Promise))(function(i, s) {
function a(e) {
try {
l(o.next(e));
} catch (e) {
s(e);
}
}
function r(e) {
try {
l(o.throw(e));
} catch (e) {
s(e);
}
}
function l(e) {
e.done ? i(e.value) : n(e.value).then(a, r);
}
l((o = o.apply(e, t || [])).next());
});
}, s = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: r(0),
throw: r(1),
return: r(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function r(e) {
return function(t) {
return l([ e, t ]);
};
}
function l(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
""), f = function() {
function e() {
this._sysInfo = null;
this._serverConfig = null;
this._nativeInsertAdClickTimes = 0;
this._insertAdShowCounts = 0;
this._bannerAdCloseCounts = 0;
this._yzBannerShowCounts = 0;
this._uid = "0";
this._service_uid = "0";
this._loginTime = 0;
this._loginInterval = 30;
this._reportLoginTime = 0;
this._reportLoginInterval = 30;
this.isReport = !1;
}
Object.defineProperty(e.prototype, "SysInfo", {
get: function() {
return this._sysInfo || {};
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ServerConfig", {
get: function() {
return this._serverConfig;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "NativeInsertAdClickTimes", {
get: function() {
return this._nativeInsertAdClickTimes;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "insertAdShowCounts", {
get: function() {
return this._insertAdShowCounts;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "bannerAdCloseCounts", {
get: function() {
return this._bannerAdCloseCounts;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "yzBannerShowCounts", {
get: function() {
return this._yzBannerShowCounts;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "uid", {
get: function() {
return "0";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "serviceId", {
get: function() {
if ("0" != this._service_uid) return this._service_uid;
this.reportLogin();
return "0";
},
enumerable: !1,
configurable: !0
});
e.prototype._login = function() {
return n(this, void 0, void 0, function() {
var e, t;
return s(this, function(i) {
e = new Date().getTime();
if ((t = (e - this._loginTime) / 1e3) > 0 && t < this._loginInterval) {
r.utils.showLog("登录请求间隔小于：" + this._loginInterval + "秒");
return [ 2 ];
}
this._loginTime = e;
this;
r.utils.showLog("vivo暂时不获取uid，uid全部为0");
this._uid = "0";
this.reportLogin();
return [ 2 ];
});
});
};
e.prototype.countNativeInserClick = function() {
this._nativeInsertAdClickTimes++;
c.default.setItem(r.utils.config.xiaomiConfig.appID + "_NativeInsertAdClickTimes", this._nativeInsertAdClickTimes);
};
e.prototype.countInserShowCount = function() {
this._insertAdShowCounts++;
c.default.setItem(r.utils.config.xiaomiConfig.appID + "_NativeInsertAdShowCount", this._insertAdShowCounts);
};
e.prototype.countBannerCloseCount = function() {
this._bannerAdCloseCounts++;
c.default.setItem(r.utils.config.xiaomiConfig.appID + "_ST_BannerAdCloseCounts", this._bannerAdCloseCounts);
};
e.prototype.countYzBannerShowCount = function() {
this._yzBannerShowCounts++;
c.default.setItem(r.utils.config.xiaomiConfig.appID + "_YZBannerShowCounts", this._yzBannerShowCounts);
};
e.prototype.reportLogin = function() {
var e = this;
if (!this.isReport) {
this.isReport = !0;
var t = this, i = new Date().getTime(), o = (i - this._reportLoginTime) / 1e3;
if (o > 0 && o < this._reportLoginInterval) r.utils.showLog("上报登录获取UID小于：" + this._reportLoginInterval + "秒"); else {
this._reportLoginTime = i;
var n = "http://apps.youlesp.com/gss?m=login&device_data=" + encodeURI(JSON.stringify(this._sysInfo));
r.utils.commomHttpRequest(n, function(i, o) {
if (i) {
if (o) {
var n = JSON.parse(o);
r.utils.showLog("data=" + o);
r.utils.showLog("result=" + n);
r.utils.showLog("result.uid=" + n.uid);
if (n.uid) {
t._service_uid = "" + n.uid;
r.utils.showLog("服务器请求登录成功! _service_uid=" + t._service_uid);
c.default.setItem(l.default.ST_SERVICE_UID, t._service_uid);
}
}
} else r.utils.showLog("获取数据失败1");
e.isReport = !1;
});
}
}
};
e.prototype.init = function(e) {
if (a.default.IsXiaoMi) {
if (e) {
var t = JSON.parse(e);
t && t.xiaomi && (d = JSON.stringify(t.xiaomi));
}
this._service_uid = c.default.getItem(l.default.ST_SERVICE_UID);
this._service_uid = this._service_uid ? this._service_uid : "0";
if (qg.getUpdateManager) {
var i = qg.getUpdateManager();
i.onCheckForUpdate(function(e) {
r.utils.showLog("onCheckForUpdate", e.hasUpdate);
});
i.onUpdateReady(function() {
i.applyUpdate();
});
i.onUpdateFailed(function() {
r.utils.showMsg("自动更新失败，请手动重启游戏！");
});
}
this.getSystemInfo();
this._loadConfig();
}
};
e.prototype._loadConfig = function() {
var e = this;
if (a.default.IsXiaoMi) {
r.utils.commomHttpRequest("http://apps.youlesp.com/gss?m=g", function(t, i) {
if (t) {
r.utils.showLog("小米服务器配置数据获取成功: data = " + i);
if (i) {
var o = JSON.parse(i);
if (o) if (r.utils.DebugLoacalConfig) r.utils.showLog("开启了本地数据测试，使用本地配置!"); else {
e._serverConfig = o;
e._serverConfig.is_show_log_view && "true" == e._serverConfig.is_show_log_view && (r.utils.showLogView = !0);
} else r.utils.showLog("小米服务器配置数据不是合法的JSON数据, 使用本地配置!");
}
} else r.utils.showLog("小米服务器配置数据获取失败, 使用本地配置!");
if (e._serverConfig) {
if (e._serverConfig.is_local_pos_id && "false" == e._serverConfig.is_local_pos_id) {
r.utils.showLog("使用服务器下发的广告id");
r.utils.config.xiaomiConfig.insertId = e._serverConfig.intersititia_pos_id;
r.utils.config.xiaomiConfig.videoId = e._serverConfig.video_pos_id;
r.utils.config.xiaomiConfig.nativeInsertIds = e.ServerConfig.native_intersititial_pos_id;
r.utils.config.xiaomiConfig.nativeBannerIds = e.ServerConfig.native_banner_pos_id;
r.utils.config.xiaomiConfig.nativeTryGameIds = e.ServerConfig.native_trygame_pos_id;
r.utils.config.xiaomiConfig.bannerId = e._serverConfig.banner_pos_id;
} else r.utils.showLog("使用本地配置的广告ID");
if (e.ServerConfig.native_banner_configs) for (var n = 0; n < e.ServerConfig.native_banner_configs.length; n++) {
r.utils.showLog("获取到原生广告配置:" + e.ServerConfig.native_banner_configs[n].location, ">>>>", JSON.stringify(e.ServerConfig.native_banner_configs[n]));
r.utils.config.xiaomiConfig.setNativeBannerInfo(e.ServerConfig.native_banner_configs[n].location, e.ServerConfig.native_banner_configs[n]);
}
} else e._serverConfig = JSON.parse(d);
r.utils.emitServerInitEvent();
});
}
};
e.prototype.isOverMiniVersion = function(e) {
return !!(a.default.IsXiaoMi && this._sysInfo && this._sysInfo.platformVersionCode) && this._sysInfo.platformVersionCode >= e;
};
e.prototype.postLevel = function(e, t, i) {
if (a.default.IsXiaoMi) {
var o = "http://report.youlesp.com/gss?m=rlevel&level_id=" + e + "&level_name=" + encodeURI(i) + "&status=" + t;
r.utils.commomHttpRequest(o, function(e, t) {
e ? r.utils.showLog("关卡数据上报成功！") : r.utils.showLog("关卡数据上报失败！");
}.bind(this));
}
};
e.prototype.sendEvent = function(e) {
if (a.default.IsXiaoMi) {
var t = "http://report.youlesp.com/gss?m=revent&event=" + encodeURI(e);
r.utils.commomHttpRequest(t, function(e, t) {
e ? r.utils.showLog("上报自定义事件成功！") : r.utils.showLog("上报自定义事件失败！");
}.bind(this));
}
};
e.prototype.getSystemInfo = function() {
if (a.default.IsXiaoMi) {
this._sysInfo = qg.getSystemInfoSync();
r.utils.showLog("获取系统信息成功：" + JSON.stringify(this._sysInfo));
}
};
e.prototype.GameExit = function() {
a.default.IsXiaoMi && qg.exitApplication({
success: function() {
r.utils.showLog("exit Game success");
},
fail: function() {
r.utils.showLog("exit Game fail");
}
});
};
return e = o([ h ], e);
}();
i.default = f;
cc._RF.pop();
}, {
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YZ_Turntable: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "51051Ce0K5D5bDuItdfCQ7T", "YZ_Turntable");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = e("./CompatibleTool"), l = e("./YZ_LocalStorage"), c = cc._decorator, u = c.ccclass, h = c.property, d = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.spinBtn = null;
t.wheelSp = null;
t.greaSprite = null;
t.firstSpriteFrame = null;
t.secondSpriteFrame = null;
t.lastSpriteFrame = null;
t.effectAudio = null;
t.panel = null;
t.videoIcon = null;
t.spriteDouble = null;
t.spritePass = null;
t.tirpNode = null;
t.checked = null;
t.closeBtn = null;
t.videoBtn = null;
t.resultMsg = null;
t.turnCountLbl = null;
t.luckBox = null;
t.countBar = null;
t.normalBtn = null;
t.normalCloseBtn = null;
t.topCloseBtn = null;
t.maxSpeed = 12;
t.duration = 3;
t.acc = .1;
t.targetID = 0;
t.springback = !1;
t.wheelState = 0;
t.curSpeed = 0;
t.spinTime = 0;
t.gearNum = 8;
t.defaultAngle = .5;
t.gearAngle = 360 / t.gearNum;
t.finalAngle = 0;
t.effectFlag = 0;
t.audioID = 0;
t.decAngle = 0;
t._turntableCount = 0;
t._turntablePlayCount = 0;
t.luckBoxCount = 4;
t._updateProgress = !1;
t._progress = 0;
t.defaultProgress = 1e-8;
t.rewardCallFunc = null;
t.gearInfo = [ 200, 100, 300, 400, 800, 500, 1e3, 4e3 ];
return t;
}
Object.defineProperty(t.prototype, "turntableCount", {
get: function() {
return this._turntableCount;
},
set: function(e) {
this._turntableCount = e;
l.default.setItem("turntable_times", new Date().toDateString());
l.default.setItem("turntable_counts", this._turntableCount);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "turntablePlayCount", {
get: function() {
return this._turntablePlayCount;
},
set: function(e) {
var t = this;
if (this.luckBoxCount - e == 0) {
this.luckBox.node.active = !0;
e = 0;
this.countBar.progress = this.defaultProgress;
this.luckBox.setAnimation(1, "dakai", !1);
this.scheduleOnce(function() {
s.utils.SendEvent("转盘抽奖获取累计4次大奖！");
t.showMsg(t.gearInfo[7]);
if (t.rewardCallFunc) {
var e = new a.YZ_Reward();
e.rewardValue = t.gearInfo[7];
t.rewardCallFunc(e);
}
}, .6);
this.scheduleOnce(function() {
t.luckBox.setAnimation(1, "kd", !1);
}, 2);
this.scheduleOnce(function() {
t.luckBox.node.runAction(cc.sequence(cc.scaleTo(.2, .8), cc.callFunc(function() {
t.luckBox.node.active = !1;
t.luckBox.node.scale = 2;
})));
}, 4);
}
this._turntablePlayCount = e;
l.default.setItem("turntablePlayCount", this._turntablePlayCount);
this._progress = e / this.luckBoxCount;
this.turnCountLbl.string = this.luckBoxCount - e + "";
this.turnCountLbl.node.runAction(cc.sequence(cc.scaleTo(.3, 1.8), cc.scaleTo(.3, 1)));
},
enumerable: !1,
configurable: !0
});
t.prototype.init = function(e, t, i, o) {
var n = this;
this.rewardCallFunc = t;
i.length > 0 && (this.gearInfo = i);
if (o) {
s.utils.showLog("配置为服务器的奖励图片：", o);
r.default.LoadRes(o, function(e, t) {
!e && cc.isValid(n) && n.greaSprite && (n.greaSprite.spriteFrame = new cc.SpriteFrame(t));
});
}
};
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
this.wheelSp.node.rotation = this.defaultAngle;
s.utils.SendEvent("转盘抽奖-显示成功！");
this.initCount();
if (this.turntableCount <= 0) {
this.normalBtn.active = !1;
this.videoBtn.active = !0;
this.normalCloseBtn.active = !0;
s.utils.showScaleAction(this.videoBtn, null, !1, !1);
} else {
this.normalCloseBtn.active = !1;
s.utils.showScaleAction(this.normalBtn, null, !1, !1);
}
s.utils.showSkipBtn(this.closeBtn, !0);
this.rewardCallFunc = s.utils.rewardCallFunc;
cc.winSize.height < cc.winSize.width ? s.utils.adManager.HideBanner(a.BannerLocation.Game) : s.utils.adManager.ShowBanner(a.BannerLocation.Game);
};
t.prototype.startTurnTable = function() {
var e = this;
if (0 === this.wheelState) if (this.turntableCount <= 0) {
if (this.checked.active || this.spinBtn.active) {
s.utils.adManager.ShowVideo(function(t, i) {
if (t) {
e.turntableCount = 1;
e.startTurnTable();
s.utils.SendEvent("转盘抽奖获取奖励-成功！");
} else {
s.utils.showMsg("观看完整视频可以获取一次抽奖机会！");
s.utils.SendEvent("转盘抽奖视频播放-失败！");
e.onClose();
}
});
return;
}
this.onClose();
} else {
this.turntableCount = 0;
this.targetID = this.getTargetId();
this.decAngle = 720;
this.wheelState = 1;
this.curSpeed = 0;
this.spinTime = 0;
}
};
t.prototype.onCheck = function() {
this.checked.active = !this.checked.active;
this.spritePass.active = !this.checked.active;
this.spriteDouble.active = this.checked.active;
this.videoIcon.active = this.checked.active;
};
t.prototype.onClose = function() {
var e = this;
this.panel.runAction(cc.sequence(cc.scaleTo(.3, 0).easing(cc.easeBackIn()), cc.callFunc(function() {
e.node.destroy();
})));
};
t.prototype.onEnable = function() {
this.panel.scale = 0;
var e = 1;
e = cc.winSize.height < cc.winSize.width ? .6 : cc.winSize.width / 1080;
this.panel.runAction(cc.scaleTo(.3, e).easing(cc.easeBackOut()));
};
t.prototype.onDestroy = function() {
if (s.utils.turnTablePanelCloseFunc) {
s.utils.turnTablePanelCloseFunc();
s.utils.turnTablePanelCloseFunc = null;
} else {
s.utils.rewardCloseFunc && s.utils.rewardCloseFunc();
s.utils.rewardCloseFunc = null;
}
s.utils.adManager.HideBanner(a.BannerLocation.Game);
};
t.prototype.checkBtnSpriteFrame = function() {
if (this.turntableCount <= 0) {
this.normalBtn.active = !1;
this.videoBtn.active = !0;
this.normalCloseBtn.active = !0;
s.utils.showScaleAction(this.videoBtn, null, !1, !1);
} else this.normalCloseBtn.active = !1;
};
t.prototype.initCount = function() {
var e = l.default.getItem("turntable_counts");
l.default.getItem("turntable_times") != new Date().toDateString() ? this.turntableCount = 1 : this._turntableCount = e;
this.countBar.progress = this.defaultProgress;
this.turntablePlayCount = l.default.getItem("turntablePlayCount") ? l.default.getItem("turntablePlayCount") : 0;
this.countBar.progress = this.turntablePlayCount / this.luckBoxCount;
s.utils.showLog("当前剩余抽奖次数：", this.turntableCount);
};
t.prototype.test = function() {
if (0 === this.wheelState) {
this.targetID = this.getTargetId();
cc.log("结果：", this.targetID);
this.decAngle = 720;
this.wheelState = 1;
this.curSpeed = 0;
this.spinTime = 0;
}
};
t.prototype.getTargetId = function() {
var e = Math.random(), t = (Math.random(), 0);
e < .01 ? t = 1 : e < .04 ? t = .9 : e < .1 ? t = .5 : e < .2 ? t = .7 : e < 1 && (t = .1 * Math.floor(4 * Math.random()));
return Math.floor(8 * t);
};
t.prototype.showMsg = function(e) {
var t = cc.instantiate(this.resultMsg);
cc.find("kuang/goldLbl", t).getComponent(cc.Label).string = "" + e;
t.active = !0;
t.scale = .3;
this.node.addChild(t);
t.runAction(cc.scaleTo(.3, this.panel.scale).easing(cc.easeBackOut()));
this.scheduleOnce(function() {
t.destroy();
t.removeFromParent();
}, 1.2);
};
t.prototype.showRes = function() {
var e = this;
this.showMsg(this.gearInfo[this.targetID]);
this.scheduleOnce(function() {
e.turntablePlayCount++;
}, 1);
if (this.rewardCallFunc) {
var t = new a.YZ_Reward();
t.rewardValue = this.gearInfo[this.targetID];
this.rewardCallFunc(t);
}
this.checkBtnSpriteFrame();
};
t.prototype.update = function(e) {
this.countBar.progress < this._progress && (this.countBar.progress += e);
if (0 !== this.wheelState) {
this.effectFlag += this.curSpeed;
if (this.effectFlag >= this.gearAngle) {
this.audioID = cc.audioEngine.playEffect(this.effectAudio, !1);
this.effectFlag = 0;
}
if (1 == this.wheelState) {
this.spinTime += e;
this.wheelSp.node.rotation = this.wheelSp.node.rotation + this.curSpeed;
if (this.curSpeed <= this.maxSpeed) this.curSpeed += this.acc; else {
if (this.spinTime < this.duration) return;
this.finalAngle = 360 - this.targetID * this.gearAngle + this.defaultAngle;
this.maxSpeed = this.curSpeed;
this.springback && (this.finalAngle += this.gearAngle);
this.wheelSp.node.rotation = this.finalAngle;
this.wheelState = 2;
}
} else if (2 == this.wheelState) {
var t = this.wheelSp.node.rotation, i = t - this.finalAngle;
this.curSpeed = this.maxSpeed * ((this.decAngle - i) / this.decAngle) + .2;
this.wheelSp.node.rotation = t + this.curSpeed;
if (this.decAngle - i <= 0) {
this.wheelState = 0;
this.wheelSp.node.rotation = this.finalAngle;
if (this.springback) {
var o = cc.rotateBy(.6, -this.gearAngle), n = cc.sequence(cc.delayTime(.2), o, cc.callFunc(this.showRes, this));
this.wheelSp.node.runAction(n);
} else this.showRes();
}
}
}
};
n([ h(cc.Node) ], t.prototype, "spinBtn", void 0);
n([ h(cc.Sprite) ], t.prototype, "wheelSp", void 0);
n([ h(cc.Sprite) ], t.prototype, "greaSprite", void 0);
n([ h(cc.SpriteFrame) ], t.prototype, "firstSpriteFrame", void 0);
n([ h(cc.SpriteFrame) ], t.prototype, "secondSpriteFrame", void 0);
n([ h(cc.SpriteFrame) ], t.prototype, "lastSpriteFrame", void 0);
n([ h({
type: cc.AudioClip
}) ], t.prototype, "effectAudio", void 0);
n([ h(cc.Node) ], t.prototype, "panel", void 0);
n([ h(cc.Node) ], t.prototype, "videoIcon", void 0);
n([ h(cc.Node) ], t.prototype, "spriteDouble", void 0);
n([ h(cc.Node) ], t.prototype, "spritePass", void 0);
n([ h(cc.Node) ], t.prototype, "tirpNode", void 0);
n([ h(cc.Node) ], t.prototype, "checked", void 0);
n([ h(cc.Node) ], t.prototype, "closeBtn", void 0);
n([ h(cc.Node) ], t.prototype, "videoBtn", void 0);
n([ h(cc.Node) ], t.prototype, "resultMsg", void 0);
n([ h(cc.Label) ], t.prototype, "turnCountLbl", void 0);
n([ h(sp.Skeleton) ], t.prototype, "luckBox", void 0);
n([ h(cc.ProgressBar) ], t.prototype, "countBar", void 0);
n([ h(cc.Node) ], t.prototype, "normalBtn", void 0);
n([ h(cc.Node) ], t.prototype, "normalCloseBtn", void 0);
n([ h(cc.Node) ], t.prototype, "topCloseBtn", void 0);
return t = n([ u ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
YouWanAnalytics: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cf318034rlIIL7zgdSzzaJ/", "YouWanAnalytics");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../PlatUtils"), s = e("../Utils"), a = e("../YZ_Constant"), r = e("../YZ_LocalStorage"), l = e("./EventAdInfo"), c = cc._decorator, u = c.ccclass, h = (c.property, 
function() {
function e() {}
Object.defineProperty(e, "_yw_uid", {
get: function() {
return parseInt(r.default.getItem(a.default.ST_YOUWAN_UID, "-1"));
},
enumerable: !1,
configurable: !0
});
e.login = function(e) {
var t = this;
if (s.utils.config.otherconfig.yw_app_id) {
var i = {};
this.getDeviceInfo(i);
this.getStaticParame(i);
this.connect(this.LOGIN_URL, i, function(i, o) {
if (i) {
t.showLog("登录成功! >>result:" + JSON.stringify(o) + " #uid=" + o.uid);
r.default.setItem(a.default.ST_YOUWAN_UID, o.uid);
} else t.showLog("登录失败!");
e && e(i, o);
});
} else this.showLog("yw_app_id 未配置，不进行上报！");
};
e.EventAd = function(e, t) {
var i = this;
if (s.utils.config.otherconfig.yw_app_id) {
if (n.default.IsOPPO) {
var o = new l.default(e, t), a = {};
this.getStaticParame(a);
a.ad_data = [];
a.ad_data[0] = o.toJsonData();
this.connect(this.EVENT_AD_URL, a, function(e) {
e ? i.showLog("上报广告事件成功:" + JSON.stringify(o.toJsonData())) : i.showLog("上报广告事件失败:" + JSON.stringify(o.toJsonData()));
});
}
} else this.showLog("yw_app_id 未配置，不进行上报！");
};
e.EventAdWithObj = function(e, t, i) {
var o = this;
if (s.utils.config.otherconfig.yw_app_id) {
if (n.default.IsOPPO) {
var a = new l.default(e, t, i), r = {};
this.getStaticParame(r);
r.ad_data = [];
r.ad_data[0] = a.toJsonData();
this.connect(this.EVENT_AD_URL, r, function(e) {
e ? o.showLog("上报广告事件成功:" + JSON.stringify(a.toJsonData())) : o.showLog("上报广告事件失败:" + JSON.stringify(a.toJsonData()));
});
}
} else this.showLog("yw_app_id 未配置，不进行上报！");
};
e.getStaticParame = function(e) {
e.app_id = s.utils.config.otherconfig.yw_app_id;
e.sdk_version = s.utils.utilsVersion;
e.app_type = 1;
-1 != this._yw_uid && (e.uid = this._yw_uid);
e.country = "CN";
e.uuid = r.default.getItem(a.default.ST_UUID, "") || s.utils.generateUUID();
if (n.default.IsOPPO) {
e.channel = "oppo";
e.app_version = s.utils.config.oppoconfig.version;
}
};
e.getDeviceInfo = function(e) {
var t = {};
if (n.default.IsOPPO) {
t = s.utils.oppoTool.SysInfo;
e.pkg = s.utils.config.oppoconfig.packageName;
e.device_id = s.utils.oppoTool._device_id;
e.kernel_version = t.platformVersionCode;
e.device_model = t.model;
e.device_manufactory = t.brand;
e.screen_height = t.screenHeight;
e.screen_width = t.screenWidth;
e.language = t.language;
e.os = "Android";
t.system.indexOf(" ") > -1 ? e.os_version_release = t.system.substr(t.system.indexOf(" ") + 1) : e.os_version_release = t.system;
}
};
e.connect = function(e, t, i) {
var o = this, n = new XMLHttpRequest();
n.timeout = 6e3;
n.open("POST", e + "?time_stamp=" + new Date().getTime());
n.send("data=" + JSON.stringify(t));
this.showLog("connect：#url=" + e);
this.showLog("connect： #parame==" + JSON.stringify(t));
n.onreadystatechange = function() {
o.showLog("请求状态改变, reaedyState=", n.readyState, "; status=", n.status + " ; responseText=", n.responseText);
if (4 == n.readyState) if (200 == n.status) {
if (n.responseText) try {
var e = JSON.parse(n.responseText);
0 == e.code ? i && i(!0, e.data || "") : i && i(!1);
} catch (e) {
o.showLog("connect erro：#msg=" + e);
}
} else {
o.showLog("connect erro： #parame==" + JSON.stringify(t));
i && i(!1);
}
};
n.ontimeout = function() {
o.showLog("connect timeout!");
i && i(!1);
};
n.onerror = function() {
o.showLog("connect onerror!");
i && i(!1);
};
};
e.showLog = function(e) {
for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
s.utils.showLog("[YouWan] --- " + e, t);
};
e.LOGIN_URL = "http://as.youlesp.com/as/login";
e.EVENT_AD_URL = "http://e.youlesp.com/ae/ad";
return e = o([ u ], e);
}());
i.default = h;
cc._RF.pop();
}, {
"../PlatUtils": "PlatUtils",
"../Utils": "Utils",
"../YZ_Constant": "YZ_Constant",
"../YZ_LocalStorage": "YZ_LocalStorage",
"./EventAdInfo": "EventAdInfo"
} ],
YzCustomAdPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3913b/5d+JET5bTvhP+7Ou3", "YzCustomAdPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = a.property, c = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.exitBtn = null;
t.closeCallFunc = null;
t.closeCount = 1;
t.closeBtnClickCount = 0;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
s.utils.adManager.showCustomAd({
location: 100
});
var e = 0;
e = cc.winSize.height < cc.winSize.width ? cc.winSize.width / 1920 * .75 : cc.winSize.width / 1080;
s.utils.getConfigByKey("custom_panel_close_count") && (this.closeCount = s.utils.getConfigByKey("custom_panel_close_count"));
cc.find("Panel", this.node).scale = e;
this.exitBtn.runAction(cc.fadeIn(3));
};
t.prototype.onExitBtnClickListener = function() {
s.utils.showLog("退出游戏模版弹窗！");
this.closeBtnClickCount++;
if (this.closeCount == this.closeBtnClickCount) {
cc.director.emit("CloseCustomADPanel");
this.node.destroy();
s.utils.adManager.hideCustomAd({
location: 100
});
this.closeCallFunc && this.closeCallFunc();
}
};
n([ l({
type: cc.Node
}) ], t.prototype, "exitBtn", void 0);
return t = n([ r ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
YzLoginPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8cae4S0CzlIDZZOb48XMdWd", "YzLoginPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = e("./YZ_Constant"), r = cc._decorator, l = r.ccclass, c = (r.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.ratio = 1;
t.okBtn = null;
t.successFunc = null;
t.failFunc = null;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
var e = cc.find("Panel", this.node);
this.okBtn = cc.find("OKBtn", e);
cc.winSize.height < cc.winSize.width ? this.ratio = cc.winSize.width / 1920 * .75 : this.ratio = cc.winSize.width / 1080;
cc.find("Panel", this.node).scale = this.ratio;
};
t.prototype.onDestroy = function() {
cc.game.targetOff(this);
};
t.prototype.onOKClickListener = function() {
var e = this;
this.okBtn.getComponent(cc.Button).interactable = !1;
cc.game.targetOff(this);
cc.game.on(a.default.ST_LOGIN_SUCCESS, function() {
s.utils.showLog("登录成功！");
e.successFunc && e.successFunc();
e.node.destroy();
}, this);
cc.game.on(a.default.ST_LOGIN_FAIL, function(t) {
e.failFunc && e.failFunc();
e.okBtn.getComponent(cc.Button).interactable = !0;
}, this);
s.utils.login(null, null);
};
t.prototype.onCloseClickListener = function() {
s.utils.GameExit();
};
return t = n([ l ], t);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant"
} ],
YzRealNameAuthPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "48ce4dCA2JKc6UIPzo4VU0e", "YzRealNameAuthPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./Utils"), a = cc._decorator, r = a.ccclass, l = (a.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.edit_real_name = null;
t.edit_id_card = null;
t.realNameAuthPanel = null;
t.msgNode = null;
t.exitPanel = null;
t.toVerifyPanel = null;
t.offLinePanel = null;
t.edit_default_color = null;
t._isOffLine = !1;
t.realNameAuthLandscapePanel = null;
t.regName = /^[\u4e00-\u9fa5]{2,4}$/;
t.regIdNo = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
t._clickTime = 0;
return t;
}
t.prototype.onLoad = function() {
s.utils.otherConfig && s.utils.otherConfig.group && (this.node.group = s.utils.otherConfig.group);
var e = 0;
if (cc.winSize.height < cc.winSize.width) {
this.realNameAuthPanel = cc.find("Panel/RealNameAuthLandscapePanel", this.node);
e = cc.winSize.width / 1920 * .75;
} else {
this.realNameAuthPanel = cc.find("Panel/RealNameAuthPanel", this.node);
e = cc.winSize.width / 1080;
}
this.exitPanel = cc.find("Panel/ExitPanel", this.node);
this.toVerifyPanel = cc.find("Panel/ToVerifyPanel", this.node);
this.offLinePanel = cc.find("Panel/OfflinePanel", this.node);
this.edit_id_card = this.realNameAuthPanel.getChildByName("editIdCard").getComponent(cc.EditBox);
this.edit_real_name = this.realNameAuthPanel.getChildByName("editRealName").getComponent(cc.EditBox);
this.msgNode = cc.find("Panel/MsgNode", this.node);
this.edit_default_color = this.edit_real_name.fontColor;
null == this.edit_default_color && (this.edit_default_color = new cc.Color(0, 0, 0, 63));
cc.find("Panel", this.node).scale = e;
this._isOffLine ? this.showOfferLine() : this.realNameAuthPanel.active = !0;
};
t.prototype.start = function() {};
t.prototype.onDestroy = function() {
s.utils.emitRealNameAuthCloseEvent();
};
t.prototype.onExitBtnClickListener = function() {
s.utils.showLog("退出游戏！");
s.utils.GameExit();
};
t.prototype.onBackAuthBtnClickListener = function() {
this.toVerifyPanel.active = !1;
this.exitPanel.active = !1;
this.realNameAuthPanel.active = !0;
};
t.prototype.showExitPanel = function() {
this.toVerifyPanel.active = !1;
this.realNameAuthPanel.active = !1;
this.offLinePanel.active = !1;
this.exitPanel.active = !0;
};
t.prototype.showOfferLine = function() {
this.toVerifyPanel.active = !1;
this.exitPanel.active = !1;
this.realNameAuthPanel.active = !1;
this.offLinePanel.active = !0;
};
t.prototype.onPostBtnClickListener = function() {
var e = this, t = new Date().getTime();
if ((t - this._clickTime) / 1e3 < 2) this.showMsg("请勿频繁提交！"); else {
this._clickTime = t;
if (!this.regName.test(this.edit_real_name.string)) {
this.showMsg("真实姓名填写有误!");
this.edit_real_name.fontColor = cc.Color.RED;
this.edit_real_name.setFocus();
return !1;
}
this.edit_real_name.fontColor = this.edit_default_color;
if (!this.regIdNo.test(this.edit_id_card.string)) {
this.edit_id_card.fontColor = cc.Color.RED;
this.showMsg("身份证号填写有误!");
this.edit_id_card.setFocus();
return !1;
}
this.edit_id_card.fontColor = this.edit_default_color;
s.utils.realNameAuth(this.edit_id_card.string, this.edit_real_name.string, function(t, i) {
s.utils.showLog("实名认证结束：#result=" + JSON.stringify(i));
if (t) if (i) {
var o = JSON.parse(i);
switch (o.code) {
case 1:
e.showMsg(o.msg);
break;

case 0:
"0" == o.nonage ? s.utils.setRealNameAuthLocalData("2") : s.utils.setRealNameAuthLocalData("1");
s.utils._isRealNameAuth = !0;
o.msg && e.showMsg(o.msg);
e.scheduleOnce(function() {
e.node.destroy();
}, .5);
break;

case 2:
s.utils.setRealNameAuthLocalData("2");
e.showOfferLine();
}
} else e.showMsg("请求失败，请重新提交验证！"); else e.showMsg("请求失败，请重新提交验证！");
});
}
};
t.prototype.showMsg = function(e) {
var t = cc.instantiate(this.msgNode);
t.getChildByName("msgLabel").getComponent(cc.Label).string = "" + e;
this.node.addChild(t, cc.macro.MAX_ZINDEX);
t.active = !0;
t.runAction(cc.sequence(cc.delayTime(.8), cc.moveBy(.3, cc.v2(0, 80)), cc.callFunc(function() {
t.destroy();
})));
};
return t = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./Utils": "Utils"
} ],
YzUserPrivacyPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d0717GZecVL5p3tNcXpk9rY", "YzUserPrivacyPanel");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./CompatibleTool"), a = e("./PlatUtils"), r = e("./Utils"), l = e("./YZ_Constant"), c = e("./YZ_LocalStorage"), u = cc._decorator, h = u.ccclass, d = (u.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._userPrivacyInfo = null;
t._checkExit = null;
t._mainPanel = null;
t._userPrivacyDesc = null;
t.showDesc = !1;
t.ratio = 1;
t.imgCount = 7;
t.scale = 1.5;
t.imgPath = "http://xcx.youletd.com/xcx/h5/privacyImg/";
t.companyInfoNode = null;
t.is_btn_jump_desc = !1;
return t;
}
t.prototype.onLoad = function() {
(a.default.IsWechat || a.default.IsQQ || a.default.IsDouyin || a.default.IsBaidu) && (this.imgPath = "https://xcx.youletd.com/xcx/h5/privacyImg/");
this._userPrivacyInfo = cc.find("PrivacyDesc", this.node);
this._checkExit = cc.find("CheckPanel", this.node);
this._mainPanel = cc.find("Panel", this.node);
if (this.showDesc) {
this._mainPanel.active = !1;
this._checkExit.active = !1;
this._userPrivacyInfo.getComponent(cc.ScrollView).content.getChildByName("choiseNode").active = !1;
this.showDescPanel();
}
if (cc.winSize.height < cc.winSize.width) {
this.ratio = cc.winSize.width / 1920 * .75;
this.imgCount = 5;
this.imgPath += "h_";
this.scale = 1.4;
} else {
this.ratio = cc.winSize.width / 1080;
this.imgPath += "p_";
}
this._mainPanel.scale = this.ratio;
this._checkExit.scale = this.ratio;
this._userPrivacyInfo.getComponent(cc.ScrollView).content.getChildByName("choiseNode").scale = this.ratio;
this._userPrivacyInfo.getChildByName("view").getChildByName("closeImg").scale = this.ratio;
this._userPrivacyInfo.getChildByName("view").getChildByName("LaodingLabel").scale = this.ratio;
this.companyInfoNode = this._userPrivacyInfo.getComponent(cc.ScrollView).content.getChildByName("ContactInfo");
var e = "深圳市优智信息技术有限公司", t = "联系邮箱：youzhixx@163.com";
if (r.utils.ServerConfig.company) {
e = r.utils.ServerConfig.company.subject;
t = r.utils.ServerConfig.company.contact;
}
this.companyInfoNode.getChildByName("subject").getComponent(cc.Label).string = e;
this.companyInfoNode.getChildByName("contact").getComponent(cc.Label).string = t;
};
t.prototype.onOKClickListener = function() {
c.default.setItem(l.default.YZ_GAME_YSXY, "isOK");
this.node.destroy();
r.utils.emitPrivacyCloseEvent();
};
t.prototype.onCloseClickListener = function() {
if (a.default.IsHuaWei) r.utils.GameExit(); else if (this._checkExit.active && (a.default.IsQQ || a.default.IsOPPO || a.default.IsXiaoMi)) r.utils.GameExit(); else {
this._checkExit.active = !this._checkExit.active;
this._mainPanel.active = !this._mainPanel.active;
}
};
t.prototype.onClosePrivacyDesc = function() {
if (this.showDesc) this.node.destroy(); else {
this._userPrivacyInfo.active = !1;
for (var e = this._userPrivacyInfo.getComponent(cc.ScrollView).content.children, t = 0; t < e.length; t++) e[t].active = !1;
}
};
t.prototype.onJumpDescBtnClickListner = function() {
this.is_btn_jump_desc = !0;
this.showDescPanel();
};
t.prototype.showDescPanel = function() {
var e = this;
this._userPrivacyInfo.active = !0;
this._userPrivacyInfo.getChildByName("view").getChildByName("LaodingLabel").active = !0;
this.scheduleOnce(function() {
new cc.Node().addComponent(cc.Sprite);
for (var t = function(t) {
var i = new cc.Node();
i.addComponent(cc.Sprite);
e._userPrivacyInfo.getComponent(cc.ScrollView).content.addChild(i);
s.default.LoadRes(e.imgPath + t + ".png", function(o, n) {
if (!o && cc.isValid(e)) {
i.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(n);
i.height *= e.scale * e.ratio;
i.width *= e.scale * e.ratio;
t >= 1 && (e._userPrivacyInfo.getChildByName("view").getChildByName("LaodingLabel").active = !1);
if (t >= e.imgCount) {
e.companyInfoNode.zIndex = e.imgCount;
e.companyInfoNode.active = !0;
if (e.is_btn_jump_desc) {
e._userPrivacyInfo.getComponent(cc.ScrollView).content.getChildByName("choiseNode").zIndex = e.imgCount + 1;
e._userPrivacyInfo.getComponent(cc.ScrollView).content.getChildByName("choiseNode").active = !0;
}
}
} else r.utils.showMsg("隐私协议加载失败，请关闭窗口重新打开");
});
}, i = 1; i <= e.imgCount; i++) t(i);
}, .5);
};
return t = n([ h ], t);
}(cc.Component));
i.default = d;
cc._RF.pop();
}, {
"./CompatibleTool": "CompatibleTool",
"./PlatUtils": "PlatUtils",
"./Utils": "Utils",
"./YZ_Constant": "YZ_Constant",
"./YZ_LocalStorage": "YZ_LocalStorage"
} ],
ZombieBase: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4f9b3rBNdNPy6WqLrNu03ZA", "ZombieBase");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s, a = e("../../common-plugin/Scripts/PlatUtils"), r = e("../Framework/CocosZ"), l = e("../Framework/Constant"), c = e("../Game/gameDate"), u = e("../Game/gameMgr"), h = e("../Game/person"), d = e("../Game/UpgradeMgr"), f = e("./bullet"), _ = cc._decorator, p = _.ccclass, g = _.property;
(function(e) {
e[e.front = 0] = "front";
e[e.area = 1] = "area";
e[e.charge = 2] = "charge";
e[e.range = 3] = "range";
})(s || (s = {}));
var m = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.zombieId = 0;
t.bullet_prefab = null;
t.sp_hongzhaquan = null;
t.audio_attack1 = null;
t.audio_attack2 = null;
t.audio_hart = null;
t.audio_die = null;
t.isBoss = !1;
t._aniLayer = null;
t._spAni = null;
t._divToPlayer = cc.Vec2.ZERO;
t._time = -1;
t._canColor = !0;
t._canAtk = !0;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.id = 94;
if (c.default.ZombieMess[this.zombieId]) {
this.totleHp = c.default.ZombieMess[this.zombieId].hp;
this.atkNum = c.default.ZombieMess[this.zombieId].atk;
this.atkRange = c.default.ZombieMess[this.zombieId].atkRange;
this.MoveSpeed = c.default.ZombieMess[this.zombieId].speed;
a.default.IsOPPO && (this.MoveSpeed /= 2);
}
this.isBoss ? this.node.scale = 1 : this.node.scale = .8;
this.rig = this.node.getComponent(cc.RigidBody);
this.rig && (this.rig.linearDamping = .2);
this._aniLayer = this.node.getChildByName("aniLayer");
this._aniLayer && (this._spAni = this._aniLayer.getChildByName("ani").getComponent(sp.Skeleton));
if (this._spAni) {
this._spAni.setStartListener(function() {
e.startListenerCall();
});
this._spAni.setCompleteListener(function() {
e.endListenerCall();
});
}
};
t.prototype.onDestroy = function() {
cc.game.targetOff(this);
};
t.prototype.start = function() {};
t.prototype.initNode = function() {
var e = this;
u.gameMgr && u.gameMgr.setMapTs.checkNode(this.node, !0);
cc.game.on(l.default.E_GAME_LOGIC, this._onGameMessageHandler, this);
u.gameMgr.zombieCurNum++;
this.node.stopAllActions();
this.node.zIndex = l.ZindexLayer.zindex_zombie + this.zombieId;
this.node.opacity = 255;
this.atkDir = cc.Vec2.ZERO;
this.curHp = this.totleHp;
this.isDeath = !1;
this.isAtk = !1;
this._canAtk = !0;
this.canMoveDir = !0;
this.canMove = !0;
if (this._spAni && this._spAni.isValid) {
this._spAni.node.scaleX = Math.abs(this._spAni.node.scaleX);
this._spAni.node.opacity = 255;
this._spAni.node.color = cc.Color.WHITE;
if (this.isBoss) {
this._spAni.setAnimation(0, "spawn", !1);
this.scheduleOnce(function() {
var t = e.node.getComponent(cc.BoxCollider);
t && (t.enabled = !0);
}, 2);
} else {
this._spAni.setAnimation(0, "idle", !0);
var t = this.node.getComponent(cc.BoxCollider);
t && (t.enabled = !0);
}
}
if (this.sp_hongzhaquan) {
this.sp_hongzhaquan.node.setParent(this.node.parent);
this.sp_hongzhaquan.node.zIndex = l.ZindexLayer.zinedx_floorTip;
this.sp_hongzhaquan.setCompleteListener(function() {
e.sp_hongzhaquan && e.sp_hongzhaquan.isValid && (e.sp_hongzhaquan.node.active = !1);
});
}
if (this.isBoss) {
cc.game.emit(l.default.E_GAME_LOGIC, {
type: l.default.E_Commonzombie_Destory
});
u.gameMgr && u.gameMgr.showBossHp(1);
this.node.getChildByName("boos") && (this.node.getChildByName("boos").active = !0);
}
};
t.prototype.putNodePool = function() {
cc.game.targetOff(this);
if (this.isBoss) {
this.node.getChildByName("boos") && (this.node.getChildByName("boos").active = !1);
if (u.gameMgr) {
u.gameMgr && u.gameMgr.showBossHp(0);
if (u.gameMgr.boss_border && cc.isValid(u.gameMgr.boss_border)) {
u.gameMgr.boss_border.destroy();
u.gameMgr.boss_border = null;
}
}
this.isBoss = !1;
}
if (this.sp_hongzhaquan && this.sp_hongzhaquan.isValid) {
this.sp_hongzhaquan.node.setParent(this.node);
this.sp_hongzhaquan.node.active = !1;
}
u.gameMgr.zombieCurNum--;
u.gameMgr && u.gameMgr.isValid && u.gameMgr.nodePut(this.node.name, this.node);
};
t.prototype.startListenerCall = function() {
var e = this;
if (this._spAni.animation.includes("spawn")) {
this._spAni.timeScale = .4;
this.scheduleOnce(function() {
e._spAni.timeScale = 1;
}, 1);
this.canMoveDir = !1;
var t = this.node.getPosition(), i = u.gameMgr.playerTs.node.getPosition().subSelf(t);
this._spAni.node.scaleX = (i.x > 0 ? 1 : -1) * Math.abs(this._spAni.node.scaleX);
} else if (this._spAni.animation.includes("attack")) {
this.isAtk = !0;
this.canMoveDir = !1;
if ([ 8, 9, 18 ].includes(this.zombieId) && "attack2" == this._spAni.animation) {
this.speedRate *= 2.5;
this.udpateRBody(this.moveDir);
this.scheduleOnce(function() {
e.speedRate /= 2.5;
e.moveDir = cc.Vec2.ZERO;
e.udpateRBody(e.moveDir);
}, .2);
} else if ([ 10, 11, 12, 13 ].includes(this.zombieId) && "attack2" == this._spAni.animation) {
this.speedRate *= 3;
this.udpateRBody(this.moveDir);
this.scheduleOnce(function() {
e.speedRate /= 3;
e.moveDir = cc.Vec2.ZERO;
e.udpateRBody(e.moveDir);
}, .2);
} else if ([ 14, 19 ].includes(this.zombieId) && this._spAni.animation.includes("attack")) {
this.speedRate *= 3;
this.udpateRBody(this.moveDir);
this.scheduleOnce(function() {
e.speedRate /= 3;
e.moveDir = cc.Vec2.ZERO;
e.udpateRBody(e.moveDir);
}, .2);
} else if (15 == this.zombieId && "attack" == this._spAni.animation) {
this.speedRate *= 3;
this.udpateRBody(this.moveDir);
this.scheduleOnce(function() {
e.speedRate /= 3;
e.moveDir = cc.Vec2.ZERO;
e.udpateRBody(e.moveDir);
}, .4);
} else if (16 == this.zombieId && "attack" == this._spAni.animation) {
this.speedRate *= 2;
this.udpateRBody(this.moveDir);
this.scheduleOnce(function() {
e.speedRate /= 2;
e.moveDir = cc.Vec2.ZERO;
e.udpateRBody(e.moveDir);
}, .3);
} else if (17 == this.zombieId && this._spAni.animation.includes("attack")) {
this.speedRate *= 2;
this.udpateRBody(this.moveDir);
this.scheduleOnce(function() {
e.speedRate /= 2;
e.moveDir = cc.Vec2.ZERO;
e.udpateRBody(e.moveDir);
}, .3);
} else {
this.moveDir = cc.Vec2.ZERO;
this.udpateRBody(this.moveDir);
}
} else this._spAni.animation.includes("jump_up") && (this.canMoveDir = !1);
};
t.prototype.endListenerCall = function() {
if (this._spAni.animation.includes("spawn")) {
this._spAni.setAnimation(0, "idle", !0);
this.canMoveDir = !0;
this.updateMove();
this.updatePerson();
this.udpateRBody(this.moveDir);
} else if (this._spAni.animation.includes("attack")) {
this._spAni.setAnimation(0, "idle", !0);
this.isAtk = !1;
this.canMoveDir = !0;
this.updateMove();
this.updatePerson();
this.udpateRBody(this.moveDir);
this.atkDir = cc.Vec2.ZERO;
} else if (this._spAni.animation.includes("jump_down")) {
this._spAni.setAnimation(0, "idle", !0);
this.canMoveDir = !0;
this.moveDir = cc.Vec2.ZERO;
this.udpateRBody(this.moveDir);
}
};
t.prototype._onGameMessageHandler = function(e) {
var t = this;
switch (e.type) {
case l.default.E_Allzombie_Destory:
this.hart(9999999, null, null, !0, !0, cc.Color.WHITE, !0);
break;

case l.default.E_Commonzombie_Destory:
this.isBoss || cc.tween(this.node).to(.3, {
opacity: 1
}, {
easing: "fade"
}).call(function() {
t.putNodePool();
}).start();
}
};
t.prototype.lateUpdate = function(e) {
if (this.isDeath || r.cocosz.isPause || !u.gameMgr.isGameStart || u.gameMgr.isWin || u.gameMgr.isFail) this.udpateRBody(cc.Vec2.ZERO); else {
this._time++;
if (this._time % 15 == 0) {
if (this._time % 30 == 0) {
this.updateDiv();
this.updateMove();
}
this.updateAtk();
this.updateAni();
this.updatePerson();
this.udpateRBody(this.moveDir);
}
}
};
t.prototype.updateDiv = function() {
var e = this.node.getPosition(), t = u.gameMgr.playerTs.node.getPosition();
this._divToPlayer = t.subSelf(e);
!this.isBoss && this._divToPlayer.mag() > cc.winSize.height / 2 / u.gameMgr.mainCamera.zoomRatio && this.putNodePool();
};
t.prototype.updateMove = function() {
if (this.rig.type == cc.RigidBodyType.Dynamic && this.canMove && this.canMoveDir && u.gameMgr.playerTs) if (u.gameMgr.playerTs.isDeath) this._divToPlayer.mag() < (this.isBoss ? 800 : 1500) ? this.moveDir = this._divToPlayer.normalize().negSelf() : this.moveDir = cc.v2(this._divToPlayer.normalize()).rotateSelf(2 * Math.PI * Math.random()); else if (3 == this.zombieId && Math.random() < .2) {
if (!this._spAni.animation.includes("jump")) {
this._spAni.setAnimation(0, "jump_up", !1);
this._spAni.addAnimation(0, "jump_down", !1);
this.moveDir = this._divToPlayer.normalize();
}
} else this._divToPlayer.mag() >= .8 * this.atkRange ? this.moveDir = cc.v2(this._divToPlayer.normalize()).rotateSelf(Math.PI / 2 * (.5 - Math.random())) : this.moveDir = cc.Vec2.ZERO;
};
t.prototype.updateAtk = function() {
if (this.canAtk()) if (u.gameMgr.playerTs && !u.gameMgr.playerTs.isDeath) if (this._divToPlayer.mag() < this.atkRange) {
this.atkDir = this._divToPlayer.normalize();
this.atk();
} else switch (this.zombieId) {
case 8:
case 9:
case 10:
case 11:
case 12:
case 13:
case 18:
if (this._divToPlayer.mag() < 600 && Math.random() < .1 * (this.isBoss ? 2 : 1)) {
this.atkDir = this._divToPlayer.normalize();
this.moveDir = this._divToPlayer.normalize();
this.atk("attack2");
}
break;

case 14:
case 16:
case 19:
case 15:
if (this._divToPlayer.mag() < 800 && Math.random() < .1 * (this.isBoss ? 2 : 1)) {
this.atkDir = this._divToPlayer.normalize();
this.moveDir = this._divToPlayer.normalize();
this.atk("attack");
}
break;

case 16:
if (this._divToPlayer.mag() < 600 && Math.random() < .1 * (this.isBoss ? 2 : 1)) {
this.atkDir = this._divToPlayer.normalize();
this.moveDir = this._divToPlayer.normalize();
this.atk("attack");
}
break;

case 17:
if (this._divToPlayer.mag() < 600 && Math.random() < .15 * (this.isBoss ? 2 : 1)) {
this.atkDir = this._divToPlayer.normalize();
this.moveDir = this._divToPlayer.normalize();
this.atk();
}
break;

case 20:
if (this._divToPlayer.mag() < 600) {
if (Math.random() < .15 * (this.isBoss ? 2 : 1)) {
this.atkDir = this._divToPlayer.normalize();
this.moveDir = this._divToPlayer.normalize();
this.atk("attack");
}
} else this.sp_hongzhaquan.isValid && !this.sp_hongzhaquan.node.active && this._divToPlayer.mag() > 800 && this.atk("bullet_chui");
} else this.atkDir = cc.Vec2.ZERO; else ;
};
t.prototype.updateAni = function() {
0 == this.isDeath ? 0 == this._spAni.timeScale || this._spAni.animation.includes("spawn") || this._spAni.animation.includes("attack") || this._spAni.animation.includes("jump") || (this.moveDir && this.moveDir.mag() ? 17 == this.zombieId ? !this._spAni.animation.includes("wing") && this._spAni.setAnimation(0, "wing", !0) : !this._spAni.animation.includes("run") && this._spAni.setAnimation(0, "run", !0) : !this._spAni.animation.includes("idle") && this._spAni.setAnimation(0, "idle", !0)) : this._spAni && this._spAni.skeletonData && this._spAni.skeletonData.skeletonJson.animations.die && !this._spAni.animation.includes("die") && this._spAni.setAnimation(0, "die", !1);
};
t.prototype.updatePerson = function() {
var e = null;
this.atkDir && this.atkDir.mag() ? e = this.atkDir : this.moveDir && this.moveDir.mag() && (e = this.moveDir);
e && (this._spAni.node.scaleX = Math.abs(this._spAni.node.scaleX) * (e.x > 0 ? 1 : -1));
};
t.prototype.udpateRBody = function(e, t) {
void 0 === t && (t = !1);
this.rig.type == cc.RigidBodyType.Dynamic && (this.canMove || t) && (e && !e.equals(cc.Vec2.ZERO) ? this.rig.linearVelocity = e.mul(Math.floor(this.MoveSpeed * this.speedRate * (1 - .2 * Math.random()))) : this.rig.linearVelocity = cc.Vec2.ZERO);
};
t.prototype.atk = function(e) {
var t = this;
void 0 === e && (e = "");
var i = s.front, o = this.atkRange, n = 0, a = 2, r = this.audio_attack1;
switch (this.zombieId) {
case 0:
case 1:
if (Math.random() < .5) e = "attack"; else {
e = "attack2";
r = this.audio_attack2;
}
n = .3;
break;

case 2:
case 3:
e = "attack1";
n = .3;
break;

case 4:
e = "attack";
n = .3;
break;

case 5:
e = "attack";
n = 4;
i = s.range;
a = 1.3;
this._canAtk = !1;
break;

case 6:
e = "attack";
n = 4;
i = s.range;
a = .95;
this._canAtk = !1;
break;

case 7:
break;

case 8:
case 18:
if ("attack2" == e) {
e = "attack2";
o = 300;
n = .3;
i = s.area;
r = this.audio_attack2;
} else {
e = "attack";
o = 350;
n = .3;
}
break;

case 9:
if ("attack2" == e) {
e = "attack2";
o = 450;
n = .3;
r = this.audio_attack2;
} else {
e = "attack";
o = 350;
n = .3;
}
break;

case 10:
if ("attack2" == e) {
e = "attack2";
o = 200;
n = .3;
r = this.audio_attack2;
} else {
e = "attack";
o = 200;
n = .3;
}
break;

case 11:
case 12:
case 13:
if ("attack2" == e) {
e = "attack2";
o = 250;
n = .3;
r = this.audio_attack2;
} else {
e = "attack";
o = 250;
n = .3;
}
break;

case 14:
case 19:
if (Math.random() < .6) {
e = "attack";
o = 350;
n = .3;
i = s.charge;
r = this.audio_attack1;
} else {
e = "attack2";
o = 350;
n = .3;
r = this.audio_attack2;
}
break;

case 15:
if ("attack" == e) {
e = "attack";
o = 250;
n = .3;
i = s.charge;
} else {
e = "attack2";
o = 400;
n = .3;
}
break;

case 16:
if ("attack" == e || Math.random() < .4) {
e = "attack";
o = 450;
n = .3;
i = s.area;
} else {
e = "attack2";
o = 300;
n = .3;
}
break;

case 17:
if (Math.random() < .5) {
e = "attack";
o = 200;
n = .3;
} else {
e = "attack2";
o = 200;
n = .3;
i = s.charge;
}
break;

case 20:
if ("bullet_chui" == e) {
i = s.range;
e = "attack2";
a = 1.5;
} else if ("attack" == e) {
e = "attack";
o = 500;
n = .3;
} else {
e = "attack2";
o = 300;
n = .3;
}
}
e && this._spAni.setAnimation(0, e, !1);
r && r.isValid && u.gameMgr.playClip(r, this.node, .5);
var c = function() {
if (u.gameMgr.playerTs && !u.gameMgr.playerTs.isDeath) {
var e = t.node.getPosition(), n = u.gameMgr.playerTs.node.getPosition().subSelf(e);
if (n.mag() < o) if (i == s.front) (n.mag() < 200 || n.x * t._spAni.node.scale > 0 && Math.abs(n.y / n.x) < 1.4) && u.gameMgr.playerTs.hart(1, t.node, n.normalizeSelf(), !0); else if (i === s.charge) {
u.gameMgr.playerTs.hart(1, t.node, n.normalizeSelf(), !0);
t.unschedule(c);
} else u.gameMgr.playerTs.hart(1, t.node, n.normalizeSelf(), !0);
}
};
if (i == s.front || i == s.area) this.scheduleOnce(c, n); else if (i == s.charge) this.schedule(c, 0, 15); else if (i == s.range) {
var h = this.node.getPosition(), d = u.gameMgr.playerTs.node.getPosition(), _ = cc.v2((h.x + d.x) / 2, h.y + 1500);
if (this.bullet_prefab) {
var p = cc.instantiate(this.bullet_prefab), g = p.getComponent(f.default);
g.id = this.id;
g.atker = this.node;
g.atk = this.atkNum;
g.isAngle = !0;
p.setPosition(h);
p.zIndex = l.ZindexLayer.zindex_bullet_sky;
p.parent = this.node.parent;
cc.tween(p).call(function() {
if (t.sp_hongzhaquan && t.sp_hongzhaquan.isValid) {
t.sp_hongzhaquan.node.active = !0;
t.sp_hongzhaquan.node.setPosition(d);
t.sp_hongzhaquan.setAnimation(0, "animation", !1);
}
}).bezierTo(a, h, _, d).call(function() {
if (g.boomEffect) {
var e = cc.instantiate(g.boomEffect);
e.parent = g.node.parent;
e.setPosition(g.node.getPosition());
var t = e.getComponent(f.default);
t.atk = g.atk;
t.atker = g.atker;
t.id = g.id;
u.gameMgr.playEffect("explo", e);
if (g.hitEffect) {
var i = p.getPosition(), o = cc.instantiate(g.hitEffect);
o.parent = p.parent;
o.setPosition(i);
o.zIndex = l.ZindexLayer.zindex_effect_hit;
}
}
p.destroy();
}).start();
this.scheduleOnce(function() {
t._canAtk = !0;
}, n);
}
}
};
t.prototype.hart = function(e, t, i, o, n, s, a) {
var c = this;
void 0 === o && (o = !0);
void 0 === n && (n = !0);
void 0 === a && (a = !1);
if (!(this.isDeath || 0 == a && r.cocosz.isPause)) {
i && i.mag() > 3 && i.normalizeSelf().mulSelf(3);
e = (1 - this.damageReduction) * e;
u.gameMgr.showRoleTip(this.node, Math.min(this.HP, e).toFixed(0), s);
this.HP -= e;
this.isBoss && u.gameMgr && u.gameMgr.showBossHp(this.HP / this.totleHp);
if (!this.isAttackedEffect && this._spAni && this._spAni.node && this._spAni.node.isValid) {
this.isAttackedEffect = !0;
o && this.audio_hart && u.gameMgr.playClip(this.audio_hart, this.node, .5);
cc.tween(this._aniLayer).to(.1, {
scale: .7
}, {
easing: "sineIn"
}).to(.1, {
scale: 1
}, {
easing: "sineOut"
}).call(function() {
c.isAttackedEffect = !1;
}).start();
this._canColor && cc.tween(this._spAni.node).to(.1, {
color: new cc.Color(0, 0, 0, 255)
}).to(.1, {
color: cc.Color.WHITE
}).start();
if (this.rig.type == cc.RigidBodyType.Dynamic && i && this.canMove && this.canMoveDir) {
this.canMove = !1;
this.scheduleOnce(function() {
c.canMove = !0;
}, .1);
var h = i.mulSelf(400 * i.mag()).addSelf(this.rig.linearVelocity), d = this.isBoss ? 100 : 300;
h.mag() > d && h.normalizeSelf().mulSelf(d);
this.rig.linearVelocity = h;
}
}
if (this.HP <= 0) {
this.death();
cc.game.emit(l.default.E_GAME_LOGIC, {
type: l.default.E_Zombie_Death,
node: this.node,
from: t
});
} else t && n && cc.game.emit(l.default.E_GAME_LOGIC, {
type: l.default.E_Zombie_Hart,
node: this.node
});
}
};
t.prototype.death = function() {
var e = this;
this.isAtk = !1;
this.isDeath = !0;
this._spAni.timeScale = 1;
this.node.getComponents(cc.Collider).forEach(function(e) {
return e.enabled = !1;
});
cc.tween(this._spAni.node).to(1, {
opacity: 0
}).start();
this.audio_die && u.gameMgr.playClip(this.audio_die, null, .2);
this.updateAni();
if (this.zombieId < 8) {
var t = r.cocosz.resMgr.getRes("effect_death", cc.Prefab);
if (t) {
var i = cc.instantiate(t);
i.zIndex = l.ZindexLayer.zinedx_floorSkill;
i.setPosition(this.node.position);
i.setParent(this.node.parent);
}
}
this.creatItem();
this.scheduleOnce(function() {
e.putNodePool();
}, 2);
};
t.prototype.creatItem = function() {
if (!u.gameMgr.isWin && !u.gameMgr.isFail && d.upgradeMgr && d.upgradeMgr.isValid) {
for (var e = this.zombieId < 8 ? 1 : 10, t = 0; t < e; t++) {
var i = this.node.getPosition();
t > 0 && i.addSelf(cc.v2(20 * t, 0).rotateSelf(2 * Math.PI * Math.random()));
d.upgradeMgr.createJingyan(i);
}
if (Math.random() < .2) {
var o = this.node.getPosition();
o.x = o.x + 200 * (parseInt((2 * Math.random()).toString()) - 1);
o.y = o.y + 300 * (parseInt((2 * Math.random()).toString()) - 1);
d.upgradeMgr.createWeapon(this.node.getPosition());
}
}
};
t.prototype.frozenStart = function() {
this._canColor = !1;
this._spAni.node.stopAllActions();
this._spAni.node.color = cc.Color.BLUE;
this._spAni && (this._spAni.timeScale = 0);
this.isAtk = !1;
this.canMoveDir = !1;
this.moveDir = cc.Vec2.ZERO;
this.udpateRBody(this.moveDir, !0);
};
t.prototype.frozenEnd = function() {
if (!this.isDeath) {
this._canColor = !0;
this._spAni.node.color = cc.Color.WHITE;
if (this._spAni) {
this._spAni.timeScale = 1;
this._spAni.setAnimation(0, "idle", !0);
}
this.canMoveDir = !0;
this.isAtk = !1;
this.atkDir = cc.Vec2.ZERO;
this.updateMove();
this.updatePerson();
this.udpateRBody(this.moveDir);
}
};
t.prototype.fire_start = function() {
this._canColor = !1;
this._spAni.node.stopAllActions();
this._spAni.node.color = cc.Color.RED;
};
t.prototype.fire_end = function() {
this._canColor = !0;
this._spAni.node.color = cc.Color.WHITE;
};
t.prototype.canAtk = function() {
return !(!this._canAtk || this.isAtk || 0 == this._spAni.timeScale || this._spAni.animation.includes("spawn") || this._spAni.animation.includes("jump"));
};
n([ g({
tooltip: "僵尸id"
}) ], t.prototype, "zombieId", void 0);
n([ g({
type: cc.Prefab,
tooltip: "子弹预制体",
visible: function() {
return [ 5, 6, 20 ].includes(this.zombieId);
}
}) ], t.prototype, "bullet_prefab", void 0);
n([ g({
type: sp.Skeleton,
tooltip: "警告圈",
visible: function() {
return [ 5, 6, 20 ].includes(this.zombieId);
}
}) ], t.prototype, "sp_hongzhaquan", void 0);
n([ g({
type: cc.AudioClip,
tooltip: "攻击音效1"
}) ], t.prototype, "audio_attack1", void 0);
n([ g({
type: cc.AudioClip,
tooltip: "攻击音效2"
}) ], t.prototype, "audio_attack2", void 0);
n([ g({
type: cc.AudioClip,
tooltip: "受伤音效"
}) ], t.prototype, "audio_hart", void 0);
n([ g({
type: cc.AudioClip,
tooltip: "死亡音效"
}) ], t.prototype, "audio_die", void 0);
return t = n([ p ], t);
}(h.default);
i.default = m;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Game/UpgradeMgr": "UpgradeMgr",
"../Game/gameDate": "gameDate",
"../Game/gameMgr": "gameMgr",
"../Game/person": "person",
"./bullet": "bullet"
} ],
ani: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9dc96Ec8p5F1pk+wC5O4y90", "ani");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/CocosZ"), a = e("./gameDate"), r = e("./weapon"), l = cc._decorator, c = l.ccclass, u = l.property, h = l.executeInEditMode, d = l.playOnFocus, f = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.times = 10;
t.aniNodeArr = [];
t._btnAdd = !1;
t._btnStop = !1;
t._btnDaiji = !1;
t._btnRun = !1;
t._btnAtk = !1;
t._btnAtk2 = !1;
t._btnDeath = !1;
t.handLeft = null;
t.body = null;
t.leg = null;
t.handRight = null;
t.head = null;
t.weapon = null;
t.aniNode = null;
t._t = 0;
t._index = 0;
t._isLoop = !1;
t._aniArr = [];
return t;
}
Object.defineProperty(t.prototype, "btnAdd", {
get: function() {
return this._btnAdd;
},
set: function(e) {
var t = this;
this.aniNodeArr = [];
this.node.children.forEach(function(e) {
t.aniNodeArr.push(e);
});
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "btnStop", {
get: function() {
return this._btnStop;
},
set: function(e) {
this._btnStop = !1;
this.stopAni();
this.aniNodeArr.forEach(function(e) {
e.opacity = 255;
}, null);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "btnDaiji", {
get: function() {
return this._btnDaiji;
},
set: function(e) {
this._btnDaiji = !1;
this.addAni("daiji", !1);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "btnRun", {
get: function() {
return this._btnRun;
},
set: function(e) {
this._btnRun = !1;
this.addAni("run", !1);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "btnAtk", {
get: function() {
return this._btnAtk;
},
set: function(e) {
this._btnAtk = !1;
this.addAni("atk", !1);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "btnAtk2", {
get: function() {
return this._btnAtk2;
},
set: function(e) {
this._btnAtk2 = !1;
this.addAni("atk2", !1);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "btnDeath", {
get: function() {
return this._btnAtk2;
},
set: function(e) {
this._btnDeath = !1;
this.addAni("death", !1);
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.handLeft = cc.find("handLeft", this.node);
this.body = cc.find("body", this.node);
this.leg = cc.find("leg", this.node);
this.handRight = cc.find("handRight", this.node);
this.head = cc.find("head", this.node);
this.weapon = cc.find("weapon", this.node);
};
t.prototype.start = function() {};
t.prototype.setAni = function(e, t) {
void 0 === t && (t = !1);
this._aniArr = [];
this.playAni(e, t);
};
t.prototype.addAni = function(e, t) {
this.aniNode ? this._aniArr.push({
name: e,
isLoop: t
}) : this.playAni(e, t);
};
t.prototype.stopAni = function() {
this._aniArr = [];
this.aniNode = null;
};
t.prototype.includeAni = function(e) {
var t = !1;
this.aniNodeArr.forEach(function(i) {
i.name == e && (t = !0);
});
return t;
};
t.prototype.isAni = function(e) {
return !(!this.aniNode || !(!e || e && this.aniNode.name.includes(e)));
};
t.prototype.playAni = function(e, t) {
var i = this;
void 0 === t && (t = !1);
this.aniNode = null;
this._index = 0;
this._t = 0;
this.aniNodeArr.forEach(function(t) {
if (t.name == e) {
t.active = !0;
t.opacity = 255;
i.aniNode = t;
} else {
t.active = !0;
t.opacity = 0;
}
});
this._isLoop = t;
this.aniNode || cc.log("动画不存在：" + e);
};
t.prototype.lateUpdate = function() {
var e = this;
if (this.aniNode && this.aniNode.isValid) {
if (this._t % this.times == 0) {
this._t = 0;
this.aniNode.children.forEach(function(t, i) {
i == e._index ? t.opacity = 255 : t.opacity = 0;
});
this._index++;
if (this._index >= this.aniNode.childrenCount) if (this._isLoop) this._index = 0; else if (this._aniArr.length > 0) {
var t = this._aniArr.shift();
this.playAni(t.name, t.isLoop);
} else {
this.aniNode = null;
this._index = 0;
}
}
this._t++;
}
};
t.prototype.setSkinById = function(e) {
this.setSkinByName((e + 1).toString());
this.setGh(e);
};
t.prototype.setSkinByName = function(e) {
this.head.children.forEach(function(t) {
if (t.name == e) {
t.active = !0;
t.opacity = 255;
} else {
t.active = !0;
t.opacity = 0;
}
});
};
t.prototype.setWeaponById = function(e) {
this.setWeaponByName(r.default.WeaponName[e]);
this.setSD(e);
};
t.prototype.setWeaponByName = function(e) {
if (a.default.Weapon[e].atkRange > 300) {
this.weapon.active = !0;
this.handLeft.active = !1;
this.handRight.active = !1;
if (i = s.cocosz.resMgr.getRes("weapon_" + e, cc.Prefab)) {
var t = cc.instantiate(i);
t.removeComponent(r.default);
this.weapon.children[0] && this.weapon.children[0].isValid && this.weapon.children[0].destroy();
this.weapon.addChild(t);
}
} else {
this.weapon.active = !1;
this.handLeft.active = !0;
this.handRight.active = !0;
var i;
if (i = s.cocosz.resMgr.getRes("weapon_" + e, cc.Prefab)) {
var o = cc.instantiate(i);
o.removeComponent(r.default);
this.handRight.children[0] && this.handRight.children[0].isValid && this.handRight.children[0].destroy();
this.handRight.addChild(o);
}
}
};
t.prototype.setGh = function(e) {
var t = this.node.getChildByName("gh");
if (t && t.isValid) {
var i = s.cocosz.dataMgr.getSkinInfo(e);
if (i) {
var o = t.getComponent(sp.Skeleton);
t.active = !0;
if (o && o.isValid) {
var n = i.Level;
if (n > 0) {
t.color = cc.Color.WHITE;
o.setSkin([ "", "y", "p", "r" ][Math.ceil(n / 2)]);
o.setAnimation(0, "animation", !0);
} else {
t.color = cc.Color.BLACK;
o.setSkin("r");
o.setAnimation(0, "animation", !0);
}
}
}
}
};
t.prototype.setSD = function(e) {
var t = s.cocosz.dataMgr.getGunInfo(e);
this.node.walk(function(e) {
if ("sd" == e.name) if (t.Level > 0) {
e.active = !0;
var i = e.getComponent(sp.Skeleton);
if (i) {
i && i.setSkin([ "", "y", "p", "r" ][t.Level]);
}
} else e.active = !1;
}, null);
};
n([ u({
displayName: "间隔帧数"
}) ], t.prototype, "times", void 0);
n([ u({
type: [ cc.Node ],
displayName: "动画数组"
}) ], t.prototype, "aniNodeArr", void 0);
n([ u() ], t.prototype, "_btnAdd", void 0);
n([ u({
displayName: "添加动画"
}) ], t.prototype, "btnAdd", null);
n([ u({
displayName: "停止动画"
}) ], t.prototype, "_btnStop", void 0);
n([ u ], t.prototype, "btnStop", null);
n([ u({
displayName: "待机动画"
}) ], t.prototype, "_btnDaiji", void 0);
n([ u ], t.prototype, "btnDaiji", null);
n([ u({
displayName: "跑步动画"
}) ], t.prototype, "_btnRun", void 0);
n([ u ], t.prototype, "btnRun", null);
n([ u({
displayName: "攻击动画"
}) ], t.prototype, "_btnAtk", void 0);
n([ u ], t.prototype, "btnAtk", null);
n([ u({
displayName: "攻击动画2"
}) ], t.prototype, "_btnAtk2", void 0);
n([ u ], t.prototype, "btnAtk2", null);
n([ u({
displayName: "死亡动画2"
}) ], t.prototype, "_btnDeath", void 0);
n([ u ], t.prototype, "btnDeath", null);
return t = n([ c, h, d ], t);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"./gameDate": "gameDate",
"./weapon": "weapon"
} ],
bullet: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "50404UIfWNMdr6ERRkIVC1x", "bullet");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/CocosZ"), a = e("../Framework/Constant"), r = e("./gameMgr"), l = e("./person"), c = cc._decorator, u = c.ccclass, h = c.property, d = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bulletId = 0;
t.id = 1;
t.atk = 10;
t.atker = null;
t.canMove = !0;
t.canBreak = !0;
t.canPenetrate = !1;
t.canWall = !1;
t.boomEffect = null;
t.hitEffect = null;
t.hitAudio = "";
t.isHartMusic = !0;
t.hitEffectType = 0;
t.hartInterval = 0;
t.isHitEffectAngle = !1;
t.isAngle = !1;
t.isBoom = !1;
t.isRecord = !0;
t.dir = null;
t._lastPos = null;
t.atkedArr = [];
return t;
}
i = t;
t.prototype.start = function() {
r.gameMgr && r.gameMgr.setMapTs.checkNode(this.node, !0);
0 == this.node.zIndex && (this.isBoom ? this.node.zIndex = a.ZindexLayer.zindex_bomb : "liewen" === this.node.name ? this.node.zIndex = a.ZindexLayer.zinedx_floorLiewen : this.node.zIndex = a.ZindexLayer.zindex_bullet + this.bulletId);
if ("bullet_sd" == this.node.name || "bullet_hdl" == this.node.name) {
var e = this.node.getComponent(cc.BoxCollider);
if (e) {
cc.tween(e.size).to(.3, {
height: 550
}).start();
cc.tween(e.offset).to(.3, {
x: 700
}).start();
}
}
};
t.prototype.onDisable = function() {
this._lastPos = null;
};
t.prototype.lateUpdate = function(e) {
if (this.isAngle) if (this._lastPos) {
var t = this.node.getPosition().subSelf(this._lastPos);
if (0 == t.equals(cc.Vec2.ZERO)) {
this.node.angle = -cc.v2(t).signAngle(cc.v2(1, 0)) / Math.PI * 180;
this._lastPos = this.node.getPosition();
}
} else this._lastPos = this.node.getPosition();
};
t.prototype.onCollisionEnter = function(e, t) {
var o = this;
if (1 == e.tag) {
var n = e.getComponent(l.default);
if (n.id == this.id) return;
if (this.canBreak && !this.canPenetrate) this.node.destroy(); else {
if (this.atkedArr.includes(e.node)) return;
this.isRecord && this.atkedArr.push(e.node);
}
if (this.hitEffect && !s.cocosz.isPause) {
(m = cc.instantiate(this.hitEffect)).zIndex = a.ZindexLayer.zindex_effect_hit;
if (1 == this.hitEffectType) {
m.parent = e.node;
this.isHitEffectAngle && (m.angle = -cc.v2(this.dir).signAngle(cc.v2(1, 0)) / Math.PI * 180);
} else {
var c = this.node.getPosition();
if ((p = this.node.width) < 5) {
(g = this.node.getComponent(cc.BoxCollider)) && (p += g.offset.x);
}
c = c.add(cc.v2(p, 0).rotate(this.node.angle / 180 * Math.PI));
m.parent = this.node.parent;
m.setPosition(c);
}
this.hitAudio && r.gameMgr.playEffect(this.hitAudio, this.node);
}
if (this.boomEffect) {
(f = cc.instantiate(this.boomEffect)).parent = this.node.parent;
f.setPosition(this.node.getPosition());
f.zIndex = a.ZindexLayer.zindex_bomb;
r.gameMgr.playEffect("explo", f);
(_ = f.getComponent(i)).atk = this.atk;
_.atker = this.atker;
_.id = this.id;
_.dir = this.dir;
return;
}
if (r.gameMgr.blood && t.world && t.world.points && t.world.points[0]) {
var u = null;
(u = cc.instantiate(r.gameMgr.blood)).parent = r.gameMgr.map;
u.zIndex = a.ZindexLayer.zindex_blood;
c = u.parent.convertToNodeSpaceAR(cc.v2(t.world.points[0].x, t.world.points[0].y));
if (this.dir) {
var h = -cc.v2(this.dir).signAngle(cc.v2(0, 1)) / Math.PI * 180;
u.angle = h;
}
u.setPosition(c);
}
if (this.isBoom) {
var d = e.node.getPosition().subSelf(this.node.getPosition()).normalizeSelf();
d.equals(cc.Vec2.ZERO) && (d = cc.v2(1, 0).rotateSelf(2 * Math.PI * Math.random()));
this.dir = d.mulSelf(3);
} else !this.canMove && this.dir && this.dir.mag() < 2 && this.dir.normalizeSelf().mulSelf(2);
n.hart(this.atk, this.atker, this.dir, this.isHartMusic);
this.hartInterval && this.schedule(function() {
n && n.isValid && o.atkedArr.includes(n.node) && n.hart(o.atk, o.atker, o.dir, o.isHartMusic);
}, this.hartInterval);
} else if (5 == e.tag) {
if (this.boomEffect) {
var f, _;
(f = cc.instantiate(this.boomEffect)).parent = this.node.parent;
f.setPosition(this.node.getPosition());
(_ = f.getComponent(i)).atk = this.atk;
_.atker = this.atker;
_.id = this.id;
r.gameMgr.playEffect("explo", f);
}
if (this.canBreak && !this.canWall) {
var p;
c = this.node.getPosition();
if ((p = this.node.width) < 5) {
var g;
(g = this.node.getComponent(cc.BoxCollider)) && (p += g.offset.x);
}
c = c.add(cc.v2(p, 0).rotate(this.node.angle / 180 * Math.PI));
if (this.hitEffect && 1 != this.hitEffectType) {
(m = cc.instantiate(this.hitEffect)).parent = this.node.parent;
m.setPosition(c);
m.zIndex = a.ZindexLayer.zindex_effect_hit;
} else {
var m;
(m = cc.instantiate(r.gameMgr.spark)).parent = this.node.parent;
m.setPosition(c);
m.zIndex = a.ZindexLayer.zindex_effect_spark;
}
this.node.destroy();
}
}
};
var i;
n([ h() ], t.prototype, "bulletId", void 0);
n([ h() ], t.prototype, "canMove", void 0);
n([ h({
tooltip: "能否阻断"
}) ], t.prototype, "canBreak", void 0);
n([ h({
tooltip: "能否穿透敌人"
}) ], t.prototype, "canPenetrate", void 0);
n([ h({
tooltip: "能否穿透墙壁"
}) ], t.prototype, "canWall", void 0);
n([ h(cc.Prefab) ], t.prototype, "boomEffect", void 0);
n([ h(cc.Prefab) ], t.prototype, "hitEffect", void 0);
n([ h({
type: cc.String,
tooltip: "子弹音效"
}) ], t.prototype, "hitAudio", void 0);
n([ h({
tooltip: "敌人受伤是否发出音效"
}) ], t.prototype, "isHartMusic", void 0);
n([ h() ], t.prototype, "hitEffectType", void 0);
n([ h() ], t.prototype, "hartInterval", void 0);
n([ h({
tooltip: "击中效果设置角度"
}) ], t.prototype, "isHitEffectAngle", void 0);
n([ h({
tooltip: "每帧设置角度"
}) ], t.prototype, "isAngle", void 0);
n([ h({
tooltip: "是否爆炸子弹"
}) ], t.prototype, "isBoom", void 0);
n([ h({
tooltip: "是否记录受伤者"
}) ], t.prototype, "isRecord", void 0);
return t = i = n([ u ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"./gameMgr": "gameMgr",
"./person": "person"
} ],
gameDate: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9716b694upCZocbSYxp8T5t", "gameDate");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.RewardType = i.PriceType = void 0;
var n, s, a = cc._decorator, r = a.ccclass;
a.property;
(function(e) {
e[e.Gold = 0] = "Gold";
e[e.Diamond = 1] = "Diamond";
e[e.RankReward = 2] = "RankReward";
e[e.ZhuanPanReward = 3] = "ZhuanPanReward";
e[e.Level = 4] = "Level";
})(n = i.PriceType || (i.PriceType = {}));
(function(e) {
e[e.Gold = 0] = "Gold";
e[e.Diamond = 1] = "Diamond";
e[e.Skin = 2] = "Skin";
e[e.Weapon = 3] = "Weapon";
})(s = i.RewardType || (i.RewardType = {}));
var l = function() {
function e() {}
e.TimeReward = [ {
time: 60,
coinNum: 1e3,
diamondNum: 100
}, {
time: 300,
coinNum: 1500,
diamondNum: 150
}, {
time: 900,
coinNum: 2e3,
diamondNum: 200
}, {
time: 1800,
coinNum: 3e3,
diamondNum: 250
}, {
time: 3600,
coinNum: 5e3,
diamondNum: 300
} ];
e.TurntableReward = [ {
type: s.Gold,
num: 100
}, {
type: s.Gold,
num: 50
}, {
type: s.Diamond,
num: 10
}, {
type: s.Gold,
num: 50
}, {
type: s.Gold,
num: 150
}, {
type: s.Skin,
num: 11
}, {
type: s.Gold,
num: 200
}, {
type: s.Gold,
num: 50
}, {
type: s.Diamond,
num: 20
}, {
type: s.Gold,
num: 50
}, {
type: s.Gold,
num: 200
}, {
type: s.Weapon,
num: 14
} ];
e.Weapon = {
ak: {
name: "ak步枪",
id: 0,
atk: [ 30, 33, 35, 40 ],
atkRange: 1e3,
flySpeed: 2500,
atkSpeed: [ 1 / 3.5, 1 / 3.5, .25, .25 ],
bulletNum: 30,
bulletTotal: [ 90, 90, 90, 120 ],
reload: 3,
priceType: n.Gold,
price: 0
},
cfq: {
name: "冲锋枪",
id: 1,
atk: [ 20, 22, 25, 30 ],
atkRange: 1e3,
flySpeed: 2500,
atkSpeed: [ .25, .25, 1 / 4.5, .2 ],
bulletNum: 25,
bulletTotal: [ 75, 75, 100, 100 ],
reload: 2.5,
priceType: n.Gold,
price: 1e3
},
dao: {
name: "刀",
id: 2,
atk: [ 60, 65, 72, 75 ],
atkRange: 300,
flySpeed: 0,
atkSpeed: [ .5, .4, 1 / 3, 1 / 3 ],
bulletNum: 1,
bulletTotal: [ 1, 1, 1, 1 ],
reload: 3,
priceType: n.Gold,
price: 2e3
},
gj: {
name: "光剑",
id: 3,
atk: [ 55, 66, 72, 80 ],
atkRange: 300,
flySpeed: 0,
atkSpeed: [ .5, .4, 1 / 3, 1 / 3 ],
bulletNum: 1,
bulletTotal: [ 1, 1, 1, 1 ],
reload: 3,
priceType: n.Gold,
price: 3500
},
jgb: {
name: "金箍棒",
id: 4,
atk: [ 100, 150, 200, 250 ],
atkRange: 300,
flySpeed: 0,
atkSpeed: [ 1, 1, 1 / 1.5, 1 / 1.5 ],
bulletNum: 1,
bulletTotal: [ 1, 1, 1, 1 ],
reload: 3,
priceType: n.Diamond,
price: 500
},
sd: {
name: "散弹枪",
id: 5,
atk: [ 140, 160, 180, 200 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ .5, .5, .5, .5 ],
bulletNum: 2,
bulletTotal: [ 10, 12, 14, 16 ],
reload: 3,
priceType: n.Gold,
price: 1500
},
hdl: {
name: "HDL",
id: 6,
atk: [ 40, 45, 48, 50 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ 1 / 3, .25, .2, .2 ],
bulletNum: 20,
bulletTotal: [ 60, 80, 100, 120 ],
reload: 2.5,
priceType: n.Gold,
price: 2e3
},
sq: {
name: "手枪",
id: 7,
atk: [ 40, 45, 50, 60 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ .5, .4, .4, .25 ],
bulletNum: 8,
bulletTotal: [ 24, 32, 40, 48 ],
reload: 2,
priceType: n.Gold,
price: 500
},
ju: {
name: "狙击枪",
id: 8,
atk: [ 200, 250, 300, 400 ],
atkRange: 1500,
flySpeed: 2500,
atkSpeed: [ 1, 1, .5, .5 ],
bulletNum: 2,
bulletTotal: [ 8, 10, 12, 14 ],
reload: 3,
priceType: n.Gold,
price: 5e3
},
ld: {
name: "榴弹枪",
id: 9,
atk: [ 100, 120, 130, 140 ],
atkRange: 800,
flySpeed: 2e3,
atkSpeed: [ .5, .4, .25, .25 ],
bulletNum: 3,
bulletTotal: [ 15, 18, 21, 24 ],
reload: 3,
priceType: n.Diamond,
price: 500
},
nnp: {
name: "鸟鸟枪",
id: 10,
atk: [ 75, 80, 90, 100 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ .5, .5, 1 / 3, .25 ],
bulletNum: 5,
bulletTotal: [ 20, 25, 30, 35 ],
reload: 3,
priceType: n.ZhuanPanReward,
price: 0
},
gtst: {
name: "钢铁手套",
id: 11,
atk: [ 30, 40, 45, 60 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ .2, .2, .2, .2 ],
bulletNum: 10,
bulletTotal: [ 40, 50, 60, 70 ],
reload: 3,
priceType: n.Diamond,
price: 300
},
tb: {
name: "铁棒",
id: 12,
atk: [ 40, 50, 55, 60 ],
atkRange: 300,
flySpeed: 0,
atkSpeed: [ .5, .4, 1 / 3, 1 / 3 ],
bulletNum: 1,
bulletTotal: [ 1, 1, 1, 1 ],
reload: 3,
priceType: n.Gold,
price: 1e3
},
mb: {
name: "木棒",
id: 13,
atk: [ 30, 35, 40, 50 ],
atkRange: 300,
flySpeed: 0,
atkSpeed: [ .5, .4, 1 / 3, 1 / 3 ],
bulletNum: 1,
bulletTotal: [ 1, 1, 1, 1 ],
reload: 3,
priceType: n.Gold,
price: 500
},
mq: {
name: "喵枪",
id: 14,
atk: [ 40, 44, 46, 50 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ .2, .2, .2, .2 ],
bulletNum: 30,
bulletTotal: [ 60, 70, 80, 90 ],
reload: 3,
priceType: n.ZhuanPanReward,
price: 0
},
szg: {
name: "弩箭",
id: 15,
atk: [ 110, 150, 200, 250 ],
atkRange: 2e3,
flySpeed: 3e3,
atkSpeed: [ 1, 1, 1, .5 ],
bulletNum: 1,
bulletTotal: [ 11, 12, 13, 15 ],
reload: 3,
priceType: n.Diamond,
price: 500
},
rsq: {
name: "镭射枪",
id: 16,
atk: [ 35, 40, 45, 50 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ .2, .2, .2, .2 ],
bulletNum: 15,
bulletTotal: [ 45, 50, 75, 90 ],
reload: 3,
priceType: n.Gold,
price: 3e3
},
cjj: {
name: "尖叫鸡",
id: 17,
atk: [ 50, 54, 63, 72 ],
atkRange: 600,
flySpeed: 0,
atkSpeed: [ .5, .5, 1 / 3, 1 / 3 ],
bulletNum: 5,
bulletTotal: [ 30, 35, 40, 45 ],
reload: 3,
priceType: n.Diamond,
price: 300
},
jtl: {
name: "加特林",
id: 18,
atk: [ 30, 35, 40, 45 ],
atkRange: 1e3,
flySpeed: 2500,
atkSpeed: [ 1 / 9, 1 / 9, 1 / 9, 1 / 9 ],
bulletNum: 50,
bulletTotal: [ 150, 150, 200, 250 ],
reload: 3,
priceType: n.Diamond,
price: 1e3
},
sq2: {
name: "双枪",
music: "sq",
id: 19,
atk: [ 40, 45, 50, 60 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ .25, .25, .25, .25 ],
bulletNum: 12,
bulletTotal: [ 48, 48, 60, 60 ],
reload: 2,
priceType: n.Gold,
price: 2e3
},
tj: {
name: "突击步枪",
music: "ak",
id: 20,
atk: [ 30, 35, 40, 50 ],
atkRange: 1e3,
flySpeed: 2500,
atkSpeed: [ 1 / 7, 1 / 7, 1 / 7, 1 / 7 ],
bulletNum: 15,
bulletTotal: [ 90, 90, 90, 105 ],
reload: 3,
priceType: n.Gold,
price: 2e3
},
fs: {
name: "辐射",
music: "rsq",
id: 21,
atk: [ 35, 40, 45, 50 ],
atkRange: 1e3,
flySpeed: 2e3,
atkSpeed: [ .2, .2, .2, .2 ],
bulletNum: 15,
bulletTotal: [ 45, 45, 60, 60 ],
reload: 3,
priceType: n.Gold,
price: 2e3
}
};
e.SkinMess = {
1: {
name: "小黑人",
xuedi: 3,
hp: [ 330, 350, 360, 370, 380, 400, 450 ],
atk: [ 1, 2, 4, 6, 8, 9, 10 ],
speed: [ 520, 530, 540, 550, 560, 570, 580 ],
priceType: n.Gold,
price: 0
},
2: {
name: "螺丝脑",
xuedi: 3,
hp: [ 350, 370, 380, 390, 420, 430, 440 ],
atk: [ 2, 4, 5, 6, 8, 10, 12 ],
speed: [ 525, 535, 545, 555, 565, 575, 600 ],
priceType: n.Gold,
price: 1e3
},
3: {
name: "蝙蝠头",
xuedi: 4,
hp: [ 360, 370, 380, 390, 400, 420, 450 ],
atk: [ 4, 6, 8, 10, 12, 14, 18 ],
speed: [ 523, 534, 556, 576, 587, 602, 624 ],
priceType: n.Gold,
price: 2500
},
4: {
name: "铁盔头",
xuedi: 6,
hp: [ 400, 420, 440, 460, 480, 500, 520 ],
atk: [ 1, 2, 4, 6, 8, 10, 12 ],
speed: [ 502, 513, 523, 533, 543, 553, 563 ],
priceType: n.Diamond,
price: 1e3
},
5: {
name: "牛头",
xuedi: 5,
hp: [ 366, 374, 382, 396, 420, 450, 480 ],
atk: [ 3, 5, 7, 11, 14, 15, 18 ],
speed: [ 525, 534, 556, 566, 573, 584, 600 ],
priceType: n.Diamond,
price: 500
},
6: {
name: "骷髅头",
xuedi: 4,
hp: [ 363, 372, 384, 397, 420, 444, 453 ],
atk: [ 1, 3, 7, 9, 11, 14, 16 ],
speed: [ 500, 510, 520, 530, 540, 550, 560 ],
priceType: n.Diamond,
price: 300
},
7: {
name: "海兵头",
xuedi: 4,
hp: [ 363, 372, 386, 393, 424, 452, 463 ],
atk: [ 2, 3, 6, 8, 11, 13, 14 ],
speed: [ 515, 534, 555, 572, 584, 603, 610 ],
priceType: n.Gold,
price: 2e3
},
8: {
name: "小女孩",
xuedi: 4,
hp: [ 362, 377, 386, 393, 429, 444, 458 ],
atk: [ 1, 2, 4, 6, 8, 10, 12 ],
speed: [ 521, 530, 550, 570, 580, 600, 606 ],
priceType: n.Gold,
price: 2e3
},
9: {
name: "小盒子",
xuedi: 4,
hp: [ 364, 376, 387, 392, 421, 447, 463 ],
atk: [ 1, 3, 6, 9, 12, 15, 16 ],
speed: [ 525, 535, 545, 555, 565, 575, 600 ],
priceType: n.Diamond,
price: 250
},
10: {
name: "小红帽",
xuedi: 3,
hp: [ 362, 373, 385, 396, 421, 456, 480 ],
atk: [ 2, 5, 8, 12, 14, 15, 16 ],
speed: [ 523, 544, 554, 573, 585, 509, 606 ],
priceType: n.Gold,
price: 1500
},
11: {
name: "拳皇",
xuedi: 5,
hp: [ 368, 376, 384, 396, 425, 458, 468 ],
atk: [ 1, 5, 8, 10, 15, 17, 20 ],
speed: [ 524, 533, 544, 556, 571, 582, 605 ],
priceType: n.ZhuanPanReward,
price: 0
},
12: {
name: "灰胡子",
xuedi: 4,
hp: [ 353, 372, 385, 403, 421, 444, 459 ],
atk: [ 1, 2, 3, 5, 6, 9, 11 ],
speed: [ 502, 513, 534, 543, 558, 563, 584 ],
priceType: n.Gold,
price: 2e3
}
};
e.EnemyMess = {
0: {
name: "史莱姆",
hp: 95,
atk: 34,
atkSpeed: 2,
atkRange: 300,
speed: 330
},
1: {
name: "小红人",
hp: 130,
atk: 0,
atkSpeed: 1,
atkRange: 800,
speed: 450
},
2: {
name: "拳击手",
hp: 400,
atk: 50,
atkSpeed: 2,
atkRange: 400,
speed: 400
},
3: {
name: "机枪手",
hp: 250,
atk: 0,
atkSpeed: 1,
atkRange: 1e3,
speed: 400
},
4: {
name: "雪人",
hp: 600,
atk: 40,
atkSpeed: 2,
atkRange: 300,
speed: 400
},
5: {
name: "双枪",
hp: 1e3,
atk: 0,
atkSpeed: 1,
atkRange: 1e3,
speed: 450
},
6: {
name: "堡垒",
hp: 500,
atk: 50,
atkSpeed: 1,
atkRange: 1e3,
speed: 0
},
7: {
name: "海豹突击",
hp: 400,
atk: 0,
atkSpeed: 1,
atkRange: 1e3,
speed: 450
},
8: {
name: "辐射者",
hp: 400,
atk: 0,
atkSpeed: 1,
atkRange: 1e3,
speed: 420
},
9: {
name: "坦克炮",
hp: 800,
atk: 200,
atkSpeed: 2,
atkRange: 1e3,
speed: 440
},
10: {
name: "树人",
hp: 500,
atk: 50,
atkSpeed: 2,
atkRange: 300,
speed: 200
},
11: {
name: "野猪",
hp: 400,
atk: 50,
atkSpeed: 2,
atkRange: 400,
speed: 300
},
12: {
name: "树精",
hp: 1e3,
atk: 50,
atkSpeed: 2,
atkRange: 500,
speed: 250
},
13: {
name: "蜥蜴",
hp: 1e3,
atk: 60,
atkSpeed: 1,
atkRange: 500,
speed: 450
}
};
e.SkillMess = {
1: {
name: "自愈",
cd: 10,
num: 30,
introduce_zh: "恢复血量",
introduce_en: "Restore HP",
level: [ {
num: "150%",
introduce_zh: "回复量提升50%",
introduce_en: "Increase the number of replies by 50%"
}, {
num: "150%",
cd: "80%",
introduce_zh: "回复量提升50%,冷却时间减少20%",
introduce_en: "Recovery increased by 50%, cooling time reduced by 20%"
}, {
num: "150%",
cd: "50%",
introduce_zh: "回复量提升50%,冷却时间减少50%",
introduce_en: "Recovery increased by 50%, cooling time reduced by 50%"
} ]
},
2: {
name: "血蝠",
cd: 10,
num: 50,
target: "enemy",
introduce_zh: "召唤血蝠攻击敌人",
introduce_en: "Summon blood bats to attack enemies",
level: [ {
num: "125%",
scale: "1.5",
introduce_zh: "伤害提升25%",
introduce_en: "Damage increased by 25%"
}, {
num: "125%",
cd: "70%",
scale: "1.5",
introduce_zh: "伤害提升25%,冷却时间减少30%",
introduce_en: "Damage increased by 25%, cooling time reduced by 30%"
}, {
num: "145%",
cd: "50%",
scale: "1.5",
introduce_zh: "伤害提升45%,冷却时间减少50%",
introduce_en: "Damage increased by 45%, cooling time reduced by 50%"
} ]
},
3: {
name: "铁甲",
cd: 10,
num: 2,
introduce_zh: "生成护盾抵挡伤害",
introduce_en: "Generate shield to resist damage",
level: [ {
num: "150%",
cd: "80%",
scale: "1.2",
introduce_zh: "持续3秒,冷却时间减少20%",
introduce_en: "Lasts for 3 seconds, cooling time reduced by 20%"
}, {
num: "200%",
cd: "70%",
scale: "1.4",
introduce_zh: "持续4秒,冷却时间减少30%",
introduce_en: "Lasts for 4 seconds, cooling time reduced by 30%"
}, {
num: "250%",
cd: "60%",
scale: "1.6",
introduce_zh: "持续5秒,冷却时间减少40%",
introduce_en: "Lasts for 5 seconds, cooling time reduced by 40%"
} ]
},
4: {
name: "愤怒",
cd: 10,
num: 40,
introduce_zh: "增加攻击力",
introduce_en: "Increase attack power",
level: [ {
num: "120%",
introduce_zh: "攻击力提升20%",
introduce_en: "Attack power increased by 20%"
}, {
num: "130%",
cd: "90%",
introduce_zh: "攻击力提升30%,冷却时间减少10%",
introduce_en: "Attack power increased by 30%, cooling time reduced by 10%"
}, {
num: "140%",
cd: "70%",
introduce_zh: "攻击力提升40%,冷却时间减少30%",
introduce_en: "Attack power increased by 40%, cooling time reduced by 30%"
} ]
},
5: {
name: "冥火",
cd: 10,
num: 100,
target: "enemy",
introduce_zh: "召唤火焰攻击敌人",
introduce_en: "Summon fire to attack enemies",
level: [ {
num: "120%",
scale: "1.5",
introduce_zh: "伤害提升20%",
introduce_en: "Attack power increased by 20%"
}, {
num: "150%",
scale: "1.5",
introduce_zh: "伤害提升50%",
introduce_en: "Attack power increased by 50%"
}, {
num: "150%",
cd: "50%",
scale: "1.5",
introduce_zh: "伤害提升50%,冷却时间减少50%",
introduce_en: "Damage increased by 50%, cooling time reduced by 50%"
} ]
},
6: {
name: "水盾",
cd: 10,
num: .5,
introduce_zh: "召唤水球护盾",
introduce_en: "Summon water polo shield",
level: [ {
num: "120%",
introduce_zh: "护盾增加20%",
introduce_en: "Shield increased by 20%"
}, {
num: "130%",
cd: "80%",
introduce_zh: "护盾增加30%,冷却时间减少20%",
introduce_en: "Shield increased by 30%, cooling time reduced by 20%"
}, {
num: "130%",
cd: "60%",
introduce_zh: "护盾增加30%,冷却时间减少40%",
introduce_en: "Shield increased by 30%, cooling time reduced by 40%"
} ]
},
7: {
name: "风刃",
cd: 10,
num: 40,
target: "enemy",
introduce_zh: "释放风刃攻击敌人",
introduce_en: "Release the wind to attack the enemy",
level: [ {
num: "120%",
cd: "80%",
scale: "1.5",
introduce_zh: "伤害提升20%,冷却时间减少20%",
introduce_en: "Damage increased by 20%, cooling time reduced by 20%"
}, {
num: "150%",
cd: "70%",
scale: "1.5",
introduce_zh: "伤害提升50%,冷却时间减少30%",
introduce_en: "Damage increased by 50%, cooling time reduced by 30%"
}, {
num: "150%",
cd: "50%",
scale: "1.5",
introduce_zh: "伤害提升50%,冷却时间减少50%",
introduce_en: "Damage increased by 50%, cooling time reduced by 50%"
} ]
},
8: {
name: "盲盒",
cd: 20,
num: 1,
introduce_zh: "随机掉落道具",
introduce_en: "Random dropping items",
level: [ {
num: "200%",
introduce_zh: "掉落道具+1",
introduce_en: "Drop item+1"
}, {
num: "300%",
introduce_zh: "掉落道具+2",
introduce_en: "Drop item+2"
}, {
num: "300%",
cd: "80%",
introduce_zh: "掉落道具+2,冷却时间减少20%",
introduce_en: "Drop item+2, cooling time reduced by 20%"
} ]
},
9: {
name: "毒域",
cd: 15,
num: 4,
target: "enemy",
introduce_zh: "召唤毒阵",
introduce_en: "Random dropping items",
level: [ {
num: "125%",
scale: "1.2",
introduce_zh: "持续5秒,范围扩大20%",
introduce_en: "Lasts for 5 seconds, the range expands by 20%"
}, {
num: "150%",
scale: "1.5",
introduce_zh: "持续6秒,范围扩大50%",
introduce_en: "Lasts for 6 seconds, the range expands by 50%"
}, {
num: "150%",
scale: "1.5",
cd: "60%",
introduce_zh: "持续6秒,范围扩大50,冷却时间减少40%",
introduce_en: "Lasts for 6 seconds, the range is expanded by 50%"
} ]
},
10: {
name: "至高之拳",
cd: 10,
num: 140,
target: "enemy",
introduce_zh: "召唤拳头攻击",
introduce_en: "Summon fist attack",
level: [ {
num: "120%",
scale: "1.5",
introduce_zh: "伤害提升25%",
introduce_en: "Damage increased by 25%"
}, {
num: "130%",
cd: "60%",
scale: "1.5",
introduce_zh: "伤害提升25%,冷却时间减少40%",
introduce_en: "Damage increased by 25%, cooling time reduced by 40%"
}, {
num: "140%",
cd: "40%",
scale: "1.5",
introduce_zh: "伤害提升25%,冷却时间减少60%",
introduce_en: "Damage increased by 25%, cooling time reduced by 60%"
} ]
},
11: {
name: "瞬闪",
cd: 2,
num: 300,
introduce_zh: "闪现一段距离",
introduce_en: "Flash a distance",
level: [ {
num: "120%",
introduce_zh: "闪现范围+20%",
introduce_en: "Flash range+20%"
}, {
num: "150%",
introduce_zh: "闪现范围+50%",
introduce_en: "Flash range+50%"
}, {
num: "150%",
cd: "50%",
introduce_zh: "闪现范围+50%,冷却时间减少50%",
introduce_en: "Flash range+50%, cooling time reduced by 50%"
} ]
},
12: {
name: "世界缩小器",
cd: 0,
num: 1,
introduce_zh: "血量增加,人物变大",
introduce_en: "The life increases and the character becomes larger",
level: [ {
num: "120%",
scale: "1",
introduce_zh: "血量增加20%,人物变大",
introduce_en: "HP increased by 20%, and the character became larger"
}, {
num: "140%",
scale: "1.1",
introduce_zh: "血量增加40%,人物变大",
introduce_en: "HP increased by 40%, and the character became larger"
}, {
num: "150%",
scale: "1.2",
introduce_zh: "血量增加50%,人物变大",
introduce_en: "HP increased by 50%, and the character became larger"
} ]
},
13: {
name: "世界扩大仪",
cd: 0,
num: 1,
introduce_zh: "速度增加,人物变小",
introduce_en: "The speed increases and the characters become smaller",
level: [ {
num: "120%",
scale: "0.6",
introduce_zh: "速度增加20%,人物变小",
introduce_en: "Speed increases by 20%, and the characters become smaller"
}, {
num: "135%",
scale: "0.55",
introduce_zh: "速度增加35%,人物变小",
introduce_en: "Speed increases by 35%, and the characters become smaller"
}, {
num: "150%",
scale: "0.5",
introduce_zh: "速度增加50%,人物变小",
introduce_en: "Speed increases by 50%, and the characters become smaller"
} ]
},
14: {
name: "暴走药剂",
cd: 0,
num: 1,
introduce_zh: "射速提升,换弹加快",
introduce_en: "Increase the firing speed and speed up the cartridge change",
level: [ {
num: "80%",
introduce_zh: "射速增加20%",
introduce_en: "Fire speed increased by 20%"
}, {
num: "70%",
reload: "60%",
introduce_zh: "射速增加30%,换弹提升40%",
introduce_en: "The firing speed is increased by 30%, cartridge change is increased by 40%"
}, {
num: "60%",
reload: "40%",
introduce_zh: "射速增加40%,换弹提升60%",
introduce_en: "The firing speed is increased by 40%, cartridge change is increased by 60%"
} ]
},
15: {
name: "子弹背包",
cd: 0,
num: 1,
introduce_zh: "增加子弹",
introduce_en: "Add bullets",
level: [ {
num: "120%",
introduce_zh: "子弹数量增加20%",
introduce_en: "Number of bullets increased by 20%"
}, {
num: "140%",
introduce_zh: "子弹数量增加40%",
introduce_en: "Number of bullets increased by 40%"
}, {
num: "160%",
introduce_zh: "子弹数量增加60%",
introduce_en: "Number of bullets increased by 60%"
} ]
},
16: {
name: "刀客",
cd: 0,
num: 1,
introduce_zh: "近战武器伤害提升",
introduce_en: "Melee weapon damage increased",
level: [ {
num: "120%",
introduce_zh: "近战伤害增加20%",
introduce_en: "Melee damage increased by 20%"
}, {
num: "140%",
introduce_zh: "近战伤害增加40%",
introduce_en: "Melee damage increased by 40%"
}, {
num: "180%",
introduce_zh: "近战伤害增加80%",
introduce_en: "Melee damage increased by 80%"
} ]
}
};
e.PathMess = {
path: {
mapWidth: 6e3,
mapHeight: 5e3,
gridWidth: 200,
gridHeight: 200,
pathArr: [ [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 ], [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ]
}
};
e.ZombieMess = {
0: {
name: "小僵",
hp: 90,
atk: 1,
atkRange: 200,
speed: 420
},
1: {
name: "铁通僵",
hp: 200,
atk: 1,
atkRange: 200,
speed: 400
},
2: {
name: "跑步僵",
hp: 120,
atk: 1,
atkRange: 220,
speed: 450
},
3: {
name: "跳跃僵",
hp: 150,
atk: 1,
atkRange: 220,
speed: 440
},
4: {
name: "菜刀僵",
hp: 300,
atk: 1,
atkRange: 220,
speed: 400
},
5: {
name: "炸弹僵",
hp: 150,
atk: 1,
atkRange: 1e3,
speed: 400
},
6: {
name: "毒药僵",
hp: 250,
atk: 1,
atkRange: 1e3,
speed: 400
},
7: {
name: "金币僵",
hp: 250,
atk: 1,
atkRange: 200,
speed: 400
},
8: {
name: "boss1",
hp: 1500,
atk: 1,
atkRange: 300,
speed: 500
},
9: {
name: "boss2",
hp: 2e3,
atk: 1,
atkRange: 350,
speed: 500
},
10: {
name: "boss3",
hp: 2500,
atk: 1,
atkRange: 200,
speed: 500
},
11: {
name: "boss4",
hp: 3e3,
atk: 1,
atkRange: 250,
speed: 500
},
12: {
name: "boss5",
hp: 3500,
atk: 1,
atkRange: 250,
speed: 500
},
13: {
name: "boss6",
hp: 4e3,
atk: 1,
atkRange: 250,
speed: 500
},
14: {
name: "boss7",
hp: 4500,
atk: 1,
atkRange: 450,
speed: 500
},
15: {
name: "boss8",
hp: 5e3,
atk: 1,
atkRange: 400,
speed: 500
},
16: {
name: "boss9",
hp: 5500,
atk: 1,
atkRange: 300,
speed: 500
},
17: {
name: "boss10",
hp: 6e3,
atk: 1,
atkRange: 200,
speed: 500
},
18: {
name: "boss11",
hp: 6600,
atk: 1,
atkRange: 300,
speed: 500
},
19: {
name: "boss12",
hp: 7200,
atk: 1,
atkRange: 450,
speed: 500
},
20: {
name: "boss13",
hp: 8e3,
atk: 1,
atkRange: 300,
speed: 500
}
};
return e = o([ r ], e);
}();
i.default = l;
cc._RF.pop();
}, {} ],
gameMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ba7855a2NtE/b6oGliHwfNV", "gameMgr");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.gameMgr = void 0;
var s = e("../Framework/CocosZ"), a = e("../../common-plugin/Scripts/Utils"), r = e("../Framework/Constant"), l = e("./UpgradeMgr"), c = e("../../common-plugin/Scripts/YZ_Constant"), u = e("./ZombieBase"), h = cc._decorator, d = h.ccclass, f = h.property;
i.gameMgr = null;
var _ = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.nodePoolObj = {};
t.canSHowGameBanner = !0;
t.tipLayer = null;
t.setMapTs = null;
t.playerTs = null;
t.uiGamePage = null;
t.moveArea = null;
t.yaogan = null;
t.BtnBullet = null;
t.posObj = {};
t.dmmArr = [];
t.red = null;
t.hpTip = null;
t.effect_fire = null;
t.effect_hit = null;
t.itemList = [];
t.itemEffect = [];
t.spark = null;
t.blood = null;
t.testPoint = null;
t.player = null;
t.jiaoyin = null;
t.fj = null;
t.fjTip = null;
t.mainCamereRootNode = null;
t.mainCamera = null;
t.atk = null;
t.safeCenter = cc.v2(0, 0);
t.redCircle = null;
t.redCircle2 = null;
t.mapSize = cc.winSize;
t.miniMapSize = null;
t.btnSkill = null;
t.btnSkillAd = null;
t.rangedWeaponMess = null;
t.rangedWeaponAdMess = null;
t.ammo = null;
t.ammoAd = null;
t.kt = null;
t.model6_touxiang = null;
t.model6_btnShuxing = null;
t.model6_shuxing = null;
t.model6_jingyanBar = null;
t.model6_levelLabel = null;
t.model6_skillScrollView = null;
t.model6_skillScrollView_content = null;
t.model6_skillScrollView_item = null;
t.model6_timeLabel = null;
t.model6_ts = null;
t.model6_bossBar = null;
t.timeStr = "";
t.totalNum = 0;
t.deathNum = 0;
t.playerRank = 1;
t.passCondition = 1;
t.bossName = "";
t.map = null;
t.startPoint = null;
t.atkRange = null;
t.curTime = 0;
t.timeLabel = null;
t.snow = null;
t.qlzc = null;
t.GameTime = 0;
t.isGameStart = !1;
t.posList = [];
t.boss_border = null;
t.zombieTime = 0;
t.zombieCurNum = 0;
t.zombieMaxNum = 0;
t.zombieLength = 2;
t.zombieArr = [ "zombie_basic", "zombie_run", "zombie_drum", "zombie_jump", "zombie_bomb", "zombie_tank", "zombie_poison" ];
t.bossArr = [ "boss1", "boss2", "boss3", "boss4", "boss11", "boss5", "boss12", "boss6", "boss7", "boss8", "boss9", "boss10", "boss13" ];
t.boss2Arr = [];
t._recursionCount = 0;
t.lastTime = 0;
t.safeTime = 40;
t.startPos = null;
t.isUp = !1;
t.isDown = !1;
t.isLeft = !1;
t.isRight = !1;
t.isPre = !0;
t.clipNameArr = {};
t.isFail = !1;
t.isWin = !1;
t.isRevive = !1;
t._timeArr = [ 0, .04, .05, .06, .07 ];
t._disArr = [ 0, 3, 10, 20, 30 ];
t._vibrateTime = 0;
return t;
}
t.prototype.nodeGet = function(e, t) {
var i = null;
this.nodePoolObj[e] || (this.nodePoolObj[e] = new cc.NodePool());
this.nodePoolObj[e].size() ? i = this.nodePoolObj[e].get() : t && t.isValid && (i = cc.instantiate(t));
i && (i.name = e);
return i;
};
t.prototype.nodePut = function(e, t) {
this.nodePoolObj[e] && t && t.isValid ? this.nodePoolObj[e].put(t) : cc.log("回收出错: ", e);
};
t.prototype.onLoad = function() {
i.gameMgr = this;
i.gameMgr.mainCamera.zoomRatio = .65;
s.cocosz.pauseCount = 0;
};
t.prototype.start = function() {
this.mainCamereRootNode.setContentSize(cc.winSize);
this.mainCamereRootNode.width += 500;
this.mainCamereRootNode.height += 500;
if (this.fjTip) if ([ 5, 7 ].includes(s.cocosz.gameMode)) this.fjTip.active = !1; else {
this.fjTip.active = !0;
this.fjTip.zIndex = r.ZindexLayer.zindex_max;
}
};
t.prototype.lateUpdate = function() {
s.cocosz.isPause || i.gameMgr.isWin || i.gameMgr.isFail || this.cameraFollow();
};
t.prototype.initPos = function() {
var e = this;
if (7 == s.cocosz.gameMode) {
var t = cc.find("posLayer/bluePos", i.gameMgr.map);
t && (this.posObj.bluePos = t.getPosition());
var o = cc.find("posLayer/redPos", i.gameMgr.map);
o && (this.posObj.redPos = o.getPosition());
this.posObj.pathPos0 = [];
var n = cc.find("posLayer/pathPos0", i.gameMgr.map);
n && n.children.forEach(function(t) {
e.posObj.pathPos0.push(t.getPosition());
});
this.posObj.pathPos1 = [];
var a = cc.find("posLayer/pathPos1", i.gameMgr.map);
a && a.children.forEach(function(t) {
e.posObj.pathPos1.push(t.getPosition());
});
this.posObj.pathPos2 = [];
var r = cc.find("posLayer/pathPos2", i.gameMgr.map);
r && r.children.forEach(function(t) {
e.posObj.pathPos2.push(t.getPosition());
});
}
};
t.prototype.startGame = function() {
var e = this;
this.tipLayer = new cc.Node();
this.tipLayer.name = "tipLayer";
this.tipLayer.zIndex = r.ZindexLayer.zindex_roleLabel;
this.tipLayer.setPosition(cc.Vec2.ZERO);
this.tipLayer.setParent(i.gameMgr.map);
6 == s.cocosz.gameMode && this.schedule(function() {
e.update_model6_shuxing();
}, 1);
this.initPlayer();
};
t.prototype.initPlayer = function() {
if (6 == s.cocosz.gameMode) {
var e = cc.instantiate(this.player);
e.scale = .6;
e.setPosition(cc.v2(2e3, 0).rotateSelf(2 * Math.PI * Math.random()));
e.setParent(this.map);
this.totalNum++;
this.fjEffect();
}
};
t.prototype.fjEffect = function() {
var e = this;
if (this.fj && this.playerTs) {
this.uiGamePage.active = !1;
this.scheduleOnce(function() {
e.playerTs.node.opacity = 0;
e.playerTs.playerMess.opacity = 1;
e.playerTs.ghAniNode.opacity = 1;
});
this.followNode = this.fj;
this.fj.active = !0;
this.fj.setParent(i.gameMgr.map);
this.scheduleOnce(function() {
e.fj.zIndex = r.ZindexLayer.zindex_max;
});
var t = cc.v2(this.playerTs.node.x, this.playerTs.node.y + 500), o = t.sub(this.fj.getPosition());
this.fj.scaleX = o.x < 0 ? -1 : 1;
var n = this.fj.getComponent(sp.Skeleton);
n.addAnimation(0, "animation0", !0);
s.cocosz.audioMgr.playEffect("fj", !0, 1);
var a = o.mag() / 800;
cc.tween(this.fj).to(a, {
x: t.x,
y: t.y
}).call(function() {
n.setAnimation(0, "animation1", !1);
n.addAnimation(0, "animation2", !1);
n.addAnimation(0, "animation4", !1);
n.addAnimation(0, "animation5", !0);
}).delay(2).call(function() {
e.fjTip && (e.fjTip.active = !1);
e.fj.zIndex = r.ZindexLayer.zindex_max - 1;
e.playerTs.node.zIndex = r.ZindexLayer.zindex_max;
e.playerTs.node.opacity = 255;
e.playerTs.rig.active = !1;
e.followNode = e.playerTs.node;
e.playerTs.node.y += 600;
cc.tween(e.playerTs.node).delay(.5).to(1, {
y: e.playerTs.node.y - 600
}).call(function() {
e.uiGamePage.active = !0;
e.playerTs.node.zIndex = r.ZindexLayer.zindex_player;
e.playerTs.rig.active = !0;
e.playerTs.playerMess.opacity = 255;
e.playerTs.ghAniNode.opacity = 255;
e.playerTs.updateAni("daiji_body", !0);
e.initGame();
6 == s.cocosz.gameMode ? e.schedule(e.createZombieCount, 1) : cc.log("模式有问题");
}).start();
}).delay(2).call(function() {
e.fj.zIndex = r.ZindexLayer.zindex_max;
n.setAnimation(0, "animation6", !1);
n.addAnimation(0, "animation7", !1);
n.addAnimation(0, "animation9", !1);
n.addAnimation(0, "animation0", !0);
}).delay(2).to(2, {
position: cc.v3(o.normalize().mulSelf(2e3).add(o))
}).call(function() {
s.cocosz.audioMgr.stopEffect("fj");
e.fj.destroy();
}).start();
}
};
t.prototype.showGameTime = function() {
if (this.model6_timeLabel && this.model6_timeLabel.isValid) {
var e = this.GameTime, t = 0, i = 0;
if (e > 60) {
t = Math.floor(e / 60);
e = Math.floor(e % 60);
if (t > 60) {
i = Math.floor(t / 60);
t = Math.floor(t % 60);
}
}
var o = "";
o += 0 == i ? "" : i + ":";
o += t >= 10 ? "" + t : "0" + t;
o += e >= 10 ? ":" + e : ":0" + e;
this.timeStr = o;
this.model6_timeLabel.string = o;
}
};
t.prototype.update_model6_xuedi = function() {
if (i.gameMgr.playerTs && i.gameMgr.playerTs.hpNumNode && i.gameMgr.playerTs.hpNumNode.isValid) {
i.gameMgr.playerTs.hpNumNode.active = !0;
i.gameMgr.playerTs.hpNumNode.width = Math.min(250, 50 * i.gameMgr.playerTs.totleHp);
i.gameMgr.playerTs.hpNumNode.children.forEach(function(e, t) {
if (t < i.gameMgr.playerTs.totleHp) {
e.active = !0;
t < i.gameMgr.playerTs.HP ? e.children[1].opacity = 255 : e.children[1].opacity = 0;
} else e.active = !1;
});
}
};
t.prototype.update_model6_shuxing = function() {
if (l.upgradeMgr && i.gameMgr && i.gameMgr.model6_shuxing && i.gameMgr.model6_shuxing.isValid && i.gameMgr.model6_shuxing.active) {
this.model6_shuxing.children[0].getComponent(cc.Label).string = l.upgradeMgr.curLevel.toString();
this.model6_shuxing.children[1].getComponent(cc.Label).string = (i.gameMgr.playerTs.atkNum * i.gameMgr.playerTs.atkRate).toFixed(0);
this.model6_shuxing.children[2].getComponent(cc.Label).string = (i.gameMgr.playerTs.atkSpeed * i.gameMgr.playerTs.atkSpeedRate).toFixed(1);
this.model6_shuxing.children[3].getComponent(cc.Label).string = (i.gameMgr.playerTs.reloadSpeed * i.gameMgr.playerTs.reloadRate).toFixed(1);
this.model6_shuxing.children[4].getComponent(cc.Label).string = i.gameMgr.playerTs.curWeapon.bulletNum.toString();
this.model6_shuxing.children[5].getComponent(cc.Label).string = (i.gameMgr.playerTs.MoveSpeed * i.gameMgr.playerTs.speedRate).toFixed(0);
this.model6_shuxing.children[6].getComponent(cc.Label).string = l.upgradeMgr.jingyanRange.toString();
}
};
t.prototype.showBossHp = function(e) {
if (e > 0) {
if (this.model6_bossBar && cc.isValid(this.model6_bossBar)) {
this.model6_bossBar.node.active = !0;
this.model6_bossBar.progress = e;
}
this.model6_jingyanBar && cc.isValid(this.model6_jingyanBar) && (this.model6_jingyanBar.node.active = !1);
this.model6_levelLabel && cc.isValid(this.model6_levelLabel) && (this.model6_levelLabel.node.active = !1);
} else {
if (this.model6_bossBar && cc.isValid(this.model6_bossBar)) {
this.model6_bossBar.node.active = !1;
this.model6_bossBar.progress = e;
}
this.model6_jingyanBar && cc.isValid(this.model6_jingyanBar) && (this.model6_jingyanBar.node.active = !0);
this.model6_levelLabel && cc.isValid(this.model6_levelLabel) && (this.model6_levelLabel.node.active = !0);
}
};
t.prototype.createZombieCount = function() {
var e = this;
if (!(s.cocosz.isPause || i.gameMgr.isWin || i.gameMgr.isFail)) {
this.GameTime++;
this.showGameTime();
if (!this.boss_border) {
this.zombieTime++;
var t = 1;
if (0 == this.zombieTime % 100) {
this.createBossZombie();
this.zombieLength < this.zombieArr.length && this.zombieLength++;
} else if (0 == this.zombieTime % 50) {
if (this.model6_ts) {
this.model6_ts.active = !0;
this.scheduleOnce(function() {
e.model6_ts.active = !1;
}, 3);
var o = this.model6_ts.getComponent(sp.Skeleton);
o.setSkin("sclx_" + s.cocosz.curLanguage);
o.setAnimation(0, "animation", !0);
}
this.zombieMaxNum = 20 + 10 * Math.floor(this.zombieTime / 40);
this.zombieMaxNum > 40 && (this.zombieMaxNum = 40);
if (this.zombieCurNum < this.zombieMaxNum) {
t = this.zombieMaxNum - this.zombieCurNum;
for (var n = Math.ceil(t / 10), a = 0, r = 0; r < n; r++) this.schedule(function() {
a += 36;
e.createCommonZombie(cc.winSize.height / 2.5 / e.mainCamera.zoomRatio, a);
}, .1, Math.ceil(t / n), r);
}
for (r = this.boss2Arr.length - 1; r >= 0 && r >= this.boss2Arr.length - 2; r--) {
var l = this.boss2Arr[r];
cc.log("创建尸潮boss: ", l);
l && this.createZombie(l, i.gameMgr.playerTs.node.getPosition(), cc.winSize.width / 2 / this.mainCamera.zoomRatio);
}
} else if (0 == this.zombieTime % 51 || 0 == this.zombieTime % 52 || 0 == this.zombieTime % 53 || 0 == this.zombieTime % 54 || 0 == this.zombieTime % 55) ; else {
this.zombieMaxNum = 5 + 5 * Math.floor(this.zombieTime / 20);
this.zombieMaxNum > 20 && (this.zombieMaxNum = 20);
if (this.zombieCurNum < this.zombieMaxNum) {
t = Math.ceil(4 * Math.random());
this.schedule(function() {
e.createCommonZombie(cc.winSize.height / 2.5 / e.mainCamera.zoomRatio);
}, .1, t);
}
}
}
}
};
t.prototype.createCommonZombie = function(e, t) {
var o = Math.floor(Math.random() * this.zombieLength), n = this.zombieArr[o];
n && this.createZombie(n, i.gameMgr.playerTs.node.getPosition(), e, t);
};
t.prototype.createBossZombie = function() {
var e = this;
if (this.bossArr.length) {
this.createBossBorder();
if (this.model6_ts) {
this.model6_ts.active = !0;
this.scheduleOnce(function() {
e.model6_ts.active = !1;
}, 3);
var t = this.model6_ts.getComponent(sp.Skeleton);
t.setSkin("bosslx_" + s.cocosz.curLanguage);
t.setAnimation(0, "animation", !0);
}
var o = this.bossArr.shift(), n = i.gameMgr.playerTs.node.getPosition();
this.boss_border && (n = this.boss_border.getPosition());
if (o) {
this.boss2Arr.push(o);
this.createZombie(o, n, 300, null, !0);
}
}
};
t.prototype.createBossBorder = function() {
var e = s.cocosz.resMgr.getRes("boss_border", cc.Prefab);
if (e) {
this.boss_border = cc.instantiate(e);
this.boss_border.setPosition(i.gameMgr.playerTs.node.getPosition());
this.boss_border.x - this.boss_border.width / 2 < -i.gameMgr.mapSize.width / 2 ? this.boss_border.x = -i.gameMgr.mapSize.width / 2 + this.boss_border.width / 2 + 100 : this.boss_border.x + this.boss_border.width / 2 > i.gameMgr.mapSize.width / 2 && (this.boss_border.x = i.gameMgr.mapSize.width / 2 - this.boss_border.width / 2 - 100);
this.boss_border.y - this.boss_border.height / 2 < -i.gameMgr.mapSize.height / 2 ? this.boss_border.y = -i.gameMgr.mapSize.height / 2 + this.boss_border.height / 2 + 100 : this.boss_border.y + this.boss_border.height / 2 > i.gameMgr.mapSize.height / 2 && (this.boss_border.y = i.gameMgr.mapSize.height / 2 - this.boss_border.height / 2 - 300);
this.boss_border.setParent(this.map);
}
};
t.prototype.createZombie = function(e, t, o, n, a) {
var r = this;
void 0 === a && (a = !1);
var l = s.cocosz.resMgr.getRes(e, cc.Prefab);
if (l) {
this._recursionCount = 0;
var c = this.getZombieBirthPos(t, o, n);
if (c) {
var h = this.nodeGet(e, l);
if (h) {
var d = h.getComponent(u.default);
d && a && (d.isBoss = !0);
h.setPosition(c);
h.setParent(i.gameMgr.map);
d && d.initNode();
}
}
} else s.cocosz.resMgr.loadAndCacheRes("prefab_zombie/" + e, cc.Prefab, null, function(i, s) {
i || r.createZombie(e, t, o, n, a);
});
};
t.prototype.getZombieBirthPos = function(e, t, o) {
if (++this._recursionCount > 100) return null;
var n = 0;
n = null == o || void 0 == o ? 2 * Math.PI * Math.random() : cc.misc.degreesToRadians(o);
var s = cc.v2(t + Math.floor(200 * Math.random()), 0).rotateSelf(n), a = e.add(s);
return a.x > -i.gameMgr.mapSize.width / 2 + 400 && a.x < i.gameMgr.mapSize.width / 2 - 400 && a.y < i.gameMgr.mapSize.height / 2 - 400 && a.y > -i.gameMgr.mapSize.height / 2 + 400 ? a : this.getZombieBirthPos(e, t);
};
t.prototype.initGame = function() {
var e = this;
this.startPos = this.yaogan.getPosition();
this.isGameStart = !0;
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.keyDown, this);
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.keyUp, this);
this.moveArea.on(cc.Node.EventType.TOUCH_START, function(t) {
var i = t.getLocation();
i = e.node.convertToNodeSpaceAR(i);
e.yaogan.setPosition(i);
}, this);
this.moveArea.on(cc.Node.EventType.TOUCH_MOVE, function(t) {
var o = t.getLocation().sub(t.getStartLocation());
o.mag() > 160 && (o = o.mul(160 / o.mag()));
e.yaogan.children[0].setPosition(o);
i.gameMgr.playerTs.moveDir = o.normalize();
}, this);
this.moveArea.on(cc.Node.EventType.TOUCH_END, function(t) {
e.yaogan.setPosition(e.startPos);
e.yaogan.children[0].setPosition(cc.v2(0, 0));
i.gameMgr.playerTs.moveDir = cc.v2(0, 0);
}, this);
this.moveArea.on(cc.Node.EventType.TOUCH_CANCEL, function(t) {
e.yaogan.setPosition(e.startPos);
e.yaogan.children[0].setPosition(cc.v2(0, 0));
i.gameMgr.playerTs.moveDir = cc.v2(0, 0);
}, this);
};
t.prototype.keyDown = function(e) {
switch (e.keyCode) {
case 87:
if (!this.isUp) {
this.isUp = !0;
this.setDir();
}
break;

case 83:
if (!this.isDown) {
this.isDown = !0;
this.setDir();
}
break;

case 65:
if (!this.isLeft) {
this.isLeft = !0;
this.setDir();
}
break;

case 68:
if (!this.isRight) {
this.isRight = !0;
this.setDir();
}
}
};
t.prototype.keyUp = function(e) {
switch (e.keyCode) {
case 87:
this.isUp = !1;
this.setDir();
break;

case 83:
this.isDown = !1;
this.setDir();
break;

case 65:
this.isLeft = !1;
this.setDir();
break;

case 68:
this.isRight = !1;
this.setDir();
}
};
t.prototype.cameraFollow = function() {
var e = null, t = .1;
if (this.followNode && this.followNode.isValid) {
e = this.followNode.getPosition();
t = .1;
}
if (e) {
var o = this.mainCamereRootNode.getPosition(), n = cc.Vec2.ZERO, a = this.mainCamera.zoomRatio, r = new cc.Size(cc.winSize.width / a, cc.winSize.height / a);
if (7 == s.cocosz.gameMode) ; else {
e.x + r.width / 2 > i.gameMgr.mapSize.width / 2 ? e.x = i.gameMgr.mapSize.width / 2 - r.width / 2 : e.x - r.width / 2 < -i.gameMgr.mapSize.width / 2 && (e.x = -i.gameMgr.mapSize.width / 2 + r.width / 2);
e.y + r.height / 2 > i.gameMgr.mapSize.height / 2 ? e.y = i.gameMgr.mapSize.height / 2 - r.height / 2 : e.y - r.height / 2 < -i.gameMgr.mapSize.height / 2 && (e.y = -i.gameMgr.mapSize.height / 2 + r.height / 2);
}
if (e.sub(o).mag() < 1e3) {
cc.Vec2.lerp(n, o, e, t);
this.mainCamereRootNode.setPosition(n);
} else {
this.mainCamereRootNode.setPosition(e);
i.gameMgr.setMapTs && i.gameMgr.setMapTs.checkAllNode();
}
}
};
t.prototype.setDir = function() {
var e = cc.v2(0, 0);
this.isUp && e.y++;
this.isLeft && e.x--;
this.isRight && e.x++;
this.isDown && e.y--;
this.playerTs.moveDir = e.normalize();
};
t.prototype.restart = function() {};
t.prototype.useMeleeWeapon = function() {};
t.prototype.useRangedWeapon = function() {
this.playerTs.changeCurWeapon(this.playerTs.rangedWeapon);
};
t.prototype.useRangedWeaponAd = function() {
this.playerTs.changeCurWeapon(this.playerTs.rangedWeaponAd);
};
t.prototype.getNewWeapon = function() {
s.cocosz.audioMgr.playEffect("changeWeapon");
this.playerTs.setNewWeapon();
};
t.prototype.playEffect = function(e, t, o) {
var n = this;
void 0 === o && (o = .2);
if (!(i.gameMgr.isWin || i.gameMgr.isFail || s.cocosz.isPause || this.clipNameArr[e])) {
if (t && t.isValid && t.parent && t.parent.isValid) {
var a = t.getPosition();
a = t.parent.convertToWorldSpaceAR(a);
var r = this.playerTs.node.getPosition();
r = this.playerTs.node.parent.convertToWorldSpaceAR(r);
if (a.sub(r).mag() > 2e3) return;
}
s.cocosz.audioMgr.playEffect(e, !1, 1);
if (o > 0) {
this.clipNameArr[e] = 1;
this.scheduleOnce(function() {
n.clipNameArr[e] = 0;
}, o);
}
}
};
t.prototype.playClip = function(e, t, o) {
var n = this;
void 0 === o && (o = .2);
if (!(i.gameMgr.isWin || i.gameMgr.isFail || s.cocosz.isPause || this.clipNameArr[e.name])) {
if (t && t.isValid && t.parent && t.parent.isValid) {
var a = t.getPosition();
a = t.parent.convertToWorldSpaceAR(a);
var r = this.playerTs.node.getPosition();
r = this.playerTs.node.parent.convertToWorldSpaceAR(r);
if (a.sub(r).mag() > 2e3) return;
}
s.cocosz.audioMgr.playClip(e, !1, 1);
if (o > 0) {
this.clipNameArr[e.name] = 1;
this.scheduleOnce(function() {
n.clipNameArr[e.name] = 0;
}, o);
}
}
};
t.prototype.showRoleTip = function(e, t, o) {
var n = this;
void 0 === o && (o = cc.Color.WHITE);
if (e && e.isValid && this.hpTip && this.hpTip.isValid && i.gameMgr.tipLayer) {
var s = this.nodeGet("hpTip", this.hpTip);
if (s) {
s.setParent(i.gameMgr.tipLayer);
s.setPosition(e.x + 200 * (Math.random() - .5), e.y + e.height / 2);
s.opacity = 255;
s.color = o;
s.scale = o == cc.Color.WHITE ? 1 : 1.2;
var a = s.getComponent(cc.Label);
a && (a.string = t);
s.stopAllActions();
cc.tween(s).by(.5, {
y: 20,
scale: 1
}).by(.3, {
y: 10,
scale: -1,
opacity: -255
}).call(function() {
n.nodePut("hpTip", s);
}).start();
}
}
};
t.prototype.fail = function() {
var e = this;
if (!this.isWin && !this.isFail) {
s.cocosz.pauseCount++;
this.isFail = !0;
this.unscheduleAllCallbacks();
l.upgradeMgr && l.upgradeMgr.unscheduleAllCallbacks();
this.scheduleOnce(function() {
e.qlzc.active = !0;
cc.tween(e.qlzc).delay(.3).call(function() {
e.qlzc.getChildByName("dian").children[0].active = !0;
}).delay(.3).call(function() {
e.qlzc.getChildByName("dian").children[1].active = !0;
}).delay(.3).call(function() {
e.qlzc.getChildByName("dian").children[2].active = !0;
}).delay(.3).call(function() {
e.qlzc.getChildByName("dian").children[0].active = !1;
e.qlzc.getChildByName("dian").children[1].active = !1;
e.qlzc.getChildByName("dian").children[2].active = !1;
}).union().repeatForever().start();
}, 2);
this.scheduleOnce(function() {
s.cocosz.gameMgr.gameFailed();
}, 4);
}
};
t.prototype.win = function() {
var e = this;
if (!this.isWin && !this.isFail) {
s.cocosz.pauseCount++;
this.isWin = !0;
this.unscheduleAllCallbacks();
l.upgradeMgr && l.upgradeMgr.unscheduleAllCallbacks();
this.scheduleOnce(function() {
e.qlzc.active = !0;
cc.tween(e.qlzc).delay(.3).call(function() {
e.qlzc.getChildByName("dian").children[0].active = !0;
}).delay(.3).call(function() {
e.qlzc.getChildByName("dian").children[1].active = !0;
}).delay(.3).call(function() {
e.qlzc.getChildByName("dian").children[2].active = !0;
}).delay(.3).call(function() {
e.qlzc.getChildByName("dian").children[0].active = !1;
e.qlzc.getChildByName("dian").children[1].active = !1;
e.qlzc.getChildByName("dian").children[2].active = !1;
}).union().repeatForever().start();
}, 2);
this.scheduleOnce(function() {
s.cocosz.gameMgr.gameSuccess();
}, 4);
}
};
t.prototype.revive = function() {
this.isRevive = !0;
this.playerTs.revive();
};
t.prototype.shakeEffect = function(e, t, i, o) {
void 0 === e && (e = 1);
void 0 === t && (t = 1);
void 0 === i && (i = !0);
void 0 === o && (o = c.VibrateType.Short);
var n = this._timeArr[e], r = this._disArr[e];
if (e > 0 && t > 0) {
this.mainCamera.node.stopAllActions();
this.mainCamera.node.setPosition(0, 0, 0);
cc.tween(this.mainCamera.node).to(n, {
position: cc.v3(r, r)
}).to(n, {
position: cc.v3(0, -r)
}).to(n, {
position: cc.v3(-r, r)
}).to(n, {
position: cc.v3(-r, -r)
}).to(n, {
position: cc.v3(0, r)
}).to(n, {
position: cc.v3(0, 0)
}).union().repeat(t).start();
}
if (s.cocosz.dataMgr.ShakeOn) {
var l = new Date().getTime();
if (l - this._vibrateTime > 500) {
this._vibrateTime = l;
i && a.utils.vibrate(o);
}
}
};
t.prototype.guideSkip = function() {};
n([ f(cc.Node) ], t.prototype, "red", void 0);
n([ f(cc.Prefab) ], t.prototype, "hpTip", void 0);
n([ f(cc.Prefab) ], t.prototype, "effect_fire", void 0);
n([ f(cc.Prefab) ], t.prototype, "effect_hit", void 0);
n([ f(cc.Prefab) ], t.prototype, "itemList", void 0);
n([ f(cc.Prefab) ], t.prototype, "itemEffect", void 0);
n([ f(cc.Prefab) ], t.prototype, "spark", void 0);
n([ f(cc.Prefab) ], t.prototype, "blood", void 0);
n([ f(cc.Prefab) ], t.prototype, "testPoint", void 0);
n([ f(cc.Prefab) ], t.prototype, "player", void 0);
n([ f(cc.SpriteFrame) ], t.prototype, "jiaoyin", void 0);
n([ f(cc.Node) ], t.prototype, "fj", void 0);
n([ f(cc.Node) ], t.prototype, "fjTip", void 0);
n([ f(cc.Node) ], t.prototype, "mainCamereRootNode", void 0);
n([ f(cc.Camera) ], t.prototype, "mainCamera", void 0);
return t = n([ d ], t);
}(cc.Component);
i.default = _;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/Utils": "Utils",
"../../common-plugin/Scripts/YZ_Constant": "YZ_Constant",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"./UpgradeMgr": "UpgradeMgr",
"./ZombieBase": "ZombieBase"
} ],
jingyan: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "14607c2NPFLXrODbf9T8Km8", "jingyan");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../../common-plugin/Scripts/YZ_Constant"), a = e("../Framework/CocosZ"), r = e("../Framework/Constant"), l = e("./gameMgr"), c = e("./UpgradeMgr"), u = cc._decorator, h = u.ccclass, d = (u.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isRun = !1;
t.moveSpeed = 1e3;
t._time = -1;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {};
t.prototype.init = function() {
var e = this;
this.isRun = !1;
cc.game.on(r.default.E_Skill_Citie, function(t) {
e.isRun = !0;
}, this);
};
t.prototype.finish = function() {
c.upgradeMgr.curJingyan += 1;
cc.game.emit(r.default.E_GAME_LOGIC, {
type: r.default.E_Jingyan_Finish
});
if (!a.cocosz.isPause) {
l.gameMgr.playEffect("jingyan");
l.gameMgr.shakeEffect(0, 0, !0, s.VibrateType.Long);
}
cc.game.targetOff(this);
l.gameMgr && l.gameMgr.isValid && l.gameMgr.nodePut("jingyan", this.node);
};
t.prototype.update = function(e) {
0 == this.isRun ? ++this._time % 10 == 0 && this.activating() : this.followTo(e);
};
t.prototype.activating = function() {
if (c.upgradeMgr && c.upgradeMgr.isValid && l.gameMgr && l.gameMgr.playerTs && l.gameMgr.playerTs.isValid) {
var e = this.node.getPosition(), t = l.gameMgr.playerTs.node.getPosition();
e.sub(t).mag() < c.upgradeMgr.jingyanRange && (this.isRun = !0);
}
};
t.prototype.followTo = function(e) {
if (c.upgradeMgr && c.upgradeMgr.isValid && l.gameMgr && l.gameMgr.playerTs && l.gameMgr.playerTs.isValid) {
var t = this.node.getPosition(), i = l.gameMgr.playerTs.node.getPosition().subSelf(t), o = this.moveSpeed * e;
i.mag() < o ? this.finish() : this.node.setPosition(t.addSelf(i.normalizeSelf().mulSelf(o)));
}
};
return t = n([ h ], t);
}(cc.Component));
i.default = d;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/YZ_Constant": "YZ_Constant",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"./UpgradeMgr": "UpgradeMgr",
"./gameMgr": "gameMgr"
} ],
listItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a9fb9LTyU1DZathDbRN8oF1", "listItem");
var o = cc.Enum({
NONE: 0,
TOGGLE: 1,
SWITCH: 2
});
cc.Class({
editor: {
disallowMultiple: !1,
menu: "自定义组件/list Item",
executionOrder: -5001
},
extends: cc.Component,
properties: {
icon: {
default: null,
type: cc.Sprite
},
title: cc.Node,
selectedMode: {
default: o.NONE,
type: o,
tooltip: !1
},
selectedFlag: {
default: null,
type: cc.Node,
visible: function() {
var e = this.selectedMode > 0;
e || (this.selectedFlag = null);
return e;
}
},
selectedSpriteFrame: {
default: null,
type: cc.SpriteFrame,
visible: function() {
var e = this.selectedMode == o.SWITCH;
e || (this.selectedSpriteFrame = null);
return e;
}
},
adaptiveSize: {
default: !1,
tooltip: !1
},
_selected: !1,
selected: {
visible: !1,
get: function() {
return this._selected;
},
set: function(e) {
this._selected = e;
if (this.selectedFlag) switch (this.selectedMode) {
case o.TOGGLE:
this.selectedFlag.active = e;
break;

case o.SWITCH:
this.selectedFlag.spriteFrame = e ? this.selectedSpriteFrame : this._unselectedSpriteFrame;
}
}
},
_btnCom: null,
btnCom: {
visible: !1,
get: function() {
this._btnCom || (this._btnCom = this.node.getComponent(cc.Button));
return this._btnCom;
}
}
},
onLoad: function() {
if (this.title) {
var e = this.title.getComponent(cc.Label);
e || (e = this.title.getComponent(cc.RichText));
this.title = e;
}
if (this.selectedMode == o.SWITCH) {
var t = this.selectedFlag.getComponent(cc.Sprite);
this.selectedFlag = t;
this._unselectedSpriteFrame = t.spriteFrame;
}
},
onDestroy: function() {
this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);
},
_registerEvent: function() {
if (!this.eventReg) {
this.btnCom && this._list.selectedMode > 0 && this.btnCom.clickEvents.unshift(this.createEvt(this, "onClickThis"));
this.adaptiveSize && this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);
this.eventReg = !0;
}
},
_onSizeChange: function() {
this._list._onItemAdaptive(this.node);
},
createEvt: function(e, t, i) {
if (e.isValid) {
e.comName = e.comName || e.name.match(/\<(.*?)\>/g).pop().replace(/\<|>/g, "");
var o = new cc.Component.EventHandler();
o.target = i || e.node;
o.component = e.comName;
o.handler = t;
return o;
}
},
showAni: function(e, t, i) {
var o, n = this;
switch (e) {
case 0:
o = cc.tween(n.node).to(.2, {
scale: .7
}).by(.3, {
y: 2 * n.node.height
});
break;

case 1:
o = cc.tween(n.node).to(.2, {
scale: .7
}).by(.3, {
x: 2 * n.node.width
});
break;

case 2:
o = cc.tween(n.node).to(.2, {
scale: .7
}).by(.3, {
y: -2 * n.node.height
});
break;

case 3:
o = cc.tween(n.node).to(.2, {
scale: .7
}).by(.3, {
x: -2 * n.node.width
});
break;

default:
o = cc.tween(n.node).to(.3, {
scale: .1
});
}
(t || i) && o.call(function() {
if (i) {
n._list._delSingleItem(n.node);
for (var e = n._list.displayData.length - 1; e >= 0; e--) if (n._list.displayData[e].listId == n.node._listId) {
n._list.displayData.splice(e, 1);
break;
}
}
t();
});
o.start();
},
onClickThis: function() {
this._list.selectedId = this.node._listId;
}
});
cc._RF.pop();
}, {} ],
list: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "313fc+k+jdOLZ3Ltl2uf2kD", "list");
var o = cc.Enum({
NODE: 1,
PREFAB: 2
}), n = cc.Enum({
NORMAL: 1,
ADHERING: 2,
PAGE: 3
}), s = cc.Enum({
NONE: 0,
SINGLE: 1,
MULT: 2
});
e("listItem");
cc.Class({
extends: cc.Component,
editor: {
disallowMultiple: !1,
menu: "自定义组件/list",
requireComponent: cc.ScrollView,
executionOrder: -5e3
},
properties: {
templateType: {
default: o.NODE,
type: o
},
tmpNode: {
default: null,
type: cc.Node,
tooltip: !1,
visible: function() {
var e = this.templateType == o.NODE;
e || (this.tmpNode = null);
return e;
}
},
tmpPrefab: {
default: null,
type: cc.Prefab,
tooltip: !1,
visible: function() {
var e = this.templateType == o.PREFAB;
e || (this.tmpPrefab = null);
return e;
}
},
_slideMode: 1,
slideMode: {
type: n,
tooltip: !1,
get: function() {
return this._slideMode;
},
set: function(e) {
null != e && (this._slideMode = e);
}
},
pageDistance: {
default: .3,
type: cc.Float,
range: [ 0, 1, .1 ],
tooltip: !1,
slide: !0,
visible: function() {
return this._slideMode == n.PAGE;
}
},
pageChangeEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
var e = this._slideMode == n.PAGE;
e || (this.pageChangeEvent = null);
return e;
}
},
_virtual: !0,
virtual: {
tooltip: !1,
get: function() {
return this._virtual;
},
set: function(e) {
null != e && (this._virtual = e);
0 != this._numItems && this._onScrolling();
}
},
cyclic: {
default: !1,
tooltip: !1,
visible: function() {
var e = this.slideMode == n.NORMAL;
e || (this.cyclic = !1);
return e;
}
},
lackCenter: {
default: !1,
tooltip: !1,
visible: function() {
return this.virtual;
}
},
lackSlide: {
default: !1,
tooltip: !1,
visible: function() {
var e = this.virtual && !this.lackCenter;
e || (this.lackSlide = !1);
return e;
}
},
_updateRate: 0,
updateRate: {
type: cc.Integer,
range: [ 0, 6, 1 ],
tooltip: !1,
slide: !0,
get: function() {
return this._updateRate;
},
set: function(e) {
e >= 0 && e <= 6 && (this._updateRate = e);
}
},
frameByFrameRenderNum: {
default: 0,
type: cc.Integer,
range: [ 0, 12, 1 ],
tooltip: !1,
slide: !0
},
renderEvent: {
default: null,
type: Function,
tooltip: !1
},
selectedMode: {
default: s.NONE,
type: s,
tooltip: !1
},
repeatEventSingle: {
default: !1,
tooltip: !1,
visible: function() {
return this.selectedMode == s.SINGLE;
}
},
selectedEvent: {
default: null,
type: Function,
tooltip: !1,
visible: function() {
var e = this.selectedMode > 0;
e || (this.selectedEvent = null);
return e;
}
},
_selectedId: -1,
selectedId: {
visible: !1,
get: function() {
return this._selectedId;
},
set: function(e) {
var t, i = this;
switch (i.selectedMode) {
case s.SINGLE:
if (!i.repeatEventSingle && e == i._selectedId) return;
t = i.getItemBylistId(e);
i._selectedId >= 0 ? i._lastSelectedId = i._selectedId : i._lastSelectedId = null;
i._selectedId = e;
t && (t.listItem.selected = !0);
if (i._lastSelectedId >= 0 && i._lastSelectedId != i._selectedId) {
var o = i.getItemBylistId(i._lastSelectedId);
o && (o.listItem.selected = !1);
}
i.selectedEvent && i.selectedEvent(t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems);
break;

case s.MULT:
if (!(t = i.getItemBylistId(e))) return;
i._selectedId >= 0 && (i._lastSelectedId = i._selectedId);
i._selectedId = e;
var n = !t.listItem.selected;
t.listItem.selected = n;
var a = i.multSelected.indexOf(e);
n && a < 0 ? i.multSelected.push(e) : !n && a >= 0 && i.multSelected.splice(a, 1);
i.selectedEvent && i.selectedEvent(t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems);
}
}
},
_numItems: {
default: 0,
serializable: !1
},
numItems: {
visible: !1,
get: function() {
return this._actualNumItems;
},
set: function(e) {
var t = this;
if (t.checkInited()) if (null == e || e < 0) cc.error("numItems set the wrong::", e); else {
t._actualNumItems = t._numItems = e;
t._forceUpdate = !0;
if (t._virtual) {
t._resizeContent();
t.cyclic && (t._numItems = t._cyclicNum * t._numItems);
t._onScrolling();
t.frameByFrameRenderNum || t.slideMode != n.PAGE || (t.curPageNum = t.nearestlistId);
} else {
if (t.cyclic) {
t._resizeContent();
t._numItems = t._cyclicNum * t._numItems;
}
var i = t.content.getComponent(cc.Layout);
i && (i.enabled = !0);
t._delRedundantItem();
t.firstlistId = 0;
if (t.frameByFrameRenderNum > 0) {
for (var o = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum, s = 0; s < o; s++) t._createOrUpdateItem2(s);
if (t.frameByFrameRenderNum < t._numItems) {
t._updateCounter = t.frameByFrameRenderNum;
t._updateDone = !1;
}
} else {
for (var a = 0; a < t._numItems; a++) t._createOrUpdateItem2(a);
t.displayItemNum = t._numItems;
}
}
}
}
}
},
onLoad: function() {
this._init();
},
onDestroy: function() {
var e = this;
cc.isValid(e._itemTmp) && e._itemTmp.destroy();
cc.isValid(e.tmpNode) && e.tmpNode.destroy();
e._pool && e._pool.clear();
},
onEnable: function() {
this._registerEvent();
this._init();
if (this._aniDelRuning) {
this._aniDelRuning = !1;
if (this._aniDelItem) {
if (this._aniDelBeforePos) {
this._aniDelItem.position = this._aniDelBeforePos;
delete this._aniDelBeforePos;
}
if (this._aniDelBeforeScale) {
this._aniDelItem.scale = this._aniDelBeforeScale;
delete this._aniDelBeforeScale;
}
delete this._aniDelItem;
}
if (this._aniDelCB) {
this._aniDelCB();
delete this._aniDelCB;
}
}
},
onDisable: function() {
this._unregisterEvent();
},
_registerEvent: function() {
var e = this;
e.node.on(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.on("touch-up", e._onTouchUp, e, !0);
e.node.on(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.on("scroll-began", e._onScrollBegan, e, !0);
e.node.on("scroll-ended", e._onScrollEnded, e, !0);
e.node.on("scrolling", e._onScrolling, e, !0);
e.node.on(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
},
_unregisterEvent: function() {
var e = this;
e.node.off(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.off("touch-up", e._onTouchUp, e, !0);
e.node.off(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.off("scroll-began", e._onScrollBegan, e, !0);
e.node.off("scroll-ended", e._onScrollEnded, e, !0);
e.node.off("scrolling", e._onScrolling, e, !0);
e.node.off(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
},
_init: function() {
var e = this;
if (!e._inited) {
e._scrollView = e.node.getComponent(cc.ScrollView);
e.content = e._scrollView.content;
if (e.content) {
e._layout = e.content.getComponent(cc.Layout);
e._align = e._layout.type;
e._resizeMode = e._layout.resizeMode;
e._startAxis = e._layout.startAxis;
e._topGap = e._layout.paddingTop;
e._rightGap = e._layout.paddingRight;
e._bottomGap = e._layout.paddingBottom;
e._leftGap = e._layout.paddingLeft;
e._columnGap = e._layout.spacingX;
e._lineGap = e._layout.spacingY;
e._colLineNum;
e._verticalDir = e._layout.verticalDirection;
e._horizontalDir = e._layout.horizontalDirection;
e.setTemplateItem(cc.instantiate(e.templateType == o.PREFAB ? e.tmpPrefab : e.tmpNode));
if (e._slideMode == n.ADHERING || e._slideMode == n.PAGE) {
e._scrollView.inertia = !1;
e._scrollView._onMouseWheel = function() {};
}
e.virtual || (e.lackCenter = !1);
e._lastDisplayData = [];
e.displayData = [];
e._pool = new cc.NodePool();
e._forceUpdate = !1;
e._updateCounter = 0;
e._updateDone = !0;
e.curPageNum = 0;
if (e.cyclic) {
e._scrollView._processAutoScrolling = this._processAutoScrolling.bind(e);
e._scrollView._startBounceBackIfNeeded = function() {
return !1;
};
}
switch (e._align) {
case cc.Layout.Type.HORIZONTAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
break;

case cc.Layout.Type.VERTICAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.Type.GRID:
switch (e._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.AxisDirection.VERTICAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
}
}
e.content.removeAllChildren();
e._inited = !0;
} else cc.error(e.node.name + "'s cc.ScrollView unset content!");
}
},
_processAutoScrolling: function(e) {
this._scrollView._autoScrollAccumulatedTime += 1 * e;
var t = Math.min(1, this._scrollView._autoScrollAccumulatedTime / this._scrollView._autoScrollTotalTime);
if (this._scrollView._autoScrollAttenuate) {
var i = t - 1;
t = i * i * i * i * i + 1;
}
var o = this._scrollView._autoScrollStartPosition.add(this._scrollView._autoScrollTargetDelta.mul(t)), n = this._scrollView.getScrollEndedEventTiming(), s = Math.abs(t - 1) <= n;
if (Math.abs(t - 1) <= this._scrollView.getScrollEndedEventTiming() && !this._scrollView._isScrollEndedWithThresholdEventFired) {
this._scrollView._dispatchEvent("scroll-ended-with-threshold");
this._scrollView._isScrollEndedWithThresholdEventFired = !0;
}
s && (this._scrollView._autoScrolling = !1);
var a = o.sub(this._scrollView.getContentPosition());
this._scrollView._moveContent(this._scrollView._clampDelta(a), s);
this._scrollView._dispatchEvent("scrolling");
if (!this._scrollView._autoScrolling) {
this._scrollView._isBouncing = !1;
this._scrollView._scrolling = !1;
this._scrollView._dispatchEvent("scroll-ended");
}
},
setTemplateItem: function(e) {
if (e) {
var t = this;
t._itemTmp = e;
t._resizeMode == cc.Layout.ResizeMode.CHILDREN ? t._itemSize = t._layout.cellSize : t._itemSize = new cc.size(e.width, e.height);
var i = e.getComponent("listItem"), o = !1;
i || (o = !0);
o && (t.selectedMode = s.NONE);
(i = e.getComponent(cc.Widget)) && i.enabled && (t._needUpdateWidget = !0);
t.selectedMode == s.MULT && (t.multSelected = []);
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
t._colLineNum = 1;
t._sizeType = !1;
break;

case cc.Layout.Type.VERTICAL:
t._colLineNum = 1;
t._sizeType = !0;
break;

case cc.Layout.Type.GRID:
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var n = t.content.width - t._leftGap - t._rightGap;
t._colLineNum = Math.floor((n + t._columnGap) / (t._itemSize.width + t._columnGap));
t._sizeType = !0;
break;

case cc.Layout.AxisDirection.VERTICAL:
var a = t.content.height - t._topGap - t._bottomGap;
t._colLineNum = Math.floor((a + t._lineGap) / (t._itemSize.height + t._lineGap));
t._sizeType = !1;
}
}
}
},
checkInited: function(e) {
e = null == e || e;
if (!this._inited) {
e && cc.error("list initialization not completed!");
return !1;
}
return !0;
},
_resizeContent: function() {
var e, t = this;
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
if (t._customSize) {
var i = t._getFixedSize();
e = t._leftGap + i.val + t._itemSize.width * (t._numItems - i.count) + t._columnGap * (t._numItems - 1) + t._rightGap;
} else e = t._leftGap + t._itemSize.width * t._numItems + t._columnGap * (t._numItems - 1) + t._rightGap;
break;

case cc.Layout.Type.VERTICAL:
if (t._customSize) {
var o = t._getFixedSize();
e = t._topGap + o.val + t._itemSize.height * (t._numItems - o.count) + t._lineGap * (t._numItems - 1) + t._bottomGap;
} else e = t._topGap + t._itemSize.height * t._numItems + t._lineGap * (t._numItems - 1) + t._bottomGap;
break;

case cc.Layout.Type.GRID:
t.lackCenter && (t.lackCenter = !1);
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var n = Math.ceil(t._numItems / t._colLineNum);
e = t._topGap + t._itemSize.height * n + t._lineGap * (n - 1) + t._bottomGap;
break;

case cc.Layout.AxisDirection.VERTICAL:
var s = Math.ceil(t._numItems / t._colLineNum);
e = t._leftGap + t._itemSize.width * s + t._columnGap * (s - 1) + t._rightGap;
}
}
var a = t.content.getComponent(cc.Layout);
a && (a.enabled = !1);
t._allItemSize = e;
t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? t._topGap + t._bottomGap : t._leftGap + t._rightGap);
if (t.cyclic) {
var r = t._sizeType ? t.node.height : t.node.width;
t._cyclicPos1 = 0;
r -= t._cyclicPos1;
t._cyclicNum = Math.ceil(r / t._allItemSizeNoEdge) + 1;
var l = t._sizeType ? t._lineGap : t._columnGap;
t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + l;
t._cyclicAllItemSize = t._allItemSize + t._allItemSizeNoEdge * (t._cyclicNum - 1) + l * (t._cyclicNum - 1);
t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;
t._cycilcAllItemSizeNoEdge += l * (t._cyclicNum - 1);
}
t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t.node.height : t.node.width);
var c = t._lack && t.lackCenter || !t.lackSlide ? .1 : 0, u = t._lack ? (t._sizeType ? t.node.height : t.node.width) - c : t.cyclic ? t._cyclicAllItemSize : t._allItemSize;
u < 0 && (u = 0);
t._sizeType ? t.content.height = u : t.content.width = u;
},
_onScrolling: function(e) {
null == this.frameCount && (this.frameCount = this._updateRate);
if (!this._forceUpdate && e && "scroll-ended" != e.type && this.frameCount > 0) this.frameCount--; else {
this.frameCount = this._updateRate;
if (!this._aniDelRuning) {
if (this.cyclic) {
var t = this.content.getPosition();
t = this._sizeType ? t.y : t.x;
var i = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap), o = this._sizeType ? cc.v2(0, i) : cc.v2(i, 0);
switch (this._alignCalcType) {
case 1:
if (t > -this._cyclicPos1) {
this.content.x = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(o));
} else if (t < -this._cyclicPos2) {
this.content.x = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(o));
}
break;

case 2:
if (t < this._cyclicPos1) {
this.content.x = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(o));
} else if (t > this._cyclicPos2) {
this.content.x = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(o));
}
break;

case 3:
if (t < this._cyclicPos1) {
this.content.y = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(o));
} else if (t > this._cyclicPos2) {
this.content.y = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(o));
}
break;

case 4:
if (t > -this._cyclicPos1) {
this.content.y = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(o));
} else if (t < -this._cyclicPos2) {
this.content.y = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(o));
}
}
}
this._calcViewPos();
var n, s, a, r;
if (this._sizeType) {
n = this.viewTop;
a = this.viewBottom;
} else {
s = this.viewRight;
r = this.viewLeft;
}
if (this._virtual) {
this.displayData = [];
var l, c = 0, u = this._numItems - 1;
if (this._customSize) for (var h = !1; c <= u && !h; c++) {
l = this._calcItemPos(c);
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
l.right >= r && l.left <= s ? this.displayData.push(l) : 0 != c && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.VERTICAL:
l.bottom <= n && l.top >= a ? this.displayData.push(l) : 0 != c && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.GRID:
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
l.bottom <= n && l.top >= a ? this.displayData.push(l) : 0 != c && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.AxisDirection.VERTICAL:
l.right >= r && l.left <= s ? this.displayData.push(l) : 0 != c && this.displayData.length > 0 && (h = !0);
}
}
} else {
var d = this._itemSize.width + this._columnGap, f = this._itemSize.height + this._lineGap;
switch (this._alignCalcType) {
case 1:
c = (r - this._leftGap) / d;
u = (s - this._leftGap) / d;
break;

case 2:
c = (-s - this._rightGap) / d;
u = (-r - this._rightGap) / d;
break;

case 3:
c = (-n - this._topGap) / f;
u = (-a - this._topGap) / f;
break;

case 4:
c = (a - this._bottomGap) / f;
u = (n - this._bottomGap) / f;
}
c = Math.floor(c) * this._colLineNum;
u = Math.ceil(u) * this._colLineNum;
u--;
c < 0 && (c = 0);
u >= this._numItems && (u = this._numItems - 1);
for (;c <= u; c++) this.displayData.push(this._calcItemPos(c));
}
this._delRedundantItem();
if (this.displayData.length <= 0 || !this._numItems) {
this._lastDisplayData = [];
return;
}
this.firstlistId = this.displayData[0].id;
this.displayItemNum = this.displayData.length;
var _ = this._lastDisplayData.length, p = this.displayItemNum != _;
if (p) {
this.frameByFrameRenderNum > 0 && this._lastDisplayData.sort(function(e, t) {
return e - t;
});
p = this.firstlistId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[_ - 1];
}
if (this._forceUpdate || p) if (this.frameByFrameRenderNum > 0) if (this._numItems > 0) {
this._updateDone ? this._updateCounter = 0 : this._doneAfterUpdate = !0;
this._updateDone = !1;
} else {
this._updateCounter = 0;
this._updateDone = !0;
} else {
this._lastDisplayData = [];
for (var g = 0; g < this.displayItemNum; g++) this._createOrUpdateItem(this.displayData[g]);
this._forceUpdate = !1;
}
this._calcNearestItem();
}
}
}
},
_calcViewPos: function() {
var e = this.content.getPosition();
switch (this._alignCalcType) {
case 1:
this.elasticLeft = e.x > 0 ? e.x : 0;
this.viewLeft = (e.x < 0 ? -e.x : 0) - this.elasticLeft;
this.viewRight = this.viewLeft + this.node.width;
this.elasticRight = this.viewRight > this.content.width ? Math.abs(this.viewRight - this.content.width) : 0;
this.viewRight += this.elasticRight;
break;

case 2:
this.elasticRight = e.x < 0 ? -e.x : 0;
this.viewRight = (e.x > 0 ? -e.x : 0) + this.elasticRight;
this.viewLeft = this.viewRight - this.node.width;
this.elasticLeft = this.viewLeft < -this.content.width ? Math.abs(this.viewLeft + this.content.width) : 0;
this.viewLeft -= this.elasticLeft;
break;

case 3:
this.elasticTop = e.y < 0 ? Math.abs(e.y) : 0;
this.viewTop = (e.y > 0 ? -e.y : 0) + this.elasticTop;
this.viewBottom = this.viewTop - this.node.height;
this.elasticBottom = this.viewBottom < -this.content.height ? Math.abs(this.viewBottom + this.content.height) : 0;
this.viewBottom += this.elasticBottom;
break;

case 4:
this.elasticBottom = e.y > 0 ? Math.abs(e.y) : 0;
this.viewBottom = (e.y < 0 ? -e.y : 0) - this.elasticBottom;
this.viewTop = this.viewBottom + this.node.height;
this.elasticTop = this.viewTop > this.content.height ? Math.abs(this.viewTop - this.content.height) : 0;
this.viewTop -= this.elasticTop;
}
},
_calcItemPos: function(e) {
var t, i, o, n, s, a, r, l;
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
if (this._customSize) {
var c = this._getFixedSize(e);
s = this._leftGap + (this._itemSize.width + this._columnGap) * (e - c.count) + (c.val + this._columnGap * c.count);
var u = this._customSize[e];
t = u > 0 ? u : this._itemSize.width;
} else {
s = this._leftGap + (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
if (this.lackCenter) {
s -= this._leftGap;
s += this.content.width / 2 - this._allItemSizeNoEdge / 2;
}
return {
id: e,
left: s,
right: a = s + t,
x: s + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
if (this._customSize) {
var h = this._getFixedSize(e);
a = -this._rightGap - (this._itemSize.width + this._columnGap) * (e - h.count) - (h.val + this._columnGap * h.count);
var d = this._customSize[e];
t = d > 0 ? d : this._itemSize.width;
} else {
a = -this._rightGap - (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
if (this.lackCenter) {
a += this._rightGap;
a -= this.content.width / 2 - this._allItemSizeNoEdge / 2;
}
return {
id: e,
right: a,
left: s = a - t,
x: s + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};
}
break;

case cc.Layout.Type.VERTICAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
if (this._customSize) {
var f = this._getFixedSize(e);
o = -this._topGap - (this._itemSize.height + this._lineGap) * (e - f.count) - (f.val + this._lineGap * f.count);
var _ = this._customSize[e];
n = o - (i = _ > 0 ? _ : this._itemSize.height);
} else {
o = -this._topGap - (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
if (this.lackCenter) {
o += this._topGap;
o -= this.content.height / 2 - this._allItemSizeNoEdge / 2;
}
return {
id: e,
top: o,
bottom: n = o - i,
x: this._itemTmp.x,
y: n + this._itemTmp.anchorY * i
};

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
if (this._customSize) {
var p = this._getFixedSize(e);
n = this._bottomGap + (this._itemSize.height + this._lineGap) * (e - p.count) + (p.val + this._lineGap * p.count);
var g = this._customSize[e];
i = g > 0 ? g : this._itemSize.height;
} else {
n = this._bottomGap + (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
if (this.lackCenter) {
n -= this._bottomGap;
n += this.content.height / 2 - this._allItemSizeNoEdge / 2;
}
return {
id: e,
top: o = n + i,
bottom: n,
x: this._itemTmp.x,
y: n + this._itemTmp.anchorY * i
};
}

case cc.Layout.Type.GRID:
var m = Math.floor(e / this._colLineNum);
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
l = (n = (o = -this._topGap - (this._itemSize.height + this._lineGap) * m) - this._itemSize.height) + this._itemTmp.anchorY * this._itemSize.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
o = (n = this._bottomGap + (this._itemSize.height + this._lineGap) * m) + this._itemSize.height;
l = n + this._itemTmp.anchorY * this._itemSize.height;
}
r = this._leftGap + e % this._colLineNum * (this._itemSize.width + this._columnGap);
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
r += this._itemTmp.anchorX * this._itemSize.width;
r -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
r += (1 - this._itemTmp.anchorX) * this._itemSize.width;
r -= (1 - this.content.anchorX) * this.content.width;
r *= -1;
}
return {
id: e,
top: o,
bottom: n,
x: r,
y: l
};

case cc.Layout.AxisDirection.VERTICAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
a = (s = this._leftGap + (this._itemSize.width + this._columnGap) * m) + this._itemSize.width;
r = s + this._itemTmp.anchorX * this._itemSize.width;
r -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
r = (s = (a = -this._rightGap - (this._itemSize.width + this._columnGap) * m) - this._itemSize.width) + this._itemTmp.anchorX * this._itemSize.width;
r += (1 - this.content.anchorX) * this.content.width;
}
l = -this._topGap - e % this._colLineNum * (this._itemSize.height + this._lineGap);
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
l -= (1 - this._itemTmp.anchorY) * this._itemSize.height;
l += (1 - this.content.anchorY) * this.content.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
l -= this._itemTmp.anchorY * this._itemSize.height;
l += this.content.anchorY * this.content.height;
l *= -1;
}
return {
id: e,
left: s,
right: a,
x: r,
y: l
};
}
}
},
_calcExistItemPos: function(e) {
var t = this.getItemBylistId(e);
if (!t) return null;
var i = {
id: e,
x: t.x,
y: t.y
};
if (this._sizeType) {
i.top = t.y + t.height * (1 - t.anchorY);
i.bottom = t.y - t.height * t.anchorY;
} else {
i.left = t.x - t.width * t.anchorX;
i.right = t.x + t.width * (1 - t.anchorX);
}
return i;
},
getItemPos: function(e) {
return this._virtual ? this._calcItemPos(e) : this.frameByFrameRenderNum ? this._calcItemPos(e) : this._calcExistItemPos(e);
},
_getFixedSize: function(e) {
if (!this._customSize) return null;
null == e && (e = this._numItems);
var t = 0, i = 0;
for (var o in this._customSize) if (parseInt(o) < e) {
t += this._customSize[o];
i++;
}
return {
val: t,
count: i
};
},
_onScrollBegan: function() {
this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;
},
_onScrollEnded: function() {
var e = this;
e.curScrollistouch = !1;
if (null != e.scrollTolistId) {
var t = e.getItemBylistId(e.scrollTolistId);
e.scrollTolistId = null;
t && cc.tween(t).to(.1, {
scale: 1.06
}).to(.1, {
scale: 1
}).start();
}
e._onScrolling();
e._slideMode != n.ADHERING || e.adhering ? e._slideMode == n.PAGE && (null != e._beganPos && e.curScrollistouch ? this._pageAdhere() : e.adhere()) : e.adhere();
},
_onTouchStart: function(e, t) {
if (!this._scrollView._hasNestedViewGroup(e, t)) {
this.curScrollistouch = !0;
if (!(e.eventPhase === cc.Event.AT_TARGET && e.target === this.node)) {
for (var i = e.target; null == i._listId && i.parent; ) i = i.parent;
this._scrollItem = null != i._listId ? i : e.target;
}
}
},
_onTouchUp: function() {
var e = this;
e._scrollPos = null;
if (e._slideMode == n.ADHERING) {
e.adhering && (e._adheringBarrier = !0);
e.adhere();
} else e._slideMode == n.PAGE && (null != e._beganPos ? e._pageAdhere() : e.adhere());
this._scrollItem = null;
},
_onTouchCancelled: function(e, t) {
var i = this;
if (!i._scrollView._hasNestedViewGroup(e, t) && !e.simulate) {
i._scrollPos = null;
if (i._slideMode == n.ADHERING) {
i.adhering && (i._adheringBarrier = !0);
i.adhere();
} else i._slideMode == n.PAGE && (null != i._beganPos ? i._pageAdhere() : i.adhere());
this._scrollItem = null;
}
},
_onSizeChanged: function() {
this.checkInited(!1) && this._onScrolling();
},
_onItemAdaptive: function(e) {
if (!this._sizeType && e.width != this._itemSize.width || this._sizeType && e.height != this._itemSize.height) {
this._customSize || (this._customSize = {});
var t = this._sizeType ? e.height : e.width;
if (this._customSize[e._listId] != t) {
this._customSize[e._listId] = t;
this._resizeContent();
this.updateAll();
if (null != this._scrollTolistId) {
this._scrollPos = null;
this.unschedule(this._scrollToSo);
this.scrollTo(this._scrollTolistId, Math.max(0, this._scrollToEndTime - new Date().getTime() / 1e3));
}
}
}
},
_pageAdhere: function() {
var e = this;
if (e.cyclic || !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
var t = e._sizeType ? e.viewTop : e.viewLeft, i = (e._sizeType ? e.node.height : e.node.width) * e.pageDistance;
if (Math.abs(e._beganPos - t) > i) {
switch (e._alignCalcType) {
case 1:
case 4:
e._beganPos > t ? e.prePage(.5) : e.nextPage(.5);
break;

case 2:
case 3:
e._beganPos < t ? e.prePage(.5) : e.nextPage(.5);
}
} else e.elasticTop <= 0 && e.elasticRight <= 0 && e.elasticBottom <= 0 && e.elasticLeft <= 0 && e.adhere();
e._beganPos = null;
}
},
adhere: function() {
var e = this;
if (e.checkInited() && !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
e.adhering = !0;
e._calcNearestItem();
var t = (e._sizeType ? e._topGap : e._leftGap) / (e._sizeType ? e.node.height : e.node.width);
e.scrollTo(e.nearestlistId, .7, t);
}
},
update: function() {
if (!(this.frameByFrameRenderNum <= 0 || this._updateDone)) if (this._virtual) {
for (var e = this._updateCounter + this.frameByFrameRenderNum > this.displayItemNum ? this.displayItemNum : this._updateCounter + this.frameByFrameRenderNum, t = this._updateCounter; t < e; t++) {
var i = this.displayData[t];
i && this._createOrUpdateItem(i);
}
if (this._updateCounter >= this.displayItemNum - 1) if (this._doneAfterUpdate) {
this._updateCounter = 0;
this._updateDone = !1;
this._doneAfterUpdate = !1;
} else {
this._updateDone = !0;
this._delRedundantItem();
this._forceUpdate = !1;
this._calcNearestItem();
this.slideMode == n.PAGE && (this.curPageNum = this.nearestlistId);
} else this._updateCounter += this.frameByFrameRenderNum;
} else if (this._updateCounter < this._numItems) {
for (var o = this._updateCounter + this.frameByFrameRenderNum > this._numItems ? this._numItems : this._updateCounter + this.frameByFrameRenderNum, s = this._updateCounter; s < o; s++) this._createOrUpdateItem2(s);
this._updateCounter += this.frameByFrameRenderNum;
} else {
this._updateDone = !0;
this._calcNearestItem();
this.slideMode == n.PAGE && (this.curPageNum = this.nearestlistId);
}
},
_createOrUpdateItem: function(e) {
var t = this.getItemBylistId(e.id);
if (t) {
if (this._forceUpdate && this.renderEvent) {
t.setPosition(new cc.v2(e.x, e.y));
this._resetItemSize(t);
this.renderEvent && this.renderEvent(t, e.id % this._actualNumItems);
}
} else {
var i = this._pool.size() > 0;
t = i ? this._pool.get() : cc.instantiate(this._itemTmp);
if (!i || !cc.isValid(t)) {
t = cc.instantiate(this._itemTmp);
i = !1;
}
if (t._listId != e.id) {
t._listId = e.id;
t.setContentSize(this._itemSize);
}
t.setPosition(new cc.v2(e.x, e.y));
this._resetItemSize(t);
this.content.addChild(t);
if (i && this._needUpdateWidget) {
var o = t.getComponent(cc.Widget);
o && o.updateAlignment();
}
t.setSiblingIndex(this.content.childrenCount - 1);
var n = t.getComponent("listItem");
t.listItem = n;
if (n) {
n._list = this;
n._registerEvent();
}
this.renderEvent && this.renderEvent(t, e.id % this._actualNumItems);
}
this._resetItemSize(t);
this._updatelistItem(t.listItem);
this._lastDisplayData.indexOf(e.id) < 0 && this._lastDisplayData.push(e.id);
},
_createOrUpdateItem2: function(e) {
var t = this.content.children[e];
if (t) {
if (this._forceUpdate && this.renderEvent) {
t._listId = e;
this.renderEvent && this.renderEvent(t, e % this._actualNumItems);
}
} else {
(t = cc.instantiate(this._itemTmp))._listId = e;
this.content.addChild(t);
var i = t.getComponent("listItem");
t.listItem = i;
if (i) {
i._list = this;
i._registerEvent();
}
this.renderEvent && this.renderEvent(t, e % this._actualNumItems);
}
this._updatelistItem(t.listItem);
this._lastDisplayData.indexOf(e) < 0 && this._lastDisplayData.push(e);
},
_updatelistItem: function(e) {
if (e && this.selectedMode > s.NONE) switch (this.selectedMode) {
case s.SINGLE:
e.selected = this.selectedId == e.node._listId;
break;

case s.MULT:
e.selected = this.multSelected.indexOf(e.node._listId) >= 0;
}
},
_resetItemSize: function(e) {},
_updateItemPos: function(e) {
var t = isNaN(e) ? e : this.getItemBylistId(e), i = this.getItemPos(t._listId);
t.setPosition(i.x, i.y);
},
setMultSelected: function(e, t) {
var i = this;
if (i.checkInited()) {
Array.isArray(e) || (e = [ e ]);
if (null == t) i.multSelected = e; else {
var o, n;
if (t) for (var s = e.length - 1; s >= 0; s--) {
o = e[s];
(n = i.multSelected.indexOf(o)) < 0 && i.multSelected.push(o);
} else for (var a = e.length - 1; a >= 0; a--) {
o = e[a];
(n = i.multSelected.indexOf(o)) >= 0 && i.multSelected.splice(n, 1);
}
}
i._forceUpdate = !0;
i._onScrolling();
}
},
getMultSelected: function() {
return this.multSelected;
},
hasMultSelected: function(e) {
return this.multSelected && this.multSelected.indexOf(e) >= 0;
},
updateItem: function(e) {
if (this.checkInited()) {
Array.isArray(e) || (e = [ e ]);
for (var t = 0, i = e.length; t < i; t++) {
var o = e[t], n = this.getItemBylistId(o);
n && this.renderEvent && this.renderEvent(n, o % this._actualNumItems);
}
}
},
updateAll: function() {
this.checkInited() && (this.numItems = this.numItems);
},
getItemBylistId: function(e) {
if (this.content) for (var t = this.content.childrenCount - 1; t >= 0; t--) if (this.content.children[t]._listId == e) return this.content.children[t];
},
_getOutsideItem: function() {
for (var e, t = [], i = this.content.childrenCount - 1; i >= 0; i--) {
e = this.content.children[i];
this.displayData.find(function(t) {
return t.id == e._listId;
}) || t.push(e);
}
return t;
},
_delRedundantItem: function() {
if (this._virtual) for (var e = this._getOutsideItem(), t = e.length - 1; t >= 0; t--) {
var i = e[t];
if (!this._scrollItem || i._listId != this._scrollItem._listId) {
i.isCached = !0;
this._pool.put(i);
for (var o = this._lastDisplayData.length - 1; o >= 0; o--) if (this._lastDisplayData[o] == i._listId) {
this._lastDisplayData.splice(o, 1);
break;
}
}
} else for (;this.content.childrenCount > this._numItems; ) this._delSingleItem(this.content.children[this.content.childrenCount - 1]);
},
_delSingleItem: function(e) {
e.removeFromParent();
e.destroy && e.destroy();
e = null;
},
aniDelItem: function(e, t, i) {
var o = this;
if (!o.checkInited() || o.cyclic || !o._virtual) return cc.error("This function is not allowed to be called!");
if (!t) return cc.error("CallFunc are not allowed to be NULL, You need to delete the corresponding index in the data array in the CallFunc!");
if (o._aniDelRuning) return cc.warn("Please wait for the current deletion to finish!");
var n = o.getItemBylistId(e);
if (n) {
o._aniDelRuning = !0;
o._aniDelCB = t;
o._aniDelItem = n;
o._aniDelBeforePos = n.position;
o._aniDelBeforeScale = n.scale;
var a = o.displayData[o.displayData.length - 1].id, r = n.listItem.selected;
n.listItem.showAni(i, function() {
var i;
a < o._numItems - 2 && (i = a + 1);
if (null != i) {
var l = o._calcItemPos(i);
o.displayData.push(l);
o._virtual ? o._createOrUpdateItem(l) : o._createOrUpdateItem2(i);
} else o._numItems--;
if (o.selectedMode == s.SINGLE) r ? o._selectedId = -1 : o._selectedId - 1 >= 0 && o._selectedId--; else if (o.selectedMode == s.MULT && o.multSelected.length) {
var c = o.multSelected.indexOf(e);
c >= 0 && o.multSelected.splice(c, 1);
for (var u = o.multSelected.length - 1; u >= 0; u--) {
o.multSelected[u] >= e && o.multSelected[u]--;
}
}
if (o._customSize) {
o._customSize[e] && delete o._customSize[e];
var h, d = {};
for (var f in o._customSize) {
h = o._customSize[f];
d[(f = parseInt(f)) - (f >= e ? 1 : 0)] = h;
}
o._customSize = d;
}
for (var _, p, g = null != i ? i : a; g >= e + 1; g--) if (n = o.getItemBylistId(g)) {
var m = o._calcItemPos(g - 1);
_ = cc.tween(n).to(.2333, {
position: cc.v2(m.x, m.y)
});
if (g <= e + 1) {
p = !0;
_.call(function() {
o._aniDelRuning = !1;
t(e);
delete o._aniDelCB;
});
}
_.start();
}
if (!p) {
o._aniDelRuning = !1;
t(e);
delete o._aniDelCB;
}
}, !0);
} else t(e);
},
scrollTo: function(e, t, i, o) {
var n = this;
if (n.checkInited()) {
null == t ? t = .5 : t < 0 && (t = 0);
e < 0 ? e = 0 : e >= n._numItems && (e = n._numItems - 1);
!n._virtual && n._layout && n._layout.enabled && n._layout.updateLayout();
var s, a, r = n.getItemPos(e);
if (!r) return !1;
switch (n._alignCalcType) {
case 1:
s = r.left;
s -= null != i ? n.node.width * i : n._leftGap;
r = new cc.v2(s, 0);
break;

case 2:
s = r.right - n.node.width;
s += null != i ? n.node.width * i : n._rightGap;
r = new cc.v2(s + n.content.width, 0);
break;

case 3:
a = r.top;
a += null != i ? n.node.height * i : n._topGap;
r = new cc.v2(0, -a);
break;

case 4:
a = r.bottom + n.node.height;
a -= null != i ? n.node.height * i : n._bottomGap;
r = new cc.v2(0, -a + n.content.height);
}
var l = n.content.getPosition();
l = Math.abs(n._sizeType ? l.y : l.x);
var c = n._sizeType ? r.y : r.x;
if (Math.abs((null != n._scrollPos ? n._scrollPos : l) - c) > .5) {
n._scrollPos = c;
n._scrollTolistId = e;
n._scrollToEndTime = new Date().getTime() / 1e3 + t;
n._scrollView.scrollToOffset(r, t);
n._scrollToSo = n.scheduleOnce(function() {
n._adheringBarrier || (n.adhering = n._adheringBarrier = !1);
n._scrollPos = n._scrollTolistId = n._scrollToEndTime = n._scrollToSo = null;
if (o) {
var t = n.getItemBylistId(e);
t && cc.tween(t).to(.1, {
scale: 1.05
}).to(.1, {
scale: 1
}).start();
}
}, t + .1);
t <= 0 && n._onScrolling();
}
}
},
_calcNearestItem: function() {
var e, t, i, o, n, s, a = this;
a.nearestlistId = null;
a._virtual && a._calcViewPos();
i = a.viewTop;
o = a.viewRight;
n = a.viewBottom;
s = a.viewLeft;
for (var r = !1, l = 0; l < a.content.childrenCount && !r; l += a._colLineNum) if (e = this._virtual ? this.displayData[l] : this._calcExistItemPos(l)) {
t = this._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (this._alignCalcType) {
case 1:
if (e.right >= s) {
this.nearestlistId = e.id;
s > t && (this.nearestlistId += this._colLineNum);
r = !0;
}
break;

case 2:
if (e.left <= o) {
this.nearestlistId = e.id;
o < t && (this.nearestlistId += this._colLineNum);
r = !0;
}
break;

case 3:
if (e.bottom <= i) {
this.nearestlistId = e.id;
i < t && (this.nearestlistId += this._colLineNum);
r = !0;
}
break;

case 4:
if (e.top >= n) {
this.nearestlistId = e.id;
n > t && (this.nearestlistId += this._colLineNum);
r = !0;
}
}
}
if ((e = this._virtual ? this.displayData[this.displayItemNum - 1] : this._calcExistItemPos(this._numItems - 1)) && e.id == a._numItems - 1) {
t = a._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (a._alignCalcType) {
case 1:
o > t && (a.nearestlistId = e.id);
break;

case 2:
s < t && (a.nearestlistId = e.id);
break;

case 3:
n < t && (a.nearestlistId = e.id);
break;

case 4:
i > t && (a.nearestlistId = e.id);
}
}
},
prePage: function(e) {
if (this.checkInited()) {
null == e && (e = .5);
this.skipPage(this.curPageNum - 1, e);
}
},
nextPage: function(e) {
if (this.checkInited()) {
null == e && (e = .5);
this.skipPage(this.curPageNum + 1, e);
}
},
skipPage: function(e, t) {
var i = this;
if (i.checkInited()) {
if (i._slideMode != n.PAGE) return cc.error("This function is not allowed to be called, Must SlideMode = PAGE!");
if (!(e < 0 || e >= i._numItems) && i.curPageNum != e) {
i.curPageNum = e;
i.pageChangeEvent && cc.Component.EventHandler.emitEvents([ i.pageChangeEvent ], e);
i.scrollTo(e, t);
}
}
},
calcCustomSize: function(e) {
var t = this;
if (t.checkInited()) {
if (!t._itemTmp) return cc.error("Unset template item!");
if (!t.renderEvent) return cc.error("Unset Render-Event!");
t._customSize = {};
var i = cc.instantiate(t._itemTmp);
t.content.addChild(i);
for (var o = 0; o < e; o++) {
t.renderEvent(i, o);
i.height == t._itemSize.height && i.width == t._itemSize.width || (t._customSize[o] = t._sizeType ? i.height : i.width);
}
Object.keys(t._customSize).length || (t._customSize = null);
i.removeFromParent();
i.destroy && i.destroy();
return t._customSize;
}
}
});
cc._RF.pop();
}, {
listItem: "listItem"
} ],
mb: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bbc16OLUIxBPILLHZnxIsqr", "mb");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/CocosZ"), a = e("../Framework/Constant"), r = e("./gameMgr"), l = cc._decorator, c = l.ccclass, u = l.property, h = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.clip = null;
t._spAni = null;
t.time = -1;
t.isAtk = !1;
t.isHart = !1;
t.canChangeState = !0;
return t;
}
t.prototype.onLoad = function() {
this._spAni = this.node.getChildByName("ani").getComponent(sp.Skeleton);
};
t.prototype.start = function() {
this.node.zIndex = a.ZindexLayer.zindex_mb;
this._spAni.setAnimation(0, "daiji", !1);
};
t.prototype.update = function(e) {
if (!s.cocosz.isPause && r.gameMgr.isGameStart && !r.gameMgr.isWin && !r.gameMgr.isFail && ++this.time % 15 == 0) if (r.gameMgr && r.gameMgr.playerTs && 0 == r.gameMgr.playerTs.isDeath) {
var t = this.node.getPosition(), i = r.gameMgr.playerTs.node.getPosition(), o = t.subSelf(i).mag();
if (o < 400) {
this.atkStart();
o < 300 && this.atkEnemy();
} else this.atkEnd();
} else this.atkEnd();
};
t.prototype.atkEnemy = function() {
this.isHart && r.gameMgr && r.gameMgr.playerTs && r.gameMgr.playerTs.hart(1, null);
};
t.prototype.atkStart = function() {
var e = this;
if (this.canChangeState && 0 == this.isAtk) {
this.canChangeState = !1;
this.isAtk = !0;
this.node.stopAllActions();
cc.tween(this.node).call(function() {
e._spAni.setAnimation(0, "doudong", !0);
}).delay(.5).call(function() {
e.clip && e.clip.isValid && r.gameMgr.playClip(e.clip, e.node);
e._spAni.setAnimation(0, "zheng", !1);
e._spAni.addAnimation(0, "zheng2", !0);
e.isHart = !0;
}).delay(3).call(function() {
e.canChangeState = !0;
}).start();
}
};
t.prototype.atkEnd = function() {
if (this.canChangeState && 1 == this.isAtk) {
this.isAtk = !1;
this.isHart = !1;
this._spAni.setAnimation(0, "daiji", !1);
}
};
n([ u({
type: cc.AudioClip,
tooltip: "音效"
}) ], t.prototype, "clip", void 0);
return t = n([ c ], t);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"./gameMgr": "gameMgr"
} ],
md5: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0b965WRCqFIyY4NKEn02s5R", "md5");
var o = 0, n = 8;
function s(e) {
return p(a(_(e), e.length * n));
}
function a(e, t) {
e[t >> 5] |= 128 << t % 32;
e[14 + (t + 64 >>> 9 << 4)] = t;
for (var i = 1732584193, o = -271733879, n = -1732584194, s = 271733878, a = 0; a < e.length; a += 16) {
var r = i, f = o, _ = n, p = s;
o = h(o = h(o = h(o = h(o = u(o = u(o = u(o = u(o = c(o = c(o = c(o = c(o = l(o = l(o = l(o = l(o, n = l(n, s = l(s, i = l(i, o, n, s, e[a + 0], 7, -680876936), o, n, e[a + 1], 12, -389564586), i, o, e[a + 2], 17, 606105819), s, i, e[a + 3], 22, -1044525330), n = l(n, s = l(s, i = l(i, o, n, s, e[a + 4], 7, -176418897), o, n, e[a + 5], 12, 1200080426), i, o, e[a + 6], 17, -1473231341), s, i, e[a + 7], 22, -45705983), n = l(n, s = l(s, i = l(i, o, n, s, e[a + 8], 7, 1770035416), o, n, e[a + 9], 12, -1958414417), i, o, e[a + 10], 17, -42063), s, i, e[a + 11], 22, -1990404162), n = l(n, s = l(s, i = l(i, o, n, s, e[a + 12], 7, 1804603682), o, n, e[a + 13], 12, -40341101), i, o, e[a + 14], 17, -1502002290), s, i, e[a + 15], 22, 1236535329), n = c(n, s = c(s, i = c(i, o, n, s, e[a + 1], 5, -165796510), o, n, e[a + 6], 9, -1069501632), i, o, e[a + 11], 14, 643717713), s, i, e[a + 0], 20, -373897302), n = c(n, s = c(s, i = c(i, o, n, s, e[a + 5], 5, -701558691), o, n, e[a + 10], 9, 38016083), i, o, e[a + 15], 14, -660478335), s, i, e[a + 4], 20, -405537848), n = c(n, s = c(s, i = c(i, o, n, s, e[a + 9], 5, 568446438), o, n, e[a + 14], 9, -1019803690), i, o, e[a + 3], 14, -187363961), s, i, e[a + 8], 20, 1163531501), n = c(n, s = c(s, i = c(i, o, n, s, e[a + 13], 5, -1444681467), o, n, e[a + 2], 9, -51403784), i, o, e[a + 7], 14, 1735328473), s, i, e[a + 12], 20, -1926607734), n = u(n, s = u(s, i = u(i, o, n, s, e[a + 5], 4, -378558), o, n, e[a + 8], 11, -2022574463), i, o, e[a + 11], 16, 1839030562), s, i, e[a + 14], 23, -35309556), n = u(n, s = u(s, i = u(i, o, n, s, e[a + 1], 4, -1530992060), o, n, e[a + 4], 11, 1272893353), i, o, e[a + 7], 16, -155497632), s, i, e[a + 10], 23, -1094730640), n = u(n, s = u(s, i = u(i, o, n, s, e[a + 13], 4, 681279174), o, n, e[a + 0], 11, -358537222), i, o, e[a + 3], 16, -722521979), s, i, e[a + 6], 23, 76029189), n = u(n, s = u(s, i = u(i, o, n, s, e[a + 9], 4, -640364487), o, n, e[a + 12], 11, -421815835), i, o, e[a + 15], 16, 530742520), s, i, e[a + 2], 23, -995338651), n = h(n, s = h(s, i = h(i, o, n, s, e[a + 0], 6, -198630844), o, n, e[a + 7], 10, 1126891415), i, o, e[a + 14], 15, -1416354905), s, i, e[a + 5], 21, -57434055), n = h(n, s = h(s, i = h(i, o, n, s, e[a + 12], 6, 1700485571), o, n, e[a + 3], 10, -1894986606), i, o, e[a + 10], 15, -1051523), s, i, e[a + 1], 21, -2054922799), n = h(n, s = h(s, i = h(i, o, n, s, e[a + 8], 6, 1873313359), o, n, e[a + 15], 10, -30611744), i, o, e[a + 6], 15, -1560198380), s, i, e[a + 13], 21, 1309151649), n = h(n, s = h(s, i = h(i, o, n, s, e[a + 4], 6, -145523070), o, n, e[a + 11], 10, -1120210379), i, o, e[a + 2], 15, 718787259), s, i, e[a + 9], 21, -343485551);
i = d(i, r);
o = d(o, f);
n = d(n, _);
s = d(s, p);
}
return Array(i, o, n, s);
}
function r(e, t, i, o, n, s) {
return d(f(d(d(t, e), d(o, s)), n), i);
}
function l(e, t, i, o, n, s, a) {
return r(t & i | ~t & o, e, t, n, s, a);
}
function c(e, t, i, o, n, s, a) {
return r(t & o | i & ~o, e, t, n, s, a);
}
function u(e, t, i, o, n, s, a) {
return r(t ^ i ^ o, e, t, n, s, a);
}
function h(e, t, i, o, n, s, a) {
return r(i ^ (t | ~o), e, t, n, s, a);
}
function d(e, t) {
var i = (65535 & e) + (65535 & t);
return (e >> 16) + (t >> 16) + (i >> 16) << 16 | 65535 & i;
}
function f(e, t) {
return e << t | e >>> 32 - t;
}
function _(e) {
for (var t = Array(), i = (1 << n) - 1, o = 0; o < e.length * n; o += n) t[o >> 5] |= (e.charCodeAt(o / n) & i) << o % 32;
return t;
}
function p(e) {
for (var t = o ? "0123456789ABCDEF" : "0123456789abcdef", i = "", n = 0; n < 4 * e.length; n++) i += t.charAt(e[n >> 2] >> n % 4 * 8 + 4 & 15) + t.charAt(e[n >> 2] >> n % 4 * 8 & 15);
return i;
}
t.exports = s;
cc._RF.pop();
}, {} ],
person: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9c57aW3ydVKJ6Xst8KQr8d9", "person");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../../common-plugin/Scripts/PlatUtils"), a = e("../Framework/CocosZ"), r = e("../Framework/Constant"), l = e("./gameDate"), c = e("./gameMgr"), u = e("./weapon"), h = e("LanguageData"), d = cc._decorator, f = d.ccclass, _ = d.property, p = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.ghAniNode = null;
t.ycAniNode = null;
t.personAtk = 0;
t.playerName = "";
t.personLevel = 0;
t.atkNum = 40;
t.atkRange = 800;
t.atkSpeed = 4;
t.reloadSpeed = 2;
t.totleHp = 300;
t.curHp = 300;
t.atkRate = 1;
t.speedRate = 1;
t.atkSpeedRate = 1;
t.reloadRate = 1;
t.bulletRate = 1;
t.meleeAtkRate = 1;
t.damageReduction = 0;
t.recoverItemNum = 0;
t.killNum = 0;
t.curKillNum = 0;
t.MoveSpeed = 600;
t.moveDir = cc.v2(0, 0);
t.atkDir = cc.v2(0, 0);
t.footNum = 0;
t.lastPos = cc.v2(0, 0);
t.canMove = !0;
t.canMoveDir = !0;
t.detectRange = 1e3;
t.mat_common = null;
t.mat_attacked = null;
t.body = null;
t.leg = null;
t.leg_back = null;
t.head = null;
t.hpBar = null;
t.hpSpr = null;
t.shieldBar = null;
t.atkBar = null;
t.head_atk = null;
t.head_hart = null;
t.head_death = null;
t.playerMess = null;
t.ani = null;
t.id = 0;
t.isPlayer = !1;
t.atkTarget = null;
t.weapon = null;
t.weapon_dao = null;
t.hpNumNode = null;
t._shield = 0;
t.maxShield = 100;
t.rig = null;
t.curTime = 0;
t._playerMessY = 200;
t.isReady = !1;
t.curSkin = 0;
t.weaponAdArr = [ 9, 10, 14, 17, 18 ];
t.weaponAdIndex = Math.floor(Math.random() * t.weaponAdArr.length);
t.meleeWeaponNum = 3;
t.rangedWeaponNum = 1;
t.rangedWeaponAdNum = 1;
t.meleeWeapon = null;
t.rangedWeapon = null;
t.rangedWeaponAd = null;
t.curWeapon = null;
t.startPosNode = null;
t.lastTime = 0;
t._aniName = "";
t.isAtk = !1;
t.atkList = [];
t.curItem = 0;
t.curItemEffect = null;
t.itemTarget = null;
t.grassID = 0;
t.houseID = 0;
t.isInHouse = !1;
t.newWeapon = -1;
t.newWeaponItem = null;
t.poisonCount = 0;
t.isDeath = !1;
t.isAttackedEffect = !1;
t.maxNum = 0;
t.isAvoidInjury = 0;
t.killer = null;
t.revivePos = cc.v2(0, 0);
return t;
}
i = t;
Object.defineProperty(t.prototype, "HP", {
get: function() {
return this.curHp;
},
set: function(e) {
(e = Math.floor(e)) < 0 ? e = 0 : e > this.totleHp && (e = this.totleHp);
this.curHp = e;
this.hpBar && this.hpBar.isValid && (this.hpBar.progress = this.curHp / this.totleHp);
this.isPlayer && 6 == a.cocosz.gameMode && c.gameMgr.update_model6_xuedi();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Shiled", {
get: function() {
return this._shield;
},
set: function(e) {
cc.Tween.stopAllByTarget(this.shieldBar);
this._shield = e;
if (this._shield < 0) {
this._shield = 0;
this.shieldBar.node.opacity = 0;
this.body.getChildByName("body").children[0].active = !1;
} else this.shieldBar.node.opacity = 255;
cc.tween(this.shieldBar).to(.3, {
progress: this._shield / this.maxShield
}).start();
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {};
t.prototype.start = function() {
if (this.playerMess && this.playerMess.isValid) {
this._playerMessY = this.playerMess.y;
this.playerMess.setParent(this.node.parent);
this.playerMess.zIndex = r.ZindexLayer.zindex_hp;
this.updateMess();
} else if (this.hpBar && this.hpBar.isValid) {
this._playerMessY = this.hpBar.node.y;
this.hpBar.node.setParent(this.node.parent);
this.hpBar.node.zIndex = r.ZindexLayer.zindex_hp;
this.updateMess();
}
};
t.prototype.update = function(e) {};
t.prototype.lateUpdate = function(e) {};
t.prototype.updateMess = function() {
if (this.playerMess && this.playerMess.isValid) if (this.node && this.node.isValid && this.node.active && this.node.opacity && this.HP) {
this.playerMess.active = !0;
this.playerMess.setPosition(this.node.x, this.node.y + this._playerMessY);
} else this.playerMess.active = !1; else if (this.hpBar && this.hpBar.isValid && this.hpBar.node && this.hpBar.node.isValid) if (this.node && this.node.isValid && this.node.active && this.node.opacity && this.HP) {
this.hpBar.node.active = !0;
this.hpBar.node.setPosition(this.node.x, this.node.y + this._playerMessY);
} else this.hpBar.node.active = !1;
};
t.prototype.updateGhAni = function() {
if (this.ghAniNode && this.ghAniNode.isValid) if (this.node && this.node.isValid && this.node.active && this.node.opacity && this.HP) {
this.ghAniNode.active = !0;
this.ghAniNode.angle = this.node.angle;
this.ghAniNode.setPosition(this.node.x, this.node.y - 90);
} else this.ghAniNode.active = !1;
};
t.prototype.updateYcAni = function() {
if (this.ycAniNode && this.ycAniNode.isValid) if (this.node && this.node.isValid && this.node.active && this.node.opacity && this.HP && !this.moveDir.equals(cc.Vec2.ZERO)) {
this.ycAniNode.active = !0;
this.ycAniNode.setPosition(this.node.x, this.node.y - 50);
this.ycAniNode.scaleX = this.moveDir.x > 0 ? 1 : -1;
} else this.ycAniNode.active = !1;
};
t.prototype.setProperty = function() {
var e = this;
this.ani = this.body.getComponent(cc.Animation);
this.node.getComponent(cc.CircleCollider).radius = this.detectRange;
this.isPlayer && (this.atkRange = 1e3);
this.personLevel = Math.floor(6 * Math.random());
var t = u.default.meleeWaapon[Math.floor(Math.random() * u.default.meleeWaapon.length)], i = u.default.rangeWeapon[Math.floor(13 * Math.random())];
if (this.isPlayer) {
t = a.cocosz.dataMgr.CurMelee + 1;
i = a.cocosz.dataMgr.CurRange + 1;
a.cocosz.gameMgr.gameCtr.curUseSkinId < 0 ? this.curSkin = a.cocosz.dataMgr.CurSkinId : this.curSkin = a.cocosz.gameMgr.gameCtr.curUseSkinId;
this.head.children[0].children[this.curSkin].active = !0;
var o = this.head.children[0].children[this.curSkin];
this.head.children[1].children[this.curSkin].active = !0;
for (var n = this.head.children[1].children[this.curSkin], r = this.head.children[0].childrenCount - 1; r >= 0; r--) this.head.children[0].children[r].uuid != o.uuid && this.head.children[0].children[r].destroy();
for (r = this.head.children[1].childrenCount - 1; r >= 0; r--) this.head.children[1].children[r].uuid != n.uuid && this.head.children[1].children[r].destroy();
this.head_atk = this.head.children[2].children[this.curSkin];
this.head_atk.active = !0;
this.head_atk.opacity = 0;
this.head_hart = this.head.children[3].children[this.curSkin];
this.head_hart.active = !0;
this.head_hart.opacity = 0;
this.head_death = this.head.children[4].children[this.curSkin];
this.head_death.active = !0;
this.head_death.opacity = 0;
this.head_atk.setParent(this.head.children[0]);
this.head_hart.setParent(this.head.children[0]);
this.head_death.setParent(this.head.children[0]);
this.head_atk.zIndex = 1;
this.head_hart.zIndex = 2;
this.head_death.zIndex = 3;
this.head.children[2].destroy();
this.head.children[3].destroy();
this.head.children[4].destroy();
this.personLevel = a.cocosz.dataMgr.getSkinInfo(this.curSkin).Level;
this.personAtk = l.default.SkinMess["" + (this.curSkin + 1)].atk[this.personLevel];
6 == a.cocosz.gameMode ? this.totleHp = l.default.SkinMess["" + (this.curSkin + 1)].xuedi : this.totleHp = l.default.SkinMess["" + (this.curSkin + 1)].hp[this.personLevel];
[ 1, 2, 4 ].includes(a.cocosz.gameMode) ? this.totleHp *= 4 : 3 == a.cocosz.gameMode ? a.cocosz.curLevel >= 15 ? this.totleHp *= 9 : a.cocosz.curLevel >= 10 ? this.totleHp *= 8 : a.cocosz.curLevel >= 5 ? this.totleHp *= 6 : this.totleHp *= 4 : 5 == a.cocosz.gameMode ? this.totleHp *= 6 : 7 == a.cocosz.gameMode && (this.totleHp *= 3);
this.HP = this.totleHp;
}
if (4 == a.cocosz.gameMode) {
this.isPlayer ? this.setNewWeapon(13) : this.setNewWeapon(t - 1);
this.changeCurWeapon(this.meleeWeapon, !1);
} else {
if (7 === a.cocosz.gameMode) this.setNewWeapon(i - 1); else {
this.setNewWeapon(t - 1);
this.setNewWeapon(i - 1);
}
this.changeCurWeapon(this.rangedWeapon, !1);
this.isPlayer && cc.tween(c.gameMgr.rangedWeaponAdMess).call(function() {
e.refreshWeaponAd();
}).delay(10).union().repeatForever().start();
}
if (6 == a.cocosz.gameMode) {
this.hpBar.node.active = !1;
this.atkBar.node.active = !1;
}
this.MoveSpeed = 200 + l.default.SkinMess["" + (this.curSkin + 1)].speed[this.personLevel];
s.default.IsOPPO && (this.MoveSpeed /= 2);
if (this.personLevel > 0) {
this.ghAniNode.color = cc.Color.WHITE;
(d = this.ghAniNode.getComponent(sp.Skeleton)) && d.setSkin([ "", "y", "p", "r" ][Math.ceil(this.personLevel / 2)]);
} else {
this.ghAniNode.color = cc.Color.BLACK;
var d;
(d = this.ghAniNode.getComponent(sp.Skeleton)).setSkin("r");
d.setAnimation(0, "animation", !0);
}
this.playerName || (this.playerName = h.t("game.player") + this.id);
var f = this.playerMess.getChildByName("nameLabel");
f && (f.active = !1);
this.lastPos = this.node.getPosition();
this.isReady = !0;
};
t.prototype.refreshWeaponAd = function() {
if (!a.cocosz.isPause && this.isPlayer) {
++this.weaponAdIndex >= this.weaponAdArr.length && (this.weaponAdIndex = 0);
var e = this.weaponAdArr[this.weaponAdIndex], t = u.default.WeaponName[e], i = a.cocosz.resMgr.getRes("weapon_" + t, cc.Prefab), o = cc.instantiate(i), n = o.getComponent(u.default);
n.person = this;
this.body.addChild(o);
o.active = !1;
n.weaponType = u.WeaponType.weapon_rangeAd;
this.rangedWeaponAd && this.rangedWeaponAd.destroy();
this.rangedWeaponAd = o;
this.rangedWeaponAdNum = n.weaponNum;
var s = "w_" + u.default.WeaponName[this.rangedWeaponAdNum - 1], r = a.cocosz.resMgr.getRes(s, cc.SpriteFrame);
c.gameMgr.rangedWeaponAdMess.children[3].getComponent(cc.Sprite).spriteFrame = r;
c.gameMgr.rangedWeaponAdMess.children[4].getComponent(cc.Sprite).spriteFrame = a.cocosz.resMgr.getRes("w_" + (e + 1), cc.SpriteFrame);
c.gameMgr.rangedWeaponAdMess.children[5].getComponent(cc.Label).string = n.atkNum.toString();
n.setBulletUI();
}
};
t.prototype.setNewWeapon = function(e) {
void 0 === e && (e = this.newWeapon);
if (!(e < 0)) {
var t = u.default.WeaponName[e], i = a.cocosz.resMgr.getRes("weapon_" + t, cc.Prefab), o = cc.instantiate(i), n = o.getComponent(u.default);
n.person = this;
this.body.addChild(o);
o.active = !1;
if (n.isRangeWeapon) if (this.curWeapon && this.curWeapon.weaponType == u.WeaponType.weapon_rangeAd) {
n.weaponType = u.WeaponType.weapon_rangeAd;
this.rangedWeaponAd && this.rangedWeaponAd.destroy();
this.rangedWeaponAd = o;
this.rangedWeaponAdNum = n.weaponNum;
if (this.isPlayer) {
var s = "w_" + u.default.WeaponName[this.rangedWeaponAdNum - 1], r = a.cocosz.resMgr.getRes(s, cc.SpriteFrame);
c.gameMgr.rangedWeaponAdMess.children[3].getComponent(cc.Sprite).spriteFrame = r;
c.gameMgr.rangedWeaponAdMess.children[4].getComponent(cc.Sprite).spriteFrame = a.cocosz.resMgr.getRes("w_" + (e + 1), cc.SpriteFrame);
c.gameMgr.rangedWeaponAdMess.children[5].getComponent(cc.Label).string = n.atkNum.toString();
n.setBulletUI();
}
} else {
n.weaponType = u.WeaponType.weapon_range;
this.rangedWeapon && this.rangedWeapon.destroy();
this.rangedWeapon = o;
this.rangedWeaponNum = n.weaponNum;
if (this.isPlayer) {
s = "w_" + u.default.WeaponName[this.rangedWeaponNum - 1], r = a.cocosz.resMgr.getRes(s, cc.SpriteFrame);
c.gameMgr.rangedWeaponMess.children[3].getComponent(cc.Sprite).spriteFrame = r;
c.gameMgr.rangedWeaponMess.children[4].getComponent(cc.Sprite).spriteFrame = a.cocosz.resMgr.getRes("w_" + (e + 1), cc.SpriteFrame);
c.gameMgr.rangedWeaponMess.children[5].getComponent(cc.Label).string = n.atkNum.toString();
n.setBulletUI();
}
} else {
n.weaponType = u.WeaponType.weapon_melee;
this.meleeWeapon && this.meleeWeapon.destroy();
this.meleeWeapon = o;
this.meleeWeaponNum = n.weaponNum;
}
this.curWeapon && this.curWeapon.isRangeWeapon === n.isRangeWeapon && this.changeCurWeapon(o, !1);
this.newWeapon = -1;
this.newWeaponItem && this.newWeaponItem.isValid && this.newWeaponItem.destroy();
this.newWeaponItem = null;
}
};
t.prototype.changeCurWeapon = function(e, t) {
void 0 === t && (t = !0);
if (e && e.isValid && (!this.curWeapon || !this.curWeapon.isValid || e != this.curWeapon.node)) {
var i = Number(new Date());
if (!(t && i - this.lastTime < 1e3)) {
this.lastTime = i;
this.curWeapon && cc.isValid(this.curWeapon) && (this.curWeapon.node.active = !1);
e.active = !0;
var o = e.getComponent(u.default);
if (o) {
if (this.isPlayer) {
var n = null;
o.weaponType == u.WeaponType.weapon_melee ? c.gameMgr.BtnBullet.active = !1 : o.weaponType == u.WeaponType.weapon_range ? n = c.gameMgr.rangedWeaponMess : o.weaponType == u.WeaponType.weapon_rangeAd && (n = c.gameMgr.rangedWeaponAdMess);
n.children[0].active = !0;
if (this.curWeapon && this.curWeapon.isValid) {
a.cocosz.audioMgr.playEffect("changeWeapon");
var s = null;
this.curWeapon.weaponType == u.WeaponType.weapon_melee || (this.curWeapon.weaponType == u.WeaponType.weapon_range ? s = c.gameMgr.rangedWeaponMess : this.curWeapon.weaponType == u.WeaponType.weapon_rangeAd && (s = c.gameMgr.rangedWeaponAdMess));
if (s !== n) {
s.children[0].active = !1;
s.children[1].active = !0;
cc.tween(s.children[1].getComponent(cc.Sprite)).set({
fillRange: -1
}).to(1, {
fillRange: 0
}).call(function() {
s.isValid && (s.children[1].active = !1);
}).start();
}
}
}
o.isRangeWeapon && (this.startPosNode = e.getChildByName("startPos"));
this.curWeapon = o;
this.atkNum = this.curWeapon.atkNum * (this.curWeapon.isRangeWeapon ? 1 : this.meleeAtkRate);
this.atkSpeed = this.curWeapon.atkSpeed;
this.reloadSpeed = this.curWeapon.reload;
}
}
}
};
t.prototype.atkStart = function() {};
t.prototype.atkEnemy = function() {};
t.prototype.atkComplete = function() {};
t.prototype.setWeaponAngle = function(e) {
if (this.curWeapon && this.curWeapon.isValid && this.curWeapon.isRangeWeapon) if (e.equals(cc.Vec2.ZERO)) this.curWeapon.node.angle = 0; else {
e.x < 0 ? this.curWeapon.node.angle = cc.v2(e).signAngle(cc.v2(-1, 0)) / Math.PI * 180 : this.curWeapon.node.angle = -cc.v2(e).signAngle(cc.v2(1, 0)) / Math.PI * 180;
e.y > 0 ? this.curWeapon.node && (this.rangedWeapon.zIndex = -1) : this.curWeapon.node && (this.rangedWeapon.zIndex = 1);
}
};
t.prototype.updateAni = function(e, t) {
void 0 === t && (t = !1);
if (t) this._playAni(e); else if (c.gameMgr.isGameStart) {
e = this.isDeath ? "die" : this.moveDir.equals(cc.Vec2.ZERO) ? "daiji_body" : "run_body";
this._playAni(e);
}
};
t.prototype._playAni = function(e) {
if (e && e != this._aniName) {
this.ani.play(e);
this._aniName = e;
}
};
t.prototype.getCurSpeed = function() {
var e = this.MoveSpeed * this.speedRate * (this.curWeapon && this.curWeapon.isRangeWeapon ? 1 : 1.2);
e > 1e3 && (e = 1e3);
return e;
};
t.prototype.udpateRBody = function(e) {
this.rig.type == cc.RigidBodyType.Dynamic && this.canMove && (e.equals(cc.Vec2.ZERO) ? this.rig.linearVelocity = cc.Vec2.ZERO : this.rig.linearVelocity = e.mul(this.getCurSpeed()));
};
t.prototype.updatePerson = function() {
var e = null;
if (this.atkDir && !this.atkDir.equals(cc.Vec2.ZERO)) e = this.atkDir; else {
if (!this.moveDir || this.moveDir.equals(cc.Vec2.ZERO)) return;
e = this.moveDir;
}
e.x < 0 ? this.body.scaleX = -Math.abs(this.body.scaleX) : this.body.scaleX = Math.abs(this.body.scaleX);
if (e.y > 0) {
this.leg_back.opacity = 255;
this.leg.opacity = 0;
this.head.children[1].opacity = 255;
this.head.children[0].opacity = 0;
} else {
this.leg_back.opacity = 0;
this.leg.opacity = 255;
this.head.children[0].opacity = 255;
this.head.children[1].opacity = 0;
}
this.setWeaponAngle(e);
};
t.prototype.updateAtk = function() {
if (this.atkList.length > 0) {
for (var e = 1e3, t = -1, o = 0; o < this.atkList.length; o++) {
this.atkList[o].getComponent(i);
var n = this.atkList[o].getPosition().sub(this.node.getPosition()).mag();
if (n < e) {
e = n;
t = o;
}
}
if (t >= 0) {
this.atkDir = cc.v2(this.atkList[t].getPosition().sub(this.node.getPosition()).normalize());
this.atkTarget = this.atkList[t];
} else this.atkDir = 0 == this.moveDir.mag() ? this.atkDir : cc.v2(this.moveDir);
} else this.atkDir = 0 == this.moveDir.mag() ? this.atkDir : cc.v2(this.moveDir);
};
t.prototype.onCollisionEnter = function(e, t) {};
t.prototype.onCollisionExit = function(e, t) {};
t.prototype.hart = function(e, t, i, o, n, s) {
void 0 === i && (i = null);
void 0 === o && (o = !0);
void 0 === n && (n = !0);
};
t.prototype.avoidInjury = function(e) {
var t = this;
this.isAvoidInjury++;
this.scheduleOnce(function() {
t.isAvoidInjury--;
}, e);
};
t.prototype.death = function() {
this.isDeath = !0;
this.ghAniNode && this.ghAniNode.isValid && (this.ghAniNode.active = !1);
this.playerMess && this.playerMess.isValid && (this.playerMess.active = !1);
this.head_death.opacity = 255;
c.gameMgr.playEffect("death", this.node);
this.unscheduleAllCallbacks();
this.updateAni("die");
if (this.meleeWeapon) {
var e = this.meleeWeapon.getComponent(cc.Animation);
e && e.stop();
}
this.leg.opacity = 255;
this.leg_back.opacity = 0;
this.head.children[0].opacity = 255;
this.head.children[1].opacity = 0;
this.curWeapon && this.curWeapon.isValid && (this.curWeapon.node.active = !1);
this.rig && (this.rig.active = !1);
this.node.getComponent(cc.BoxCollider).enabled = !1;
this.node.getComponent(cc.CircleCollider).enabled = !1;
c.gameMgr.deathNum++;
if (this.isPlayer) {
cc.director.getScheduler().setTimeScale(.3);
setTimeout(function() {
cc.director.getScheduler().setTimeScale(1);
}, 900);
}
if (r.default.isEndless) {
if (6 == a.cocosz.gameMode && this.isPlayer && !c.gameMgr.isWin && !c.gameMgr.isFail) {
this.revivePos = this.node.getPosition();
c.gameMgr.fail();
}
} else if (6 == a.cocosz.gameMode && this.isPlayer && !c.gameMgr.isWin && !c.gameMgr.isFail) {
this.revivePos = this.node.getPosition();
this.scheduleOnce(function() {
a.cocosz.uiMgr.openPanel(r.PanelName.UIRevivePanel);
}, 2);
}
};
t.prototype.revive = function() {
if (c.gameMgr && !c.gameMgr.isWin && !c.gameMgr.isFail) {
c.gameMgr.deathNum--;
this.ghAniNode && this.ghAniNode.isValid && (this.ghAniNode.active = !0);
this.playerMess && this.playerMess.isValid && (this.playerMess.active = !0);
this.rangedWeapon && this.rangedWeapon.getComponent(u.default).reset();
this.rangedWeaponAd && this.rangedWeaponAd.getComponent(u.default).reset();
if (this.meleeWeapon) {
var e = this.meleeWeapon.getComponent(cc.Animation);
e && e.play();
}
this.curWeapon && this.curWeapon.isValid && (this.curWeapon.node.active = !0);
this.head_death.opacity = 0;
var t = this.revivePos;
this.node.setPosition(t);
this.HP = this.totleHp;
this.body.setPosition(cc.v2(0, 0));
this.body.angle = 0;
this.leg.opacity = 255;
this.leg_back.opacity = 0;
this.head.children[0].opacity = 255;
this.head.children[1].opacity = 0;
this.node.scaleX < 0 && (this.node.scaleX *= -1);
this.rig && (this.rig.active = !0);
this.node.getComponent(cc.BoxCollider).enabled = !0;
this.node.getComponent(cc.CircleCollider).enabled = !0;
this.isDeath = !1;
this.canMove = !0;
}
};
t.prototype.creatItem = function() {};
var i;
n([ _(cc.Material) ], t.prototype, "mat_common", void 0);
n([ _(cc.Material) ], t.prototype, "mat_attacked", void 0);
n([ _(cc.Node) ], t.prototype, "body", void 0);
n([ _(cc.Node) ], t.prototype, "leg", void 0);
n([ _(cc.Node) ], t.prototype, "leg_back", void 0);
n([ _(cc.Node) ], t.prototype, "head", void 0);
n([ _(cc.ProgressBar) ], t.prototype, "hpBar", void 0);
n([ _(cc.Node) ], t.prototype, "hpSpr", void 0);
n([ _(cc.ProgressBar) ], t.prototype, "shieldBar", void 0);
n([ _(cc.ProgressBar) ], t.prototype, "atkBar", void 0);
return t = i = n([ f ], t);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../../common-plugin/Scripts/PlatUtils": "PlatUtils",
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"./gameDate": "gameDate",
"./gameMgr": "gameMgr",
"./weapon": "weapon",
LanguageData: "LanguageData"
} ],
player: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "be2012PJ+xL2Y4UzVB0obJ4", "player");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/CocosZ"), a = e("../Framework/Constant"), r = e("./bullet"), l = e("./gameDate"), c = e("./gameMgr"), u = e("./person"), h = e("./UpgradeMgr"), d = e("./weapon"), f = (e("LanguageData"), 
cc._decorator), _ = f.ccclass, p = (f.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.lastTime = 0;
t.lastAtkTime = 0;
t.atkBulletNum = 1;
return t;
}
t.prototype.onLoad = function() {
this.isPlayer = !0;
this.id = 1;
c.gameMgr.playerTs = this;
this.hpSpr && (this.hpSpr.color = cc.Color.GREEN);
this.atkBar && (this.atkBar.node.children[1].color = cc.Color.YELLOW);
this.rig = this.node.getComponent(cc.RigidBody);
this.rig && (this.rig.linearDamping = .2);
this.playerMess = this.node.getChildByName("playerMess");
this.hpNumNode = this.playerMess.getChildByName("hpNum");
this.ghAniNode = this.node.getChildByName("gh");
this.ycAniNode = this.node.getChildByName("yc");
c.gameMgr.followNode = this.node;
6 == s.cocosz.gameMode && this.rig && this.rig.isValid && (this.rig.enabledContactListener = !0);
};
t.prototype.start = function() {
e.prototype.start.call(this);
this.setProperty();
this.node.zIndex = a.ZindexLayer.zindex_player;
if (this.ghAniNode && this.ghAniNode.isValid) {
this.ghAniNode.setParent(this.node.parent);
this.ghAniNode.zIndex = a.ZindexLayer.zinedx_gh;
this.updateGhAni();
}
if (this.ycAniNode && this.ycAniNode.isValid) {
this.ycAniNode.setParent(this.node.parent);
this.ycAniNode.zIndex = a.ZindexLayer.zinedx_footYc;
this.updateYcAni();
}
this.hpSpr && (this.hpSpr.color = cc.Color.GREEN);
};
t.prototype.lateUpdate = function(e) {
this.curTime++;
if (s.cocosz.isPause || this.isDeath || c.gameMgr.isWin || c.gameMgr.isFail) this.rig.linearVelocity = cc.v2(0, 0); else {
if (this.curTime % 15 == 0) {
this.updateAni();
this.creatFootPrint();
}
this.updateAtk();
this.updatePerson();
this.udpateRBody(this.moveDir);
this.updateMess();
this.updateGhAni();
this.updateYcAni();
this.atkTarget && this.atkTarget.isValid && this.atkEnemy();
}
};
t.prototype.recoverEffect = function() {
cc.instantiate(c.gameMgr.itemEffect[0]).parent = this.node;
};
t.prototype.checkTarget = function() {
if (!(Number(new Date()) - this.lastTime < 500)) {
this.lastTime = Number(new Date());
var e = this.atkList.indexOf(this.atkTarget);
if (e >= 0) {
e == this.atkList.length - 1 ? e = 0 : e += 1;
this.atkTarget = this.atkList[e];
} else this.atkTarget = this.atkList[0];
}
};
t.prototype.atkEnemy = function() {
var e = this;
if (this.curWeapon && this.curWeapon.isValid && !this.isAtk) {
if (this.curWeapon && this.curWeapon.isRangeWeapon) {
if (this.curWeapon._isReload || this.curWeapon.curBullet <= 0) return;
6 == s.cocosz.gameMode && 1 == this.curWeapon.curBullet && cc.game.emit(a.default.E_GAME_LOGIC, {
type: a.default.E_Bullet_Last,
node: this.node
});
this.curWeapon.curBullet--;
var t = (this.atkSpeed > .1 ? .1 : this.atkSpeed) / 3;
cc.tween(this.rangedWeapon.children[0]).by(t, {
x: -20,
angle: 20
}).by(t, {
x: 20,
angle: -20
}).start();
var i = this.startPosNode.getPosition();
if (this.curWeapon.atkEffect) {
var o = cc.instantiate(this.curWeapon.atkEffect);
if (9 == this.curWeapon.weaponNum || 15 == this.curWeapon.weaponNum) {
this.node.parent.addChild(o, a.ZindexLayer.zindex_effect_fire, "effect");
o.setPosition(this.startPosNode.parent.convertToWorldSpaceAR(i).sub(cc.v2(cc.winSize.width / 2, cc.winSize.height / 2)));
this.body.scaleX > 0 ? o.angle = this.rangedWeapon.angle : o.angle = 180 - this.rangedWeapon.angle;
} else {
this.curWeapon.node.addChild(o, 1, "effect");
o.setPosition(i);
}
}
} else {
c.gameMgr.shakeEffect(2, 1, !1);
var n = this.meleeWeapon.getComponent(cc.Animation);
n && n.isValid && n.play("atk_dao");
this.scheduleOnce(function() {
n && n.isValid && n.play("daiji_dao");
}, .18);
}
var r;
r = this.atkDir && !this.atkDir.equals(cc.Vec2.ZERO) ? this.atkDir : this.moveDir && !this.moveDir.equals(cc.Vec2.ZERO) ? this.moveDir : this.body.scaleX > 0 ? cc.Vec2.RIGHT : cc.Vec2.RIGHT.negSelf();
if (this.atkBulletNum > 1) for (var u = 0; u < this.atkBulletNum; u++) {
var h = 15 * ((this.atkBulletNum - 1) / 2 - u), f = r.rotate(cc.misc.degreesToRadians(h));
this.createBullet(f);
} else this.createBullet(r);
var _ = this.atkSpeed > .1 ? .1 : this.atkSpeed;
cc.tween(this.head_atk).set({
opacity: 255
}).delay(_).set({
opacity: 0
}).start();
this.isAtk = !0;
this.curWeapon.isRangeWeapon && this.curWeapon.curBullet <= 0 ? cc.tween(this.node).delay(this.curWeapon.reload).call(function() {
e.isAtk = !1;
}).start() : cc.tween(this.node).delay(this.atkSpeed).call(function() {
e.isAtk = !1;
}).start();
var p = d.default.WeaponName[this.curWeapon.weaponNum - 1];
l.default.Weapon[p] && l.default.Weapon[p].music ? c.gameMgr.playEffect("shot_" + l.default.Weapon[p].music, this.node) : c.gameMgr.playEffect("shot_" + d.default.WeaponName[this.curWeapon.weaponNum - 1], this.node);
}
};
t.prototype.createBullet = function(e) {
var t = cc.instantiate(this.curWeapon.bullet);
if (this.curWeapon.isRangeWeapon) {
t.parent = this.node.parent;
var i = t.parent.convertToNodeSpaceAR(this.startPosNode.convertToWorldSpaceAR(cc.Vec2.ZERO));
t.setPosition(i);
t.angle = -cc.v2(e).signAngle(cc.v2(1, 0)) / Math.PI * 180;
2 == this.curWeapon.weaponNum && (t.angle += 5 - 10 * Math.random());
if (this.curWeapon.flySpeed > 0) {
var o = t.getPosition(), n = o.add(e.mul(this.curWeapon.atkRangeNum));
cc.tween(t).to(n.sub(o).mag() / this.curWeapon.flySpeed, {
position: cc.v3(n)
}).call(function() {
var e = t.getComponent(r.default);
if (e.boomEffect) {
var i = cc.instantiate(e.boomEffect);
i.parent = e.node.parent;
i.setPosition(e.node.getPosition());
var o = i.getComponent(r.default);
o.atk = e.atk;
o.atker = e.atker;
o.id = e.id;
c.gameMgr.playEffect("explo", i);
if (e.hitEffect) {
var n = t.getPosition(), s = cc.instantiate(e.hitEffect);
s.parent = t.parent;
s.setPosition(n);
s.zIndex = a.ZindexLayer.zindex_effect_hit;
}
}
t.destroy();
}).start();
if (this.curWeapon.shellCall) {
var s = cc.instantiate(this.curWeapon.shellCall);
s.setParent(c.gameMgr.map);
s.setPosition(this.node.position);
s.scaleX = this.body.scale;
}
} else cc.tween(t).delay(.4).call(function() {
t.destroy();
}).start();
(l = t.getComponent(r.default)).id = this.id;
l.atker = this.node;
l.atk = (this.atkNum + this.personAtk) * this.atkRate;
l.dir = e;
} else {
this.node.addChild(t, -1);
t.color = this.curWeapon.bulletCollor;
this.atkDir.x < 0 ? t.scaleX *= -1 / this.node.scaleX : t.scaleX /= this.node.scaleX;
t.scaleY /= this.node.scaleY;
cc.tween(t).delay(.2).call(function() {
t.destroy();
}).start();
var l;
(l = t.getComponent(r.default)).id = this.id;
l.atker = this.node;
l.atk = (this.atkNum + this.personAtk) * this.atkRate;
l.dir = e;
}
};
t.prototype.hart = function(e, t, i, o) {
var n = this;
void 0 === i && (i = null);
void 0 === o && (o = !0);
if (!(s.cocosz.isPause || this.isDeath || this.isAvoidInjury)) {
if (6 == s.cocosz.gameMode && h.upgradeMgr) {
if (h.upgradeMgr.isHaveSkill(h.SkillType.护甲靴子) && this.moveDir.mag() > 0 && Math.random() < .4) return;
if (h.upgradeMgr.isHaveSkill(h.SkillType.神圣守护) && h.upgradeMgr.hudun && h.upgradeMgr.hudun.active) {
h.upgradeMgr.updateHudun();
return;
}
}
i && i.mag() > 3 && i.normalizeSelf().mulSelf(3);
e = (1 - this.damageReduction) * e;
if (this.Shiled > 0) {
this.Shiled -= e;
if (!(this.Shiled < 0)) return;
e = -this.Shiled;
this.Shiled = 0;
}
6 != s.cocosz.gameMode && c.gameMgr.showRoleTip(this.node, Math.min(this.HP, e).toFixed(0));
this.HP -= e;
if (o) if (t) {
(r = t.getComponent(u.default)) && r.curWeapon && r.curWeapon.isRangeWeapon ? c.gameMgr.playEffect("hurt_range", this.node) : c.gameMgr.playEffect("hurt_melee", this.node);
} else c.gameMgr.playEffect("hurt", this.node);
6 == s.cocosz.gameMode && cc.tween(c.gameMgr.red).to(.5, {
opacity: 255
}, {
easing: "sineOut"
}).to(.5, {
opacity: 0
}, {
easing: "sineIn"
}).start();
s.cocosz.vibrate("long");
if (this.HP <= 0) {
6 == s.cocosz.gameMode && s.cocosz.audioMgr.playEffect("GameOver");
this.death();
if (t) {
var r;
(r = t.getComponent(u.default)).killNum++;
r.curKillNum++;
r.curKillNum > r.maxNum && (r.maxNum = r.curKillNum);
this.killer = r;
this.curKillNum = 0;
}
if (i) {
var l = this.node.getPosition(), d = l.add(i.normalizeSelf().mulSelf(200)), f = cc.v2((l.x + d.x) / 2, l.y + 200);
cc.tween(this.node).bezierTo(.3, l, f, d).start();
}
6 == s.cocosz.gameMode && cc.game.emit(a.default.E_GAME_LOGIC, {
type: a.default.E_Player_Death
});
} else {
if (6 == s.cocosz.gameMode) {
this.avoidInjury(2);
cc.game.emit(a.default.E_GAME_LOGIC, {
type: a.default.E_Player_Hart
});
}
if (!this.isAttackedEffect) {
this.isAttackedEffect = !0;
if (this.rig.type == cc.RigidBodyType.Dynamic && i) {
this.canMove = !1;
this.scheduleOnce(function() {
n.canMove = !0;
}, .1);
var _ = i.mulSelf(400 * i.mag()).addSelf(this.rig.linearVelocity);
_.mag() > 500 && _.normalizeSelf().mulSelf(500);
this.rig.linearVelocity = _;
}
cc.tween(this.head).call(function() {
n.head_hart.opacity = 255;
}).to(.05, {
angle: 15
}).to(.05, {
angle: -15
}).to(.05, {
angle: 15
}).to(.05, {
angle: 0
}).call(function() {
n.head_hart.opacity = 0;
}).start();
var p = this.body.getComponentsInChildren(cc.Sprite);
cc.tween(this.body).call(function() {
p.forEach(function(e, t) {
e.isValid && e.setMaterial(0, n.mat_attacked);
});
}).delay(.1).call(function() {
p.forEach(function(e, t) {
e.isValid && e.setMaterial(0, n.mat_common);
});
}).delay(.1).union().repeat(6 == s.cocosz.gameMode ? 5 : 2).call(function() {
n.isAttackedEffect = !1;
}).start();
}
}
}
};
t.prototype.creatFootPrint = function() {
if (0 != this.node.opacity) {
var e = this.node.getPosition();
if (!(e.sub(this.lastPos).mag() < 5)) {
this.lastPos = cc.v2(e);
this.footNum++;
this.isPlayer && this.footNum % 3 == 0 && c.gameMgr.playEffect("footsteps", this.node);
if ("map2" == c.gameMgr.map.name) {
var t = new cc.Node();
t.addComponent(cc.Sprite).spriteFrame = c.gameMgr.jiaoyin;
cc.tween(t).delay(.5).to(.5, {
opacity: 0
}).call(function() {
t.destroy();
}).start();
t.parent = this.node.parent;
t.zIndex = a.ZindexLayer.zinedx_footPrint;
this.moveDir.mag() > 0 && (t.angle = 360 - cc.v2(this.moveDir).signAngle(cc.v2(1, 0)) / Math.PI * 180);
e.y -= 100 * this.node.scale;
var i = cc.v2(20, 0).rotate(t.angle / 180 * Math.PI).rotate(this.footNum % 2 == 0 ? Math.PI / 2 : -Math.PI / 2);
e.addSelf(i);
t.setPosition(e);
}
}
}
};
t.prototype.onCollisionEnter = function(e, t) {
if (0 == t.tag && 1 == e.tag) {
var i = e.node.getComponent(u.default);
if (i && i.id != this.id) {
this.atkList.push(e.node);
!cc.isValid(this.atkTarget) && e.node.isValid && (this.atkTarget = e.node);
}
}
};
t.prototype.onCollisionExit = function(e, t) {
if (0 == t.tag) {
var i = this.atkList.indexOf(e.node);
if (1 == e.tag && i >= 0) {
this.atkList.splice(i, 1);
0 == this.atkList.length ? this.atkTarget = null : cc.isValid(this.atkTarget) && e.node.uuid != this.atkTarget.uuid || (this.atkTarget = this.atkList[0]);
}
}
};
t.prototype.onPreSolve = function(e, t, i) {
"zombie" == i.node.group && (e.disabled = !0);
};
return t = n([ _ ], t);
}(u.default));
i.default = p;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"./UpgradeMgr": "UpgradeMgr",
"./bullet": "bullet",
"./gameDate": "gameDate",
"./gameMgr": "gameMgr",
"./person": "person",
"./weapon": "weapon",
LanguageData: "LanguageData"
} ],
"polyglot.min": [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e26fd9yy65A4q3/JkpVnFYg", "polyglot.min");
(function(e, o) {
"function" == typeof define && define.amd ? define([], function() {
return o(e);
}) : "object" == typeof i ? t.exports = o(e) : e.Polyglot = o(e);
})(void 0, function(e) {
function t(e) {
e = e || {}, this.phrases = {}, this.extend(e.phrases || {}), this.currentLocale = e.locale || "en", 
this.allowMissing = !!e.allowMissing, this.warn = e.warn || l;
}
function i(e) {
var t, i, o, n = {};
for (t in e) if (e.hasOwnProperty(t)) {
i = e[t];
for (o in i) n[i[o]] = t;
}
return n;
}
function o(e) {
return e.replace(/^\s+|\s+$/g, "");
}
function n(e, t, i) {
var n, s;
return null != i && e ? n = o((s = e.split(u))[a(t, i)] || s[0]) : n = e, n;
}
function s(e) {
var t = i(d);
return t[e] || t.en;
}
function a(e, t) {
return h[s(e)](t);
}
function r(e, t) {
for (var i in t) "_" !== i && t.hasOwnProperty(i) && (e = e.replace(new RegExp("%\\{" + i + "\\}", "g"), t[i]));
return e;
}
function l(t) {
e.console && e.console.warn && e.console.warn("WARNING: " + t);
}
function c(e) {
var t = {};
for (var i in e) t[i] = e[i];
return t;
}
t.VERSION = "0.4.3", t.prototype.locale = function(e) {
return e && (this.currentLocale = e), this.currentLocale;
}, t.prototype.extend = function(e, t) {
var i;
for (var o in e) e.hasOwnProperty(o) && (i = e[o], t && (o = t + "." + o), "object" == typeof i ? this.extend(i, o) : this.phrases[o] = i);
}, t.prototype.clear = function() {
this.phrases = {};
}, t.prototype.replace = function(e) {
this.clear(), this.extend(e);
}, t.prototype.t = function(e, t) {
var i, o;
return "number" == typeof (t = null == t ? {} : t) && (t = {
smart_count: t
}), "string" == typeof this.phrases[e] ? i = this.phrases[e] : "string" == typeof t._ ? i = t._ : this.allowMissing ? i = e : (this.warn('Missing translation for key: "' + e + '"'), 
o = e), "string" == typeof i && (t = c(t), o = r(o = n(i, this.currentLocale, t.smart_count), t)), 
o;
}, t.prototype.has = function(e) {
return e in this.phrases;
};
var u = "||||", h = {
chinese: function(e) {
return 0;
},
german: function(e) {
return 1 !== e ? 1 : 0;
},
french: function(e) {
return e > 1 ? 1 : 0;
},
russian: function(e) {
return e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2;
},
czech: function(e) {
return 1 === e ? 0 : e >= 2 && e <= 4 ? 1 : 2;
},
polish: function(e) {
return 1 === e ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2;
},
icelandic: function(e) {
return e % 10 != 1 || e % 100 == 11 ? 1 : 0;
}
}, d = {
chinese: [ "fa", "id", "ja", "ko", "lo", "ms", "th", "tr", "zh" ],
german: [ "da", "de", "en", "es", "fi", "el", "he", "hu", "it", "nl", "no", "pt", "sv" ],
french: [ "fr", "tl", "pt-br" ],
russian: [ "hr", "ru" ],
czech: [ "cs" ],
polish: [ "pl" ],
icelandic: [ "is" ]
};
return t;
});
cc._RF.pop();
}, {} ],
prop: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f0b28oTeGVBh6BfEEtoMe8i", "prop");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/CocosZ"), a = e("./gameMgr"), r = e("./person"), l = e("./weapon"), c = e("./UpgradeMgr"), u = cc._decorator, h = u.ccclass, d = u.property, f = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.weaponSprite = null;
t.idx = 0;
return t;
}
t.prototype.start = function() {
var e = this;
a.gameMgr && a.gameMgr.setMapTs.checkNode(this.node, !0);
cc.tween(this.node).delay(5).blink(3, 3).call(function() {
c.upgradeMgr.createPropArr.splice(e.idx, 1);
e.node.destroy();
c.upgradeMgr.createNum--;
}).start();
console.log("当前idx为：" + this.idx);
console.log("当前武器为：" + l.default.WeaponName[this.idx - 1]);
this.node.getChildByName("weaponSp").getComponent(cc.Sprite).spriteFrame = s.cocosz.resMgr.getRes("w_" + l.default.WeaponName[this.idx - 1], cc.SpriteFrame);
};
t.prototype.onCollisionEnter = function(e, t) {
var i = e.getComponent(r.default);
if (1 == e.tag && i.isPlayer) {
c.upgradeMgr.createPropArr.splice(this.idx, 1);
this.node.destroy();
c.upgradeMgr.createNum--;
i.setNewWeapon(this.idx - 1);
}
};
n([ d() ], t.prototype, "weaponSprite", void 0);
return t = n([ h ], t);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"./UpgradeMgr": "UpgradeMgr",
"./gameMgr": "gameMgr",
"./person": "person",
"./weapon": "weapon"
} ],
redPoint: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7a7b3Y69OtMNbE1nJjYg0PX", "redPoint");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s, a = e("../Framework/CocosZ"), r = e("../Framework/Constant"), l = e("../Game/gameDate"), c = cc._decorator, u = c.ccclass, h = c.property;
(function(e) {
e[e.none = 0] = "none";
e[e.sign = 1] = "sign";
e[e.turntable = 2] = "turntable";
e[e.online = 3] = "online";
})(s || (s = {}));
var d = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.type = s.none;
t.refreshOnClick = !0;
t.isRefresh = !1;
t.isTweenAngle = !1;
t.isTweenScale = !1;
t.isListen = !1;
return t;
}
t.prototype.start = function() {
var e = this;
this.node.opacity = 0;
this.setRedPoint();
this.isRefresh && cc.tween(this.node).delay(1).call(function() {
e.setRedPoint();
}).union().repeatForever().start();
this.isTweenAngle && cc.tween(this.node).by(.25, {
angle: 15
}).by(.5, {
angle: -30
}).by(.25, {
angle: 15
}).delay(1).union().repeatForever().start();
this.isTweenScale && cc.tween(this.node).by(.25, {
scale: .1
}).by(.5, {
scale: -.2
}).by(.25, {
scale: .1
}).delay(1).union().repeatForever().start();
this.isListen && cc.game.on(r.default.E_GAME_LOGIC, this._onGameMessageHandler, this);
};
t.prototype.onDestroy = function() {
cc.game.targetOff(this);
};
t.prototype._onGameMessageHandler = function(e) {
e.type;
};
t.prototype.onClick = function() {
this.type;
this.refreshOnClick && this.setRedPoint();
};
t.prototype.show = function() {
this.node.opacity = 255;
this.node.parent && this.node.parent.on(cc.Node.EventType.TOUCH_END, this.onClick, this);
};
t.prototype.hide = function() {
this.node.opacity = 0;
this.node.parent && this.node.parent.off(cc.Node.EventType.TOUCH_END, this.onClick, this);
};
t.prototype.setRedPoint = function() {
switch (this.type) {
case s.sign:
new Date().toDateString() != a.cocosz.dataMgr.LastDailyBonusTime ? this.show() : this.hide();
break;

case s.turntable:
a.cocosz.useCJTimes < r.default.commonCJTimes ? this.show() : this.hide();
break;

case s.online:
for (var e = a.cocosz.dataMgr.receiveToday, t = 0; t < e.length; t++) if (!e[t] && a.cocosz.dataMgr.OnlineToday > l.default.TimeReward[t].time) {
this.show();
return;
}
this.hide();
}
};
n([ h({
type: cc.Enum(s),
tooltip: "红点类型"
}) ], t.prototype, "type", void 0);
n([ h({
tooltip: "点击父节点刷新红点"
}) ], t.prototype, "refreshOnClick", void 0);
n([ h({
tooltip: "是否刷新"
}) ], t.prototype, "isRefresh", void 0);
n([ h({
tooltip: "是否缓动角度"
}) ], t.prototype, "isTweenAngle", void 0);
n([ h({
tooltip: "是否缓动缩放"
}) ], t.prototype, "isTweenScale", void 0);
n([ h({
tooltip: "是否监听"
}) ], t.prototype, "isListen", void 0);
return t = n([ u ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Game/gameDate": "gameDate"
} ],
setMap: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "09313S8CXZCU4lptDwQuJIg", "setMap");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("../Framework/CocosZ"), a = e("./gameMgr"), r = cc._decorator, l = r.ccclass, c = r.property, u = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.dmmArr = [];
t.dikuai = null;
t.time = -1;
t.mainCameraPos = cc.Vec2.ZERO;
t.distanceX = 2500;
t.distanceY = 1500;
return t;
}
t.prototype.onLoad = function() {
a.gameMgr.setMapTs = this;
a.gameMgr.dmmArr = this.dmmArr;
this.dikuai = this.node.getChildByName("dikuai");
this.dikuai && (this.dikuai.zIndex = cc.macro.MIN_ZINDEX);
if ([ 1, 2, 4 ].includes(s.cocosz.gameMode) && this.node.getChildByName("point")) for (var e = this.node.getChildByName("point"), t = 0; t < e.childrenCount; t++) a.gameMgr.posList[t] = t;
};
t.prototype.onDestroy = function() {
a.gameMgr.setMapTs = null;
};
t.prototype.start = function() {
for (var e = 0; e < this.node.children.length; e++) this.node.children[e];
};
t.prototype.lateUpdate = function() {
s.cocosz.isPause || a.gameMgr.isWin || a.gameMgr.isFail || this.time++ % 30 == 0 && this.checkAllNode();
};
t.prototype.checkAllNode = function() {
if (a.gameMgr && a.gameMgr.mainCamereRootNode) {
this.mainCameraPos = a.gameMgr.mainCamereRootNode.getPosition();
this.distanceX = cc.winSize.width / 2 / a.gameMgr.mainCamera.zoomRatio + 500;
this.distanceY = cc.winSize.height / 2 / a.gameMgr.mainCamera.zoomRatio + 500;
}
for (var e = [ "guide", "guidePath", "player", "colllider", "dikuai", "point", "itemPoint", "tree", "tipLayer", "jingyanLayer", "posLayer", "propLayer" ], t = 0; t < this.node.childrenCount; t++) {
var i = this.node.children[t];
0 == e.includes(i.name) && this.checkNode(i);
}
var o = this.node.getChildByName("dikuai");
if (o) for (t = 0; t < o.childrenCount; t++) {
i = o.children[t];
this.checkNode(i);
}
};
t.prototype.checkNode = function(e, t) {
void 0 === t && (t = !1);
if (t && a.gameMgr && a.gameMgr.mainCamereRootNode) {
this.mainCameraPos = a.gameMgr.mainCamereRootNode.getPosition();
this.distanceX = cc.winSize.width / 2 / a.gameMgr.mainCamera.zoomRatio + 500;
this.distanceY = cc.winSize.height / 2 / a.gameMgr.mainCamera.zoomRatio + 500;
}
if (e && e.isValid && e.activeInHierarchy && !(e.parent.name != this.node.name && "dikuai" != e.parent.name || 0 != e.opacity && 255 != e.opacity)) {
if (e.x + e.width * Math.abs(e.scaleX) / 2 < this.mainCameraPos.x - this.distanceX || e.x - e.width * Math.abs(e.scaleX) / 2 > this.mainCameraPos.x + this.distanceX || e.y + e.height * Math.abs(e.scaleY) / 2 < this.mainCameraPos.y - this.distanceY || e.y - e.height * Math.abs(e.scaleY) / 2 > this.mainCameraPos.y + this.distanceY) {
e.opacity = 0;
return !1;
}
e.opacity = 255;
return !0;
}
};
t.prototype.release = function(e) {
var t = this;
if (this.dikuai && this.dikuai.isValid && this.dikuai.childrenCount) {
for (var i = 0; i < 2; i++) {
(o = this.dikuai.children[i]) && o.isValid && o.destroy();
}
setTimeout(function() {
t.release(e);
});
} else if (this.node.childrenCount) {
for (i = 0; i < 10; i++) {
var o;
(o = this.node.children[i]) && o.isValid && o.destroy();
}
setTimeout(function() {
t.release(e);
});
} else e && e();
};
n([ c([ cc.SpriteFrame ]) ], t.prototype, "dmmArr", void 0);
return t = n([ l ], t);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"./gameMgr": "gameMgr"
} ],
showEffect: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1b984pSECdBZZxcU1QfL4H3", "showEffect");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./gameMgr"), a = cc._decorator, r = a.ccclass, l = a.property, c = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.texMess = new cc.Vec4(0, 0, 0, 0);
t.intervalTime = .05;
t.effectType = 0;
return t;
}
t.prototype.start = function() {
var e = this;
s.gameMgr && s.gameMgr.setMapTs.checkNode(this.node, !0);
this.node.name.includes("bullet_boom") && s.gameMgr.mainCamereRootNode.getBoundingBoxToWorld().intersects(this.node.getBoundingBoxToWorld()) && s.gameMgr.shakeEffect(3, 1, !0);
if (0 == this.effectType) if (this.getComponent(cc.Sprite) && "fire" == this.getComponent(cc.Sprite).getMaterial(0).name) {
var t = this.getComponent(cc.Sprite).getMaterial(0);
t.setProperty("totalTex", this.texMess);
var i = 1;
this.schedule(function() {
s.gameMgr.mainCamera.containsNode(e.node) ? e.node.opacity = 255 : e.node.opacity = 0;
t.setProperty("curTex", i);
++i > e.texMess.x && cc.tween(e.node).to(.2, {
opacity: 0
}).call(function() {
e.node.destroy();
}).start();
}, this.intervalTime, this.texMess.x);
} else this.node.destroy(); else if (1 == this.effectType) this.scheduleOnce(function() {
e.node.destroy();
}, 2); else if (3 == this.effectType) cc.tween(this.node).set({
scale: 3
}).to(.5, {
scale: 1
}).to(.5, {
opacity: 0
}).call(function() {
e.node.destroy();
}).start(); else if (4 == this.effectType) cc.tween(this.node).to(1.5, {
angle: 720,
scale: .5
}).to(.3, {
opacity: 0
}).call(function() {
e.node.destroy();
}).start(); else if (5 == this.effectType) {
this.node.children[0].getComponent(sp.Skeleton).setCompleteListener(function() {
cc.isValid(e.node.isValid) && e.node.destroy();
});
this.scheduleOnce(function() {
cc.isValid(e.node.isValid) && e.node.destroy();
}, 2);
} else if (6 == this.effectType) cc.tween(this.node).delay(.5).to(.2, {
opacity: 0
}).call(function() {
e.node.destroy();
}).start(); else if (7 == this.effectType) {
var o = this.node.children[0];
cc.tween(o).bezierTo(.6, cc.Vec2.ZERO, cc.v2(-50, 50), cc.v2(-50 - 50 * Math.random(), -150)).to(1, {
opacity: 0
}, {
easing: "fade"
}).call(function() {
e.node.destroy();
}).start();
} else 8 == this.effectType && cc.tween(this.node).to(.5, {
opacity: 0
}).call(function() {
e.node.destroy();
}).start();
};
n([ l() ], t.prototype, "texMess", void 0);
n([ l() ], t.prototype, "intervalTime", void 0);
n([ l() ], t.prototype, "effectType", void 0);
return t = n([ r ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {
"./gameMgr": "gameMgr"
} ],
testPoint: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "98d22b+T6BOQ6T4Pl6sHEL6", "testPoint");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, r = (s.property, function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isContact = !1;
return t;
}
t.prototype.start = function() {};
t.prototype.onBeginContact = function() {
this.isContact = !0;
};
t.prototype.getContact = function() {
this.node.destroy();
return this.isContact;
};
return t = n([ a ], t);
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {} ],
"uma.min": [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8af0dO1mnVP/IJMdnyMO4/j", "uma.min");
i.__esModule = !0;
i.default = void 0;
var o = "[UMENG] -- ", n = function() {
var e = null, t = !1;
function i() {
this.setDebug = function(e) {
t = e;
};
this.d = function() {
if (t) try {
"string" == typeof arguments[0] && (arguments[0] = o + arguments[0]);
console.log.apply(console, arguments);
} catch (e) {}
};
this.i = function() {
try {
if (t) try {
"string" == typeof arguments[0] && (arguments[0] = o + arguments[0]);
console.log.apply(console, arguments);
} catch (e) {}
} catch (e) {}
};
this.e = function() {
if (t) try {
"string" == typeof arguments[0] && (arguments[0] = o + arguments[0]);
console.log.apply(console, arguments);
} catch (e) {}
};
this.w = function() {
if (t) try {
"string" == typeof arguments[0] && (arguments[0] = o + arguments[0]);
console.log.apply(console, arguments);
} catch (e) {}
};
this.v = function() {
if (t) try {
"string" == typeof arguments[0] && (arguments[0] = o + arguments[0]);
console.log.apply(console, arguments);
} catch (e) {}
};
this.t = function() {
if (t) try {
console.log.apply(console, arguments);
} catch (e) {}
};
this.tip = function() {
try {
"string" == typeof arguments[0] && (arguments[0] = o + arguments[0]);
console.log.apply(console, arguments);
} catch (e) {}
};
this.tip_w = function(e) {
try {
console.log("%c [UMENG] -- " + e, "background:red; padding: 4px; padding-right: 8px; border-radius: 4px; color: #fff;");
} catch (e) {}
};
this.err = function() {
try {
"string" == typeof arguments[0] && (arguments[0] = o + arguments[0]);
console.log.apply(console, arguments);
} catch (e) {}
};
this.repeat = function(e) {
for (var t = e; t.length < 86; ) t += e;
return t;
};
}
return function() {
null === e && (e = new i());
return e;
};
}(), s = function() {
var e = null;
function t() {
var e = {};
this.useOpenid = function() {
return !!e.useOpenid;
};
this.useSwanid = function() {
return !!e.useSwanid;
};
this.autoGetOpenid = function() {
return !!e.autoGetOpenid;
};
this.appKey = function() {
return e.appKey;
};
this.uploadUserInfo = function() {
return e.uploadUserInfo;
};
this.enableVerify = function() {
return e.enableVerify;
};
this.set = function(t) {
e = t;
};
this.get = function() {
return e;
};
this.setItem = function(t, i) {
e[t] = i;
};
this.getItem = function(t) {
return e[t];
};
}
return function() {
e || (e = new t());
return e;
};
}();
function a() {}
a.prototype = {
on: function(e, t, i) {
var o = this.e || (this.e = {});
(o[e] || (o[e] = [])).push({
fn: t,
ctx: i
});
return this;
},
once: function(e, t, i) {
var o = this;
function n() {
o.off(e, n);
t.apply(i, arguments);
}
n._ = t;
return this.on(e, n, i);
},
emit: function(e) {
for (var t = [].slice.call(arguments, 1), i = ((this.e || (this.e = {}))[e] || []).slice(), o = 0, n = i.length; o < n; o++) i[o].fn.apply(i[o].ctx, t);
return this;
},
off: function(e, t) {
var i = this.e || (this.e = {}), o = i[e], n = [];
if (o && t) for (var s = 0, a = o.length; s < a; s++) o[s].fn !== t && o[s].fn._ !== t && n.push(o[s]);
n.length ? i[e] = n : delete i[e];
return this;
}
};
var r = new a();
r.messageType = {
CONFIG_LOADED: 0,
UMA_LIB_INITED: 1
};
function l() {
return cc ? cc.sys && cc.sys.platform && cc.sys.platform <= 111 && cc.sys.platform >= 108 ? qg || hbs : void 0 : qg || hbs;
}
var c = l(), u = new (function() {
function e() {}
e.prototype.setStorage = function(e, t, i) {
if (c.setStorage) c.setStorage({
key: e,
value: t,
success: function() {
"function" == typeof i && i(!0);
},
fail: function() {
"function" == typeof i && i(!1);
}
}); else {
localStorage.setItem(e, t);
"function" == typeof i && i(!0);
}
};
e.prototype.getStorage = function(e, t) {
if (c.getStorage) c.getStorage({
key: e,
success: function(e) {
"function" == typeof t && t(e);
},
fail: function(i, o) {
n().w(e + "code = : " + o);
"function" == typeof t && t();
}
}); else if (localStorage) {
var i = localStorage.getItem(e);
"function" == typeof t && t(i);
}
};
e.prototype.removeStorage = function(e, t) {
if (c.deleteStorage) c.deleteStorage({
key: e,
success: function() {
"function" == typeof t && t(!0);
},
fail: function() {
"function" == typeof t && t(!1);
}
}); else if (localStorage) {
localStorage.removeItem(e);
"function" == typeof t && t(!0);
}
};
e.prototype.getSystemInfo = function(e) {
c.getSystemInfo({
success: function(t) {
var i = {
model: t.model,
brand: t.brand,
screenWidth: t.screenWidth,
screenHeight: t.screenHeight,
platform: t.osType,
pixelRatio: t.pixelRatio,
platformVersion: t.platformVersionCode,
language: t.language,
deviceName: t.model,
OSVersion: t.osVersionName,
resolution: "",
statusBarHeight: t.statusBarHeight
};
if (t.system) {
var o = t.system.split(" ");
if (Array.isArray(o)) {
!i.platform && (i.platform = o[0]);
!i.OSVersion && (i.OSVersion = o[1]);
}
}
var n = Math.round(t.screenWidth * t.pixelRatio), s = Math.round(t.screenHeight * t.pixelRatio);
i.resolution = n > s ? n + "*" + s : s + "*" + n;
"function" == typeof e && e(i);
},
fail: function() {
"function" == typeof e && e();
}
});
};
e.prototype.getDeviceInfo = function(e) {
"function" == typeof e && e("");
};
e.prototype.getNetworkInfo = function(e) {
c.getNetworkType({
success: function(t) {
"function" == typeof e && e({
networkAvailable: "none" !== t.networkType,
networkType: t.networkType
});
},
fail: function() {
"function" == typeof e && e();
}
});
};
e.prototype.request = function(e) {
var t = e.success, i = e.fail, o = !1, n = null;
e.success = function(e) {
if (!o) {
n && clearTimeout(n);
"function" == typeof t && t(e);
}
};
e.fail = function() {
if (!o) {
n && clearTimeout(n);
"function" == typeof i && i(!1);
}
};
c.request ? c.request(e) : XMLHttpRequest && function(e, t) {
void 0 === t && (t = !0);
(e = e || {}).method = e.method || "GET";
e.url = e.url || "";
e.success = e.success || function() {};
e.fail = e.fail || function() {};
var i, o, n = new XMLHttpRequest(), s = [];
if ("object" == typeof e.data) {
for (var a in e.data) s.push(a + "=" + encodeURIComponent(e.data[a]));
i = JSON.stringify(e.data || {});
o = s.join("&");
} else if ("string" == typeof e.data) {
i = e.data;
o = e.data;
}
"POST" === e.method ? n.open(e.method, e.url, t) : n.open(e.method, e.url + "?" + o || "", t);
if (e.header && "object" == typeof e.header) {
for (var r in e.header) n.setRequestHeader(r, e.header[r]);
e.header["content-type"] || e.header["Content-Type"] || n.setRequestHeader("content-type", "text/plain");
}
t && (n.timeout = e.timeout || 3e4);
n.onreadystatechange = function() {
if (4 == n.readyState && 200 == n.status) {
var t = {};
try {
t = JSON.parse(n.responseText);
} catch (e) {}
e.success({
data: t,
status: n.status
});
} else 4 == n.readyState && e.fail({
data: null,
status: n.status
});
};
"POST" === e.method ? n.send(i || "") : n.send();
}(e, !0);
n = setTimeout(function() {
n && clearTimeout(n);
o = !0;
"function" == typeof i && i(o);
}, e.timeout || 3e4);
};
e.prototype.getSdkType = function() {
return this.getPlatform() + "mp";
};
e.prototype.getPlatform = function() {
return "quickgame";
};
e.prototype.getUserInfo = function(e) {
e && e();
};
e.prototype.getAppInfoSync = function() {
return {};
};
e.prototype.onShareAppMessage = function(e) {};
e.prototype.shareAppMessage = function(e) {};
e.prototype.getContext = function() {
return l();
};
e.prototype.getLaunchOptionsSync = function() {
var e = null;
if (e) return e;
if (!c.getLaunchOptionsSync) return {};
try {
e = c.getLaunchOptionsSync();
} catch (t) {
e = null;
}
return e || {};
};
return e;
}())(), h = function(e, t) {
return (h = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(e, t);
};
function d(e, t) {
h(e, t);
function i() {
this.constructor = e;
}
e.prototype = null === t ? Object.create(t) : (i.prototype = t.prototype, new i());
}
var f, _ = {
SESSION_INTERVAL: 3e4,
LOG_URL: "/quickgamem_logs",
GET_OPENID_URL: "",
USERINFO_URL: "/uminiprogram_logs/comm/uif",
ENDPOINT: "https://umini.shujupie.com",
ENDPOINTB: "https://ulogs.umeng.com",
DEVICE_INFO_KEY: "device_info",
ADVERTISING_ID: "mobile_ad_id",
ANDROID_ID: "android_id",
CURRENT_SESSION: "current_session",
SESSION_PAUSE_TIME: "session_pause_time",
EVENT_SEND_DEFAULT_INTERVAL: 15e3,
EVENT_LAST_SEND_TIME: "last_send_time",
MAX_EVENTID_LENGTH: 128,
MAX_PROPERTY_KEY_LENGTH: 256,
MAX_PROPERTY_KEYS_COUNT: 100,
REPORT_POLICY: "report_policy",
REPORT_INTERVAL_TIME: "report_interval_time",
REPORT_POLICY_START_SEND: "1",
REPORT_POLICY_INTERVAL: "6",
IMPRINT: "imprint",
SEED_VERSION: "1.0.0",
IMPL_VERSION: "2.7.2-beta.17928427",
ALIPAY_AVAILABLE_VERSION: "10.1.52",
SHARE_PATH: "um_share_path",
SHARES: "shares",
REQUESTS: "requests",
UUID: "um_uuid",
UUID_SUFFIX: "ud",
OPENID: "um_od",
UNIONID: "um_unid",
ALIPAYID: "um_alipayid",
USERID: "um_userid",
PROVIDER: "um_provider",
SWANID: "um_swanid",
ANONYMOUSID: "um_anonymousid",
LAUNCH_OPTIONS: "LAUNCH_OPTIONS",
UM_SSRC: "_um_ssrc",
USER_INFO: "user_info",
IS_ALIYUN: !1
}, p = {
isNumber: function(e) {
return !Number.isNaN(parseInt(e, 10));
},
compareVersion: function(e, t) {
for (var i = String(e).split("."), o = String(t).split("."), n = 0; n < Math.max(i.length, o.length); n++) {
var s = parseInt(i[n] || 0, 10), a = parseInt(o[n] || 0, 10);
if (s > a) return 1;
if (s < a) return -1;
}
return 0;
},
getRandomStr: function(e) {
for (var t = "", i = [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ], o = 0; o < Number(e); o++) t += i[Math.round(Math.random() * (i.length - 1))];
return t;
},
clone: function(e) {
return JSON.parse(JSON.stringify(e));
},
startsWith: function(e, t) {
return !(!e || !t || 0 === t.length || t.length > e.length) && e.substr(0, t.length) === t;
},
endsWith: function(e, t) {
return !(!t || 0 === e.length || t.length > e.length) && e.substring(e.length - t.length) === t;
},
assign: function(e) {
if (null == e) throw new TypeError("Cannot convert undefined or null to object");
for (var t = Object(e), i = 1; i < arguments.length; i++) {
var o = arguments[i];
if (o) for (var n in o) Object.prototype.hasOwnProperty.call(o, n) && (t[n] = o[n]);
}
return t;
},
deepEqual: function e(t, i) {
if (t === i) return !0;
if (t && "object" == typeof t && i && "object" == typeof i) {
if (Object.keys(t).length !== Object.keys(i).length) return !1;
for (var o in t) {
if (Object.prototype.hasOwnProperty.call(i, o)) return !1;
if (!e(t[o], i[o])) return !1;
}
return !0;
}
return !1;
},
trimStart: function(e, t) {
if (!e) return "";
if ("string" == typeof t && t.length) {
var i = new RegExp("^" + t + "*");
e = e.replace(i, "");
} else e = e.replace(/^s*/, "");
return e;
},
trimEnd: function(e, t) {
if (!e) return "";
var i, o;
if ("string" == typeof t && t.length) {
i = new RegExp(t);
o = e.length;
for (;i.test(e.charAt(o)); ) o -= 1;
return e.slice(0, o + 1);
}
i = /s/;
o = e.length - 1;
for (;i.test(e.charAt(o)); ) o -= 1;
return e.slice(0, o + 1);
},
isFunction: function(e) {
return "function" == typeof e;
}
}, g = function(e) {
d(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._openid = "";
t._unionid = "";
t._useOpenid = !1;
return t;
}
t.prototype.initID = function(e) {
var t = this;
t._idType = t._useOpenid ? "openid" : "uuid";
n().v("id type: ", t._idType);
u.getStorage(_.UNIONID, function(e) {
t._unionid = e;
});
this._useOpenid ? u.getStorage(_.OPENID, function(i) {
t._openid = i;
e && e();
}) : e && e();
};
t.prototype.setUseOpenid = function(e) {
this._useOpenid = e;
};
t.prototype.setOpenid = function(e) {
if (!this._openid && e) {
this._openid = e;
u.setStorage(_.OPENID, e);
}
};
t.prototype.setUnionid = function(e) {
if (!this._unionid && e) {
this._unionid = e;
u.setStorage(_.UNIONID, e);
}
};
t.prototype.getIdTracking = function() {
var t = e.prototype.getIdTracking.call(this);
this._openid && (t.openid = this._openid);
this._unionid && (t.unionid = this._unionid);
this._userid && (t.userid = this._userid);
return t;
};
t.prototype.getId = function() {
return this._useOpenid ? this._openid : this._uuid;
};
return t;
}(function() {
function e() {
this._uuid = "";
this._userid = "";
this._provider = "";
this._idType = "";
}
e.prototype.createUUID = function() {
return p.getRandomStr(10) + Date.now() + p.getRandomStr(7) + _.UUID_SUFFIX;
};
e.prototype.initUUID = function(e) {
var t = this;
u.getStorage(_.UUID, function(i) {
if (i) t._uuid = i; else {
t._uuid = t.createUUID();
u.setStorage(_.UUID, t._uuid);
}
e && e(i);
});
};
e.prototype.initUserid = function() {
var e = this;
u.getStorage(_.USERID, function(t) {
if (!e._userid && t) {
e._userid = t;
n().v("userId is ", t);
}
});
u.getStorage(_.PROVIDER, function(t) {
if (!e._provider && t) {
e._provider = t;
n().v("provider is ", t);
}
});
};
e.prototype.init = function(e) {
var t = this;
t.initUUID(function() {
t.initUserid();
t.initID(e);
});
};
e.prototype.setUserid = function(e, t) {
if (!this._userid && e) {
this._userid = e;
this._provider = t;
u.setStorage(_.USERID, e);
u.setStorage(_.PROVIDER, t);
}
};
e.prototype.getUserId = function() {
return this._userid;
};
e.prototype.getProvider = function() {
return this._provider;
};
e.prototype.getIdType = function() {
return this._idType;
};
e.prototype.getIdTracking = function() {
var e = {};
this._uuid && (e.uuid = this._uuid);
this._userid && (e.userid = this._userid);
return e;
};
return e;
}()), m = l(), v = function(e) {
d(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.getOpenIdAsync = function(e, t) {
var i = this;
m.login({
success: function(o) {
o.code ? u.request({
url: _.ENDPOINT + _.GET_OPENID_URL,
method: "GET",
data: {
key: e,
code: o.code
},
success: function(e) {
if (e && 200 === e.statusCode && e.data && e.data.data) {
var o = e.data.data;
i.setOpenid(o.oid);
i.setUnionid(o.uid);
return t && t(!0);
}
t && t();
},
fail: function(e) {
n().v("wx request failed...", e);
t && t();
}
}) : t && t();
},
fail: function() {
t && t();
}
});
};
return t;
}(g), y = (f = null, function() {
f || (f = new v());
return f;
}), w = function() {
var e = null;
function t() {
var e = !1, t = null, i = [];
this.addPageStart = function(i) {
if (i && !e) {
t = {
ts: Date.now(),
path: i,
page_name: i
};
e = !0;
}
};
this.addPageEnd = function(o) {
if (e && o && t && o === t.page_name) {
var n = Date.now() - t.ts;
t.duration = Math.abs(n);
i.push(t);
t = null;
e = !1;
}
};
this.get = function() {
return i;
};
this.getCurrentPage = function() {
return t;
};
this.clear = function() {
i.length = 0;
};
}
return function() {
e || (e = new t());
return e;
};
}(), I = {}, b = function() {
var e = null, t = [], i = "";
function o() {
return {
add: function(e, o) {
n().v("share origin: %o", e);
var s = {
title: e && e.title,
path: e && e.path && e.path.split("?")[0],
_um_sts: Date.now()
};
s.path && s.path.length > 1 && p.startsWith(s.path, "/") && (s.path = p.trimStart(s.path, "/"));
var a = e.path || "", r = y().getId();
if (r) {
var l = i.split(","), c = (l = l.filter(function(e) {
return e.length > 0;
})).indexOf(r);
c >= 0 && (l = l.slice(0, c));
l.length < 3 && l.push(r);
var u = l.join(",");
-1 !== a.indexOf("?") ? a += "&_um_ssrc=" + u : a += "?_um_ssrc=" + u;
var h = Date.now();
a += "&_um_sts=" + h;
if (o) {
var d = function(e) {
var t = [];
for (var i in e) "_um_ssrc" !== i && "_um_sts" !== i && t.push(i + "=" + e[i]);
return t.join("&");
}(I), f = d ? d + "&_um_ssrc=" + u + "&_um_sts=" + h : "_um_ssrc=" + u + "&_um_sts=" + h;
e.query = e.query ? e.query + "&_um_ssrc=" + u + "&_um_sts=" + h : f;
} else e.path = a;
s._um_ssrc = u;
s._um_sts = h;
}
t.push(s);
n().v("share: %o", e);
return e;
},
setShareSource: function(e) {
i = e;
},
clear: function() {
t.length = 0;
},
get: function() {
return t;
}
};
}
return function() {
e || (e = new o());
return e;
};
}(), S = function(e) {
if (e) try {
return JSON.stringify(e);
} catch (e) {}
return "";
}, C = function(e) {
if (e) try {
return JSON.parse(e);
} catch (e) {}
return null;
}, A = function() {
var e = null, t = "", i = null, o = !1;
function n() {
this.load = function(e) {
if (i) {
u.removeStorage(t);
e();
} else {
t = "um_cache_" + s().appKey();
u.getStorage(t, function(n) {
i = C(n) || {};
o = !0;
u.removeStorage(t);
e();
});
}
};
this.save = function() {
i && u.setStorage(t, S(i));
};
this.set = function(e, t) {
i && (i[e] = t);
};
this.get = function(e) {
return (i || {})[e];
};
this.remove = function(e) {
i && i[e] && delete i[e];
};
this.getAll = function() {
return i;
};
this.clear = function() {
i = null;
};
this.has = function(e) {
return !!this.get(e);
};
this.isLoaded = function() {
return o;
};
}
return function() {
e || (e = new n());
return e;
};
}(), L = function() {
var e, t, i = [], o = [];
function s() {
if (i.length) {
var e = A().get("ekvs");
if (function(e) {
var t = 0;
for (var i in e) Array.isArray(e[i]) && (t += e[i].length);
return t;
}(e) + i.length <= 1e4) {
e = a(e, i);
A().set("ekvs", e);
}
}
}
function a(e, i) {
var o = (e = e || {})[t];
Array.isArray(o) && o.length ? e[t] = o.concat(i) : e[t] = [].concat(i);
return e;
}
return function() {
e || (e = {
addEvent: function(e) {
if (t) {
i.unshift(e);
if (i.length > 1) {
s();
i.length = 0;
}
} else {
n().w("session id is null: ", t);
o.unshift(e);
}
},
setSessionId: function(e) {
t = e;
n().v("setSessionId: ", t);
if (Array.isArray(o) && o.length && t) {
for (var i = 0; i < o.length; i++) this.addEvent(o[i]);
o.length = 0;
}
},
getEkvs: function() {
var e = A().get("ekvs");
i && i.length && (e = a(e, i));
return e;
},
clear: function() {
A().remove("ekvs");
i.length = 0;
}
});
return e;
};
}(), T = "2g", P = "3g", B = "4g", N = "half_session", O = "close_session", k = "ekv", R = [ "access", "access_subtype" ], M = function() {
var e = null;
function t() {
var e = !1, t = {};
function i(e) {
var i = A().get(_.IMPRINT);
i && (t.imprint = i);
t.device_type = "Phone";
t.sdk_version = _.IMPL_VERSION;
t.appkey = s().appKey();
u.getDeviceInfo(function(e) {
t.device_info = e || "";
});
var o = u.getAppInfoSync();
t.appid = o.appId;
t.app_env = o.appEnv;
t.app_version = o.appVersion;
u.getSystemInfo(function(i) {
u.getNetworkInfo(function(o) {
var n = function(e, t) {
var i = {};
(e = e || {}).safeArea = e.safeArea || {};
var o = (t = t || {}).networkType;
"none" === o && (o = "unknown");
var n = e.model || "", s = e.platform || "", a = e.brand || "", r = a.toLowerCase();
i.sdk_type = u.getSdkType();
i.platform = u.getPlatform();
i.platform_sdk_version = e.platformSDKVersion;
i.platform_version = e.platformVersion;
i.resolution = e.resolution;
i.pixel_ratio = e.pixelRatio;
i.os = s;
i.font_size_setting = e.fontSizeSetting;
i.device_model = n;
i.device_brand = a;
i.device_manufacturer = r;
i.device_manuid = n;
i.device_name = n;
i.os_version = e.OSVersion;
i.language = e.language;
i.theme = e.theme;
i.benchmark_level = e.benchmarkLevel;
i.status_bar_height = e.statusBarHeight;
i.safe_area_top = e.safeArea.top;
i.safe_area_left = e.safeArea.left;
i.safe_area_right = e.safeArea.right;
i.safe_area_bottom = e.safeArea.bottom;
i.safe_area_height = e.safeArea.height;
i.safe_area_width = e.safeArea.width;
i.storage = e.storage;
i.screen_width = e.screenWidth;
i.screen_height = e.screenHeight;
i.host = e.host;
switch (o = o ? o.toLowerCase() : "") {
case B:
i.access_subtype = "LTE";
i.access = "4G";
break;

case P:
i.access_subtype = "CDMA";
i.access = "3G";
break;

case T:
i.access_subtype = "GRPS";
i.access = "2G";
break;

default:
i.access = o;
delete i.access_subtype;
}
return i;
}(i, o);
p.assign(t, n);
e && e();
});
});
}
return {
init: function() {
i(function() {
e = !0;
});
},
isLoaded: function() {
return e;
},
get: function() {
return t;
},
getRealtimeFields: function() {
var e = {};
R.forEach(function(i) {
e[i] = t[i];
});
return e;
},
setIdTracking: function(e) {
this.setItem("id_tracking", e);
},
setIdType: function(e) {
this.setItem("id_type", e);
},
setAppVersion: function(e) {
this.setItem("app_version", e);
},
setSuperProperty: function(e) {
t.sp || (t.sp = {});
t.sp.isv = e;
},
getSuperProperty: function() {
return t && t.sp ? t.sp.isv : "";
},
setItem: function(e, i) {
t[e] = i;
},
getItem: function(e) {
return t[e];
}
};
}
return {
instance: function() {
e || (e = t());
return e;
}
};
}(), D = function() {
var e = null, t = null, i = null;
return function() {
e || (e = {
resume: function(e) {
var o = !1;
i || (i = A().get(_.CURRENT_SESSION));
var s = new Date();
t = s.getTime();
if (!i || !i.end_time || t - i.end_time > _.SESSION_INTERVAL) {
o = !0;
!function(e) {
try {
var t = (i || {}).options || {}, o = p.assign({}, function(e) {
var t = {};
for (var i in e) 0 === i.indexOf("_um_") && (t[i] = e[i]);
n().v("query: ", e);
n().v("_um_params: ", t);
return t;
}(e.query));
o.path = e.path || t.path;
o.scene = e.scene ? u.getPlatform() + "_" + e.scene : t.scene;
var s = e.referrerInfo;
s && (o.referrerAppId = s.appId);
n().v("session options: ", o);
var a = o[_.UM_SSRC];
a && b().setShareSource(a);
var r = Date.now();
i = {
id: p.getRandomStr(10) + r,
start_time: r,
options: o
};
} catch (e) {
n().e("生成新session失败: ", e);
}
}(e);
n().v("开始新的session(%s): ", i.id, i);
} else n().v("延续上一次session(%s): %s ", i.id, s.toLocaleTimeString(), i);
return o;
},
pause: function() {
!function() {
if (i) {
var e = new Date();
i.end_time = e.getTime();
"number" != typeof i.duration && (i.duration = 0);
i.duration = i.end_time - t;
A().set(_.CURRENT_SESSION, i);
n().v("退出会话(%s): %s ", i.id, e.toLocaleTimeString(), i);
}
}();
},
getCurrentSessionId: function() {
return (i || {}).id;
},
getCurrentSession: function() {
return i;
},
cloneCurrentSession: function() {
return p.clone(i);
}
});
return e;
};
}();
function E(e) {
var t = null;
switch (e) {
case N:
t = function() {
var e = null, t = D().cloneCurrentSession();
t && (e = {
header: {
st: "1"
},
analytics: {
sessions: [ t ]
}
});
return e;
}();
break;

case O:
t = function() {
var e = null, t = {}, i = D().cloneCurrentSession();
if (i) {
var o = w().get(), n = b().get();
Array.isArray(o) && o.length && (i.pages = p.clone(o));
Array.isArray(n) && n.length && (i.shares = p.clone(n));
w().clear();
b().clear();
t.sessions = [ i ];
}
var s = L().getEkvs();
if (s) {
t.ekvs = p.clone(s);
L().clear();
}
(t.sessions || t.ekvs) && (e = {
analytics: t
});
return e;
}();
break;

case k:
t = function() {
var e = null, t = L().getEkvs();
if (t) {
e = {
analytics: {
ekvs: p.clone(t)
}
};
L().clear();
}
return e;
}();
}
return t;
}
var x = {
sessions: "sn",
ekvs: "e",
active_user: "active_user"
}, z = {
sdk_type: "sdt",
access: "ac",
access_subtype: "acs",
device_model: "dm",
language: "lang",
device_type: "dt",
device_manufacturer: "dmf",
device_name: "dn",
platform_version: "pv",
id_type: "it",
font_size_setting: "fss",
os_version: "ov",
device_manuid: "did",
platform_sdk_version: "psv",
device_brand: "db",
appkey: "ak",
_id: "id",
id_tracking: "itr",
imprint: "imp",
sdk_version: "sv",
resolution: "rl",
testToken: "ttn",
theme: "t5",
benchmark_level: "bml",
screen_width: "sw",
screen_height: "sh",
status_bar_height: "sbh",
safe_area_top: "sat",
safe_area_left: "sal",
safe_area_right: "sar",
safe_area_bottom: "sab",
safe_area_height: "sah",
safe_area_width: "saw",
pixel_ratio: "pr",
storage: "s7",
host: "hs"
}, G = {
uuid: "ud",
unionid: "und",
openid: "od",
anonymousid: "nd",
alipay_id: "ad",
device_id: "dd",
userid: "puid"
};
function j(e, t) {
var i = U(e, t);
e && e.id_tracking && (i[t.id_tracking || "id_tracking"] = U(e.id_tracking, G));
return i;
}
function U(e, t) {
var i = {};
for (var o in e) t[o] ? i[t[o]] = e[o] : i[o] = e[o];
return i;
}
function V(e, t) {
var i = {};
if (e) for (var o in e) e[o] && (i[t[o]] = e[o]);
return i;
}
var F = "";
function W() {
return F;
}
var H = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", Y = function(e) {
for (var t = {}, i = 0, o = e.length; i < o; i++) t[e.charAt(i)] = i;
return t;
}(H), Z = String.fromCharCode, q = function(e) {
if (e.length < 2) return (t = e.charCodeAt(0)) < 128 ? e : t < 2048 ? Z(192 | t >>> 6) + Z(128 | 63 & t) : Z(224 | t >>> 12 & 15) + Z(128 | t >>> 6 & 63) + Z(128 | 63 & t);
var t = 65536 + 1024 * (e.charCodeAt(0) - 55296) + (e.charCodeAt(1) - 56320);
return Z(240 | t >>> 18 & 7) + Z(128 | t >>> 12 & 63) + Z(128 | t >>> 6 & 63) + Z(128 | 63 & t);
}, J = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g, Q = function(e) {
var t = [ 0, 2, 1 ][e.length % 3], i = e.charCodeAt(0) << 16 | (e.length > 1 ? e.charCodeAt(1) : 0) << 8 | (e.length > 2 ? e.charCodeAt(2) : 0);
return [ H.charAt(i >>> 18), H.charAt(i >>> 12 & 63), t >= 2 ? "=" : H.charAt(i >>> 6 & 63), t >= 1 ? "=" : H.charAt(63 & i) ].join("");
}, K = function(e) {
return function(e) {
return e.replace(J, q);
}(e).replace(/[\s\S]{1,3}/g, Q);
}, X = new RegExp([ "[À-ß][-¿]", "[à-ï][-¿]{2}", "[ð-÷][-¿]{3}" ].join("|"), "g"), $ = function(e) {
switch (e.length) {
case 4:
var t = ((7 & e.charCodeAt(0)) << 18 | (63 & e.charCodeAt(1)) << 12 | (63 & e.charCodeAt(2)) << 6 | 63 & e.charCodeAt(3)) - 65536;
return Z(55296 + (t >>> 10)) + Z(56320 + (1023 & t));

case 3:
return Z((15 & e.charCodeAt(0)) << 12 | (63 & e.charCodeAt(1)) << 6 | 63 & e.charCodeAt(2));

default:
return Z((31 & e.charCodeAt(0)) << 6 | 63 & e.charCodeAt(1));
}
}, ee = function(e) {
var t = e.length, i = t % 4, o = (t > 0 ? Y[e.charAt(0)] << 18 : 0) | (t > 1 ? Y[e.charAt(1)] << 12 : 0) | (t > 2 ? Y[e.charAt(2)] << 6 : 0) | (t > 3 ? Y[e.charAt(3)] : 0), n = [ Z(o >>> 16), Z(o >>> 8 & 255), Z(255 & o) ];
n.length -= [ 0, 0, 2, 1 ][i];
return n.join("");
}, te = function(e) {
return function(e) {
return e.replace(/[\s\S]{1,4}/g, ee);
}(e).replace(X, $);
}, ie = function(e, t) {
return t ? K(String(e)).replace(/[+\/]/g, function(e) {
return "+" == e ? "-" : "_";
}).replace(/=/g, "") : K(String(e));
}, oe = function(e) {
return te(String(e).replace(/[-_]/g, function(e) {
return "-" == e ? "+" : "/";
}).replace(/[^A-Za-z0-9\+\/]/g, ""));
}, ne = new function() {
var e = "", t = this;
this.set = function(t) {
e = t;
};
this.get = function() {
return e;
};
this.getImpObj = function() {
return C(oe(e));
};
this.getItem = function(e) {
var i = t.getImpObj();
return i && i[e] || "";
};
this.load = function() {
e = A().get(_.IMPRINT);
};
this.save = function() {
e && A().set(_.IMPRINT, e);
};
}();
function se(e, t, i, o) {
M.instance().setIdType(y().getIdType());
M.instance().setIdTracking(y().getIdTracking());
var s = y().getUserId();
s && e.analytics && (e.analytics.active_user = {
puid: s,
provider: y().getProvider()
});
var a = p.clone(M.instance().get());
e.header = p.assign(a, e.header, {
ts: Date.now(),
testToken: W(),
traceId: p.getRandomStr(10) + Date.now() + p.getRandomStr(9)
});
var r = function(e) {
return {
h: j(e.header, z),
a: V(e.analytics, x)
};
}(e), l = S(r), c = {
url: _.ENDPOINT + _.LOG_URL,
method: "POST",
data: ie(l),
success: function(o) {
var s = o.code || o.status || o.statusCode;
if (200 === s || 413 === s) {
n().i("数据发送成功: ", e, l);
!function(e) {
if (e) {
M.instance().setItem(_.IMPRINT, e);
ne.set(e);
ne.save();
n().v("imprint: ", ne.getImpObj());
ne.getItem("ttn_invalid") && (F = "");
}
}((o.data || {}).imprint);
"function" == typeof t && t(o);
} else {
n().w("数据发送失败: ", l);
"function" == typeof i && i();
}
},
fail: function(e) {
n().w("超时: ", l);
"function" == typeof i && i();
},
complete: function() {
"function" == typeof o && o();
}
};
u.request(p.assign(c, {
header: {
"content-type": "text/plain",
"Msg-Type": u.getSdkType() + "/json"
}
}));
}
function ae(e) {
var t = e, i = [];
this.enqueue = function(e) {
"number" == typeof t && this.size() >= t && this.dequeue();
i.push(e);
};
this.dequeue = function() {
return i.shift();
};
this.front = function() {
return i[0];
};
this.isEmpty = function() {
return 0 === i.length;
};
this.clear = function() {
i.length = 0;
};
this.size = function() {
return i.length;
};
this.items = function() {
return i;
};
this.print = function() {
console.log(i.toString());
};
}
var re = function() {
var e = null, t = !1, i = [], o = new ae(50);
function s(e, t, i) {
if (M.instance().isLoaded()) {
t = t || {};
var n = E(e);
if (n) {
var a = M.instance().getRealtimeFields();
n.header = p.assign({}, n.header, a);
n.noCache = t.noCache;
o.enqueue(n);
}
"function" == typeof i && i();
} else setTimeout(function() {
s(e, t, i);
}, 100);
}
function a(e) {
var t = o.front();
if (t) se(t, function() {
o.dequeue();
a(e);
}, function() {
var t = o.dequeue();
t && !t.noCache && i.push(t);
a(e);
}); else {
!function() {
i.forEach(function(e) {
o.enqueue(e);
});
i.length = 0;
}();
e();
}
}
function r(e) {
if (y().getId()) if (t) n().i("队列正在发送中"); else {
t = !0;
a(function() {
t = !1;
"function" == typeof e && e();
});
} else {
n().i("获取id标识失败，暂缓发送");
"function" == typeof e && e();
}
}
function l() {
this.send = function(e, t, i) {
e ? this.add(e, t, function() {
r(i);
}) : r(i);
};
this.add = function(e, t, i) {
s(e, t, i);
};
this.load = function() {
var e = A().get(_.REQUESTS);
e && e.length && e.forEach(function(e) {
o.enqueue(e);
});
A().remove(_.REQUESTS);
};
this.save = function() {
A().set(_.REQUESTS, p.clone(o.items()));
o.clear();
};
}
return function() {
e || (e = new l());
return e;
};
}(), le = function() {
var e = null, t = null;
function i() {
this.setUserInfo = function(e) {
t = e;
};
this.update = function() {
e(t) || u.getUserInfo(function(t) {
e(t);
});
};
function e(e) {
if (e && "object" == typeof e) {
var t = A().get(_.USER_INFO);
t && p.deepEqual(e, t) || function(e, t) {
var i = s().appKey(), o = u.getSdkType(), a = y().getId(), r = y().getIdType();
if (i && o && a && r) {
var l = {
ak: s().appKey(),
sdt: u.getSdkType(),
uin: e.nickName,
uia: e.avatar || e.avatarUrl,
uig: e.gender,
uit: e.country,
uip: e.province,
uic: e.city,
uil: e.language,
id: y().getId(),
it: y().getIdType(),
age: e.age,
cln: e.constellation
}, c = JSON.stringify(l);
c = ie(c);
u.request({
url: _.ENDPOINT + _.USERINFO_URL,
method: "POST",
header: {
"content-type": "application/x-www-form-urlencoded"
},
data: "ui=" + c,
success: function(i) {
n().v("用户信息上传成功: ", e);
t && t(i && i.data && 200 === i.data.code);
},
fail: function() {
n().e("用户信息上传失败: ", e);
t && t(!1);
}
});
}
}(e, function(t) {
t && A().set(_.USER_INFO, e);
});
return !0;
}
return !1;
}
}
return function() {
e || (e = new i());
return e;
};
}();
function ce(e, t) {
this.id = e;
this.ts = Date.now();
var i = typeof t;
if ("string" === i && t) this[e] = t; else if ("object" === i) for (var o in t) ({}).hasOwnProperty.call(t, o) && (this[o] = t[o]);
}
function ue() {
var e = !1, t = !1, i = 0;
this.init = function(t) {
n().v("sdk version: " + _.IMPL_VERSION);
e ? n().v("Lib重复实例化") : A().load(function() {
n().v("cache初始化成功: ", A().getAll());
!function() {
y().setUseOpenid && y().setUseOpenid(s().useOpenid());
y().init(function() {
M.instance().init();
n().v("Header初始化成功");
});
}();
e = !0;
"function" == typeof t && t();
n().tip("SDK集成成功");
});
};
this.resume = function(i) {
if (e && !t) {
n().v("showOptions: ", i);
var o;
t = !0;
s().enableVerify() && i && i.query && (o = i.query._ttn, F = o || F);
this._resume(i);
}
};
this._resume = function(e) {
re().load();
var t = D().resume(e), i = D().getCurrentSessionId();
L().setSessionId(i);
t && re().add(N, {}, function() {
y().setUseOpenid && y().setUseOpenid(s().useOpenid());
if (s().useOpenid() && s().autoGetOpenid() && !y().getId()) {
n().v("get id async");
o(10, 3e3);
} else {
n().v("session auto send");
re().send();
}
});
function o(e, t) {
y().getId() || e <= 0 || y().getOpenIdAsync(s().appKey(), function(i) {
if (i) {
n().v("获取id成功");
re().send();
} else {
n().v("获取openid失败,启动重试,剩余可用次数", e - 1);
setTimeout(function() {
o(e - 1, t);
}, t);
}
});
}
};
this.pause = function(o) {
if (e) {
t = !1;
i = 0;
D().pause();
s().uploadUserInfo() && le().update();
re().send(O, {}, function() {
re().save();
A().save();
n().v("cache save success");
"function" == typeof o && o();
});
}
};
this.setOpenid = function(e) {
n().v("setOpenId: %s", e);
y().setOpenid(e);
re().send();
};
this.setUnionid = function(e) {
n().v("setUnionid: %s", e);
y().setUnionid(e);
};
this.setUserid = function(e, t) {
n().v("setUserid: %s", e, t);
y().setUserid(e, t);
};
this.setUserInfo = function(e) {
n().v("setUserInfo: %s", e);
le().setUserInfo(e);
};
this.setAnonymousid = function(e) {
n().v("setAnonymousId: %s", e);
y().setAnonymousid(e);
re().send();
};
this.setAppVersion = function(e) {
e && "string" != typeof e ? n().w("setAppVersion方法只接受字符串类型参数") : M.instance().setAppVersion(e);
};
this.setAlipayUserid = function(e) {
if (e && "string" != typeof e) n().w("setAlipayUserid方法只接受字符串类型参数"); else {
n().v("setAlipayUserid: %s", e);
y().setAlipayUserid(e);
}
};
this.setDeviceId = function(e) {
if ("string" == typeof e) {
y().setDeviceId(e);
return e;
}
};
this.setSuperProperty = function(e) {
if (e && "string" != typeof e) n().w("超级属性只支持字符串类型"); else {
var t = this;
if (M.instance().getSuperProperty() !== e) {
M.instance().setSuperProperty(e);
t.pause(function() {
t.resume();
});
}
}
};
this.trackEvent = function(t, o) {
if (e) {
n().v("event: ", t, o);
if (function(e, t) {
if (!e || "string" != typeof e) {
n().e('please check trackEvent id. id should be "string" and not null');
return !1;
}
var i = [ "id", "ts", "du" ], o = {};
i.forEach(function(e) {
o[e] = 1;
});
if (o[e]) {
n().e("eventId不能与以下保留字冲突: " + i.join(","));
return !1;
}
if (e.length > _.MAX_EVENTID_LENGTH) {
n().e("The maximum length of event id shall not exceed " + _.MAX_EVENTID_LENGTH);
return !1;
}
if (t && ("object" != typeof t || Array.isArray(t)) && "string" != typeof t) {
n().e("please check trackEvent properties. properties should be string or object(not include Array)");
return !1;
}
if ("object" == typeof t) {
var s = 0;
for (var a in t) if ({}.hasOwnProperty.call(t, a)) {
if (a.length > _.MAX_PROPERTY_KEY_LENGTH) {
n().e("The maximum length of property key shall not exceed " + _.MAX_PROPERTY_KEY_LENGTH);
return !1;
}
if (s >= _.MAX_PROPERTY_KEYS_COUNT) {
n().e("The maximum count of properties shall not exceed " + _.MAX_PROPERTY_KEYS_COUNT);
return !1;
}
if (o[a]) {
n().e("属性中的key不能与以下保留字冲突: " + i.join(","));
return !1;
}
s += 1;
}
}
return !0;
}(t, o)) {
var s = new ce(t, o);
L().addEvent(s);
var a = !!W(), r = a ? 0 : _.EVENT_SEND_DEFAULT_INTERVAL, l = Date.now();
if ("number" != typeof i || "number" != typeof r || i <= 0 || l - i > r) {
i = l;
re().send(k, {
noCache: a
}, function() {});
}
}
}
};
this.trackShare = function(t) {
if (e) try {
if (u.getSdkType().indexOf("game") > -1) {
t = b().add(t, !0);
n().v("shareQuery: ", t);
} else {
t = b().add(t, !1);
n().v("sharePath: ", t.path);
}
} catch (e) {
n().v("shareAppMessage: ", e);
}
return t;
};
this.trackPageStart = function(t) {
e && w().addPageStart(t);
};
this.trackPageEnd = function(t) {
e && w().addPageEnd(t);
};
this.onShareAppMessage = function(e) {
var t = this;
u.onShareAppMessage(function() {
return t.trackShare(e());
});
};
this.shareAppMessage = function(e) {
this.trackShare(e);
u.shareAppMessage(e);
};
}
var he = [];
function de() {}
de.prototype = {
createMethod: function(e, t, i) {
try {
e[t] = i && i[t] ? function() {
return i[t].apply(i, arguments);
} : function() {
he.push([ t, [].slice.call(arguments) ]);
};
} catch (e) {
n().v("create method errror: ", e);
}
},
installApi: function(e, t) {
try {
var i, o, s = "resume,pause,trackEvent,trackPageStart,trackPageEnd,trackShare,setUserid,setOpenid,setUnionid,onShareAppMessage,shareAppMessage,setUserInfo".split(",");
for (i = 0, o = s.length; i < o; i++) this.createMethod(e, s[i], t);
if (t) for (i = 0, o = he.length; i < o; i++) {
var a = he[i];
try {
t[a[0]].apply(t, a[1]);
} catch (e) {
n().v("impl[v[0]].apply error: ", a[0], e);
}
}
} catch (e) {
n().v("install api errror: ", e);
}
}
};
var fe = [ _.ENDPOINT, _.ENDPOINTB ];
function _e(e, t) {
var i, o;
0 === e || 1 === e && t ? i = _.ENDPOINT : 2 === e && t ? i = _.ENDPOINTB : t && (i = fe[e]);
if (e >= fe.length || t) {
t && (o = i, _.ENDPOINT = o);
t && n().v("命中可用服务", i);
!t && n().tip_w("未命中可用服务");
return !1;
}
u.request({
url: _.ENDPOINT + "/uminiprogram_logs/ckdh",
success: function(t) {
200 === (t.code || t.status || t.statusCode) && t.data && 200 === t.data.code ? _e(e + 1, !0) : _e(e + 1, !1);
},
fail: function() {
_e(e + 1, !1);
}
});
}
var pe = function(e) {
_.ENDPOINTB && setTimeout(function() {
_e(0, !1);
}, e);
}, ge = new de(), me = {
_inited: !1,
_log: n(),
preinit: function(e) {
if (e && "object" == typeof e) for (var t in e) _[t] = e[t];
return _;
},
use: function(e, t) {
e && p.isFunction(e.install) ? e.install(me, t) : p.isFunction(e) && e(me, t);
return me;
},
messager: r,
init: function(e) {
if (this._inited) n().v("已经实例过，请避免重复初始化"); else if (e) if (e.appKey) {
"boolean" != typeof e.useOpenid && (e.useOpenid = !0);
s().set(e);
n().setDebug(e.debug);
this._inited = !0;
var t = this;
r.emit(r.messageType.CONFIG_LOADED, e);
try {
var i = new ue();
n().v("成功创建Lib对象");
if (!u.getContext()) return;
i.init(function() {
n().v("Lib对象初始化成功");
ge.installApi(t, i);
n().v("安装Lib接口成功");
r.emit(r.messageType.UMA_LIB_INITED, e);
});
pe(3e3);
} catch (e) {
n().w("创建Lib对象异常: " + e);
}
} else n().err("请确保传入正确的appkey"); else n().err("请正确设置相关信息！");
}
};
try {
ge.installApi(me, null);
} catch (o) {
n().w("uma赋值异常: ", o);
}
var ve = "2.7.2-beta.17928427", ye = "none", we = {}, Ie = Array.isArray;
we.isArray = Ie || function(e) {
return "[object Array]" === toString.call(e);
};
we.isObject = function(e) {
return e === Object(e) && !we.isArray(e);
};
we.isEmptyObject = function(e) {
if (we.isObject(e)) {
for (var t in e) if (hasOwnProperty.call(e, t)) return !1;
return !0;
}
return !1;
};
we.isUndefined = function(e) {
return void 0 === e;
};
we.isString = function(e) {
return "[object String]" === toString.call(e);
};
we.isDate = function(e) {
return "[object Date]" === toString.call(e);
};
we.isNumber = function(e) {
return "[object Number]" === toString.call(e);
};
we.each = function(e, t, i) {
if (null != e) {
var o = {}, n = Array.prototype.forEach;
if (n && e.forEach === n) e.forEach(t, i); else if (e.length === +e.length) {
for (var s = 0, a = e.length; s < a; s++) if (s in e && t.call(i, e[s], s, e) === o) return;
} else for (var r in e) if (hasOwnProperty.call(e, r) && t.call(i, e[r], r, e) === o) return;
}
};
we.buildQuery = function(e, t) {
var i, o, n = [];
void 0 === t && (t = "&");
we.each(e, function(e, t) {
i = encodeURIComponent(e.toString());
o = encodeURIComponent(t);
n[n.length] = o + "=" + i;
});
return n.join(t);
};
we.JSONDecode = function(e) {
if (e) {
try {
return JSON.parse(e);
} catch (e) {
console.error("JSONDecode error", e);
}
return null;
}
};
we.JSONEncode = function(e) {
try {
return JSON.stringify(e);
} catch (e) {
console.error("JSONEncode error", e);
}
};
var be = Object.create(null);
function Se(e) {
n().v("开始构建 fetch body");
u.getSystemInfo(function(t) {
u.getNetworkInfo(function(i) {
var o = (i = i || {}).networkType;
o = o === ye ? "unknown" : o.toUpperCase();
be.access = o;
!function(e, t) {
var i = e.brand || "";
be.deviceType = "Phone";
be.sdkVersion = ve;
be.appkey = s().appKey();
be.sdkType = u.getSdkType();
be.umid = y().getId();
if (e) {
be.language = e.language || "";
be.os = e.OS;
be.osVersion = e.OSVersion;
be.deviceName = e.deviceName;
be.platformVersion = e.platformVersion;
be.platformSdkVersion = e.platformSDKVersion;
be.deviceBrand = i;
var o = e.resolution.split("*");
if (we.isArray(o)) {
be.resolutionHeight = Number(o[0]);
be.resolutionWidth = Number(o[1]);
}
}
!function(e) {
if (e) {
be.installTime = e.install_datetime && Date.parse(e.install_datetime);
be.scene = e.install_scene;
be.channel = e.install_channel;
be.campaign = e.install_campaign;
}
}(ne.getImpObj());
t && t(be);
}(t, e);
});
});
}
var Ce = Object.create(null), Ae = null, Le = !1, Te = {
minFetchIntervalSeconds: 43200
};
function Pe(e) {
e && we.each(e, function(e) {
Ce[e.k] = e;
});
}
function Be() {
var e = this;
this.STORAGE_NAME = null;
r.once(r.messageType.CONFIG_LOADED, function(t) {
n().v("云配初始化开始...");
e.init(t);
});
}
Be.prototype = {
setDefaultValues: function(e) {
Le && we.isObject(e) && we.each(e, function(e, t) {
Ce[t] && Ce[t].v || (Ce[t] = {
v: e
});
});
},
getValue: function(e) {
n().v("从配置项中读取 value, 当前配置为: ", Ce);
n().v("待读取的 key : ", e);
try {
if (!Le) return;
var t = Ce[e] || {};
n().v("读取相应配置ing..., 结果为: ", t);
if (we.isNumber(t.e) && we.isNumber(t.g)) {
n().v("读取到相应配置, 开始数据上报...");
!function(e) {
var t = {
appkey: s().appKey(),
sdkType: u.getSdkType(),
expId: e && e.e,
groupId: e && e.g,
clientTs: Date.now(),
key: e && e.k,
value: e && e.v,
umid: y().getId()
};
try {
u.request({
url: "https://pslog.umeng.com/mini_ablog",
method: "POST",
data: [ t ],
success: function(e) {
e && 200 === e.statusCode ? n().v("上传数据成功", t) : n().w("ablog 请求成功, 返回结果异常 ", e);
},
fail: function(e) {
n().w("ablog 请求数据错误 ", t, e);
}
});
} catch (e) {
n().w("urequest 调用错误", e);
}
}(t);
}
return t.v;
} catch (t) {
n().w("getValue error, key: ", e);
}
},
active: function(e) {
try {
if (!Le) return;
var t, i;
e && e.params && (t = e.params);
e && e.callback && (i = e.callback);
n().v("激活配置项: ", t);
if (t) {
n().v("本地已缓存的配置项: ", Ce);
Pe(t);
n().v("合并后的配置项: ", Ce);
i && i(Ce);
n().v("active 结束");
} else {
n().v("配置项为空!! 读取本地配置...");
u.getStorage(this.STORAGE_NAME, function(e) {
if (e) {
Pe((e = we.JSONDecode(e) || {}).params);
n().v("当前本地配置项为: ", Ce);
i && i(Ce);
n().v("active 结束");
} else n().v("当前本地配置项为空, 退出激活");
});
}
} catch (e) {
n().w("SDK active 错误", e);
}
},
init: function(e) {
if (e.appKey) {
Ae = e.appKey;
this.STORAGE_NAME = "um_remote_config_{{" + Ae + "}}";
}
if (Ae) if (Le) n().w("SDK 已经初始化, 请避免重复初始化"); else {
Le = !0;
this.setOptions(e);
this.active();
} else n().err("请检查您的小程序 appKey, appKey 不能为空");
},
setOptions: function(e) {
if (we.isObject(e)) {
var t = e.minFetchIntervalSeconds;
we.isNumber(t) && (Te.minFetchIntervalSeconds = Math.max(t, 5));
}
},
fetch: function(e) {
if (Le && this.STORAGE_NAME) {
var t, i;
e && e.active && (t = e.active);
e && e.callback && (i = e.callback);
var o = this;
u.getStorage(this.STORAGE_NAME, function(e) {
n().v("开始读缓存 data is ", e);
if ((e = we.JSONDecode(e) || {}).params && e.ts && Date.now() - e.ts < 1e3 * Te.minFetchIntervalSeconds) {
n().v("缓存数据存在, 并且本次触发时间距离上次fetch触发时间未超过 fetch 时间间隔, 无需 fetch");
i && i(e.params);
} else Se(function(e) {
n().v("缓存数据不存在, 构建 fetch body :", e);
try {
u.request({
url: "https://ucc.umeng.com/v1/mini/fetch",
method: "POST",
data: e,
success: function(e) {
if (e && 200 === e.statusCode && e.data && e.data.cc) {
n().v("fetch 请求成功, 响应数据: ", e.data);
var s = Object.create(null);
we.each(e.data.cc, function(e) {
s[e.k] = e;
});
var a = {
ts: Date.now(),
params: s
};
n().v("开始缓存 fetch 请求的云配置结果...");
u.setStorage(o.STORAGE_NAME, we.JSONEncode(a), function(e) {
n().v("缓存云配置成功, 缓存数据为: ", a);
n().v("缓存云配置成功, 成功消息为: ", e);
n().v("云配拉取数据是否自动激活: ", t);
if (e && t) {
n().v("激活云配置...");
o.active({
params: s,
callback: i
});
}
});
} else {
n().w("fetch 请求成功,返回结果异常 ", e.data);
i && i();
}
},
fail: function(t) {
n().w("fetch请求数据错误 ", e, t);
i && i();
}
});
} catch (e) {
n().w("urequest调用错误", e);
}
});
});
}
}
};
var Ne = {
install: function(e, t) {
e.rc || (e.rc = new Be());
e.messager.once(e.messager.messageType.CONFIG_LOADED, function() {
e._log.v("plugin rc installed");
});
return e.rc;
}
}, Oe = "_um", ke = "revenue", Re = "stage", Me = "level", De = "running", Ee = "end", xe = "init", ze = "set", Ge = [ Oe, Re, "start" ].join(".");
function je(e) {
var t = {};
for (var i in e) {
var o = e[i];
if ("object" == typeof o) for (var n in o) t[i + "." + n] = o[n]; else t[i] = o;
}
return t;
}
var Ue = {
install: function(e, t) {
e.revenue = function(t) {
e.trackEvent([ Oe, ke, t.group ].join("."), je(t));
};
var i = 0;
e.stage = {
onStart: function(t) {
i = Date.now();
e.trackEvent(Ge, je(t));
},
onEnd: function(t) {
"number" != typeof t._um_sdu && (t._um_sdu = 0 !== i ? Date.now() - i : 0);
e.trackEvent([ Oe, Re, Ee, t.event ].join("."), je(t));
},
onRunning: function(t) {
e.trackEvent([ Oe, Re, De, t.event ].join("."), je(t));
}
};
e.level = {
onInitLevel: function(t) {
e.trackEvent([ Oe, Me, xe ].join("."), je(t));
},
onSetLevel: function(t) {
e.trackEvent([ Oe, Me, ze ].join("."), je(t));
}
};
e.messager.once(e.messager.messageType.CONFIG_LOADED, function() {
e._log.v("plugin game-ext installed");
});
return e;
}
}, Ve = u.getContext();
if (void 0 !== Ve) {
Ve.onShow(function(e) {
n().v("game onShow: ", e);
t = e.query, I = t;
var t;
me.resume(e, !0);
});
Ve.onHide(function() {
n().v("game onHide");
me.pause();
});
}
var Fe = me.init;
me.init = function(e) {
if (e && e.useOpenid) {
n().tip_w(n().repeat("!"));
n().tip_w("您选择了使用openid进行统计，请确保使用setOpenid回传openid或通过设置autoGetOpenid为true，并在友盟后台设置secret由友盟帮您获取");
n().tip_w(n().repeat("!"));
}
me.resume({});
Fe.call(me, e);
};
me.use(Ne);
me.use(Ue);
Ve && (Ve.uma = me);
var We = me;
i.default = We;
t.exports = i.default;
cc._RF.pop();
}, {} ],
weapon: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "76f86dlCpdKv7l4KtsVUJq2", "weapon");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.WeaponType = void 0;
var s, a = e("../Framework/CocosZ"), r = e("../Framework/Constant"), l = e("../Framework/Msg"), c = e("./gameDate"), u = e("./gameMgr"), h = e("LanguageData"), d = cc._decorator, f = d.ccclass, _ = d.property;
(function(e) {
e[e.weapon_melee = 0] = "weapon_melee";
e[e.weapon_range = 1] = "weapon_range";
e[e.weapon_rangeAd = 2] = "weapon_rangeAd";
})(s = i.WeaponType || (i.WeaponType = {}));
var p = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.can_effect_hit = !1;
t.hand_effect = null;
t.hand_2 = null;
t.weaponNum = 1;
t.bullet = null;
t.bulletCollor = cc.Color.WHITE;
t.shellCall = null;
t.atkEffect = null;
t.atkNum = 10;
t.atkRangeNum = 1e3;
t.flySpeed = 2e3;
t.atkSpeed = .4;
t.bulletNum = 5;
t.bulletTotal = 5;
t.reload = 3;
t.audioName = "read";
t.weaponLevel = 0;
t.weaponType = s.weapon_melee;
t.person = null;
t._curBullet = 0;
t._arrName = [ "", "y", "p", "r" ];
t._isReload = !1;
return t;
}
i = t;
Object.defineProperty(t.prototype, "isRangeWeapon", {
get: function() {
return i.rangeWeapon.includes(this.weaponNum);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "curBullet", {
get: function() {
return this._curBullet;
},
set: function(e) {
e > this.bulletNum ? e = this.bulletNum : e < 0 && (e = 0);
if (this.isRangeWeapon) {
this._curBullet = e;
this._curBullet <= 0 && this.reloadBullet();
this.setBulletUI();
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
!this.person || this.person.isPlayer ? this.weaponLevel = a.cocosz.dataMgr.getGunInfo(this.weaponNum - 1).Level : [ 1, 2, 3, 4, 5 ].includes(a.cocosz.gameMode) && (this.weaponLevel = Math.floor(4 * Math.random()));
this.atkNum = c.default.Weapon[i.WeaponName[this.weaponNum - 1]].atk[this.weaponLevel];
this.atkSpeed = c.default.Weapon[i.WeaponName[this.weaponNum - 1]].atkSpeed[this.weaponLevel];
this.bulletNum = c.default.Weapon[i.WeaponName[this.weaponNum - 1]].bulletNum;
this.bulletTotal = c.default.Weapon[i.WeaponName[this.weaponNum - 1]].bulletTotal[this.weaponLevel];
this.reload = c.default.Weapon[i.WeaponName[this.weaponNum - 1]].reload;
this.atkRangeNum = c.default.Weapon[i.WeaponName[this.weaponNum - 1]].atkRange;
this.person && (this.bulletTotal = Math.ceil(this.bulletTotal * this.person.bulletRate));
this._curBullet = 0;
this.addBullet();
this.setSD();
};
t.prototype.start = function() {};
t.prototype.setBulletUI = function() {
this.person && this.person.isPlayer && (this.weaponType == s.weapon_range ? u.gameMgr.ammo && u.gameMgr.ammo.isValid && (u.gameMgr.ammo.string = this._curBullet + "/" + ([ 6, 7 ].includes(a.cocosz.gameMode) ? "♾" : this.bulletTotal)) : this.weaponType == s.weapon_rangeAd && u.gameMgr.ammoAd && u.gameMgr.ammoAd.isValid && (u.gameMgr.ammoAd.string = this._curBullet + "/" + ([ 6, 7 ].includes(a.cocosz.gameMode) ? "♾" : this.bulletTotal)));
};
t.prototype.setSD = function() {
var e = this;
this.person && this.node.walk(function(t) {
if ("sd" == t.name) if (e.weaponLevel > 0) {
t.active = !0;
var i = t.getComponent(sp.Skeleton);
i && i.setSkin(e._arrName[e.weaponLevel]);
} else t.active = !1;
}, null);
};
t.prototype.reset = function() {
this.bulletTotal = c.default.Weapon[i.WeaponName[this.weaponNum - 1]].bulletTotal[this.weaponLevel];
this.person && (this.bulletTotal = Math.ceil(this.bulletTotal * this.person.bulletRate));
this._curBullet = 0;
this.addBullet();
};
t.prototype.addBullet = function() {
if (this.isRangeWeapon) if (this.person && this.person.isPlayer) {
if (this.curBullet < this.bulletNum && this.bulletTotal > 0) if ([ 6, 7 ].includes(a.cocosz.gameMode)) {
this.curBullet = this.bulletNum;
cc.game.emit(r.default.E_GAME_LOGIC, {
type: r.default.E_Bullet_Reload
});
} else {
var e = this.bulletNum - this.curBullet;
if (this.bulletTotal >= e) {
this.bulletTotal -= e;
this.curBullet += e;
} else {
this.bulletTotal = 0;
this.curBullet += this.bulletTotal;
}
}
} else this.curBullet = this.bulletNum;
};
t.prototype.reloadBullet = function() {
var e = this;
if (this.isRangeWeapon && 0 == this._isReload) {
this._isReload = !0;
if (this.person && this.person.isPlayer) if (this.bulletTotal > 0) {
a.cocosz.audioMgr.playEffect("reload");
var t = 0;
if (this.hand_effect) {
t = this.hand_effect.y;
cc.tween(this.hand_effect).by(.5, {
y: 50
}).by(.5, {
y: -50
}).union().repeat(this.reload).start();
}
cc.tween(u.gameMgr.rangedWeaponMess.children[0]).to(.2, {
color: cc.Color.RED
}).to(.2, {
color: cc.Color.WHITE
}).start();
a.cocosz.scheduleOnce(function() {
if (e && e.isValid) {
e._isReload = !1;
e.addBullet();
if (e.hand_effect) {
e.hand_effect.stopAllActions();
e.hand_effect.y = t;
}
cc.tween(u.gameMgr.rangedWeaponMess.children[0]).to(.2, {
color: cc.Color.GREEN
}).to(.2, {
color: cc.Color.WHITE
}).start();
}
}, this.reload * this.person.reloadRate);
if (u.gameMgr.BtnBullet.active && u.gameMgr.BtnBullet.children[3] && u.gameMgr.BtnBullet.children[3].active) {
u.gameMgr.BtnBullet.children[3].active = !1;
u.gameMgr.BtnBullet.children[0].active = !0;
var i = u.gameMgr.playerTs.curWeapon.reload * u.gameMgr.playerTs.reloadRate;
u.gameMgr.BtnBullet.children[1].active = !0;
var o = u.gameMgr.BtnBullet.children[1].getComponent(cc.Sprite);
cc.tween(o).set({
fillRange: 0
}).to(i, {
fillRange: -1
}).call(function() {
u.gameMgr.BtnBullet.children[0].active = !1;
u.gameMgr.BtnBullet.children[1].active = !1;
u.gameMgr.BtnBullet.children[2].active = !1;
u.gameMgr.BtnBullet.children[3].active = !0;
}).start();
u.gameMgr.BtnBullet.children[2].active = !0;
var n = u.gameMgr.BtnBullet.children[2].getComponent(cc.Label);
cc.tween(n).call(function() {
n.string = (i * (1 + o.fillRange)).toFixed(1);
}).delay(.1).union().repeat(i / .1).start();
}
} else {
this._isReload = !1;
l.default.Show(h.t("msg.myzd"));
a.cocosz.audioMgr.playEffect("bag", !1, 1);
} else a.cocosz.scheduleOnce(function() {
if (e && e.isValid) {
e._isReload = !1;
e.addBullet();
}
}, this.reload);
}
};
var i;
t.WeaponName = [ "ak", "cfq", "dao", "gj", "jgb", "sd", "hdl", "sq", "ju", "ld", "nnp", "gtst", "tb", "mb", "mq", "szg", "rsq", "cjj", "jtl", "sq2", "tj", "fs" ];
t.meleeWaapon = [ 3, 4, 5, 13, 14 ];
t.rangeWeapon = [ 1, 2, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22 ];
n([ _({
tooltip: "是否播放开火升级效果"
}) ], t.prototype, "can_effect_hit", void 0);
n([ _(cc.Node) ], t.prototype, "hand_effect", void 0);
n([ _(cc.Node) ], t.prototype, "hand_2", void 0);
n([ _ ], t.prototype, "weaponNum", void 0);
n([ _(cc.Prefab) ], t.prototype, "bullet", void 0);
n([ _(cc.Color) ], t.prototype, "bulletCollor", void 0);
n([ _(cc.Prefab) ], t.prototype, "shellCall", void 0);
n([ _(cc.Prefab) ], t.prototype, "atkEffect", void 0);
n([ _ ], t.prototype, "atkNum", void 0);
n([ _ ], t.prototype, "atkRangeNum", void 0);
n([ _ ], t.prototype, "flySpeed", void 0);
n([ _({
tooltip: "开火时间"
}), _ ], t.prototype, "atkSpeed", void 0);
n([ _({
tooltip: "弹夹弹药数量"
}) ], t.prototype, "bulletNum", void 0);
n([ _({
tooltip: "总弹药数量"
}) ], t.prototype, "bulletTotal", void 0);
n([ _({
tooltip: "装弹时间"
}) ], t.prototype, "reload", void 0);
n([ _({
tooltip: "装弹音效"
}) ], t.prototype, "audioName", void 0);
return t = i = n([ f ], t);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../Framework/CocosZ": "CocosZ",
"../Framework/Constant": "Constant",
"../Framework/Msg": "Msg",
"./gameDate": "gameDate",
"./gameMgr": "gameMgr",
LanguageData: "LanguageData"
} ]
}, {}, [ "AdAgent", "AdAgent4399", "AdAgentBaidu", "AdAgentBili", "AdAgentBroser", "AdAgentCocosplay", "AdAgentDouyin", "AdAgentFaceBook", "AdAgentGoogleWeb", "AdAgentHago", "AdAgentHuaWei", "AdAgentIOS", "AdAgentKwai", "AdAgentNative", "AdAgentOPPO", "AdAgentQQ", "AdAgentQTT", "AdAgentUC", "AdAgentVIVO", "AdAgentWechat", "AdAgentWiFi", "AdAgentXiaomi", "AdManager", "AdSDK", "AldUtils", "BeforGameOverRecGamesPanel", "CheckIsShowIcon", "CommonConfig", "CompatibleTool", "CryptoJS", "FBAdManager", "FBSdk", "GameBox", "GameBoxListGameItem", "GameBoxListItem", "GameBoxSlideItem", "GameItem", "GamePage", "GameSDK", "HandAction", "List", "ListItem", "LogOutView", "LuckBoxPannel", "MoreGamesPanel", "MoreGamesPanel1", "MoreGamesWidget", "NativeTryGameNode", "NativeTryGamesWidget", "OpenRedBagPanel", "PlatUtils", "QCrossWidget6", "QCrossWidgetItem", "RecommendGamesNode", "RecommendGamesWidget", "RedBagProgressNode", "RedBagProgressWidget", "RewardBoxPanel", "RewardInsert", "RewardRedBagPanel", "RewardShortCutPanel", "ShareRecordPanel", "TryGameNode", "TryGamesWidget", "uma.min", "Utils", "VerticalRecommentPanel", "WechatTool", "WithdrawalNode", "WithdrawalPanel", "WithdrawalWidget", "YZ_ActionScale", "YZ_BaiduRecommendWidget", "YZ_Constant", "YZ_EventManager", "YZ_GameExitDialog", "YZ_ListView", "YZ_LocalStorage", "YZ_NativeAdObject", "YZ_NativeBanner", "YZ_NativeInsert", "YZ_NativeItem", "YZ_NativeSplashView", "YZ_RecommendGamesBanner", "YZ_RecordWidget", "YZ_ShakeNode", "YZ_ShortcutWidget", "YZ_StatementRecommentAd", "YZ_Tool_4399", "YZ_Tool_Baidu", "YZ_Tool_Bili", "YZ_Tool_Broswer", "YZ_Tool_Cocosplay", "YZ_Tool_Douyin", "YZ_Tool_FaceBook", "YZ_Tool_GoogleWeb", "YZ_Tool_Hago", "YZ_Tool_HuaWei", "YZ_Tool_IOS", "YZ_Tool_Kwai", "YZ_Tool_Native", "YZ_Tool_Oppo", "YZ_Tool_QQ", "YZ_Tool_QTT", "YZ_Tool_UC", "YZ_Tool_Vivo", "YZ_Tool_Wifi", "YZ_Tool_Xiaomi", "YZ_Turntable", "EventAdInfo", "YouWanAnalytics", "YzCustomAdPanel", "YzLoginPanel", "YzRealNameAuthPanel", "YzUserPrivacyPanel", "md5", "BgScroll", "AudioMgr", "CocosZ", "Constant", "DataMgr", "FlyCoin", "GameCtr", "GameMgr", "Msg", "QEasing", "QMoveAction", "QRotation", "QScaleAction", "QTween", "ResMgr", "SceneMgr", "ShowDate", "StartScene", "TweenEffect", "UIMgr", "UIPage", "UpgradeMgr", "ZombieBase", "ani", "bullet", "gameDate", "gameMgr", "jingyan", "mb", "person", "player", "prop", "setMap", "showEffect", "testPoint", "weapon", "CoinBord", "GuideLayer", "ShareOrVideo", "UIADPanel", "UIGameLoadingPage", "UIGamePage", "UIHomePage", "UILoadingPage", "UIOverPage", "UIPausePanel", "UIRankingPanel", "UIRevivePanel", "UISignPage", "UITimePage", "UITrySkinPanel", "UITurntablePage", "UIUpgradePanel", "UIWeaponLevelPanel", "redPoint", "list", "listItem", "LanguageData", "LocalizedLabel", "LocalizedSprite", "SpriteFrameSet", "polyglot.min" ]);